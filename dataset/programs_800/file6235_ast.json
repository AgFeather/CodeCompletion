{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "module"
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "core"
          },
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "teardown"
                },
                "value": {
                  "type": "Identifier",
                  "name": "moduleTeardown"
                },
                "kind": "init"
              }
            ]
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "test"
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "Basic requirements"
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "params": [],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "expect"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": 7
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "Array"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "prototype"
                          }
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "push"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": "Array.push()"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "Function"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "prototype"
                          }
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "apply"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": "Function.apply()"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "document"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "getElementById"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": "getElementById"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "document"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "getElementsByTagName"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": "getElementsByTagName"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "RegExp"
                      },
                      {
                        "type": "Literal",
                        "value": "RegExp"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "jQuery"
                      },
                      {
                        "type": "Literal",
                        "value": "jQuery"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "$"
                      },
                      {
                        "type": "Literal",
                        "value": "$"
                      }
                    ]
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "test"
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "jQuery()"
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "params": [],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "expect"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": 24
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "arguments": []
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "length"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": 0
                      },
                      {
                        "type": "Literal",
                        "value": "jQuery() === jQuery([])"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "undefined"
                            }
                          ]
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "length"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": 0
                      },
                      {
                        "type": "Literal",
                        "value": "jQuery(undefined) === jQuery([])"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": null
                            }
                          ]
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "length"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": 0
                      },
                      {
                        "type": "Literal",
                        "value": "jQuery(null) === jQuery([])"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": ""
                            }
                          ]
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "length"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": 0
                      },
                      {
                        "type": "Literal",
                        "value": "jQuery('') === jQuery([])"
                      }
                    ]
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "obj"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "jQuery"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "div"
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "obj"
                            }
                          ]
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "selector"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": "div"
                      },
                      {
                        "type": "Literal",
                        "value": "jQuery(jQueryObj) == jQueryObj"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "window"
                            }
                          ]
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "length"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": 1
                      },
                      {
                        "type": "Literal",
                        "value": "Correct number of elements generated for jQuery(window)"
                      }
                    ]
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "main"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "jQuery"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "#main"
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "same"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "jQuery"
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": "div p"
                              },
                              {
                                "type": "Identifier",
                                "name": "main"
                              }
                            ]
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "get"
                          }
                        },
                        "arguments": []
                      },
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "q"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "sndp"
                          },
                          {
                            "type": "Literal",
                            "value": "en"
                          },
                          {
                            "type": "Literal",
                            "value": "sap"
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "Basic selector with jQuery object as context"
                      }
                    ]
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "code"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "jQuery"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "<code/>"
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "code"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "length"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": 1
                      },
                      {
                        "type": "Literal",
                        "value": "Correct number of elements generated for code"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "code"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "parent"
                            }
                          },
                          "arguments": []
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "length"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": 0
                      },
                      {
                        "type": "Literal",
                        "value": "Make sure that the generated HTML has no parent."
                      }
                    ]
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "img"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "jQuery"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "<img/>"
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "img"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "length"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": 1
                      },
                      {
                        "type": "Literal",
                        "value": "Correct number of elements generated for img"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "img"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "parent"
                            }
                          },
                          "arguments": []
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "length"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": 0
                      },
                      {
                        "type": "Literal",
                        "value": "Make sure that the generated HTML has no parent."
                      }
                    ]
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "div"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "jQuery"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "<div/><hr/><code/><b/>"
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "div"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "length"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": 4
                      },
                      {
                        "type": "Literal",
                        "value": "Correct number of elements generated for div hr code b"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "div"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "parent"
                            }
                          },
                          "arguments": []
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "length"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": 0
                      },
                      {
                        "type": "Literal",
                        "value": "Make sure that the generated HTML has no parent."
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "jQuery"
                            },
                            "arguments": [
                              {
                                "type": "ArrayExpression",
                                "elements": [
                                  {
                                    "type": "Literal",
                                    "value": 1
                                  },
                                  {
                                    "type": "Literal",
                                    "value": 2
                                  },
                                  {
                                    "type": "Literal",
                                    "value": 3
                                  }
                                ]
                              }
                            ]
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "get"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": 1
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": 2
                      },
                      {
                        "type": "Literal",
                        "value": "Test passing an array to the factory"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "jQuery"
                            },
                            "arguments": [
                              {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "document"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "body"
                                }
                              }
                            ]
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "get"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": 0
                          }
                        ]
                      },
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "jQuery"
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": "body"
                              }
                            ]
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "get"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": 0
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "Test passing an html node to the factory"
                      }
                    ]
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "exec"
                      },
                      "init": {
                        "type": "Literal",
                        "value": false
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "elem"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "jQuery"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "<div/>"
                          },
                          {
                            "type": "ObjectExpression",
                            "properties": [
                              {
                                "type": "Property",
                                "key": {
                                  "type": "Identifier",
                                  "name": "width"
                                },
                                "value": {
                                  "type": "Literal",
                                  "value": 10
                                },
                                "kind": "init"
                              },
                              {
                                "type": "Property",
                                "key": {
                                  "type": "Identifier",
                                  "name": "css"
                                },
                                "value": {
                                  "type": "ObjectExpression",
                                  "properties": [
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Identifier",
                                        "name": "paddingLeft"
                                      },
                                      "value": {
                                        "type": "Literal",
                                        "value": 1
                                      },
                                      "kind": "init"
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Identifier",
                                        "name": "paddingRight"
                                      },
                                      "value": {
                                        "type": "Literal",
                                        "value": 1
                                      },
                                      "kind": "init"
                                    }
                                  ]
                                },
                                "kind": "init"
                              },
                              {
                                "type": "Property",
                                "key": {
                                  "type": "Identifier",
                                  "name": "click"
                                },
                                "value": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "Identifier",
                                            "name": "ok"
                                          },
                                          "arguments": [
                                            {
                                              "type": "Identifier",
                                              "name": "exec"
                                            },
                                            {
                                              "type": "Literal",
                                              "value": "Click executed."
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                },
                                "kind": "init"
                              },
                              {
                                "type": "Property",
                                "key": {
                                  "type": "Identifier",
                                  "name": "text"
                                },
                                "value": {
                                  "type": "Literal",
                                  "value": "test"
                                },
                                "kind": "init"
                              },
                              {
                                "type": "Property",
                                "key": {
                                  "type": "Literal",
                                  "value": "class"
                                },
                                "value": {
                                  "type": "Literal",
                                  "value": "test2"
                                },
                                "kind": "init"
                              },
                              {
                                "type": "Property",
                                "key": {
                                  "type": "Identifier",
                                  "name": "id"
                                },
                                "value": {
                                  "type": "Literal",
                                  "value": "test3"
                                },
                                "kind": "init"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                              "type": "Identifier",
                              "name": "elem"
                            },
                            "property": {
                              "type": "Literal",
                              "value": 0
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "style"
                          }
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "width"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": "10px"
                      },
                      {
                        "type": "Literal",
                        "value": "jQuery() quick setter width"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                              "type": "Identifier",
                              "name": "elem"
                            },
                            "property": {
                              "type": "Literal",
                              "value": 0
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "style"
                          }
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "paddingLeft"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": "1px"
                      },
                      {
                        "type": "Literal",
                        "value": "jQuery quick setter css"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                              "type": "Identifier",
                              "name": "elem"
                            },
                            "property": {
                              "type": "Literal",
                              "value": 0
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "style"
                          }
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "paddingRight"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": "1px"
                      },
                      {
                        "type": "Literal",
                        "value": "jQuery quick setter css"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                              "type": "Identifier",
                              "name": "elem"
                            },
                            "property": {
                              "type": "Literal",
                              "value": 0
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "childNodes"
                          }
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "length"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": 1
                      },
                      {
                        "type": "Literal",
                        "value": "jQuery quick setter text"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                              "type": "Identifier",
                              "name": "elem"
                            },
                            "property": {
                              "type": "Literal",
                              "value": 0
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "firstChild"
                          }
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "nodeValue"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": "test"
                      },
                      {
                        "type": "Literal",
                        "value": "jQuery quick setter text"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "MemberExpression",
                          "computed": true,
                          "object": {
                            "type": "Identifier",
                            "name": "elem"
                          },
                          "property": {
                            "type": "Literal",
                            "value": 0
                          }
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "className"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": "test2"
                      },
                      {
                        "type": "Literal",
                        "value": "jQuery() quick setter class"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "MemberExpression",
                          "computed": true,
                          "object": {
                            "type": "Identifier",
                            "name": "elem"
                          },
                          "property": {
                            "type": "Literal",
                            "value": 0
                          }
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "id"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": "test3"
                      },
                      {
                        "type": "Literal",
                        "value": "jQuery() quick setter id"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "exec"
                    },
                    "right": {
                      "type": "Literal",
                      "value": true
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "elem"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "click"
                      }
                    },
                    "arguments": []
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "elem"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "remove"
                      }
                    },
                    "arguments": []
                  }
                },
                {
                  "type": "ForStatement",
                  "init": {
                    "type": "VariableDeclaration",
                    "declarations": [
                      {
                        "type": "VariableDeclarator",
                        "id": {
                          "type": "Identifier",
                          "name": "i"
                        },
                        "init": {
                          "type": "Literal",
                          "value": 0
                        }
                      }
                    ],
                    "kind": "var"
                  },
                  "test": {
                    "type": "BinaryExpression",
                    "operator": "<",
                    "left": {
                      "type": "Identifier",
                      "name": "i"
                    },
                    "right": {
                      "type": "Literal",
                      "value": 3
                    }
                  },
                  "update": {
                    "type": "UpdateExpression",
                    "operator": "++",
                    "argument": {
                      "type": "Identifier",
                      "name": "i"
                    },
                    "prefix": true
                  },
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "name": "elem"
                          },
                          "right": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "jQuery"
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": "<input type='text' value='TEST' />"
                              }
                            ]
                          }
                        }
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "MemberExpression",
                          "computed": true,
                          "object": {
                            "type": "Identifier",
                            "name": "elem"
                          },
                          "property": {
                            "type": "Literal",
                            "value": 0
                          }
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "defaultValue"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": "TEST"
                      },
                      {
                        "type": "Literal",
                        "value": "Ensure cached nodes are cloned properly (Bug #6655)"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "elem"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "remove"
                      }
                    },
                    "arguments": []
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "test"
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "selector state"
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "params": [],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "expect"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": 31
                      }
                    ]
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "test"
                      },
                      "init": null
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "test"
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "jQuery"
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "undefined"
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "test"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "selector"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": ""
                      },
                      {
                        "type": "Literal",
                        "value": "Empty jQuery Selector"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "test"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "context"
                        }
                      },
                      {
                        "type": "Identifier",
                        "name": "undefined"
                      },
                      {
                        "type": "Literal",
                        "value": "Empty jQuery Context"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "test"
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "jQuery"
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "document"
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "test"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "selector"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": ""
                      },
                      {
                        "type": "Literal",
                        "value": "Document Selector"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "test"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "context"
                        }
                      },
                      {
                        "type": "Identifier",
                        "name": "document"
                      },
                      {
                        "type": "Literal",
                        "value": "Document Context"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "test"
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "jQuery"
                      },
                      "arguments": [
                        {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "document"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "body"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "test"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "selector"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": ""
                      },
                      {
                        "type": "Literal",
                        "value": "Body Selector"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "test"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "context"
                        }
                      },
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "document"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "body"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": "Body Context"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "test"
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "jQuery"
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "#main"
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "test"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "selector"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": "#main"
                      },
                      {
                        "type": "Literal",
                        "value": "#main Selector"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "test"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "context"
                        }
                      },
                      {
                        "type": "Identifier",
                        "name": "document"
                      },
                      {
                        "type": "Literal",
                        "value": "#main Context"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "test"
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "jQuery"
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "#notfoundnono"
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "test"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "selector"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": "#notfoundnono"
                      },
                      {
                        "type": "Literal",
                        "value": "#notfoundnono Selector"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "test"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "context"
                        }
                      },
                      {
                        "type": "Identifier",
                        "name": "document"
                      },
                      {
                        "type": "Literal",
                        "value": "#notfoundnono Context"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "test"
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "jQuery"
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "#main"
                        },
                        {
                          "type": "Identifier",
                          "name": "document"
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "test"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "selector"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": "#main"
                      },
                      {
                        "type": "Literal",
                        "value": "#main Selector"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "test"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "context"
                        }
                      },
                      {
                        "type": "Identifier",
                        "name": "document"
                      },
                      {
                        "type": "Literal",
                        "value": "#main Context"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "test"
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "jQuery"
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "#main"
                        },
                        {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "document"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "body"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "test"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "selector"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": "#main"
                      },
                      {
                        "type": "Literal",
                        "value": "#main Selector"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "test"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "context"
                        }
                      },
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "document"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "body"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": "#main Context"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "test"
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "jQuery"
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "test"
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "test"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "selector"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": "#main"
                      },
                      {
                        "type": "Literal",
                        "value": "#main Selector"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "test"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "context"
                        }
                      },
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "document"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "body"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": "#main Context"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "test"
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "arguments": [
                            {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "document"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "body"
                              }
                            }
                          ]
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "find"
                        }
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "#main"
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "test"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "selector"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": "#main"
                      },
                      {
                        "type": "Literal",
                        "value": "#main find Selector"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "test"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "context"
                        }
                      },
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "document"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "body"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": "#main find Context"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "test"
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "#main"
                            }
                          ]
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "filter"
                        }
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "div"
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "test"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "selector"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": "#main.filter(div)"
                      },
                      {
                        "type": "Literal",
                        "value": "#main filter Selector"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "test"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "context"
                        }
                      },
                      {
                        "type": "Identifier",
                        "name": "document"
                      },
                      {
                        "type": "Literal",
                        "value": "#main filter Context"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "test"
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "#main"
                            }
                          ]
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "not"
                        }
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "div"
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "test"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "selector"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": "#main.not(div)"
                      },
                      {
                        "type": "Literal",
                        "value": "#main not Selector"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "test"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "context"
                        }
                      },
                      {
                        "type": "Identifier",
                        "name": "document"
                      },
                      {
                        "type": "Literal",
                        "value": "#main not Context"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "test"
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "jQuery"
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": "#main"
                                }
                              ]
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "filter"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "div"
                            }
                          ]
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "not"
                        }
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "div"
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "test"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "selector"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": "#main.filter(div).not(div)"
                      },
                      {
                        "type": "Literal",
                        "value": "#main filter, not Selector"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "test"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "context"
                        }
                      },
                      {
                        "type": "Identifier",
                        "name": "document"
                      },
                      {
                        "type": "Literal",
                        "value": "#main filter, not Context"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "test"
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "Identifier",
                                    "name": "jQuery"
                                  },
                                  "arguments": [
                                    {
                                      "type": "Literal",
                                      "value": "#main"
                                    }
                                  ]
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "filter"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": "div"
                                }
                              ]
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "not"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "div"
                            }
                          ]
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "end"
                        }
                      },
                      "arguments": []
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "test"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "selector"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": "#main.filter(div)"
                      },
                      {
                        "type": "Literal",
                        "value": "#main filter, not, end Selector"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "test"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "context"
                        }
                      },
                      {
                        "type": "Identifier",
                        "name": "document"
                      },
                      {
                        "type": "Literal",
                        "value": "#main filter, not, end Context"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "test"
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "#main"
                            }
                          ]
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "parent"
                        }
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "body"
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "test"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "selector"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": "#main.parent(body)"
                      },
                      {
                        "type": "Literal",
                        "value": "#main parent Selector"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "test"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "context"
                        }
                      },
                      {
                        "type": "Identifier",
                        "name": "document"
                      },
                      {
                        "type": "Literal",
                        "value": "#main parent Context"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "test"
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "#main"
                            }
                          ]
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "eq"
                        }
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": 0
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "test"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "selector"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": "#main.slice(0,1)"
                      },
                      {
                        "type": "Literal",
                        "value": "#main eq Selector"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "test"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "context"
                        }
                      },
                      {
                        "type": "Identifier",
                        "name": "document"
                      },
                      {
                        "type": "Literal",
                        "value": "#main eq Context"
                      }
                    ]
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "d"
                      },
                      "init": {
                        "type": "Literal",
                        "value": "<div />"
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "jQuery"
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "d"
                                }
                              ]
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "appendTo"
                            }
                          },
                          "arguments": [
                            {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "jQuery"
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "d"
                                }
                              ]
                            }
                          ]
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "selector"
                        }
                      },
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "jQuery"
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "d"
                                }
                              ]
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "appendTo"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "d"
                            }
                          ]
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "selector"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": "manipulation methods make same selector for jQuery objects"
                      }
                    ]
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "UnaryExpression",
        "operator": "!",
        "argument": {
          "type": "Identifier",
          "name": "isLocal"
        },
        "prefix": true
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "test"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "browser"
                },
                {
                  "type": "FunctionExpression",
                  "id": null,
                  "params": [],
                  "defaults": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "stop"
                          },
                          "arguments": []
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "jQuery"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "get"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "data/ua.txt"
                            },
                            {
                              "type": "FunctionExpression",
                              "id": null,
                              "params": [
                                {
                                  "type": "Identifier",
                                  "name": "data"
                                }
                              ],
                              "defaults": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "uas"
                                        },
                                        "init": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "data"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "split"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Literal",
                                              "value": "\n"
                                            }
                                          ]
                                        }
                                      }
                                    ],
                                    "kind": "var"
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "expect"
                                      },
                                      "arguments": [
                                        {
                                          "type": "BinaryExpression",
                                          "operator": "*",
                                          "left": {
                                            "type": "BinaryExpression",
                                            "operator": "-",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "uas"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "length"
                                              }
                                            },
                                            "right": {
                                              "type": "Literal",
                                              "value": 1
                                            }
                                          },
                                          "right": {
                                            "type": "Literal",
                                            "value": 2
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "jQuery"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "each"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "Identifier",
                                          "name": "uas"
                                        },
                                        {
                                          "type": "FunctionExpression",
                                          "id": null,
                                          "params": [],
                                          "defaults": [],
                                          "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "VariableDeclaration",
                                                "declarations": [
                                                  {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                      "type": "Identifier",
                                                      "name": "parts"
                                                    },
                                                    "init": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "split"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Literal",
                                                          "value": "\t"
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ],
                                                "kind": "var"
                                              },
                                              {
                                                "type": "IfStatement",
                                                "test": {
                                                  "type": "MemberExpression",
                                                  "computed": true,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "parts"
                                                  },
                                                  "property": {
                                                    "type": "Literal",
                                                    "value": 2
                                                  }
                                                },
                                                "consequent": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "VariableDeclaration",
                                                      "declarations": [
                                                        {
                                                          "type": "VariableDeclarator",
                                                          "id": {
                                                            "type": "Identifier",
                                                            "name": "ua"
                                                          },
                                                          "init": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "jQuery"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "uaMatch"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "parts"
                                                                },
                                                                "property": {
                                                                  "type": "Literal",
                                                                  "value": 2
                                                                }
                                                              }
                                                            ]
                                                          }
                                                        }
                                                      ],
                                                      "kind": "var"
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "Identifier",
                                                          "name": "equals"
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "ua"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "browser"
                                                            }
                                                          },
                                                          {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "parts"
                                                            },
                                                            "property": {
                                                              "type": "Literal",
                                                              "value": 0
                                                            }
                                                          },
                                                          {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "Checking browser for "
                                                            },
                                                            "right": {
                                                              "type": "MemberExpression",
                                                              "computed": true,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "parts"
                                                              },
                                                              "property": {
                                                                "type": "Literal",
                                                                "value": 2
                                                              }
                                                            }
                                                          }
                                                        ]
                                                      }
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "Identifier",
                                                          "name": "equals"
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "ua"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "version"
                                                            }
                                                          },
                                                          {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "parts"
                                                            },
                                                            "property": {
                                                              "type": "Literal",
                                                              "value": 1
                                                            }
                                                          },
                                                          {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "Checking version string for "
                                                            },
                                                            "right": {
                                                              "type": "MemberExpression",
                                                              "computed": true,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "parts"
                                                              },
                                                              "property": {
                                                                "type": "Literal",
                                                                "value": 2
                                                              }
                                                            }
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  ]
                                                },
                                                "alternate": null
                                              }
                                            ]
                                          },
                                          "rest": null,
                                          "generator": false,
                                          "expression": false
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "start"
                                      },
                                      "arguments": []
                                    }
                                  }
                                ]
                              },
                              "rest": null,
                              "generator": false,
                              "expression": false
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "rest": null,
                  "generator": false,
                  "expression": false
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "test"
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "noConflict"
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "params": [],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "expect"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": 7
                      }
                    ]
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "$$"
                      },
                      "init": {
                        "type": "Identifier",
                        "name": "jQuery"
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "jQuery"
                      },
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "noConflict"
                          }
                        },
                        "arguments": []
                      },
                      {
                        "type": "Literal",
                        "value": "noConflict returned the jQuery object"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "jQuery"
                      },
                      {
                        "type": "Identifier",
                        "name": "$$"
                      },
                      {
                        "type": "Literal",
                        "value": "Make sure jQuery wasn't touched."
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "$"
                      },
                      {
                        "type": "Identifier",
                        "name": "original$"
                      },
                      {
                        "type": "Literal",
                        "value": "Make sure $ was reverted."
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "jQuery"
                    },
                    "right": {
                      "type": "AssignmentExpression",
                      "operator": "=",
                      "left": {
                        "type": "Identifier",
                        "name": "$"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "$$"
                      }
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "noConflict"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": true
                          }
                        ]
                      },
                      {
                        "type": "Identifier",
                        "name": "$$"
                      },
                      {
                        "type": "Literal",
                        "value": "noConflict returned the jQuery object"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "jQuery"
                      },
                      {
                        "type": "Identifier",
                        "name": "originaljQuery"
                      },
                      {
                        "type": "Literal",
                        "value": "Make sure jQuery was reverted."
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "$"
                      },
                      {
                        "type": "Identifier",
                        "name": "original$"
                      },
                      {
                        "type": "Literal",
                        "value": "Make sure $ was reverted."
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "$$"
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": "#main"
                              }
                            ]
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "html"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "test"
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "Make sure that jQuery still works."
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "jQuery"
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "$$"
                    }
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "test"
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "trim"
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "params": [],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "expect"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": 9
                      }
                    ]
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "nbsp"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "String"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "fromCharCode"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": 160
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "trim"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "hello  "
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "hello"
                      },
                      {
                        "type": "Literal",
                        "value": "trailing space"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "trim"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "  hello"
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "hello"
                      },
                      {
                        "type": "Literal",
                        "value": "leading space"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "trim"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "  hello   "
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "hello"
                      },
                      {
                        "type": "Literal",
                        "value": "space on both sides"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "trim"
                          }
                        },
                        "arguments": [
                          {
                            "type": "BinaryExpression",
                            "operator": "+",
                            "left": {
                              "type": "BinaryExpression",
                              "operator": "+",
                              "left": {
                                "type": "BinaryExpression",
                                "operator": "+",
                                "left": {
                                  "type": "BinaryExpression",
                                  "operator": "+",
                                  "left": {
                                    "type": "Literal",
                                    "value": "  "
                                  },
                                  "right": {
                                    "type": "Identifier",
                                    "name": "nbsp"
                                  }
                                },
                                "right": {
                                  "type": "Literal",
                                  "value": "hello  "
                                }
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "nbsp"
                              }
                            },
                            "right": {
                              "type": "Literal",
                              "value": " "
                            }
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "hello"
                      },
                      {
                        "type": "Literal",
                        "value": "&nbsp;"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "trim"
                          }
                        },
                        "arguments": []
                      },
                      {
                        "type": "Literal",
                        "value": ""
                      },
                      {
                        "type": "Literal",
                        "value": "Nothing in."
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "trim"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "undefined"
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": ""
                      },
                      {
                        "type": "Literal",
                        "value": "Undefined"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "trim"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": null
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": ""
                      },
                      {
                        "type": "Literal",
                        "value": "Null"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "trim"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": 5
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "5"
                      },
                      {
                        "type": "Literal",
                        "value": "Number"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "trim"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": false
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "false"
                      },
                      {
                        "type": "Literal",
                        "value": "Boolean"
                      }
                    ]
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "test"
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "type"
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "params": [],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "expect"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": 23
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "type"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": null
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "null"
                      },
                      {
                        "type": "Literal",
                        "value": "null"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "type"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "undefined"
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "undefined"
                      },
                      {
                        "type": "Literal",
                        "value": "undefined"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "type"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": true
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "boolean"
                      },
                      {
                        "type": "Literal",
                        "value": "Boolean"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "type"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": false
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "boolean"
                      },
                      {
                        "type": "Literal",
                        "value": "Boolean"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "type"
                          }
                        },
                        "arguments": [
                          {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "Boolean"
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": true
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "boolean"
                      },
                      {
                        "type": "Literal",
                        "value": "Boolean"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "type"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": 0
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "number"
                      },
                      {
                        "type": "Literal",
                        "value": "Number"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "type"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": 1
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "number"
                      },
                      {
                        "type": "Literal",
                        "value": "Number"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "type"
                          }
                        },
                        "arguments": [
                          {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "Number"
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": 1
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "number"
                      },
                      {
                        "type": "Literal",
                        "value": "Number"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "type"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": ""
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "string"
                      },
                      {
                        "type": "Literal",
                        "value": "String"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "type"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "a"
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "string"
                      },
                      {
                        "type": "Literal",
                        "value": "String"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "type"
                          }
                        },
                        "arguments": [
                          {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "String"
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": "a"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "string"
                      },
                      {
                        "type": "Literal",
                        "value": "String"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "type"
                          }
                        },
                        "arguments": [
                          {
                            "type": "ObjectExpression",
                            "properties": []
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "object"
                      },
                      {
                        "type": "Literal",
                        "value": "Object"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "type"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": {}
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "regexp"
                      },
                      {
                        "type": "Literal",
                        "value": "RegExp"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "type"
                          }
                        },
                        "arguments": [
                          {
                            "type": "NewExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "RegExp"
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": "asdf"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "regexp"
                      },
                      {
                        "type": "Literal",
                        "value": "RegExp"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "type"
                          }
                        },
                        "arguments": [
                          {
                            "type": "ArrayExpression",
                            "elements": [
                              {
                                "type": "Literal",
                                "value": 1
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "array"
                      },
                      {
                        "type": "Literal",
                        "value": "Array"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "type"
                          }
                        },
                        "arguments": [
                          {
                            "type": "NewExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "Date"
                            },
                            "arguments": []
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "date"
                      },
                      {
                        "type": "Literal",
                        "value": "Date"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "type"
                          }
                        },
                        "arguments": [
                          {
                            "type": "NewExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "Function"
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": "return;"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "function"
                      },
                      {
                        "type": "Literal",
                        "value": "Function"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "type"
                          }
                        },
                        "arguments": [
                          {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [],
                            "defaults": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": []
                            },
                            "rest": null,
                            "generator": false,
                            "expression": false
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "function"
                      },
                      {
                        "type": "Literal",
                        "value": "Function"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "type"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "window"
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "object"
                      },
                      {
                        "type": "Literal",
                        "value": "Window"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "type"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "document"
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "object"
                      },
                      {
                        "type": "Literal",
                        "value": "Document"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "type"
                          }
                        },
                        "arguments": [
                          {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "document"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "body"
                            }
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "object"
                      },
                      {
                        "type": "Literal",
                        "value": "Element"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "type"
                          }
                        },
                        "arguments": [
                          {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "document"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "createTextNode"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": "foo"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "object"
                      },
                      {
                        "type": "Literal",
                        "value": "TextNode"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "type"
                          }
                        },
                        "arguments": [
                          {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "document"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "getElementsByTagName"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": "*"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "object"
                      },
                      {
                        "type": "Literal",
                        "value": "NodeList"
                      }
                    ]
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "test"
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "isPlainObject"
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "params": [],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "expect"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": 14
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "stop"
                    },
                    "arguments": []
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "isPlainObject"
                          }
                        },
                        "arguments": [
                          {
                            "type": "ObjectExpression",
                            "properties": []
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "{}"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "UnaryExpression",
                        "operator": "!",
                        "argument": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "jQuery"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "isPlainObject"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": ""
                            }
                          ]
                        },
                        "prefix": true
                      },
                      {
                        "type": "Literal",
                        "value": "string"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "LogicalExpression",
                        "operator": "&&",
                        "left": {
                          "type": "UnaryExpression",
                          "operator": "!",
                          "argument": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "jQuery"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "isPlainObject"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": 0
                              }
                            ]
                          },
                          "prefix": true
                        },
                        "right": {
                          "type": "UnaryExpression",
                          "operator": "!",
                          "argument": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "jQuery"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "isPlainObject"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": 1
                              }
                            ]
                          },
                          "prefix": true
                        }
                      },
                      {
                        "type": "Literal",
                        "value": "number"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "LogicalExpression",
                        "operator": "&&",
                        "left": {
                          "type": "UnaryExpression",
                          "operator": "!",
                          "argument": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "jQuery"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "isPlainObject"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": true
                              }
                            ]
                          },
                          "prefix": true
                        },
                        "right": {
                          "type": "UnaryExpression",
                          "operator": "!",
                          "argument": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "jQuery"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "isPlainObject"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": false
                              }
                            ]
                          },
                          "prefix": true
                        }
                      },
                      {
                        "type": "Literal",
                        "value": "boolean"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "UnaryExpression",
                        "operator": "!",
                        "argument": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "jQuery"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "isPlainObject"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": null
                            }
                          ]
                        },
                        "prefix": true
                      },
                      {
                        "type": "Literal",
                        "value": "null"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "UnaryExpression",
                        "operator": "!",
                        "argument": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "jQuery"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "isPlainObject"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "undefined"
                            }
                          ]
                        },
                        "prefix": true
                      },
                      {
                        "type": "Literal",
                        "value": "undefined"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "UnaryExpression",
                        "operator": "!",
                        "argument": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "jQuery"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "isPlainObject"
                            }
                          },
                          "arguments": [
                            {
                              "type": "ArrayExpression",
                              "elements": []
                            }
                          ]
                        },
                        "prefix": true
                      },
                      {
                        "type": "Literal",
                        "value": "array"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "UnaryExpression",
                        "operator": "!",
                        "argument": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "jQuery"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "isPlainObject"
                            }
                          },
                          "arguments": [
                            {
                              "type": "NewExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "Date"
                              },
                              "arguments": []
                            }
                          ]
                        },
                        "prefix": true
                      },
                      {
                        "type": "Literal",
                        "value": "new Date"
                      }
                    ]
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "fn"
                      },
                      "init": {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": []
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "UnaryExpression",
                        "operator": "!",
                        "argument": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "jQuery"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "isPlainObject"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "fn"
                            }
                          ]
                        },
                        "prefix": true
                      },
                      {
                        "type": "Literal",
                        "value": "fn"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "UnaryExpression",
                        "operator": "!",
                        "argument": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "jQuery"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "isPlainObject"
                            }
                          },
                          "arguments": [
                            {
                              "type": "NewExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "fn"
                              },
                              "arguments": []
                            }
                          ]
                        },
                        "prefix": true
                      },
                      {
                        "type": "Literal",
                        "value": "new fn (no methods)"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "fn"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "prototype"
                      }
                    },
                    "right": {
                      "type": "ObjectExpression",
                      "properties": [
                        {
                          "type": "Property",
                          "key": {
                            "type": "Identifier",
                            "name": "someMethod"
                          },
                          "value": {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [],
                            "defaults": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": []
                            },
                            "rest": null,
                            "generator": false,
                            "expression": false
                          },
                          "kind": "init"
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "UnaryExpression",
                        "operator": "!",
                        "argument": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "jQuery"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "isPlainObject"
                            }
                          },
                          "arguments": [
                            {
                              "type": "NewExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "fn"
                              },
                              "arguments": []
                            }
                          ]
                        },
                        "prefix": true
                      },
                      {
                        "type": "Literal",
                        "value": "new fn"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "UnaryExpression",
                        "operator": "!",
                        "argument": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "jQuery"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "isPlainObject"
                            }
                          },
                          "arguments": [
                            {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "document"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "createElement"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": "div"
                                }
                              ]
                            }
                          ]
                        },
                        "prefix": true
                      },
                      {
                        "type": "Literal",
                        "value": "DOM Element"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "UnaryExpression",
                        "operator": "!",
                        "argument": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "jQuery"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "isPlainObject"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "window"
                            }
                          ]
                        },
                        "prefix": true
                      },
                      {
                        "type": "Literal",
                        "value": "window"
                      }
                    ]
                  }
                },
                {
                  "type": "TryStatement",
                  "block": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "iframe"
                            },
                            "init": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "document"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "createElement"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": "iframe"
                                }
                              ]
                            }
                          }
                        ],
                        "kind": "var"
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "document"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "body"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "appendChild"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "iframe"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "window"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "iframeDone"
                            }
                          },
                          "right": {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [
                              {
                                "type": "Identifier",
                                "name": "otherObject"
                              }
                            ],
                            "defaults": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "ok"
                                    },
                                    "arguments": [
                                      {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "jQuery"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "isPlainObject"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "NewExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "otherObject"
                                            },
                                            "arguments": []
                                          }
                                        ]
                                      },
                                      {
                                        "type": "Literal",
                                        "value": "new otherObject"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "document"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "body"
                                        }
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "removeChild"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "iframe"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "start"
                                    },
                                    "arguments": []
                                  }
                                }
                              ]
                            },
                            "rest": null,
                            "generator": false,
                            "expression": false
                          }
                        }
                      },
                      {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "doc"
                            },
                            "init": {
                              "type": "LogicalExpression",
                              "operator": "||",
                              "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "iframe"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "contentDocument"
                                }
                              },
                              "right": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "iframe"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "contentWindow"
                                  }
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "document"
                                }
                              }
                            }
                          }
                        ],
                        "kind": "var"
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "doc"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "open"
                            }
                          },
                          "arguments": []
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "doc"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "write"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "<body onload='window.parent.iframeDone(Object);'>"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "doc"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "close"
                            }
                          },
                          "arguments": []
                        }
                      }
                    ]
                  },
                  "guardedHandlers": [],
                  "handlers": [
                    {
                      "type": "CatchClause",
                      "param": {
                        "type": "Identifier",
                        "name": "e"
                      },
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "document"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "body"
                                  }
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "removeChild"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "iframe"
                                }
                              ]
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "ok"
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": true
                                },
                                {
                                  "type": "Literal",
                                  "value": "new otherObject - iframes not supported"
                                }
                              ]
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "start"
                              },
                              "arguments": []
                            }
                          }
                        ]
                      }
                    }
                  ],
                  "finalizer": null
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "test"
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "isFunction"
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "params": [],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "expect"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": 19
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "UnaryExpression",
                        "operator": "!",
                        "argument": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "jQuery"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "isFunction"
                            }
                          },
                          "arguments": []
                        },
                        "prefix": true
                      },
                      {
                        "type": "Literal",
                        "value": "No Value"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "UnaryExpression",
                        "operator": "!",
                        "argument": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "jQuery"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "isFunction"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": null
                            }
                          ]
                        },
                        "prefix": true
                      },
                      {
                        "type": "Literal",
                        "value": "null Value"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "UnaryExpression",
                        "operator": "!",
                        "argument": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "jQuery"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "isFunction"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "undefined"
                            }
                          ]
                        },
                        "prefix": true
                      },
                      {
                        "type": "Literal",
                        "value": "undefined Value"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "UnaryExpression",
                        "operator": "!",
                        "argument": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "jQuery"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "isFunction"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": ""
                            }
                          ]
                        },
                        "prefix": true
                      },
                      {
                        "type": "Literal",
                        "value": "Empty String Value"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "UnaryExpression",
                        "operator": "!",
                        "argument": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "jQuery"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "isFunction"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 0
                            }
                          ]
                        },
                        "prefix": true
                      },
                      {
                        "type": "Literal",
                        "value": "0 Value"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "isFunction"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "String"
                          }
                        ]
                      },
                      {
                        "type": "BinaryExpression",
                        "operator": "+",
                        "left": {
                          "type": "BinaryExpression",
                          "operator": "+",
                          "left": {
                            "type": "Literal",
                            "value": "String Function("
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "String"
                          }
                        },
                        "right": {
                          "type": "Literal",
                          "value": ")"
                        }
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "isFunction"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "Array"
                          }
                        ]
                      },
                      {
                        "type": "BinaryExpression",
                        "operator": "+",
                        "left": {
                          "type": "BinaryExpression",
                          "operator": "+",
                          "left": {
                            "type": "Literal",
                            "value": "Array Function("
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "Array"
                          }
                        },
                        "right": {
                          "type": "Literal",
                          "value": ")"
                        }
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "isFunction"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "Object"
                          }
                        ]
                      },
                      {
                        "type": "BinaryExpression",
                        "operator": "+",
                        "left": {
                          "type": "BinaryExpression",
                          "operator": "+",
                          "left": {
                            "type": "Literal",
                            "value": "Object Function("
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "Object"
                          }
                        },
                        "right": {
                          "type": "Literal",
                          "value": ")"
                        }
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "isFunction"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "Function"
                          }
                        ]
                      },
                      {
                        "type": "BinaryExpression",
                        "operator": "+",
                        "left": {
                          "type": "BinaryExpression",
                          "operator": "+",
                          "left": {
                            "type": "Literal",
                            "value": "Function Function("
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "Function"
                          }
                        },
                        "right": {
                          "type": "Literal",
                          "value": ")"
                        }
                      }
                    ]
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "mystr"
                      },
                      "init": {
                        "type": "Literal",
                        "value": "function"
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "UnaryExpression",
                        "operator": "!",
                        "argument": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "jQuery"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "isFunction"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "mystr"
                            }
                          ]
                        },
                        "prefix": true
                      },
                      {
                        "type": "Literal",
                        "value": "Function String"
                      }
                    ]
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "myarr"
                      },
                      "init": {
                        "type": "ArrayExpression",
                        "elements": [
                          {
                            "type": "Literal",
                            "value": "function"
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "UnaryExpression",
                        "operator": "!",
                        "argument": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "jQuery"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "isFunction"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "myarr"
                            }
                          ]
                        },
                        "prefix": true
                      },
                      {
                        "type": "Literal",
                        "value": "Function Array"
                      }
                    ]
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "myfunction"
                      },
                      "init": {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": "function"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "test"
                            },
                            "kind": "init"
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "UnaryExpression",
                        "operator": "!",
                        "argument": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "jQuery"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "isFunction"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "myfunction"
                            }
                          ]
                        },
                        "prefix": true
                      },
                      {
                        "type": "Literal",
                        "value": "Function Object"
                      }
                    ]
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "fn"
                      },
                      "init": {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": []
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "isFunction"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "fn"
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "Normal Function"
                      }
                    ]
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "obj"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "document"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "createElement"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "object"
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "UnaryExpression",
                        "operator": "!",
                        "argument": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "jQuery"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "isFunction"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "obj"
                            }
                          ]
                        },
                        "prefix": true
                      },
                      {
                        "type": "Literal",
                        "value": "Object Element"
                      }
                    ]
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "nodes"
                      },
                      "init": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "document"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "body"
                          }
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "childNodes"
                        }
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "UnaryExpression",
                        "operator": "!",
                        "argument": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "jQuery"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "isFunction"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "nodes"
                            }
                          ]
                        },
                        "prefix": true
                      },
                      {
                        "type": "Literal",
                        "value": "childNodes Property"
                      }
                    ]
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "first"
                      },
                      "init": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "document"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "body"
                          }
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "firstChild"
                        }
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "UnaryExpression",
                        "operator": "!",
                        "argument": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "jQuery"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "isFunction"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "first"
                            }
                          ]
                        },
                        "prefix": true
                      },
                      {
                        "type": "Literal",
                        "value": "A normal DOM Element"
                      }
                    ]
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "input"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "document"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "createElement"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "input"
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "input"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "type"
                      }
                    },
                    "right": {
                      "type": "Literal",
                      "value": "text"
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "document"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "body"
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "appendChild"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "input"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "document"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "body"
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "removeChild"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "input"
                      }
                    ]
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "a"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "document"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "createElement"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "a"
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "a"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "href"
                      }
                    },
                    "right": {
                      "type": "Literal",
                      "value": "some-function"
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "document"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "body"
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "appendChild"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "a"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "UnaryExpression",
                        "operator": "!",
                        "argument": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "jQuery"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "isFunction"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "a"
                            }
                          ]
                        },
                        "prefix": true
                      },
                      {
                        "type": "Literal",
                        "value": "Anchor Element"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "document"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "body"
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "removeChild"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "a"
                      }
                    ]
                  }
                },
                {
                  "type": "FunctionDeclaration",
                  "id": {
                    "type": "Identifier",
                    "name": "callme"
                  },
                  "params": [
                    {
                      "type": "Identifier",
                      "name": "callback"
                    }
                  ],
                  "defaults": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "FunctionDeclaration",
                        "id": {
                          "type": "Identifier",
                          "name": "fn"
                        },
                        "params": [
                          {
                            "type": "Identifier",
                            "name": "response"
                          }
                        ],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "callback"
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "response"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "ok"
                          },
                          "arguments": [
                            {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "jQuery"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "isFunction"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "fn"
                                }
                              ]
                            },
                            {
                              "type": "Literal",
                              "value": "Recursive Function Call"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "fn"
                          },
                          "arguments": [
                            {
                              "type": "ObjectExpression",
                              "properties": [
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "some"
                                  },
                                  "value": {
                                    "type": "Literal",
                                    "value": "data"
                                  },
                                  "kind": "init"
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "rest": null,
                  "generator": false,
                  "expression": false
                },
                {
                  "type": "EmptyStatement"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "callme"
                    },
                    "arguments": [
                      {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "callme"
                                },
                                "arguments": [
                                  {
                                    "type": "FunctionExpression",
                                    "id": null,
                                    "params": [],
                                    "defaults": [],
                                    "body": {
                                      "type": "BlockStatement",
                                      "body": []
                                    },
                                    "rest": null,
                                    "generator": false,
                                    "expression": false
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      }
                    ]
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "test"
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "isXMLDoc - HTML"
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "params": [],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "expect"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": 4
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "UnaryExpression",
                        "operator": "!",
                        "argument": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "jQuery"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "isXMLDoc"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "document"
                            }
                          ]
                        },
                        "prefix": true
                      },
                      {
                        "type": "Literal",
                        "value": "HTML document"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "UnaryExpression",
                        "operator": "!",
                        "argument": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "jQuery"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "isXMLDoc"
                            }
                          },
                          "arguments": [
                            {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "document"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "documentElement"
                              }
                            }
                          ]
                        },
                        "prefix": true
                      },
                      {
                        "type": "Literal",
                        "value": "HTML documentElement"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "UnaryExpression",
                        "operator": "!",
                        "argument": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "jQuery"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "isXMLDoc"
                            }
                          },
                          "arguments": [
                            {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "document"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "body"
                              }
                            }
                          ]
                        },
                        "prefix": true
                      },
                      {
                        "type": "Literal",
                        "value": "HTML Body Element"
                      }
                    ]
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "iframe"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "document"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "createElement"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "iframe"
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "document"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "body"
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "appendChild"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "iframe"
                      }
                    ]
                  }
                },
                {
                  "type": "TryStatement",
                  "block": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "body"
                            },
                            "init": {
                              "type": "MemberExpression",
                              "computed": true,
                              "object": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "jQuery"
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "iframe"
                                      }
                                    ]
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "contents"
                                  }
                                },
                                "arguments": []
                              },
                              "property": {
                                "type": "Literal",
                                "value": 0
                              }
                            }
                          }
                        ],
                        "kind": "var"
                      },
                      {
                        "type": "TryStatement",
                        "block": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "ok"
                                },
                                "arguments": [
                                  {
                                    "type": "UnaryExpression",
                                    "operator": "!",
                                    "argument": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "jQuery"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "isXMLDoc"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "Identifier",
                                          "name": "body"
                                        }
                                      ]
                                    },
                                    "prefix": true
                                  },
                                  {
                                    "type": "Literal",
                                    "value": "Iframe body element"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "guardedHandlers": [],
                        "handlers": [
                          {
                            "type": "CatchClause",
                            "param": {
                              "type": "Identifier",
                              "name": "e"
                            },
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "ok"
                                    },
                                    "arguments": [
                                      {
                                        "type": "Literal",
                                        "value": false
                                      },
                                      {
                                        "type": "Literal",
                                        "value": "Iframe body element exception"
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ],
                        "finalizer": null
                      }
                    ]
                  },
                  "guardedHandlers": [],
                  "handlers": [
                    {
                      "type": "CatchClause",
                      "param": {
                        "type": "Identifier",
                        "name": "e"
                      },
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "ok"
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": true
                                },
                                {
                                  "type": "Literal",
                                  "value": "Iframe body element - iframe not working correctly"
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ],
                  "finalizer": null
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "document"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "body"
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "removeChild"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "iframe"
                      }
                    ]
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "UnaryExpression",
        "operator": "!",
        "argument": {
          "type": "Identifier",
          "name": "isLocal"
        },
        "prefix": true
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "test"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "isXMLDoc - XML"
                },
                {
                  "type": "FunctionExpression",
                  "id": null,
                  "params": [],
                  "defaults": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "expect"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 3
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "stop"
                          },
                          "arguments": []
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "jQuery"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "get"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "data/dashboard.xml"
                            },
                            {
                              "type": "FunctionExpression",
                              "id": null,
                              "params": [
                                {
                                  "type": "Identifier",
                                  "name": "xml"
                                }
                              ],
                              "defaults": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "ok"
                                      },
                                      "arguments": [
                                        {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "jQuery"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "isXMLDoc"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Identifier",
                                              "name": "xml"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Literal",
                                          "value": "XML document"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "ok"
                                      },
                                      "arguments": [
                                        {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "jQuery"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "isXMLDoc"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "xml"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "documentElement"
                                              }
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Literal",
                                          "value": "XML documentElement"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "ok"
                                      },
                                      "arguments": [
                                        {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "jQuery"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "isXMLDoc"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "MemberExpression",
                                              "computed": true,
                                              "object": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "Identifier",
                                                  "name": "jQuery"
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "Literal",
                                                    "value": "tab"
                                                  },
                                                  {
                                                    "type": "Identifier",
                                                    "name": "xml"
                                                  }
                                                ]
                                              },
                                              "property": {
                                                "type": "Literal",
                                                "value": 0
                                              }
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Literal",
                                          "value": "XML Tab Element"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "start"
                                      },
                                      "arguments": []
                                    }
                                  }
                                ]
                              },
                              "rest": null,
                              "generator": false,
                              "expression": false
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "rest": null,
                  "generator": false,
                  "expression": false
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "test"
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "isWindow"
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "params": [],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "expect"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": 12
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "isWindow"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "window"
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "window"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "UnaryExpression",
                        "operator": "!",
                        "argument": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "jQuery"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "isWindow"
                            }
                          },
                          "arguments": []
                        },
                        "prefix": true
                      },
                      {
                        "type": "Literal",
                        "value": "empty"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "UnaryExpression",
                        "operator": "!",
                        "argument": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "jQuery"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "isWindow"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": null
                            }
                          ]
                        },
                        "prefix": true
                      },
                      {
                        "type": "Literal",
                        "value": "null"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "UnaryExpression",
                        "operator": "!",
                        "argument": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "jQuery"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "isWindow"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "undefined"
                            }
                          ]
                        },
                        "prefix": true
                      },
                      {
                        "type": "Literal",
                        "value": "undefined"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "UnaryExpression",
                        "operator": "!",
                        "argument": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "jQuery"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "isWindow"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "document"
                            }
                          ]
                        },
                        "prefix": true
                      },
                      {
                        "type": "Literal",
                        "value": "document"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "UnaryExpression",
                        "operator": "!",
                        "argument": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "jQuery"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "isWindow"
                            }
                          },
                          "arguments": [
                            {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "document"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "documentElement"
                              }
                            }
                          ]
                        },
                        "prefix": true
                      },
                      {
                        "type": "Literal",
                        "value": "documentElement"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "UnaryExpression",
                        "operator": "!",
                        "argument": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "jQuery"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "isWindow"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": ""
                            }
                          ]
                        },
                        "prefix": true
                      },
                      {
                        "type": "Literal",
                        "value": "string"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "UnaryExpression",
                        "operator": "!",
                        "argument": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "jQuery"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "isWindow"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 1
                            }
                          ]
                        },
                        "prefix": true
                      },
                      {
                        "type": "Literal",
                        "value": "number"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "UnaryExpression",
                        "operator": "!",
                        "argument": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "jQuery"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "isWindow"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": true
                            }
                          ]
                        },
                        "prefix": true
                      },
                      {
                        "type": "Literal",
                        "value": "boolean"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "UnaryExpression",
                        "operator": "!",
                        "argument": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "jQuery"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "isWindow"
                            }
                          },
                          "arguments": [
                            {
                              "type": "ObjectExpression",
                              "properties": []
                            }
                          ]
                        },
                        "prefix": true
                      },
                      {
                        "type": "Literal",
                        "value": "object"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "UnaryExpression",
                        "operator": "!",
                        "argument": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "jQuery"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "isWindow"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": {}
                            }
                          ]
                        },
                        "prefix": true
                      },
                      {
                        "type": "Literal",
                        "value": "regexp"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "UnaryExpression",
                        "operator": "!",
                        "argument": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "jQuery"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "isWindow"
                            }
                          },
                          "arguments": [
                            {
                              "type": "FunctionExpression",
                              "id": null,
                              "params": [],
                              "defaults": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": []
                              },
                              "rest": null,
                              "generator": false,
                              "expression": false
                            }
                          ]
                        },
                        "prefix": true
                      },
                      {
                        "type": "Literal",
                        "value": "function"
                      }
                    ]
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "test"
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "jQuery('html')"
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "params": [],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "expect"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": 15
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "QUnit"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "reset"
                      }
                    },
                    "arguments": []
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "jQuery"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "foo"
                      }
                    },
                    "right": {
                      "type": "Literal",
                      "value": false
                    }
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "s"
                      },
                      "init": {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "<script>jQuery.foo='test';</script>"
                            }
                          ]
                        },
                        "property": {
                          "type": "Literal",
                          "value": 0
                        }
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "s"
                      },
                      {
                        "type": "Literal",
                        "value": "Creating a script"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "UnaryExpression",
                        "operator": "!",
                        "argument": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "foo"
                          }
                        },
                        "prefix": true
                      },
                      {
                        "type": "Literal",
                        "value": "Make sure the script wasn't executed prematurely"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "jQuery"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "body"
                          }
                        ]
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "append"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": "<script>jQuery.foo='test';</script>"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "jQuery"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "foo"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": "Executing a scripts contents in the right context"
                      }
                    ]
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "div"
                      },
                      "init": {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "<div>\r\nsome text\n<p>some p</p>\nmore text\r\n</div>"
                            }
                          ]
                        },
                        "property": {
                          "type": "Literal",
                          "value": 0
                        }
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "div"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "nodeName"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "toUpperCase"
                          }
                        },
                        "arguments": []
                      },
                      {
                        "type": "Literal",
                        "value": "DIV"
                      },
                      {
                        "type": "Literal",
                        "value": "Make sure we're getting a div."
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "div"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "firstChild"
                          }
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "nodeType"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": 3
                      },
                      {
                        "type": "Literal",
                        "value": "Text node."
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "div"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "lastChild"
                          }
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "nodeType"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": 3
                      },
                      {
                        "type": "Literal",
                        "value": "Text node."
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "MemberExpression",
                          "computed": true,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "div"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "childNodes"
                            }
                          },
                          "property": {
                            "type": "Literal",
                            "value": 1
                          }
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "nodeType"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": 1
                      },
                      {
                        "type": "Literal",
                        "value": "Paragraph."
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "div"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "childNodes"
                              }
                            },
                            "property": {
                              "type": "Literal",
                              "value": 1
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "firstChild"
                          }
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "nodeType"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": 3
                      },
                      {
                        "type": "Literal",
                        "value": "Paragraph text."
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "QUnit"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "reset"
                      }
                    },
                    "arguments": []
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "<link rel='stylesheet'/>"
                            }
                          ]
                        },
                        "property": {
                          "type": "Literal",
                          "value": 0
                        }
                      },
                      {
                        "type": "Literal",
                        "value": "Creating a link"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "UnaryExpression",
                        "operator": "!",
                        "argument": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "jQuery"
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": "<script/>"
                                }
                              ]
                            },
                            "property": {
                              "type": "Literal",
                              "value": 0
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "parentNode"
                          }
                        },
                        "prefix": true
                      },
                      {
                        "type": "Literal",
                        "value": "Create a script"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "jQuery"
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": "<input/>"
                              }
                            ]
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "attr"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "type"
                          },
                          {
                            "type": "Literal",
                            "value": "hidden"
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "Create an input and set the type."
                      }
                    ]
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "j"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "jQuery"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "<span>hi</span> there <!-- mon ami -->"
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "BinaryExpression",
                        "operator": ">=",
                        "left": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "j"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "length"
                          }
                        },
                        "right": {
                          "type": "Literal",
                          "value": 2
                        }
                      },
                      {
                        "type": "Literal",
                        "value": "Check node,textnode,comment creation (some browsers delete comments)"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "UnaryExpression",
                        "operator": "!",
                        "argument": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "jQuery"
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": "<option>test</option>"
                                }
                              ]
                            },
                            "property": {
                              "type": "Literal",
                              "value": 0
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "selected"
                          }
                        },
                        "prefix": true
                      },
                      {
                        "type": "Literal",
                        "value": "Make sure that options are auto-selected #2050"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "<div></div>"
                            }
                          ]
                        },
                        "property": {
                          "type": "Literal",
                          "value": 0
                        }
                      },
                      {
                        "type": "Literal",
                        "value": "Create a div with closing tag."
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "<table></table>"
                            }
                          ]
                        },
                        "property": {
                          "type": "Literal",
                          "value": 0
                        }
                      },
                      {
                        "type": "Literal",
                        "value": "Create a table with closing tag."
                      }
                    ]
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "test"
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "jQuery('html', context)"
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "params": [],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "expect"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": 1
                      }
                    ]
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "$div"
                      },
                      "init": {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "<div/>"
                            }
                          ]
                        },
                        "property": {
                          "type": "Literal",
                          "value": 0
                        }
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "$span"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "jQuery"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "<span/>"
                          },
                          {
                            "type": "Identifier",
                            "name": "$div"
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "$span"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "length"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": 1
                      },
                      {
                        "type": "Literal",
                        "value": "Verify a span created with a div context works, #1763"
                      }
                    ]
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "UnaryExpression",
        "operator": "!",
        "argument": {
          "type": "Identifier",
          "name": "isLocal"
        },
        "prefix": true
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "test"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "jQuery(selector, xml).text(str) - Loaded via XML document"
                },
                {
                  "type": "FunctionExpression",
                  "id": null,
                  "params": [],
                  "defaults": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "expect"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 2
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "stop"
                          },
                          "arguments": []
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "jQuery"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "get"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "data/dashboard.xml"
                            },
                            {
                              "type": "FunctionExpression",
                              "id": null,
                              "params": [
                                {
                                  "type": "Identifier",
                                  "name": "xml"
                                }
                              ],
                              "defaults": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "tab"
                                        },
                                        "init": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "jQuery"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Literal",
                                                  "value": "tab"
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "name": "xml"
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "eq"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Literal",
                                              "value": 0
                                            }
                                          ]
                                        }
                                      }
                                    ],
                                    "kind": "var"
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "equals"
                                      },
                                      "arguments": [
                                        {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "tab"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "text"
                                            }
                                          },
                                          "arguments": []
                                        },
                                        {
                                          "type": "Literal",
                                          "value": "blabla"
                                        },
                                        {
                                          "type": "Literal",
                                          "value": "Verify initial text correct"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "tab"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "text"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "newtext"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "equals"
                                      },
                                      "arguments": [
                                        {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "tab"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "text"
                                            }
                                          },
                                          "arguments": []
                                        },
                                        {
                                          "type": "Literal",
                                          "value": "newtext"
                                        },
                                        {
                                          "type": "Literal",
                                          "value": "Verify new text correct"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "start"
                                      },
                                      "arguments": []
                                    }
                                  }
                                ]
                              },
                              "rest": null,
                              "generator": false,
                              "expression": false
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "rest": null,
                  "generator": false,
                  "expression": false
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "test"
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "end()"
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "params": [],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "expect"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": 3
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": "Yahoo"
                      },
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "jQuery"
                                    },
                                    "arguments": [
                                      {
                                        "type": "Literal",
                                        "value": "#yahoo"
                                      }
                                    ]
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "parent"
                                  }
                                },
                                "arguments": []
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "end"
                              }
                            },
                            "arguments": []
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "text"
                          }
                        },
                        "arguments": []
                      },
                      {
                        "type": "Literal",
                        "value": "Check for end"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "jQuery"
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": "#yahoo"
                              }
                            ]
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "end"
                          }
                        },
                        "arguments": []
                      },
                      {
                        "type": "Literal",
                        "value": "Check for end with nothing to end"
                      }
                    ]
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "x"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "jQuery"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "#yahoo"
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "x"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "parent"
                      }
                    },
                    "arguments": []
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": "Yahoo"
                      },
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "jQuery"
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": "#yahoo"
                              }
                            ]
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "text"
                          }
                        },
                        "arguments": []
                      },
                      {
                        "type": "Literal",
                        "value": "Check for non-destructive behaviour"
                      }
                    ]
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "test"
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "length"
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "params": [],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "expect"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": 1
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "#main p"
                            }
                          ]
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "length"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": 6
                      },
                      {
                        "type": "Literal",
                        "value": "Get Number of Elements Found"
                      }
                    ]
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "test"
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "size()"
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "params": [],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "expect"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": 1
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "jQuery"
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": "#main p"
                              }
                            ]
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "size"
                          }
                        },
                        "arguments": []
                      },
                      {
                        "type": "Literal",
                        "value": 6
                      },
                      {
                        "type": "Literal",
                        "value": "Get Number of Elements Found"
                      }
                    ]
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "test"
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "get()"
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "params": [],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "expect"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": 1
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "same"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "jQuery"
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": "#main p"
                              }
                            ]
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "get"
                          }
                        },
                        "arguments": []
                      },
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "q"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "firstp"
                          },
                          {
                            "type": "Literal",
                            "value": "ap"
                          },
                          {
                            "type": "Literal",
                            "value": "sndp"
                          },
                          {
                            "type": "Literal",
                            "value": "en"
                          },
                          {
                            "type": "Literal",
                            "value": "sap"
                          },
                          {
                            "type": "Literal",
                            "value": "first"
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "Get All Elements"
                      }
                    ]
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "test"
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "toArray()"
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "params": [],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "expect"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": 1
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "same"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "jQuery"
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": "#main p"
                              }
                            ]
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "toArray"
                          }
                        },
                        "arguments": []
                      },
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "q"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "firstp"
                          },
                          {
                            "type": "Literal",
                            "value": "ap"
                          },
                          {
                            "type": "Literal",
                            "value": "sndp"
                          },
                          {
                            "type": "Literal",
                            "value": "en"
                          },
                          {
                            "type": "Literal",
                            "value": "sap"
                          },
                          {
                            "type": "Literal",
                            "value": "first"
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "Convert jQuery object to an Array"
                      }
                    ]
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "test"
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "get(Number)"
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "params": [],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "expect"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": 2
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "jQuery"
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": "#main p"
                              }
                            ]
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "get"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": 0
                          }
                        ]
                      },
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "document"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "getElementById"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "firstp"
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "Get A Single Element"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "strictEqual"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "jQuery"
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": "#firstp"
                              }
                            ]
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "get"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": 1
                          }
                        ]
                      },
                      {
                        "type": "Identifier",
                        "name": "undefined"
                      },
                      {
                        "type": "Literal",
                        "value": "Try get with index larger elements count"
                      }
                    ]
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "test"
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "get(-Number)"
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "params": [],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "expect"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": 2
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "jQuery"
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": "p"
                              }
                            ]
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "get"
                          }
                        },
                        "arguments": [
                          {
                            "type": "UnaryExpression",
                            "operator": "-",
                            "argument": {
                              "type": "Literal",
                              "value": 1
                            },
                            "prefix": true
                          }
                        ]
                      },
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "document"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "getElementById"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "first"
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "Get a single element with negative index"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "strictEqual"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "jQuery"
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": "#firstp"
                              }
                            ]
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "get"
                          }
                        },
                        "arguments": [
                          {
                            "type": "UnaryExpression",
                            "operator": "-",
                            "argument": {
                              "type": "Literal",
                              "value": 2
                            },
                            "prefix": true
                          }
                        ]
                      },
                      {
                        "type": "Identifier",
                        "name": "undefined"
                      },
                      {
                        "type": "Literal",
                        "value": "Try get with index negative index larger then elements count"
                      }
                    ]
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "test"
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "each(Function)"
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "params": [],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "expect"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": 1
                      }
                    ]
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "div"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "jQuery"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "div"
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "div"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "each"
                      }
                    },
                    "arguments": [
                      {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "ThisExpression"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "foo"
                                  }
                                },
                                "right": {
                                  "type": "Literal",
                                  "value": "zoo"
                                }
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      }
                    ]
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "pass"
                      },
                      "init": {
                        "type": "Literal",
                        "value": true
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ForStatement",
                  "init": {
                    "type": "VariableDeclaration",
                    "declarations": [
                      {
                        "type": "VariableDeclarator",
                        "id": {
                          "type": "Identifier",
                          "name": "i"
                        },
                        "init": {
                          "type": "Literal",
                          "value": 0
                        }
                      }
                    ],
                    "kind": "var"
                  },
                  "test": {
                    "type": "BinaryExpression",
                    "operator": "<",
                    "left": {
                      "type": "Identifier",
                      "name": "i"
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "div"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "size"
                        }
                      },
                      "arguments": []
                    }
                  },
                  "update": {
                    "type": "UpdateExpression",
                    "operator": "++",
                    "argument": {
                      "type": "Identifier",
                      "name": "i"
                    },
                    "prefix": false
                  },
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "IfStatement",
                        "test": {
                          "type": "BinaryExpression",
                          "operator": "!=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "div"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "get"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "i"
                                }
                              ]
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "foo"
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": "zoo"
                          }
                        },
                        "consequent": {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                              "type": "Identifier",
                              "name": "pass"
                            },
                            "right": {
                              "type": "Literal",
                              "value": false
                            }
                          }
                        },
                        "alternate": null
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "pass"
                      },
                      {
                        "type": "Literal",
                        "value": "Execute a function, Relative"
                      }
                    ]
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "test"
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "slice()"
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "params": [],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "expect"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": 7
                      }
                    ]
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "$links"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "jQuery"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "#ap a"
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "same"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "$links"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "slice"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": 1
                              },
                              {
                                "type": "Literal",
                                "value": 2
                              }
                            ]
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "get"
                          }
                        },
                        "arguments": []
                      },
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "q"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "groups"
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "slice(1,2)"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "same"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "$links"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "slice"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": 1
                              }
                            ]
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "get"
                          }
                        },
                        "arguments": []
                      },
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "q"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "groups"
                          },
                          {
                            "type": "Literal",
                            "value": "anchor1"
                          },
                          {
                            "type": "Literal",
                            "value": "mark"
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "slice(1)"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "same"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "$links"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "slice"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": 0
                              },
                              {
                                "type": "Literal",
                                "value": 3
                              }
                            ]
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "get"
                          }
                        },
                        "arguments": []
                      },
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "q"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "google"
                          },
                          {
                            "type": "Literal",
                            "value": "groups"
                          },
                          {
                            "type": "Literal",
                            "value": "anchor1"
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "slice(0,3)"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "same"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "$links"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "slice"
                              }
                            },
                            "arguments": [
                              {
                                "type": "UnaryExpression",
                                "operator": "-",
                                "argument": {
                                  "type": "Literal",
                                  "value": 1
                                },
                                "prefix": true
                              }
                            ]
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "get"
                          }
                        },
                        "arguments": []
                      },
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "q"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "mark"
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "slice(-1)"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "same"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "$links"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "eq"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": 1
                              }
                            ]
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "get"
                          }
                        },
                        "arguments": []
                      },
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "q"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "groups"
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "eq(1)"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "same"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "$links"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "eq"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": "2"
                              }
                            ]
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "get"
                          }
                        },
                        "arguments": []
                      },
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "q"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "anchor1"
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "eq('2')"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "same"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "$links"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "eq"
                              }
                            },
                            "arguments": [
                              {
                                "type": "UnaryExpression",
                                "operator": "-",
                                "argument": {
                                  "type": "Literal",
                                  "value": 1
                                },
                                "prefix": true
                              }
                            ]
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "get"
                          }
                        },
                        "arguments": []
                      },
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "q"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "mark"
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "eq(-1)"
                      }
                    ]
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "test"
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "first()/last()"
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "params": [],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "expect"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": 4
                      }
                    ]
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "$links"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "jQuery"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "#ap a"
                          }
                        ]
                      }
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "$none"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "jQuery"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "asdf"
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "same"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "$links"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "first"
                              }
                            },
                            "arguments": []
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "get"
                          }
                        },
                        "arguments": []
                      },
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "q"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "google"
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "first()"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "same"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "$links"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "last"
                              }
                            },
                            "arguments": []
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "get"
                          }
                        },
                        "arguments": []
                      },
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "q"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "mark"
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "last()"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "same"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "$none"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "first"
                              }
                            },
                            "arguments": []
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "get"
                          }
                        },
                        "arguments": []
                      },
                      {
                        "type": "ArrayExpression",
                        "elements": []
                      },
                      {
                        "type": "Literal",
                        "value": "first() none"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "same"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "$none"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "last"
                              }
                            },
                            "arguments": []
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "get"
                          }
                        },
                        "arguments": []
                      },
                      {
                        "type": "ArrayExpression",
                        "elements": []
                      },
                      {
                        "type": "Literal",
                        "value": "last() none"
                      }
                    ]
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "test"
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "map()"
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "params": [],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "expect"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": 2
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "same"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "jQuery"
                                },
                                "arguments": [
                                  {
                                    "type": "Literal",
                                    "value": "#ap"
                                  }
                                ]
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "map"
                              }
                            },
                            "arguments": [
                              {
                                "type": "FunctionExpression",
                                "id": null,
                                "params": [],
                                "defaults": [],
                                "body": {
                                  "type": "BlockStatement",
                                  "body": [
                                    {
                                      "type": "ReturnStatement",
                                      "argument": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "Identifier",
                                                  "name": "jQuery"
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "ThisExpression"
                                                  }
                                                ]
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "find"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "Literal",
                                                "value": "a"
                                              }
                                            ]
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "get"
                                          }
                                        },
                                        "arguments": []
                                      }
                                    }
                                  ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                              }
                            ]
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "get"
                          }
                        },
                        "arguments": []
                      },
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "q"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "google"
                          },
                          {
                            "type": "Literal",
                            "value": "groups"
                          },
                          {
                            "type": "Literal",
                            "value": "anchor1"
                          },
                          {
                            "type": "Literal",
                            "value": "mark"
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "Array Map"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "same"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "jQuery"
                                },
                                "arguments": [
                                  {
                                    "type": "Literal",
                                    "value": "#ap > a"
                                  }
                                ]
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "map"
                              }
                            },
                            "arguments": [
                              {
                                "type": "FunctionExpression",
                                "id": null,
                                "params": [],
                                "defaults": [],
                                "body": {
                                  "type": "BlockStatement",
                                  "body": [
                                    {
                                      "type": "ReturnStatement",
                                      "argument": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "ThisExpression"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "parentNode"
                                        }
                                      }
                                    }
                                  ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                              }
                            ]
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "get"
                          }
                        },
                        "arguments": []
                      },
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "q"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "ap"
                          },
                          {
                            "type": "Literal",
                            "value": "ap"
                          },
                          {
                            "type": "Literal",
                            "value": "ap"
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "Single Map"
                      }
                    ]
                  }
                },
                {
                  "type": "ReturnStatement",
                  "argument": null
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "keys"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "map"
                          }
                        },
                        "arguments": [
                          {
                            "type": "ObjectExpression",
                            "properties": [
                              {
                                "type": "Property",
                                "key": {
                                  "type": "Identifier",
                                  "name": "a"
                                },
                                "value": {
                                  "type": "Literal",
                                  "value": 1
                                },
                                "kind": "init"
                              },
                              {
                                "type": "Property",
                                "key": {
                                  "type": "Identifier",
                                  "name": "b"
                                },
                                "value": {
                                  "type": "Literal",
                                  "value": 2
                                },
                                "kind": "init"
                              }
                            ]
                          },
                          {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [
                              {
                                "type": "Identifier",
                                "name": "v"
                              },
                              {
                                "type": "Identifier",
                                "name": "k"
                              }
                            ],
                            "defaults": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "Identifier",
                                    "name": "k"
                                  }
                                }
                              ]
                            },
                            "rest": null,
                            "generator": false,
                            "expression": false
                          },
                          {
                            "type": "ArrayExpression",
                            "elements": []
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "keys"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "join"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": ""
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "ab"
                      },
                      {
                        "type": "Literal",
                        "value": "Map the keys from a hash to an array"
                      }
                    ]
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "values"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "map"
                          }
                        },
                        "arguments": [
                          {
                            "type": "ObjectExpression",
                            "properties": [
                              {
                                "type": "Property",
                                "key": {
                                  "type": "Identifier",
                                  "name": "a"
                                },
                                "value": {
                                  "type": "Literal",
                                  "value": 1
                                },
                                "kind": "init"
                              },
                              {
                                "type": "Property",
                                "key": {
                                  "type": "Identifier",
                                  "name": "b"
                                },
                                "value": {
                                  "type": "Literal",
                                  "value": 2
                                },
                                "kind": "init"
                              }
                            ]
                          },
                          {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [
                              {
                                "type": "Identifier",
                                "name": "v"
                              },
                              {
                                "type": "Identifier",
                                "name": "k"
                              }
                            ],
                            "defaults": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "Identifier",
                                    "name": "v"
                                  }
                                }
                              ]
                            },
                            "rest": null,
                            "generator": false,
                            "expression": false
                          },
                          {
                            "type": "ArrayExpression",
                            "elements": []
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "values"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "join"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": ""
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "12"
                      },
                      {
                        "type": "Literal",
                        "value": "Map the values from a hash to an array"
                      }
                    ]
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "scripts"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "document"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "getElementsByTagName"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "script"
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "mapped"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "map"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "scripts"
                          },
                          {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [
                              {
                                "type": "Identifier",
                                "name": "v"
                              },
                              {
                                "type": "Identifier",
                                "name": "k"
                              }
                            ],
                            "defaults": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "Identifier",
                                    "name": "v"
                                  }
                                }
                              ]
                            },
                            "rest": null,
                            "generator": false,
                            "expression": false
                          },
                          {
                            "type": "ObjectExpression",
                            "properties": [
                              {
                                "type": "Property",
                                "key": {
                                  "type": "Identifier",
                                  "name": "length"
                                },
                                "value": {
                                  "type": "Literal",
                                  "value": 0
                                },
                                "kind": "init"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "mapped"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "length"
                        }
                      },
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "scripts"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "length"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": "Map an array(-like) to a hash"
                      }
                    ]
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "flat"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "map"
                          }
                        },
                        "arguments": [
                          {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "Array"
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": 4
                              }
                            ]
                          },
                          {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [
                              {
                                "type": "Identifier",
                                "name": "v"
                              },
                              {
                                "type": "Identifier",
                                "name": "k"
                              }
                            ],
                            "defaults": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "ConditionalExpression",
                                    "test": {
                                      "type": "BinaryExpression",
                                      "operator": "%",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "k"
                                      },
                                      "right": {
                                        "type": "Literal",
                                        "value": 2
                                      }
                                    },
                                    "consequent": {
                                      "type": "Identifier",
                                      "name": "k"
                                    },
                                    "alternate": {
                                      "type": "ArrayExpression",
                                      "elements": [
                                        {
                                          "type": "Identifier",
                                          "name": "k"
                                        },
                                        {
                                          "type": "Identifier",
                                          "name": "k"
                                        },
                                        {
                                          "type": "Identifier",
                                          "name": "k"
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            },
                            "rest": null,
                            "generator": false,
                            "expression": false
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "flat"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "join"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": ""
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "00012223"
                      },
                      {
                        "type": "Literal",
                        "value": "try the new flatten technique(#2616)"
                      }
                    ]
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "test"
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "jQuery.merge()"
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "params": [],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "expect"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": 8
                      }
                    ]
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "parse"
                      },
                      "init": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "jQuery"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "merge"
                        }
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "same"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "parse"
                        },
                        "arguments": [
                          {
                            "type": "ArrayExpression",
                            "elements": []
                          },
                          {
                            "type": "ArrayExpression",
                            "elements": []
                          }
                        ]
                      },
                      {
                        "type": "ArrayExpression",
                        "elements": []
                      },
                      {
                        "type": "Literal",
                        "value": "Empty arrays"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "same"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "parse"
                        },
                        "arguments": [
                          {
                            "type": "ArrayExpression",
                            "elements": [
                              {
                                "type": "Literal",
                                "value": 1
                              }
                            ]
                          },
                          {
                            "type": "ArrayExpression",
                            "elements": [
                              {
                                "type": "Literal",
                                "value": 2
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "ArrayExpression",
                        "elements": [
                          {
                            "type": "Literal",
                            "value": 1
                          },
                          {
                            "type": "Literal",
                            "value": 2
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "Basic"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "same"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "parse"
                        },
                        "arguments": [
                          {
                            "type": "ArrayExpression",
                            "elements": [
                              {
                                "type": "Literal",
                                "value": 1
                              },
                              {
                                "type": "Literal",
                                "value": 2
                              }
                            ]
                          },
                          {
                            "type": "ArrayExpression",
                            "elements": [
                              {
                                "type": "Literal",
                                "value": 3
                              },
                              {
                                "type": "Literal",
                                "value": 4
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "ArrayExpression",
                        "elements": [
                          {
                            "type": "Literal",
                            "value": 1
                          },
                          {
                            "type": "Literal",
                            "value": 2
                          },
                          {
                            "type": "Literal",
                            "value": 3
                          },
                          {
                            "type": "Literal",
                            "value": 4
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "Basic"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "same"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "parse"
                        },
                        "arguments": [
                          {
                            "type": "ArrayExpression",
                            "elements": [
                              {
                                "type": "Literal",
                                "value": 1
                              },
                              {
                                "type": "Literal",
                                "value": 2
                              }
                            ]
                          },
                          {
                            "type": "ArrayExpression",
                            "elements": []
                          }
                        ]
                      },
                      {
                        "type": "ArrayExpression",
                        "elements": [
                          {
                            "type": "Literal",
                            "value": 1
                          },
                          {
                            "type": "Literal",
                            "value": 2
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "Second empty"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "same"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "parse"
                        },
                        "arguments": [
                          {
                            "type": "ArrayExpression",
                            "elements": []
                          },
                          {
                            "type": "ArrayExpression",
                            "elements": [
                              {
                                "type": "Literal",
                                "value": 1
                              },
                              {
                                "type": "Literal",
                                "value": 2
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "ArrayExpression",
                        "elements": [
                          {
                            "type": "Literal",
                            "value": 1
                          },
                          {
                            "type": "Literal",
                            "value": 2
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "First empty"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "same"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "parse"
                        },
                        "arguments": [
                          {
                            "type": "ArrayExpression",
                            "elements": [
                              {
                                "type": "UnaryExpression",
                                "operator": "-",
                                "argument": {
                                  "type": "Literal",
                                  "value": 2
                                },
                                "prefix": true
                              },
                              {
                                "type": "UnaryExpression",
                                "operator": "-",
                                "argument": {
                                  "type": "Literal",
                                  "value": 1
                                },
                                "prefix": true
                              }
                            ]
                          },
                          {
                            "type": "ArrayExpression",
                            "elements": [
                              {
                                "type": "Literal",
                                "value": 0
                              },
                              {
                                "type": "Literal",
                                "value": 1
                              },
                              {
                                "type": "Literal",
                                "value": 2
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "ArrayExpression",
                        "elements": [
                          {
                            "type": "UnaryExpression",
                            "operator": "-",
                            "argument": {
                              "type": "Literal",
                              "value": 2
                            },
                            "prefix": true
                          },
                          {
                            "type": "UnaryExpression",
                            "operator": "-",
                            "argument": {
                              "type": "Literal",
                              "value": 1
                            },
                            "prefix": true
                          },
                          {
                            "type": "Literal",
                            "value": 0
                          },
                          {
                            "type": "Literal",
                            "value": 1
                          },
                          {
                            "type": "Literal",
                            "value": 2
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "Second array including a zero (falsy)"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "same"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "parse"
                        },
                        "arguments": [
                          {
                            "type": "ArrayExpression",
                            "elements": []
                          },
                          {
                            "type": "ArrayExpression",
                            "elements": [
                              {
                                "type": "Literal",
                                "value": null
                              },
                              {
                                "type": "Identifier",
                                "name": "undefined"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "ArrayExpression",
                        "elements": [
                          {
                            "type": "Literal",
                            "value": null
                          },
                          {
                            "type": "Identifier",
                            "name": "undefined"
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "Second array including null and undefined values"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "same"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "parse"
                        },
                        "arguments": [
                          {
                            "type": "ObjectExpression",
                            "properties": [
                              {
                                "type": "Property",
                                "key": {
                                  "type": "Identifier",
                                  "name": "length"
                                },
                                "value": {
                                  "type": "Literal",
                                  "value": 0
                                },
                                "kind": "init"
                              }
                            ]
                          },
                          {
                            "type": "ArrayExpression",
                            "elements": [
                              {
                                "type": "Literal",
                                "value": 1
                              },
                              {
                                "type": "Literal",
                                "value": 2
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "length"
                            },
                            "value": {
                              "type": "Literal",
                              "value": 2
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": 0
                            },
                            "value": {
                              "type": "Literal",
                              "value": 1
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": 1
                            },
                            "value": {
                              "type": "Literal",
                              "value": 2
                            },
                            "kind": "init"
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "First array like"
                      }
                    ]
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "test"
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "jQuery.extend(Object, Object)"
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "params": [],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "expect"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": 28
                      }
                    ]
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "settings"
                      },
                      "init": {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "xnumber1"
                            },
                            "value": {
                              "type": "Literal",
                              "value": 5
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "xnumber2"
                            },
                            "value": {
                              "type": "Literal",
                              "value": 7
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "xstring1"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "peter"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "xstring2"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "pan"
                            },
                            "kind": "init"
                          }
                        ]
                      }
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "options"
                      },
                      "init": {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "xnumber2"
                            },
                            "value": {
                              "type": "Literal",
                              "value": 1
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "xstring2"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "x"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "xxx"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "newstring"
                            },
                            "kind": "init"
                          }
                        ]
                      }
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "optionsCopy"
                      },
                      "init": {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "xnumber2"
                            },
                            "value": {
                              "type": "Literal",
                              "value": 1
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "xstring2"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "x"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "xxx"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "newstring"
                            },
                            "kind": "init"
                          }
                        ]
                      }
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "merged"
                      },
                      "init": {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "xnumber1"
                            },
                            "value": {
                              "type": "Literal",
                              "value": 5
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "xnumber2"
                            },
                            "value": {
                              "type": "Literal",
                              "value": 1
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "xstring1"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "peter"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "xstring2"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "x"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "xxx"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "newstring"
                            },
                            "kind": "init"
                          }
                        ]
                      }
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "deep1"
                      },
                      "init": {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "foo"
                            },
                            "value": {
                              "type": "ObjectExpression",
                              "properties": [
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "bar"
                                  },
                                  "value": {
                                    "type": "Literal",
                                    "value": true
                                  },
                                  "kind": "init"
                                }
                              ]
                            },
                            "kind": "init"
                          }
                        ]
                      }
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "deep1copy"
                      },
                      "init": {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "foo"
                            },
                            "value": {
                              "type": "ObjectExpression",
                              "properties": [
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "bar"
                                  },
                                  "value": {
                                    "type": "Literal",
                                    "value": true
                                  },
                                  "kind": "init"
                                }
                              ]
                            },
                            "kind": "init"
                          }
                        ]
                      }
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "deep2"
                      },
                      "init": {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "foo"
                            },
                            "value": {
                              "type": "ObjectExpression",
                              "properties": [
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "baz"
                                  },
                                  "value": {
                                    "type": "Literal",
                                    "value": true
                                  },
                                  "kind": "init"
                                }
                              ]
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "foo2"
                            },
                            "value": {
                              "type": "Identifier",
                              "name": "document"
                            },
                            "kind": "init"
                          }
                        ]
                      }
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "deep2copy"
                      },
                      "init": {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "foo"
                            },
                            "value": {
                              "type": "ObjectExpression",
                              "properties": [
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "baz"
                                  },
                                  "value": {
                                    "type": "Literal",
                                    "value": true
                                  },
                                  "kind": "init"
                                }
                              ]
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "foo2"
                            },
                            "value": {
                              "type": "Identifier",
                              "name": "document"
                            },
                            "kind": "init"
                          }
                        ]
                      }
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "deepmerged"
                      },
                      "init": {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "foo"
                            },
                            "value": {
                              "type": "ObjectExpression",
                              "properties": [
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "bar"
                                  },
                                  "value": {
                                    "type": "Literal",
                                    "value": true
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "baz"
                                  },
                                  "value": {
                                    "type": "Literal",
                                    "value": true
                                  },
                                  "kind": "init"
                                }
                              ]
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "foo2"
                            },
                            "value": {
                              "type": "Identifier",
                              "name": "document"
                            },
                            "kind": "init"
                          }
                        ]
                      }
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "arr"
                      },
                      "init": {
                        "type": "ArrayExpression",
                        "elements": [
                          {
                            "type": "Literal",
                            "value": 1
                          },
                          {
                            "type": "Literal",
                            "value": 2
                          },
                          {
                            "type": "Literal",
                            "value": 3
                          }
                        ]
                      }
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "nestedarray"
                      },
                      "init": {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "arr"
                            },
                            "value": {
                              "type": "Identifier",
                              "name": "arr"
                            },
                            "kind": "init"
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "jQuery"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "extend"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "settings"
                      },
                      {
                        "type": "Identifier",
                        "name": "options"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "same"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "settings"
                      },
                      {
                        "type": "Identifier",
                        "name": "merged"
                      },
                      {
                        "type": "Literal",
                        "value": "Check if extended: settings must be extended"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "same"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "options"
                      },
                      {
                        "type": "Identifier",
                        "name": "optionsCopy"
                      },
                      {
                        "type": "Literal",
                        "value": "Check if not modified: options must not be modified"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "jQuery"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "extend"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "settings"
                      },
                      {
                        "type": "Literal",
                        "value": null
                      },
                      {
                        "type": "Identifier",
                        "name": "options"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "same"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "settings"
                      },
                      {
                        "type": "Identifier",
                        "name": "merged"
                      },
                      {
                        "type": "Literal",
                        "value": "Check if extended: settings must be extended"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "same"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "options"
                      },
                      {
                        "type": "Identifier",
                        "name": "optionsCopy"
                      },
                      {
                        "type": "Literal",
                        "value": "Check if not modified: options must not be modified"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "jQuery"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "extend"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": true
                      },
                      {
                        "type": "Identifier",
                        "name": "deep1"
                      },
                      {
                        "type": "Identifier",
                        "name": "deep2"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "same"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "deep1"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "foo"
                        }
                      },
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "deepmerged"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "foo"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": "Check if foo: settings must be extended"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "same"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "deep2"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "foo"
                        }
                      },
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "deep2copy"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "foo"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": "Check if not deep2: options must not be modified"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "deep1"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "foo2"
                        }
                      },
                      {
                        "type": "Identifier",
                        "name": "document"
                      },
                      {
                        "type": "Literal",
                        "value": "Make sure that a deep clone was not attempted on the document"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "BinaryExpression",
                        "operator": "!==",
                        "left": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "jQuery"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "extend"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": true
                              },
                              {
                                "type": "ObjectExpression",
                                "properties": []
                              },
                              {
                                "type": "Identifier",
                                "name": "nestedarray"
                              }
                            ]
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "arr"
                          }
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "arr"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": "Deep extend of object must clone child array"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "isArray"
                          }
                        },
                        "arguments": [
                          {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "jQuery"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "extend"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": true
                                },
                                {
                                  "type": "ObjectExpression",
                                  "properties": [
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Identifier",
                                        "name": "arr"
                                      },
                                      "value": {
                                        "type": "ObjectExpression",
                                        "properties": []
                                      },
                                      "kind": "init"
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "name": "nestedarray"
                                }
                              ]
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "arr"
                            }
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "Cloned array heve to be an Array"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "isPlainObject"
                          }
                        },
                        "arguments": [
                          {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "jQuery"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "extend"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": true
                                },
                                {
                                  "type": "ObjectExpression",
                                  "properties": [
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Identifier",
                                        "name": "arr"
                                      },
                                      "value": {
                                        "type": "Identifier",
                                        "name": "arr"
                                      },
                                      "kind": "init"
                                    }
                                  ]
                                },
                                {
                                  "type": "ObjectExpression",
                                  "properties": [
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Identifier",
                                        "name": "arr"
                                      },
                                      "value": {
                                        "type": "ObjectExpression",
                                        "properties": []
                                      },
                                      "kind": "init"
                                    }
                                  ]
                                }
                              ]
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "arr"
                            }
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "Cloned object heve to be an plain object"
                      }
                    ]
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "empty"
                      },
                      "init": {
                        "type": "ObjectExpression",
                        "properties": []
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "optionsWithLength"
                      },
                      "init": {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "foo"
                            },
                            "value": {
                              "type": "ObjectExpression",
                              "properties": [
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "length"
                                  },
                                  "value": {
                                    "type": "UnaryExpression",
                                    "operator": "-",
                                    "argument": {
                                      "type": "Literal",
                                      "value": 1
                                    },
                                    "prefix": true
                                  },
                                  "kind": "init"
                                }
                              ]
                            },
                            "kind": "init"
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "jQuery"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "extend"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": true
                      },
                      {
                        "type": "Identifier",
                        "name": "empty"
                      },
                      {
                        "type": "Identifier",
                        "name": "optionsWithLength"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "same"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "empty"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "foo"
                        }
                      },
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "optionsWithLength"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "foo"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": "The length property must copy correctly"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "empty"
                    },
                    "right": {
                      "type": "ObjectExpression",
                      "properties": []
                    }
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "optionsWithDate"
                      },
                      "init": {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "foo"
                            },
                            "value": {
                              "type": "ObjectExpression",
                              "properties": [
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "date"
                                  },
                                  "value": {
                                    "type": "NewExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "Date"
                                    },
                                    "arguments": []
                                  },
                                  "kind": "init"
                                }
                              ]
                            },
                            "kind": "init"
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "jQuery"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "extend"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": true
                      },
                      {
                        "type": "Identifier",
                        "name": "empty"
                      },
                      {
                        "type": "Identifier",
                        "name": "optionsWithDate"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "same"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "empty"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "foo"
                        }
                      },
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "optionsWithDate"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "foo"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": "Dates copy correctly"
                      }
                    ]
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "myKlass"
                      },
                      "init": {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": []
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "customObject"
                      },
                      "init": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "myKlass"
                        },
                        "arguments": []
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "optionsWithCustomObject"
                      },
                      "init": {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "foo"
                            },
                            "value": {
                              "type": "ObjectExpression",
                              "properties": [
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "date"
                                  },
                                  "value": {
                                    "type": "Identifier",
                                    "name": "customObject"
                                  },
                                  "kind": "init"
                                }
                              ]
                            },
                            "kind": "init"
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "empty"
                    },
                    "right": {
                      "type": "ObjectExpression",
                      "properties": []
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "jQuery"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "extend"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": true
                      },
                      {
                        "type": "Identifier",
                        "name": "empty"
                      },
                      {
                        "type": "Identifier",
                        "name": "optionsWithCustomObject"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "LogicalExpression",
                        "operator": "&&",
                        "left": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "empty"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "foo"
                          }
                        },
                        "right": {
                          "type": "BinaryExpression",
                          "operator": "===",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "empty"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "foo"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "date"
                            }
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "customObject"
                          }
                        }
                      },
                      {
                        "type": "Literal",
                        "value": "Custom objects copy correctly (no methods)"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "myKlass"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "prototype"
                      }
                    },
                    "right": {
                      "type": "ObjectExpression",
                      "properties": [
                        {
                          "type": "Property",
                          "key": {
                            "type": "Identifier",
                            "name": "someMethod"
                          },
                          "value": {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [],
                            "defaults": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": []
                            },
                            "rest": null,
                            "generator": false,
                            "expression": false
                          },
                          "kind": "init"
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "empty"
                    },
                    "right": {
                      "type": "ObjectExpression",
                      "properties": []
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "jQuery"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "extend"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": true
                      },
                      {
                        "type": "Identifier",
                        "name": "empty"
                      },
                      {
                        "type": "Identifier",
                        "name": "optionsWithCustomObject"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "LogicalExpression",
                        "operator": "&&",
                        "left": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "empty"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "foo"
                          }
                        },
                        "right": {
                          "type": "BinaryExpression",
                          "operator": "===",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "empty"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "foo"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "date"
                            }
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "customObject"
                          }
                        }
                      },
                      {
                        "type": "Literal",
                        "value": "Custom objects copy correctly"
                      }
                    ]
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "ret"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "extend"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": true
                          },
                          {
                            "type": "ObjectExpression",
                            "properties": [
                              {
                                "type": "Property",
                                "key": {
                                  "type": "Identifier",
                                  "name": "foo"
                                },
                                "value": {
                                  "type": "Literal",
                                  "value": 4
                                },
                                "kind": "init"
                              }
                            ]
                          },
                          {
                            "type": "ObjectExpression",
                            "properties": [
                              {
                                "type": "Property",
                                "key": {
                                  "type": "Identifier",
                                  "name": "foo"
                                },
                                "value": {
                                  "type": "NewExpression",
                                  "callee": {
                                    "type": "Identifier",
                                    "name": "Number"
                                  },
                                  "arguments": [
                                    {
                                      "type": "Literal",
                                      "value": 5
                                    }
                                  ]
                                },
                                "kind": "init"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "BinaryExpression",
                        "operator": "==",
                        "left": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "ret"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "foo"
                          }
                        },
                        "right": {
                          "type": "Literal",
                          "value": 5
                        }
                      },
                      {
                        "type": "Literal",
                        "value": "Wrapped numbers copy correctly"
                      }
                    ]
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "nullUndef"
                      },
                      "init": null
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "nullUndef"
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "jQuery"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "extend"
                        }
                      },
                      "arguments": [
                        {
                          "type": "ObjectExpression",
                          "properties": []
                        },
                        {
                          "type": "Identifier",
                          "name": "options"
                        },
                        {
                          "type": "ObjectExpression",
                          "properties": [
                            {
                              "type": "Property",
                              "key": {
                                "type": "Identifier",
                                "name": "xnumber2"
                              },
                              "value": {
                                "type": "Literal",
                                "value": null
                              },
                              "kind": "init"
                            }
                          ]
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "BinaryExpression",
                        "operator": "===",
                        "left": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "nullUndef"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "xnumber2"
                          }
                        },
                        "right": {
                          "type": "Literal",
                          "value": null
                        }
                      },
                      {
                        "type": "Literal",
                        "value": "Check to make sure null values are copied"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "nullUndef"
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "jQuery"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "extend"
                        }
                      },
                      "arguments": [
                        {
                          "type": "ObjectExpression",
                          "properties": []
                        },
                        {
                          "type": "Identifier",
                          "name": "options"
                        },
                        {
                          "type": "ObjectExpression",
                          "properties": [
                            {
                              "type": "Property",
                              "key": {
                                "type": "Identifier",
                                "name": "xnumber2"
                              },
                              "value": {
                                "type": "Identifier",
                                "name": "undefined"
                              },
                              "kind": "init"
                            }
                          ]
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "BinaryExpression",
                        "operator": "===",
                        "left": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "nullUndef"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "xnumber2"
                          }
                        },
                        "right": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "options"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "xnumber2"
                          }
                        }
                      },
                      {
                        "type": "Literal",
                        "value": "Check to make sure undefined values are not copied"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "nullUndef"
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "jQuery"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "extend"
                        }
                      },
                      "arguments": [
                        {
                          "type": "ObjectExpression",
                          "properties": []
                        },
                        {
                          "type": "Identifier",
                          "name": "options"
                        },
                        {
                          "type": "ObjectExpression",
                          "properties": [
                            {
                              "type": "Property",
                              "key": {
                                "type": "Identifier",
                                "name": "xnumber0"
                              },
                              "value": {
                                "type": "Literal",
                                "value": null
                              },
                              "kind": "init"
                            }
                          ]
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "BinaryExpression",
                        "operator": "===",
                        "left": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "nullUndef"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "xnumber0"
                          }
                        },
                        "right": {
                          "type": "Literal",
                          "value": null
                        }
                      },
                      {
                        "type": "Literal",
                        "value": "Check to make sure null values are inserted"
                      }
                    ]
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "target"
                      },
                      "init": {
                        "type": "ObjectExpression",
                        "properties": []
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "recursive"
                      },
                      "init": {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "foo"
                            },
                            "value": {
                              "type": "Identifier",
                              "name": "target"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "bar"
                            },
                            "value": {
                              "type": "Literal",
                              "value": 5
                            },
                            "kind": "init"
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "jQuery"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "extend"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": true
                      },
                      {
                        "type": "Identifier",
                        "name": "target"
                      },
                      {
                        "type": "Identifier",
                        "name": "recursive"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "same"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "target"
                      },
                      {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "bar"
                            },
                            "value": {
                              "type": "Literal",
                              "value": 5
                            },
                            "kind": "init"
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "Check to make sure a recursive obj doesn't go never-ending loop by not copying it over"
                      }
                    ]
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "ret"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "extend"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": true
                          },
                          {
                            "type": "ObjectExpression",
                            "properties": [
                              {
                                "type": "Property",
                                "key": {
                                  "type": "Identifier",
                                  "name": "foo"
                                },
                                "value": {
                                  "type": "ArrayExpression",
                                  "elements": []
                                },
                                "kind": "init"
                              }
                            ]
                          },
                          {
                            "type": "ObjectExpression",
                            "properties": [
                              {
                                "type": "Property",
                                "key": {
                                  "type": "Identifier",
                                  "name": "foo"
                                },
                                "value": {
                                  "type": "ArrayExpression",
                                  "elements": [
                                    {
                                      "type": "Literal",
                                      "value": 0
                                    }
                                  ]
                                },
                                "kind": "init"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "ret"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "foo"
                          }
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "length"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": 1
                      },
                      {
                        "type": "Literal",
                        "value": "Check to make sure a value with coersion 'false' copies over when necessary to fix #1907"
                      }
                    ]
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "ret"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "extend"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": true
                          },
                          {
                            "type": "ObjectExpression",
                            "properties": [
                              {
                                "type": "Property",
                                "key": {
                                  "type": "Identifier",
                                  "name": "foo"
                                },
                                "value": {
                                  "type": "Literal",
                                  "value": "1,2,3"
                                },
                                "kind": "init"
                              }
                            ]
                          },
                          {
                            "type": "ObjectExpression",
                            "properties": [
                              {
                                "type": "Property",
                                "key": {
                                  "type": "Identifier",
                                  "name": "foo"
                                },
                                "value": {
                                  "type": "ArrayExpression",
                                  "elements": [
                                    {
                                      "type": "Literal",
                                      "value": 1
                                    },
                                    {
                                      "type": "Literal",
                                      "value": 2
                                    },
                                    {
                                      "type": "Literal",
                                      "value": 3
                                    }
                                  ]
                                },
                                "kind": "init"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "BinaryExpression",
                        "operator": "!=",
                        "left": {
                          "type": "UnaryExpression",
                          "operator": "typeof",
                          "argument": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "ret"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "foo"
                            }
                          },
                          "prefix": true
                        },
                        "right": {
                          "type": "Literal",
                          "value": "string"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": "Check to make sure values equal with coersion (but not actually equal) overwrite correctly"
                      }
                    ]
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "ret"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "extend"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": true
                          },
                          {
                            "type": "ObjectExpression",
                            "properties": [
                              {
                                "type": "Property",
                                "key": {
                                  "type": "Identifier",
                                  "name": "foo"
                                },
                                "value": {
                                  "type": "Literal",
                                  "value": "bar"
                                },
                                "kind": "init"
                              }
                            ]
                          },
                          {
                            "type": "ObjectExpression",
                            "properties": [
                              {
                                "type": "Property",
                                "key": {
                                  "type": "Identifier",
                                  "name": "foo"
                                },
                                "value": {
                                  "type": "Literal",
                                  "value": null
                                },
                                "kind": "init"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "BinaryExpression",
                        "operator": "!==",
                        "left": {
                          "type": "UnaryExpression",
                          "operator": "typeof",
                          "argument": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "ret"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "foo"
                            }
                          },
                          "prefix": true
                        },
                        "right": {
                          "type": "Literal",
                          "value": "undefined"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": "Make sure a null value doesn't crash with deep extend, for #1908"
                      }
                    ]
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "obj"
                      },
                      "init": {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "foo"
                            },
                            "value": {
                              "type": "Literal",
                              "value": null
                            },
                            "kind": "init"
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "jQuery"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "extend"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": true
                      },
                      {
                        "type": "Identifier",
                        "name": "obj"
                      },
                      {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "foo"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "notnull"
                            },
                            "kind": "init"
                          }
                        ]
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "obj"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "foo"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": "notnull"
                      },
                      {
                        "type": "Literal",
                        "value": "Make sure a null value can be overwritten"
                      }
                    ]
                  }
                },
                {
                  "type": "FunctionDeclaration",
                  "id": {
                    "type": "Identifier",
                    "name": "func"
                  },
                  "params": [],
                  "defaults": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": []
                  },
                  "rest": null,
                  "generator": false,
                  "expression": false
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "jQuery"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "extend"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "func"
                      },
                      {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "key"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "value"
                            },
                            "kind": "init"
                          }
                        ]
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "func"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "key"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": "value"
                      },
                      {
                        "type": "Literal",
                        "value": "Verify a function can be extended"
                      }
                    ]
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "defaults"
                      },
                      "init": {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "xnumber1"
                            },
                            "value": {
                              "type": "Literal",
                              "value": 5
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "xnumber2"
                            },
                            "value": {
                              "type": "Literal",
                              "value": 7
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "xstring1"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "peter"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "xstring2"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "pan"
                            },
                            "kind": "init"
                          }
                        ]
                      }
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "defaultsCopy"
                      },
                      "init": {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "xnumber1"
                            },
                            "value": {
                              "type": "Literal",
                              "value": 5
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "xnumber2"
                            },
                            "value": {
                              "type": "Literal",
                              "value": 7
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "xstring1"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "peter"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "xstring2"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "pan"
                            },
                            "kind": "init"
                          }
                        ]
                      }
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "options1"
                      },
                      "init": {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "xnumber2"
                            },
                            "value": {
                              "type": "Literal",
                              "value": 1
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "xstring2"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "x"
                            },
                            "kind": "init"
                          }
                        ]
                      }
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "options1Copy"
                      },
                      "init": {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "xnumber2"
                            },
                            "value": {
                              "type": "Literal",
                              "value": 1
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "xstring2"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "x"
                            },
                            "kind": "init"
                          }
                        ]
                      }
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "options2"
                      },
                      "init": {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "xstring2"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "xx"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "xxx"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "newstringx"
                            },
                            "kind": "init"
                          }
                        ]
                      }
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "options2Copy"
                      },
                      "init": {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "xstring2"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "xx"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "xxx"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "newstringx"
                            },
                            "kind": "init"
                          }
                        ]
                      }
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "merged2"
                      },
                      "init": {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "xnumber1"
                            },
                            "value": {
                              "type": "Literal",
                              "value": 5
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "xnumber2"
                            },
                            "value": {
                              "type": "Literal",
                              "value": 1
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "xstring1"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "peter"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "xstring2"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "xx"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "xxx"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "newstringx"
                            },
                            "kind": "init"
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "settings"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "extend"
                          }
                        },
                        "arguments": [
                          {
                            "type": "ObjectExpression",
                            "properties": []
                          },
                          {
                            "type": "Identifier",
                            "name": "defaults"
                          },
                          {
                            "type": "Identifier",
                            "name": "options1"
                          },
                          {
                            "type": "Identifier",
                            "name": "options2"
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "same"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "settings"
                      },
                      {
                        "type": "Identifier",
                        "name": "merged2"
                      },
                      {
                        "type": "Literal",
                        "value": "Check if extended: settings must be extended"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "same"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "defaults"
                      },
                      {
                        "type": "Identifier",
                        "name": "defaultsCopy"
                      },
                      {
                        "type": "Literal",
                        "value": "Check if not modified: options1 must not be modified"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "same"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "options1"
                      },
                      {
                        "type": "Identifier",
                        "name": "options1Copy"
                      },
                      {
                        "type": "Literal",
                        "value": "Check if not modified: options1 must not be modified"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "same"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "options2"
                      },
                      {
                        "type": "Identifier",
                        "name": "options2Copy"
                      },
                      {
                        "type": "Literal",
                        "value": "Check if not modified: options2 must not be modified"
                      }
                    ]
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "test"
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "jQuery.each(Object,Function)"
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "params": [],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "expect"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": 13
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "jQuery"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "each"
                      }
                    },
                    "arguments": [
                      {
                        "type": "ArrayExpression",
                        "elements": [
                          {
                            "type": "Literal",
                            "value": 0
                          },
                          {
                            "type": "Literal",
                            "value": 1
                          },
                          {
                            "type": "Literal",
                            "value": 2
                          }
                        ]
                      },
                      {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [
                          {
                            "type": "Identifier",
                            "name": "i"
                          },
                          {
                            "type": "Identifier",
                            "name": "n"
                          }
                        ],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "equals"
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "i"
                                  },
                                  {
                                    "type": "Identifier",
                                    "name": "n"
                                  },
                                  {
                                    "type": "Literal",
                                    "value": "Check array iteration"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "jQuery"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "each"
                      }
                    },
                    "arguments": [
                      {
                        "type": "ArrayExpression",
                        "elements": [
                          {
                            "type": "Literal",
                            "value": 5
                          },
                          {
                            "type": "Literal",
                            "value": 6
                          },
                          {
                            "type": "Literal",
                            "value": 7
                          }
                        ]
                      },
                      {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [
                          {
                            "type": "Identifier",
                            "name": "i"
                          },
                          {
                            "type": "Identifier",
                            "name": "n"
                          }
                        ],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "equals"
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "i"
                                  },
                                  {
                                    "type": "BinaryExpression",
                                    "operator": "-",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "n"
                                    },
                                    "right": {
                                      "type": "Literal",
                                      "value": 5
                                    }
                                  },
                                  {
                                    "type": "Literal",
                                    "value": "Check array iteration"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "jQuery"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "each"
                      }
                    },
                    "arguments": [
                      {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "name"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "name"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "lang"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "lang"
                            },
                            "kind": "init"
                          }
                        ]
                      },
                      {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [
                          {
                            "type": "Identifier",
                            "name": "i"
                          },
                          {
                            "type": "Identifier",
                            "name": "n"
                          }
                        ],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "equals"
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "i"
                                  },
                                  {
                                    "type": "Identifier",
                                    "name": "n"
                                  },
                                  {
                                    "type": "Literal",
                                    "value": "Check object iteration"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      }
                    ]
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "total"
                      },
                      "init": {
                        "type": "Literal",
                        "value": 0
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "jQuery"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "each"
                      }
                    },
                    "arguments": [
                      {
                        "type": "ArrayExpression",
                        "elements": [
                          {
                            "type": "Literal",
                            "value": 1
                          },
                          {
                            "type": "Literal",
                            "value": 2
                          },
                          {
                            "type": "Literal",
                            "value": 3
                          }
                        ]
                      },
                      {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [
                          {
                            "type": "Identifier",
                            "name": "i"
                          },
                          {
                            "type": "Identifier",
                            "name": "v"
                          }
                        ],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "+=",
                                "left": {
                                  "type": "Identifier",
                                  "name": "total"
                                },
                                "right": {
                                  "type": "Identifier",
                                  "name": "v"
                                }
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "total"
                      },
                      {
                        "type": "Literal",
                        "value": 6
                      },
                      {
                        "type": "Literal",
                        "value": "Looping over an array"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "total"
                    },
                    "right": {
                      "type": "Literal",
                      "value": 0
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "jQuery"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "each"
                      }
                    },
                    "arguments": [
                      {
                        "type": "ArrayExpression",
                        "elements": [
                          {
                            "type": "Literal",
                            "value": 1
                          },
                          {
                            "type": "Literal",
                            "value": 2
                          },
                          {
                            "type": "Literal",
                            "value": 3
                          }
                        ]
                      },
                      {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [
                          {
                            "type": "Identifier",
                            "name": "i"
                          },
                          {
                            "type": "Identifier",
                            "name": "v"
                          }
                        ],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "+=",
                                "left": {
                                  "type": "Identifier",
                                  "name": "total"
                                },
                                "right": {
                                  "type": "Identifier",
                                  "name": "v"
                                }
                              }
                            },
                            {
                              "type": "IfStatement",
                              "test": {
                                "type": "BinaryExpression",
                                "operator": "==",
                                "left": {
                                  "type": "Identifier",
                                  "name": "i"
                                },
                                "right": {
                                  "type": "Literal",
                                  "value": 1
                                }
                              },
                              "consequent": {
                                "type": "ReturnStatement",
                                "argument": {
                                  "type": "Literal",
                                  "value": false
                                }
                              },
                              "alternate": null
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "total"
                      },
                      {
                        "type": "Literal",
                        "value": 3
                      },
                      {
                        "type": "Literal",
                        "value": "Looping over an array, with break"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "total"
                    },
                    "right": {
                      "type": "Literal",
                      "value": 0
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "jQuery"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "each"
                      }
                    },
                    "arguments": [
                      {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": "a"
                            },
                            "value": {
                              "type": "Literal",
                              "value": 1
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": "b"
                            },
                            "value": {
                              "type": "Literal",
                              "value": 2
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": "c"
                            },
                            "value": {
                              "type": "Literal",
                              "value": 3
                            },
                            "kind": "init"
                          }
                        ]
                      },
                      {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [
                          {
                            "type": "Identifier",
                            "name": "i"
                          },
                          {
                            "type": "Identifier",
                            "name": "v"
                          }
                        ],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "+=",
                                "left": {
                                  "type": "Identifier",
                                  "name": "total"
                                },
                                "right": {
                                  "type": "Identifier",
                                  "name": "v"
                                }
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "total"
                      },
                      {
                        "type": "Literal",
                        "value": 6
                      },
                      {
                        "type": "Literal",
                        "value": "Looping over an object"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "total"
                    },
                    "right": {
                      "type": "Literal",
                      "value": 0
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "jQuery"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "each"
                      }
                    },
                    "arguments": [
                      {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": "a"
                            },
                            "value": {
                              "type": "Literal",
                              "value": 3
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": "b"
                            },
                            "value": {
                              "type": "Literal",
                              "value": 3
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": "c"
                            },
                            "value": {
                              "type": "Literal",
                              "value": 3
                            },
                            "kind": "init"
                          }
                        ]
                      },
                      {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [
                          {
                            "type": "Identifier",
                            "name": "i"
                          },
                          {
                            "type": "Identifier",
                            "name": "v"
                          }
                        ],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "+=",
                                "left": {
                                  "type": "Identifier",
                                  "name": "total"
                                },
                                "right": {
                                  "type": "Identifier",
                                  "name": "v"
                                }
                              }
                            },
                            {
                              "type": "ReturnStatement",
                              "argument": {
                                "type": "Literal",
                                "value": false
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "total"
                      },
                      {
                        "type": "Literal",
                        "value": 3
                      },
                      {
                        "type": "Literal",
                        "value": "Looping over an object, with break"
                      }
                    ]
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "f"
                      },
                      "init": {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": []
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "f"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "foo"
                      }
                    },
                    "right": {
                      "type": "Literal",
                      "value": "bar"
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "jQuery"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "each"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "f"
                      },
                      {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [
                          {
                            "type": "Identifier",
                            "name": "i"
                          }
                        ],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": true,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "f"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "i"
                                  }
                                },
                                "right": {
                                  "type": "Literal",
                                  "value": "baz"
                                }
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": "baz"
                      },
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "f"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "foo"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": "Loop over a function"
                      }
                    ]
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "test"
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "jQuery.makeArray"
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "params": [],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "expect"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": 17
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": true,
                              "object": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "jQuery"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "makeArray"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "jQuery"
                                    },
                                    "arguments": [
                                      {
                                        "type": "Literal",
                                        "value": "html>*"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "property": {
                                "type": "Literal",
                                "value": 0
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "nodeName"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "toUpperCase"
                          }
                        },
                        "arguments": []
                      },
                      {
                        "type": "Literal",
                        "value": "HEAD"
                      },
                      {
                        "type": "Literal",
                        "value": "Pass makeArray a jQuery object"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "MemberExpression",
                          "computed": true,
                          "object": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "jQuery"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "makeArray"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "document"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "getElementsByName"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "Literal",
                                        "value": "PWD"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "slice"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": 0
                              },
                              {
                                "type": "Literal",
                                "value": 1
                              }
                            ]
                          },
                          "property": {
                            "type": "Literal",
                            "value": 0
                          }
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "name"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": "PWD"
                      },
                      {
                        "type": "Literal",
                        "value": "Pass makeArray a nodelist"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "FunctionExpression",
                              "id": null,
                              "params": [],
                              "defaults": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ReturnStatement",
                                    "argument": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "jQuery"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "makeArray"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "Identifier",
                                          "name": "arguments"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              },
                              "rest": null,
                              "generator": false,
                              "expression": false
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": 1
                              },
                              {
                                "type": "Literal",
                                "value": 2
                              }
                            ]
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "join"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": ""
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "12"
                      },
                      {
                        "type": "Literal",
                        "value": "Pass makeArray an arguments array"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "jQuery"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "makeArray"
                              }
                            },
                            "arguments": [
                              {
                                "type": "ArrayExpression",
                                "elements": [
                                  {
                                    "type": "Literal",
                                    "value": 1
                                  },
                                  {
                                    "type": "Literal",
                                    "value": 2
                                  },
                                  {
                                    "type": "Literal",
                                    "value": 3
                                  }
                                ]
                              }
                            ]
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "join"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": ""
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "123"
                      },
                      {
                        "type": "Literal",
                        "value": "Pass makeArray a real array"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "jQuery"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "makeArray"
                            }
                          },
                          "arguments": []
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "length"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": 0
                      },
                      {
                        "type": "Literal",
                        "value": "Pass nothing to makeArray and expect an empty array"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "jQuery"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "makeArray"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 0
                            }
                          ]
                        },
                        "property": {
                          "type": "Literal",
                          "value": 0
                        }
                      },
                      {
                        "type": "Literal",
                        "value": 0
                      },
                      {
                        "type": "Literal",
                        "value": "Pass makeArray a number"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "jQuery"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "makeArray"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "foo"
                            }
                          ]
                        },
                        "property": {
                          "type": "Literal",
                          "value": 0
                        }
                      },
                      {
                        "type": "Literal",
                        "value": "foo"
                      },
                      {
                        "type": "Literal",
                        "value": "Pass makeArray a string"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "MemberExpression",
                          "computed": true,
                          "object": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "jQuery"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "makeArray"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": true
                              }
                            ]
                          },
                          "property": {
                            "type": "Literal",
                            "value": 0
                          }
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "constructor"
                        }
                      },
                      {
                        "type": "Identifier",
                        "name": "Boolean"
                      },
                      {
                        "type": "Literal",
                        "value": "Pass makeArray a boolean"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": true,
                              "object": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "jQuery"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "makeArray"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "document"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "createElement"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "Literal",
                                        "value": "div"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "property": {
                                "type": "Literal",
                                "value": 0
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "nodeName"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "toUpperCase"
                          }
                        },
                        "arguments": []
                      },
                      {
                        "type": "Literal",
                        "value": "DIV"
                      },
                      {
                        "type": "Literal",
                        "value": "Pass makeArray a single node"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "jQuery"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "makeArray"
                              }
                            },
                            "arguments": [
                              {
                                "type": "ObjectExpression",
                                "properties": [
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Identifier",
                                      "name": "length"
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": 2
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": 0
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": "a"
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": 1
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": "b"
                                    },
                                    "kind": "init"
                                  }
                                ]
                              }
                            ]
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "join"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": ""
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "ab"
                      },
                      {
                        "type": "Literal",
                        "value": "Pass makeArray an array like map (with length)"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "UnaryExpression",
                        "operator": "!",
                        "argument": {
                          "type": "UnaryExpression",
                          "operator": "!",
                          "argument": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": true,
                              "object": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "jQuery"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "makeArray"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "document"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "documentElement"
                                          }
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "childNodes"
                                        }
                                      }
                                    ]
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "slice"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Literal",
                                    "value": 0
                                  },
                                  {
                                    "type": "Literal",
                                    "value": 1
                                  }
                                ]
                              },
                              "property": {
                                "type": "Literal",
                                "value": 0
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "nodeName"
                            }
                          },
                          "prefix": true
                        },
                        "prefix": true
                      },
                      {
                        "type": "Literal",
                        "value": "Pass makeArray a childNodes array"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": true,
                          "object": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "jQuery"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "makeArray"
                              }
                            },
                            "arguments": [
                              {
                                "type": "FunctionExpression",
                                "id": null,
                                "params": [],
                                "defaults": [],
                                "body": {
                                  "type": "BlockStatement",
                                  "body": [
                                    {
                                      "type": "ReturnStatement",
                                      "argument": {
                                        "type": "Literal",
                                        "value": 1
                                      }
                                    }
                                  ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                              }
                            ]
                          },
                          "property": {
                            "type": "Literal",
                            "value": 0
                          }
                        },
                        "arguments": []
                      },
                      {
                        "type": "Literal",
                        "value": 1
                      },
                      {
                        "type": "Literal",
                        "value": "Pass makeArray a function"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "jQuery"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "makeArray"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "window"
                            }
                          ]
                        },
                        "property": {
                          "type": "Literal",
                          "value": 0
                        }
                      },
                      {
                        "type": "Identifier",
                        "name": "window"
                      },
                      {
                        "type": "Literal",
                        "value": "Pass makeArray the window"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "MemberExpression",
                          "computed": true,
                          "object": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "jQuery"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "makeArray"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": {}
                              }
                            ]
                          },
                          "property": {
                            "type": "Literal",
                            "value": 0
                          }
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "constructor"
                        }
                      },
                      {
                        "type": "Identifier",
                        "name": "RegExp"
                      },
                      {
                        "type": "Literal",
                        "value": "Pass makeArray a regex"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "BinaryExpression",
                        "operator": ">=",
                        "left": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "jQuery"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "makeArray"
                              }
                            },
                            "arguments": [
                              {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "document"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "getElementById"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Literal",
                                    "value": "form"
                                  }
                                ]
                              }
                            ]
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "length"
                          }
                        },
                        "right": {
                          "type": "Literal",
                          "value": 13
                        }
                      },
                      {
                        "type": "Literal",
                        "value": "Pass makeArray a form (treat as elements)"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "same"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "makeArray"
                          }
                        },
                        "arguments": [
                          {
                            "type": "ObjectExpression",
                            "properties": [
                              {
                                "type": "Property",
                                "key": {
                                  "type": "Literal",
                                  "value": "length"
                                },
                                "value": {
                                  "type": "Literal",
                                  "value": "0"
                                },
                                "kind": "init"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "ArrayExpression",
                        "elements": []
                      },
                      {
                        "type": "Literal",
                        "value": "Make sure object is coerced properly."
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "same"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "makeArray"
                          }
                        },
                        "arguments": [
                          {
                            "type": "ObjectExpression",
                            "properties": [
                              {
                                "type": "Property",
                                "key": {
                                  "type": "Literal",
                                  "value": "length"
                                },
                                "value": {
                                  "type": "Literal",
                                  "value": "5"
                                },
                                "kind": "init"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "ArrayExpression",
                        "elements": []
                      },
                      {
                        "type": "Literal",
                        "value": "Make sure object is coerced properly."
                      }
                    ]
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "test"
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "jQuery.isEmptyObject"
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "params": [],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "expect"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": 2
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": true
                      },
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "isEmptyObject"
                          }
                        },
                        "arguments": [
                          {
                            "type": "ObjectExpression",
                            "properties": []
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "isEmptyObject on empty object literal"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": false
                      },
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "isEmptyObject"
                          }
                        },
                        "arguments": [
                          {
                            "type": "ObjectExpression",
                            "properties": [
                              {
                                "type": "Property",
                                "key": {
                                  "type": "Identifier",
                                  "name": "a"
                                },
                                "value": {
                                  "type": "Literal",
                                  "value": 1
                                },
                                "kind": "init"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "isEmptyObject on non-empty object literal"
                      }
                    ]
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "test"
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "jQuery.proxy"
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "params": [],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "expect"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": 4
                      }
                    ]
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "test"
                      },
                      "init": {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "equals"
                                },
                                "arguments": [
                                  {
                                    "type": "ThisExpression"
                                  },
                                  {
                                    "type": "Identifier",
                                    "name": "thisObject"
                                  },
                                  {
                                    "type": "Literal",
                                    "value": "Make sure that scope is set properly."
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "thisObject"
                      },
                      "init": {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "foo"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "bar"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "method"
                            },
                            "value": {
                              "type": "Identifier",
                              "name": "test"
                            },
                            "kind": "init"
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "test"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "call"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "thisObject"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "jQuery"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "proxy"
                        }
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "test"
                        },
                        {
                          "type": "Identifier",
                          "name": "thisObject"
                        }
                      ]
                    },
                    "arguments": []
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "proxy"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": null
                          },
                          {
                            "type": "Identifier",
                            "name": "thisObject"
                          }
                        ]
                      },
                      {
                        "type": "Identifier",
                        "name": "undefined"
                      },
                      {
                        "type": "Literal",
                        "value": "Make sure no function was returned."
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "jQuery"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "proxy"
                        }
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "thisObject"
                        },
                        {
                          "type": "Literal",
                          "value": "method"
                        }
                      ]
                    },
                    "arguments": []
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "test"
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "jQuery.parseJSON"
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "params": [],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "expect"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": 8
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "parseJSON"
                          }
                        },
                        "arguments": []
                      },
                      {
                        "type": "Literal",
                        "value": null
                      },
                      {
                        "type": "Literal",
                        "value": "Nothing in, null out."
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "parseJSON"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": null
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": null
                      },
                      {
                        "type": "Literal",
                        "value": "Nothing in, null out."
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equals"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "parseJSON"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": ""
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": null
                      },
                      {
                        "type": "Literal",
                        "value": "Nothing in, null out."
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "same"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "parseJSON"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "{}"
                          }
                        ]
                      },
                      {
                        "type": "ObjectExpression",
                        "properties": []
                      },
                      {
                        "type": "Literal",
                        "value": "Plain object parsing."
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "same"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "parseJSON"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "{\"test\":1}"
                          }
                        ]
                      },
                      {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": "test"
                            },
                            "value": {
                              "type": "Literal",
                              "value": 1
                            },
                            "kind": "init"
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "Plain object parsing."
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "same"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "parseJSON"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "\n{\"test\":1}"
                          }
                        ]
                      },
                      {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": "test"
                            },
                            "value": {
                              "type": "Literal",
                              "value": 1
                            },
                            "kind": "init"
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "Make sure leading whitespaces are handled."
                      }
                    ]
                  }
                },
                {
                  "type": "TryStatement",
                  "block": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "jQuery"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "parseJSON"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "{a:1}"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "ok"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": false
                            },
                            {
                              "type": "Literal",
                              "value": "Test malformed JSON string."
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "guardedHandlers": [],
                  "handlers": [
                    {
                      "type": "CatchClause",
                      "param": {
                        "type": "Identifier",
                        "name": "e"
                      },
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "ok"
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": true
                                },
                                {
                                  "type": "Literal",
                                  "value": "Test malformed JSON string."
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ],
                  "finalizer": null
                },
                {
                  "type": "TryStatement",
                  "block": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "jQuery"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "parseJSON"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "{'a':1}"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "ok"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": false
                            },
                            {
                              "type": "Literal",
                              "value": "Test malformed JSON string."
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "guardedHandlers": [],
                  "handlers": [
                    {
                      "type": "CatchClause",
                      "param": {
                        "type": "Identifier",
                        "name": "e"
                      },
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "ok"
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": true
                                },
                                {
                                  "type": "Literal",
                                  "value": "Test malformed JSON string."
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ],
                  "finalizer": null
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "test"
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "jQuery._Deferred()"
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "params": [],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "expect"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": 10
                      }
                    ]
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "deferred"
                      },
                      "init": null
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "object"
                      },
                      "init": null
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "test"
                      },
                      "init": null
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "deferred"
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "jQuery"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "_Deferred"
                        }
                      },
                      "arguments": []
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "test"
                    },
                    "right": {
                      "type": "Literal",
                      "value": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "deferred"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "done"
                      }
                    },
                    "arguments": [
                      {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [
                          {
                            "type": "Identifier",
                            "name": "value"
                          }
                        ],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "equals"
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "value"
                                  },
                                  {
                                    "type": "Literal",
                                    "value": "value"
                                  },
                                  {
                                    "type": "Literal",
                                    "value": "Test pre-resolve callback"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "Identifier",
                                  "name": "test"
                                },
                                "right": {
                                  "type": "Literal",
                                  "value": true
                                }
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "deferred"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "resolve"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": "value"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "test"
                      },
                      {
                        "type": "Literal",
                        "value": "Test pre-resolve callbacks called right away"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "test"
                    },
                    "right": {
                      "type": "Literal",
                      "value": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "deferred"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "done"
                      }
                    },
                    "arguments": [
                      {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [
                          {
                            "type": "Identifier",
                            "name": "value"
                          }
                        ],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "equals"
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "value"
                                  },
                                  {
                                    "type": "Literal",
                                    "value": "value"
                                  },
                                  {
                                    "type": "Literal",
                                    "value": "Test post-resolve callback"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "Identifier",
                                  "name": "test"
                                },
                                "right": {
                                  "type": "Literal",
                                  "value": true
                                }
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "test"
                      },
                      {
                        "type": "Literal",
                        "value": "Test post-resolve callbacks called right away"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "deferred"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "cancel"
                      }
                    },
                    "arguments": []
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "test"
                    },
                    "right": {
                      "type": "Literal",
                      "value": true
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "deferred"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "done"
                      }
                    },
                    "arguments": [
                      {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "ok"
                                },
                                "arguments": [
                                  {
                                    "type": "Literal",
                                    "value": false
                                  },
                                  {
                                    "type": "Literal",
                                    "value": "Cancel was ignored"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "Identifier",
                                  "name": "test"
                                },
                                "right": {
                                  "type": "Literal",
                                  "value": false
                                }
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "test"
                      },
                      {
                        "type": "Literal",
                        "value": "Test cancel"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "deferred"
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "jQuery"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "_Deferred"
                            }
                          },
                          "arguments": []
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "resolve"
                        }
                      },
                      "arguments": []
                    }
                  }
                },
                {
                  "type": "TryStatement",
                  "block": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "deferred"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "done"
                            }
                          },
                          "arguments": [
                            {
                              "type": "FunctionExpression",
                              "id": null,
                              "params": [],
                              "defaults": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ThrowStatement",
                                    "argument": {
                                      "type": "Literal",
                                      "value": "Error"
                                    }
                                  }
                                ]
                              },
                              "rest": null,
                              "generator": false,
                              "expression": false
                            },
                            {
                              "type": "FunctionExpression",
                              "id": null,
                              "params": [],
                              "defaults": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "ok"
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": true
                                        },
                                        {
                                          "type": "Literal",
                                          "value": "Test deferred do not cancel on exception"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              },
                              "rest": null,
                              "generator": false,
                              "expression": false
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "guardedHandlers": [],
                  "handlers": [
                    {
                      "type": "CatchClause",
                      "param": {
                        "type": "Identifier",
                        "name": "e"
                      },
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "strictEqual"
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "e"
                                },
                                {
                                  "type": "Literal",
                                  "value": "Error"
                                },
                                {
                                  "type": "Literal",
                                  "value": "Test deferred propagates exceptions"
                                }
                              ]
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "deferred"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "done"
                                }
                              },
                              "arguments": []
                            }
                          }
                        ]
                      }
                    }
                  ],
                  "finalizer": null
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "test"
                    },
                    "right": {
                      "type": "Literal",
                      "value": ""
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "deferred"
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "jQuery"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "_Deferred"
                                }
                              },
                              "arguments": []
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "done"
                            }
                          },
                          "arguments": [
                            {
                              "type": "FunctionExpression",
                              "id": null,
                              "params": [],
                              "defaults": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "+=",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "test"
                                      },
                                      "right": {
                                        "type": "Literal",
                                        "value": "A"
                                      }
                                    }
                                  }
                                ]
                              },
                              "rest": null,
                              "generator": false,
                              "expression": false
                            },
                            {
                              "type": "FunctionExpression",
                              "id": null,
                              "params": [],
                              "defaults": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "+=",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "test"
                                      },
                                      "right": {
                                        "type": "Literal",
                                        "value": "B"
                                      }
                                    }
                                  }
                                ]
                              },
                              "rest": null,
                              "generator": false,
                              "expression": false
                            }
                          ]
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "resolve"
                        }
                      },
                      "arguments": []
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "strictEqual"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "test"
                      },
                      {
                        "type": "Literal",
                        "value": "AB"
                      },
                      {
                        "type": "Literal",
                        "value": "Test multiple done parameters"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "test"
                    },
                    "right": {
                      "type": "Literal",
                      "value": ""
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "deferred"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "done"
                      }
                    },
                    "arguments": [
                      {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "deferred"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "done"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "FunctionExpression",
                                    "id": null,
                                    "params": [],
                                    "defaults": [],
                                    "body": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "+=",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "test"
                                            },
                                            "right": {
                                              "type": "Literal",
                                              "value": "C"
                                            }
                                          }
                                        }
                                      ]
                                    },
                                    "rest": null,
                                    "generator": false,
                                    "expression": false
                                  }
                                ]
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "+=",
                                "left": {
                                  "type": "Identifier",
                                  "name": "test"
                                },
                                "right": {
                                  "type": "Literal",
                                  "value": "A"
                                }
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      },
                      {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "+=",
                                "left": {
                                  "type": "Identifier",
                                  "name": "test"
                                },
                                "right": {
                                  "type": "Literal",
                                  "value": "B"
                                }
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "strictEqual"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "test"
                      },
                      {
                        "type": "Literal",
                        "value": "ABC"
                      },
                      {
                        "type": "Literal",
                        "value": "Test done callbacks order"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "deferred"
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "jQuery"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "_Deferred"
                        }
                      },
                      "arguments": []
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "deferred"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "resolveWith"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          {
                            "type": "ArrayExpression",
                            "elements": [
                              {
                                "type": "Identifier",
                                "name": "document"
                              }
                            ]
                          }
                        ]
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "done"
                      }
                    },
                    "arguments": [
                      {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [
                          {
                            "type": "Identifier",
                            "name": "doc"
                          }
                        ],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "ok"
                                },
                                "arguments": [
                                  {
                                    "type": "LogicalExpression",
                                    "operator": "&&",
                                    "left": {
                                      "type": "LogicalExpression",
                                      "operator": "&&",
                                      "left": {
                                        "type": "BinaryExpression",
                                        "operator": "===",
                                        "left": {
                                          "type": "ThisExpression"
                                        },
                                        "right": {
                                          "type": "Identifier",
                                          "name": "jQuery"
                                        }
                                      },
                                      "right": {
                                        "type": "BinaryExpression",
                                        "operator": "===",
                                        "left": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "arguments"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "length"
                                          }
                                        },
                                        "right": {
                                          "type": "Literal",
                                          "value": 1
                                        }
                                      }
                                    },
                                    "right": {
                                      "type": "BinaryExpression",
                                      "operator": "===",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "doc"
                                      },
                                      "right": {
                                        "type": "Identifier",
                                        "name": "document"
                                      }
                                    }
                                  },
                                  {
                                    "type": "Literal",
                                    "value": "Test fire context & args"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      }
                    ]
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "test"
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "jQuery.Deferred()"
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "params": [],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "expect"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": 10
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "Deferred"
                          }
                        },
                        "arguments": [
                          {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [
                              {
                                "type": "Identifier",
                                "name": "defer"
                              }
                            ],
                            "defaults": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "strictEqual"
                                    },
                                    "arguments": [
                                      {
                                        "type": "ThisExpression"
                                      },
                                      {
                                        "type": "Identifier",
                                        "name": "defer"
                                      },
                                      {
                                        "type": "Literal",
                                        "value": "Defer passed as this & first argument"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "ThisExpression"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "resolve"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "Literal",
                                        "value": "done"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "rest": null,
                            "generator": false,
                            "expression": false
                          }
                        ]
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "then"
                      }
                    },
                    "arguments": [
                      {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [
                          {
                            "type": "Identifier",
                            "name": "value"
                          }
                        ],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "strictEqual"
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "value"
                                  },
                                  {
                                    "type": "Literal",
                                    "value": "done"
                                  },
                                  {
                                    "type": "Literal",
                                    "value": "Passed function executed"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "jQuery"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "Deferred"
                              }
                            },
                            "arguments": []
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "resolve"
                          }
                        },
                        "arguments": []
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "then"
                      }
                    },
                    "arguments": [
                      {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "ok"
                                },
                                "arguments": [
                                  {
                                    "type": "Literal",
                                    "value": true
                                  },
                                  {
                                    "type": "Literal",
                                    "value": "Success on resolve"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      },
                      {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "ok"
                                },
                                "arguments": [
                                  {
                                    "type": "Literal",
                                    "value": false
                                  },
                                  {
                                    "type": "Literal",
                                    "value": "Error on resolve"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "jQuery"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "Deferred"
                              }
                            },
                            "arguments": []
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "reject"
                          }
                        },
                        "arguments": []
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "then"
                      }
                    },
                    "arguments": [
                      {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "ok"
                                },
                                "arguments": [
                                  {
                                    "type": "Literal",
                                    "value": false
                                  },
                                  {
                                    "type": "Literal",
                                    "value": "Success on reject"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      },
                      {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "ok"
                                },
                                "arguments": [
                                  {
                                    "type": "Literal",
                                    "value": true
                                  },
                                  {
                                    "type": "Literal",
                                    "value": "Error on reject"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "Deferred"
                          }
                        },
                        "arguments": [
                          {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [
                              {
                                "type": "Identifier",
                                "name": "defer"
                              }
                            ],
                            "defaults": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "strictEqual"
                                    },
                                    "arguments": [
                                      {
                                        "type": "ThisExpression"
                                      },
                                      {
                                        "type": "Identifier",
                                        "name": "defer"
                                      },
                                      {
                                        "type": "Literal",
                                        "value": "Defer passed as this & first argument (new)"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "ThisExpression"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "resolve"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "Literal",
                                        "value": "done"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "rest": null,
                            "generator": false,
                            "expression": false
                          }
                        ]
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "then"
                      }
                    },
                    "arguments": [
                      {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [
                          {
                            "type": "Identifier",
                            "name": "value"
                          }
                        ],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "strictEqual"
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "value"
                                  },
                                  {
                                    "type": "Literal",
                                    "value": "done"
                                  },
                                  {
                                    "type": "Literal",
                                    "value": "Passed function executed (new)"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "NewExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "jQuery"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "Deferred"
                              }
                            },
                            "arguments": []
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "resolve"
                          }
                        },
                        "arguments": []
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "then"
                      }
                    },
                    "arguments": [
                      {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "ok"
                                },
                                "arguments": [
                                  {
                                    "type": "Literal",
                                    "value": true
                                  },
                                  {
                                    "type": "Literal",
                                    "value": "Success on resolve (new)"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      },
                      {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "ok"
                                },
                                "arguments": [
                                  {
                                    "type": "Literal",
                                    "value": false
                                  },
                                  {
                                    "type": "Literal",
                                    "value": "Error on resolve (new)"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "NewExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "jQuery"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "Deferred"
                              }
                            },
                            "arguments": []
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "reject"
                          }
                        },
                        "arguments": []
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "then"
                      }
                    },
                    "arguments": [
                      {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "ok"
                                },
                                "arguments": [
                                  {
                                    "type": "Literal",
                                    "value": false
                                  },
                                  {
                                    "type": "Literal",
                                    "value": "Success on reject (new)"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      },
                      {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "ok"
                                },
                                "arguments": [
                                  {
                                    "type": "Literal",
                                    "value": true
                                  },
                                  {
                                    "type": "Literal",
                                    "value": "Error on reject (new)"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      }
                    ]
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "tmp"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "Deferred"
                          }
                        },
                        "arguments": []
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "strictEqual"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "tmp"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "promise"
                          }
                        },
                        "arguments": []
                      },
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "tmp"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "promise"
                          }
                        },
                        "arguments": []
                      },
                      {
                        "type": "Literal",
                        "value": "Test deferred always return same promise"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "strictEqual"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "tmp"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "promise"
                          }
                        },
                        "arguments": []
                      },
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "tmp"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "promise"
                              }
                            },
                            "arguments": []
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "promise"
                          }
                        },
                        "arguments": []
                      },
                      {
                        "type": "Literal",
                        "value": "Test deferred's promise always return same promise as deferred"
                      }
                    ]
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "test"
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "jQuery.when()"
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "params": [],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "expect"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": 23
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "jQuery"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "each"
                      }
                    },
                    "arguments": [
                      {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": "an empty string"
                            },
                            "value": {
                              "type": "Literal",
                              "value": ""
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": "a non-empty string"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "some string"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": "zero"
                            },
                            "value": {
                              "type": "Literal",
                              "value": 0
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": "a number other than zero"
                            },
                            "value": {
                              "type": "Literal",
                              "value": 1
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": "true"
                            },
                            "value": {
                              "type": "Literal",
                              "value": true
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": "false"
                            },
                            "value": {
                              "type": "Literal",
                              "value": false
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": "null"
                            },
                            "value": {
                              "type": "Literal",
                              "value": null
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": "undefined"
                            },
                            "value": {
                              "type": "Identifier",
                              "name": "undefined"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": "a plain object"
                            },
                            "value": {
                              "type": "ObjectExpression",
                              "properties": []
                            },
                            "kind": "init"
                          }
                        ]
                      },
                      {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [
                          {
                            "type": "Identifier",
                            "name": "message"
                          },
                          {
                            "type": "Identifier",
                            "name": "value"
                          }
                        ],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "ok"
                                },
                                "arguments": [
                                  {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "jQuery"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "isFunction"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "jQuery"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "when"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "value"
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "then"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "resolveValue"
                                                }
                                              ],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "Identifier",
                                                        "name": "strictEqual"
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "resolveValue"
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "name": "value"
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "Literal",
                                                            "value": "Test the promise was resolved with "
                                                          },
                                                          "right": {
                                                            "type": "Identifier",
                                                            "name": "message"
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            }
                                          ]
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "promise"
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "type": "BinaryExpression",
                                    "operator": "+",
                                    "left": {
                                      "type": "BinaryExpression",
                                      "operator": "+",
                                      "left": {
                                        "type": "Literal",
                                        "value": "Test "
                                      },
                                      "right": {
                                        "type": "Identifier",
                                        "name": "message"
                                      }
                                    },
                                    "right": {
                                      "type": "Literal",
                                      "value": " triggers the creation of a new Promise"
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "isFunction"
                          }
                        },
                        "arguments": [
                          {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "jQuery"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "when"
                                    }
                                  },
                                  "arguments": []
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "then"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "resolveValue"
                                    }
                                  ],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "Identifier",
                                            "name": "strictEqual"
                                          },
                                          "arguments": [
                                            {
                                              "type": "Identifier",
                                              "name": "resolveValue"
                                            },
                                            {
                                              "type": "Identifier",
                                              "name": "undefined"
                                            },
                                            {
                                              "type": "Literal",
                                              "value": "Test the promise was resolved with no parameter"
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              ]
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "promise"
                            }
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "Test calling when with no parameter triggers the creation of a new Promise"
                      }
                    ]
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "cache"
                      },
                      "init": null
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "i"
                      },
                      "init": null
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ForStatement",
                  "init": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "i"
                    },
                    "right": {
                      "type": "Literal",
                      "value": 1
                    }
                  },
                  "test": {
                    "type": "BinaryExpression",
                    "operator": "<",
                    "left": {
                      "type": "Identifier",
                      "name": "i"
                    },
                    "right": {
                      "type": "Literal",
                      "value": 4
                    }
                  },
                  "update": {
                    "type": "UpdateExpression",
                    "operator": "++",
                    "argument": {
                      "type": "Identifier",
                      "name": "i"
                    },
                    "prefix": false
                  },
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "jQuery"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "when"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "LogicalExpression",
                                  "operator": "||",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "cache"
                                  },
                                  "right": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "jQuery"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "Deferred"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [],
                                        "defaults": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "ThisExpression"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "resolve"
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "i"
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "then"
                            }
                          },
                          "arguments": [
                            {
                              "type": "FunctionExpression",
                              "id": null,
                              "params": [
                                {
                                  "type": "Identifier",
                                  "name": "value"
                                }
                              ],
                              "defaults": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "strictEqual"
                                      },
                                      "arguments": [
                                        {
                                          "type": "Identifier",
                                          "name": "value"
                                        },
                                        {
                                          "type": "Literal",
                                          "value": 1
                                        },
                                        {
                                          "type": "BinaryExpression",
                                          "operator": "+",
                                          "left": {
                                            "type": "Literal",
                                            "value": "Function executed"
                                          },
                                          "right": {
                                            "type": "ConditionalExpression",
                                            "test": {
                                              "type": "BinaryExpression",
                                              "operator": ">",
                                              "left": {
                                                "type": "Identifier",
                                                "name": "i"
                                              },
                                              "right": {
                                                "type": "Literal",
                                                "value": 1
                                              }
                                            },
                                            "consequent": {
                                              "type": "Literal",
                                              "value": " only once"
                                            },
                                            "alternate": {
                                              "type": "Literal",
                                              "value": ""
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "cache"
                                      },
                                      "right": {
                                        "type": "Identifier",
                                        "name": "value"
                                      }
                                    }
                                  }
                                ]
                              },
                              "rest": null,
                              "generator": false,
                              "expression": false
                            },
                            {
                              "type": "FunctionExpression",
                              "id": null,
                              "params": [],
                              "defaults": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "ok"
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": false
                                        },
                                        {
                                          "type": "Literal",
                                          "value": "Fail called"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              },
                              "rest": null,
                              "generator": false,
                              "expression": false
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "test"
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "jQuery.when() - joined"
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "params": [],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "expect"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": 8
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "jQuery"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "when"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": 1
                              },
                              {
                                "type": "Literal",
                                "value": 2
                              },
                              {
                                "type": "Literal",
                                "value": 3
                              }
                            ]
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "done"
                          }
                        },
                        "arguments": [
                          {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [
                              {
                                "type": "Identifier",
                                "name": "a"
                              },
                              {
                                "type": "Identifier",
                                "name": "b"
                              },
                              {
                                "type": "Identifier",
                                "name": "c"
                              }
                            ],
                            "defaults": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "strictEqual"
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "a"
                                      },
                                      {
                                        "type": "Literal",
                                        "value": 1
                                      },
                                      {
                                        "type": "Literal",
                                        "value": "Test first param is first resolved value - non-observables"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "strictEqual"
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "b"
                                      },
                                      {
                                        "type": "Literal",
                                        "value": 2
                                      },
                                      {
                                        "type": "Literal",
                                        "value": "Test second param is second resolved value - non-observables"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "strictEqual"
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "c"
                                      },
                                      {
                                        "type": "Literal",
                                        "value": 3
                                      },
                                      {
                                        "type": "Literal",
                                        "value": "Test third param is third resolved value - non-observables"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "rest": null,
                            "generator": false,
                            "expression": false
                          }
                        ]
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "fail"
                      }
                    },
                    "arguments": [
                      {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "ok"
                                },
                                "arguments": [
                                  {
                                    "type": "Literal",
                                    "value": false
                                  },
                                  {
                                    "type": "Literal",
                                    "value": "Test the created deferred was resolved - non-observables"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      }
                    ]
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "successDeferred"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "jQuery"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "Deferred"
                              }
                            },
                            "arguments": []
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "resolve"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": 1
                          },
                          {
                            "type": "Literal",
                            "value": 2
                          },
                          {
                            "type": "Literal",
                            "value": 3
                          }
                        ]
                      }
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "errorDeferred"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "jQuery"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "Deferred"
                              }
                            },
                            "arguments": []
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "reject"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "error"
                          },
                          {
                            "type": "Literal",
                            "value": "errorParam"
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "jQuery"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "when"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": 1
                              },
                              {
                                "type": "Identifier",
                                "name": "successDeferred"
                              },
                              {
                                "type": "Literal",
                                "value": 3
                              }
                            ]
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "done"
                          }
                        },
                        "arguments": [
                          {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [
                              {
                                "type": "Identifier",
                                "name": "a"
                              },
                              {
                                "type": "Identifier",
                                "name": "b"
                              },
                              {
                                "type": "Identifier",
                                "name": "c"
                              }
                            ],
                            "defaults": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "strictEqual"
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "a"
                                      },
                                      {
                                        "type": "Literal",
                                        "value": 1
                                      },
                                      {
                                        "type": "Literal",
                                        "value": "Test first param is first resolved value - resolved observable"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "same"
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "b"
                                      },
                                      {
                                        "type": "ArrayExpression",
                                        "elements": [
                                          {
                                            "type": "Literal",
                                            "value": 1
                                          },
                                          {
                                            "type": "Literal",
                                            "value": 2
                                          },
                                          {
                                            "type": "Literal",
                                            "value": 3
                                          }
                                        ]
                                      },
                                      {
                                        "type": "Literal",
                                        "value": "Test second param is second resolved value - resolved observable"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "strictEqual"
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "c"
                                      },
                                      {
                                        "type": "Literal",
                                        "value": 3
                                      },
                                      {
                                        "type": "Literal",
                                        "value": "Test third param is third resolved value - resolved observable"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "rest": null,
                            "generator": false,
                            "expression": false
                          }
                        ]
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "fail"
                      }
                    },
                    "arguments": [
                      {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "ok"
                                },
                                "arguments": [
                                  {
                                    "type": "Literal",
                                    "value": false
                                  },
                                  {
                                    "type": "Literal",
                                    "value": "Test the created deferred was resolved - resolved observable"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "jQuery"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "when"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": 1
                              },
                              {
                                "type": "Identifier",
                                "name": "errorDeferred"
                              },
                              {
                                "type": "Literal",
                                "value": 3
                              }
                            ]
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "done"
                          }
                        },
                        "arguments": [
                          {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [],
                            "defaults": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "ok"
                                    },
                                    "arguments": [
                                      {
                                        "type": "Literal",
                                        "value": false
                                      },
                                      {
                                        "type": "Literal",
                                        "value": "Test the created deferred was rejected - rejected observable"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "rest": null,
                            "generator": false,
                            "expression": false
                          }
                        ]
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "fail"
                      }
                    },
                    "arguments": [
                      {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [
                          {
                            "type": "Identifier",
                            "name": "error"
                          },
                          {
                            "type": "Identifier",
                            "name": "errorParam"
                          }
                        ],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "strictEqual"
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "error"
                                  },
                                  {
                                    "type": "Literal",
                                    "value": "error"
                                  },
                                  {
                                    "type": "Literal",
                                    "value": "Test first param is first rejected value - rejected observable"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "strictEqual"
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "errorParam"
                                  },
                                  {
                                    "type": "Literal",
                                    "value": "errorParam"
                                  },
                                  {
                                    "type": "Literal",
                                    "value": "Test second param is second rejected value - rejected observable"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      }
                    ]
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "test"
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "jQuery.sub() - Static Methods"
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "params": [],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "expect"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": 18
                      }
                    ]
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "Subclass"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "sub"
                          }
                        },
                        "arguments": []
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "Subclass"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "extend"
                      }
                    },
                    "arguments": [
                      {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "topLevelMethod"
                            },
                            "value": {
                              "type": "FunctionExpression",
                              "id": null,
                              "params": [],
                              "defaults": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ReturnStatement",
                                    "argument": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "ThisExpression"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "debug"
                                      }
                                    }
                                  }
                                ]
                              },
                              "rest": null,
                              "generator": false,
                              "expression": false
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "debug"
                            },
                            "value": {
                              "type": "Literal",
                              "value": false
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "config"
                            },
                            "value": {
                              "type": "ObjectExpression",
                              "properties": [
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "locale"
                                  },
                                  "value": {
                                    "type": "Literal",
                                    "value": "en_US"
                                  },
                                  "kind": "init"
                                }
                              ]
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "setup"
                            },
                            "value": {
                              "type": "FunctionExpression",
                              "id": null,
                              "params": [
                                {
                                  "type": "Identifier",
                                  "name": "config"
                                }
                              ],
                              "defaults": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "ThisExpression"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "extend"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": true
                                        },
                                        {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "ThisExpression"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "config"
                                          }
                                        },
                                        {
                                          "type": "Identifier",
                                          "name": "config"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              },
                              "rest": null,
                              "generator": false,
                              "expression": false
                            },
                            "kind": "init"
                          }
                        ]
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "Subclass"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "fn"
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "extend"
                      }
                    },
                    "arguments": [
                      {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "subClassMethod"
                            },
                            "value": {
                              "type": "FunctionExpression",
                              "id": null,
                              "params": [],
                              "defaults": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ReturnStatement",
                                    "argument": {
                                      "type": "ThisExpression"
                                    }
                                  }
                                ]
                              },
                              "rest": null,
                              "generator": false,
                              "expression": false
                            },
                            "kind": "init"
                          }
                        ]
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "BinaryExpression",
                        "operator": "===",
                        "left": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "Subclass"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "topLevelMethod"
                            }
                          },
                          "arguments": []
                        },
                        "right": {
                          "type": "Literal",
                          "value": false
                        }
                      },
                      {
                        "type": "Literal",
                        "value": "Subclass.topLevelMethod thought debug was true"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "BinaryExpression",
                        "operator": "==",
                        "left": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "Subclass"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "config"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "locale"
                          }
                        },
                        "right": {
                          "type": "Literal",
                          "value": "en_US"
                        }
                      },
                      {
                        "type": "BinaryExpression",
                        "operator": "+",
                        "left": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "Subclass"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "config"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "locale"
                          }
                        },
                        "right": {
                          "type": "Literal",
                          "value": " is wrong!"
                        }
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "same"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "Subclass"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "config"
                          }
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "test"
                        }
                      },
                      {
                        "type": "Identifier",
                        "name": "undefined"
                      },
                      {
                        "type": "Literal",
                        "value": "Subclass.config.test is set incorrectly"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equal"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "jQuery"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "ajax"
                        }
                      },
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "Subclass"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "ajax"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": "The subclass failed to get all top level methods"
                      }
                    ]
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "SubSubclass"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "Subclass"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "sub"
                          }
                        },
                        "arguments": []
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "BinaryExpression",
                        "operator": "===",
                        "left": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "SubSubclass"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "topLevelMethod"
                            }
                          },
                          "arguments": []
                        },
                        "right": {
                          "type": "Literal",
                          "value": false
                        }
                      },
                      {
                        "type": "Literal",
                        "value": "SubSubclass.topLevelMethod thought debug was true"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "BinaryExpression",
                        "operator": "==",
                        "left": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "SubSubclass"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "config"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "locale"
                          }
                        },
                        "right": {
                          "type": "Literal",
                          "value": "en_US"
                        }
                      },
                      {
                        "type": "BinaryExpression",
                        "operator": "+",
                        "left": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "SubSubclass"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "config"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "locale"
                          }
                        },
                        "right": {
                          "type": "Literal",
                          "value": " is wrong!"
                        }
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "same"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "SubSubclass"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "config"
                          }
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "test"
                        }
                      },
                      {
                        "type": "Identifier",
                        "name": "undefined"
                      },
                      {
                        "type": "Literal",
                        "value": "SubSubclass.config.test is set incorrectly"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equal"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "jQuery"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "ajax"
                        }
                      },
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "SubSubclass"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "ajax"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": "The subsubclass failed to get all top level methods"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "SubSubclass"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "fn"
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "extend"
                      }
                    },
                    "arguments": [
                      {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "subSubClassMethod"
                            },
                            "value": {
                              "type": "FunctionExpression",
                              "id": null,
                              "params": [],
                              "defaults": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ReturnStatement",
                                    "argument": {
                                      "type": "ThisExpression"
                                    }
                                  }
                                ]
                              },
                              "rest": null,
                              "generator": false,
                              "expression": false
                            },
                            "kind": "init"
                          }
                        ]
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "SubSubclass"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "setup"
                      }
                    },
                    "arguments": [
                      {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "locale"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "es_MX"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "test"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "worked"
                            },
                            "kind": "init"
                          }
                        ]
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "SubSubclass"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "debug"
                      }
                    },
                    "right": {
                      "type": "Literal",
                      "value": true
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "SubSubclass"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "ajax"
                      }
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "Literal",
                              "value": false
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "SubSubclass"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "topLevelMethod"
                          }
                        },
                        "arguments": []
                      },
                      {
                        "type": "Literal",
                        "value": "SubSubclass.topLevelMethod thought debug was false"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "same"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "SubSubclass"
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "document"
                            }
                          ]
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "subClassMethod"
                        }
                      },
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "Subclass"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "fn"
                          }
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "subClassMethod"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": "Methods Differ!"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "BinaryExpression",
                        "operator": "==",
                        "left": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "SubSubclass"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "config"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "locale"
                          }
                        },
                        "right": {
                          "type": "Literal",
                          "value": "es_MX"
                        }
                      },
                      {
                        "type": "BinaryExpression",
                        "operator": "+",
                        "left": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "SubSubclass"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "config"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "locale"
                          }
                        },
                        "right": {
                          "type": "Literal",
                          "value": " is wrong!"
                        }
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "BinaryExpression",
                        "operator": "==",
                        "left": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "SubSubclass"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "config"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "test"
                          }
                        },
                        "right": {
                          "type": "Literal",
                          "value": "worked"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": "SubSubclass.config.test is set incorrectly"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "notEqual"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "jQuery"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "ajax"
                        }
                      },
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "SubSubclass"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "ajax"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": "The subsubclass failed to get all top level methods"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "BinaryExpression",
                        "operator": "===",
                        "left": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "Subclass"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "topLevelMethod"
                            }
                          },
                          "arguments": []
                        },
                        "right": {
                          "type": "Literal",
                          "value": false
                        }
                      },
                      {
                        "type": "Literal",
                        "value": "Subclass.topLevelMethod thought debug was true"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "ok"
                    },
                    "arguments": [
                      {
                        "type": "BinaryExpression",
                        "operator": "==",
                        "left": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "Subclass"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "config"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "locale"
                          }
                        },
                        "right": {
                          "type": "Literal",
                          "value": "en_US"
                        }
                      },
                      {
                        "type": "BinaryExpression",
                        "operator": "+",
                        "left": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "Subclass"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "config"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "locale"
                          }
                        },
                        "right": {
                          "type": "Literal",
                          "value": " is wrong!"
                        }
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "same"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "Subclass"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "config"
                          }
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "test"
                        }
                      },
                      {
                        "type": "Identifier",
                        "name": "undefined"
                      },
                      {
                        "type": "Literal",
                        "value": "Subclass.config.test is set incorrectly"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "same"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Subclass"
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "document"
                            }
                          ]
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "subSubClassMethod"
                        }
                      },
                      {
                        "type": "Identifier",
                        "name": "undefined"
                      },
                      {
                        "type": "Literal",
                        "value": "subSubClassMethod set incorrectly"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "equal"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "jQuery"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "ajax"
                        }
                      },
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "Subclass"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "ajax"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": "The subclass failed to get all top level methods"
                      }
                    ]
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "test"
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "jQuery.sub() - .fn Methods"
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "params": [],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "expect"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": 378
                      }
                    ]
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "Subclass"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "jQuery"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "sub"
                          }
                        },
                        "arguments": []
                      }
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "SubclassSubclass"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "Subclass"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "sub"
                          }
                        },
                        "arguments": []
                      }
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "jQueryDocument"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "jQuery"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "document"
                          }
                        ]
                      }
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "selectors"
                      },
                      "init": null
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "contexts"
                      },
                      "init": null
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "methods"
                      },
                      "init": null
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "method"
                      },
                      "init": null
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "arg"
                      },
                      "init": null
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "description"
                      },
                      "init": null
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "jQueryDocument"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "toString"
                      }
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "Literal",
                              "value": "jQueryDocument"
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "Subclass"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "fn"
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "subclassMethod"
                      }
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": []
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "SubclassSubclass"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "fn"
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "subclassSubclassMethod"
                      }
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": []
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "selectors"
                    },
                    "right": {
                      "type": "ArrayExpression",
                      "elements": [
                        {
                          "type": "Literal",
                          "value": "body"
                        },
                        {
                          "type": "Literal",
                          "value": "html, body"
                        },
                        {
                          "type": "Literal",
                          "value": "<div></div>"
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "methods"
                    },
                    "right": {
                      "type": "ArrayExpression",
                      "elements": [
                        {
                          "type": "ArrayExpression",
                          "elements": [
                            {
                              "type": "Literal",
                              "value": "eq"
                            },
                            {
                              "type": "Literal",
                              "value": 1
                            }
                          ]
                        },
                        {
                          "type": "ArrayExpression",
                          "elements": [
                            {
                              "type": "Literal",
                              "value": "add"
                            },
                            {
                              "type": "Identifier",
                              "name": "document"
                            }
                          ]
                        },
                        {
                          "type": "ArrayExpression",
                          "elements": [
                            {
                              "type": "Literal",
                              "value": "end"
                            }
                          ]
                        },
                        {
                          "type": "ArrayExpression",
                          "elements": [
                            {
                              "type": "Literal",
                              "value": "has"
                            }
                          ]
                        },
                        {
                          "type": "ArrayExpression",
                          "elements": [
                            {
                              "type": "Literal",
                              "value": "closest"
                            },
                            {
                              "type": "Literal",
                              "value": "div"
                            }
                          ]
                        },
                        {
                          "type": "ArrayExpression",
                          "elements": [
                            {
                              "type": "Literal",
                              "value": "filter"
                            },
                            {
                              "type": "Identifier",
                              "name": "document"
                            }
                          ]
                        },
                        {
                          "type": "ArrayExpression",
                          "elements": [
                            {
                              "type": "Literal",
                              "value": "find"
                            },
                            {
                              "type": "Literal",
                              "value": "div"
                            }
                          ]
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "contexts"
                    },
                    "right": {
                      "type": "ArrayExpression",
                      "elements": [
                        {
                          "type": "Identifier",
                          "name": "undefined"
                        },
                        {
                          "type": "Identifier",
                          "name": "document"
                        },
                        {
                          "type": "Identifier",
                          "name": "jQueryDocument"
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "jQuery"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "each"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "selectors"
                      },
                      {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [
                          {
                            "type": "Identifier",
                            "name": "i"
                          },
                          {
                            "type": "Identifier",
                            "name": "selector"
                          }
                        ],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "jQuery"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "each"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "methods"
                                  },
                                  {
                                    "type": "FunctionExpression",
                                    "id": null,
                                    "params": [],
                                    "defaults": [],
                                    "body": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "method"
                                            },
                                            "right": {
                                              "type": "MemberExpression",
                                              "computed": true,
                                              "object": {
                                                "type": "ThisExpression"
                                              },
                                              "property": {
                                                "type": "Literal",
                                                "value": 0
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "arg"
                                            },
                                            "right": {
                                              "type": "MemberExpression",
                                              "computed": true,
                                              "object": {
                                                "type": "ThisExpression"
                                              },
                                              "property": {
                                                "type": "Literal",
                                                "value": 1
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "jQuery"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "each"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "Identifier",
                                                "name": "contexts"
                                              },
                                              {
                                                "type": "FunctionExpression",
                                                "id": null,
                                                "params": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "i"
                                                  },
                                                  {
                                                    "type": "Identifier",
                                                    "name": "context"
                                                  }
                                                ],
                                                "defaults": [],
                                                "body": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                          "type": "Identifier",
                                                          "name": "description"
                                                        },
                                                        "right": {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "BinaryExpression",
                                                              "operator": "+",
                                                              "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                  "type": "BinaryExpression",
                                                                  "operator": "+",
                                                                  "left": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "+",
                                                                    "left": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "+",
                                                                      "left": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "+",
                                                                        "left": {
                                                                          "type": "Literal",
                                                                          "value": "(\""
                                                                        },
                                                                        "right": {
                                                                          "type": "Identifier",
                                                                          "name": "selector"
                                                                        }
                                                                      },
                                                                      "right": {
                                                                        "type": "Literal",
                                                                        "value": "\", "
                                                                      }
                                                                    },
                                                                    "right": {
                                                                      "type": "Identifier",
                                                                      "name": "context"
                                                                    }
                                                                  },
                                                                  "right": {
                                                                    "type": "Literal",
                                                                    "value": ")."
                                                                  }
                                                                },
                                                                "right": {
                                                                  "type": "Identifier",
                                                                  "name": "method"
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "Literal",
                                                                "value": "("
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "LogicalExpression",
                                                              "operator": "||",
                                                              "left": {
                                                                "type": "Identifier",
                                                                "name": "arg"
                                                              },
                                                              "right": {
                                                                "type": "Literal",
                                                                "value": ""
                                                              }
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": ")"
                                                          }
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "Identifier",
                                                          "name": "same"
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "jQuery"
                                                                  },
                                                                  "arguments": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "name": "selector"
                                                                    },
                                                                    {
                                                                      "type": "Identifier",
                                                                      "name": "context"
                                                                    }
                                                                  ]
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "method"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "arg"
                                                                }
                                                              ]
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "subclassMethod"
                                                            }
                                                          },
                                                          {
                                                            "type": "Identifier",
                                                            "name": "undefined"
                                                          },
                                                          {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "BinaryExpression",
                                                              "operator": "+",
                                                              "left": {
                                                                "type": "Literal",
                                                                "value": "jQuery"
                                                              },
                                                              "right": {
                                                                "type": "Identifier",
                                                                "name": "description"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "Literal",
                                                              "value": " doesnt have Subclass methods"
                                                            }
                                                          }
                                                        ]
                                                      }
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "Identifier",
                                                          "name": "same"
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "jQuery"
                                                                  },
                                                                  "arguments": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "name": "selector"
                                                                    },
                                                                    {
                                                                      "type": "Identifier",
                                                                      "name": "context"
                                                                    }
                                                                  ]
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "method"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "arg"
                                                                }
                                                              ]
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "subclassSubclassMethod"
                                                            }
                                                          },
                                                          {
                                                            "type": "Identifier",
                                                            "name": "undefined"
                                                          },
                                                          {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "BinaryExpression",
                                                              "operator": "+",
                                                              "left": {
                                                                "type": "Literal",
                                                                "value": "jQuery"
                                                              },
                                                              "right": {
                                                                "type": "Identifier",
                                                                "name": "description"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "Literal",
                                                              "value": " doesnt have SubclassSubclass methods"
                                                            }
                                                          }
                                                        ]
                                                      }
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "Identifier",
                                                          "name": "same"
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "Subclass"
                                                                  },
                                                                  "arguments": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "name": "selector"
                                                                    },
                                                                    {
                                                                      "type": "Identifier",
                                                                      "name": "context"
                                                                    }
                                                                  ]
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "method"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "arg"
                                                                }
                                                              ]
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "subclassMethod"
                                                            }
                                                          },
                                                          {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "Subclass"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "fn"
                                                              }
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "subclassMethod"
                                                            }
                                                          },
                                                          {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "BinaryExpression",
                                                              "operator": "+",
                                                              "left": {
                                                                "type": "Literal",
                                                                "value": "Subclass"
                                                              },
                                                              "right": {
                                                                "type": "Identifier",
                                                                "name": "description"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "Literal",
                                                              "value": " has Subclass methods"
                                                            }
                                                          }
                                                        ]
                                                      }
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "Identifier",
                                                          "name": "same"
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "Subclass"
                                                                  },
                                                                  "arguments": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "name": "selector"
                                                                    },
                                                                    {
                                                                      "type": "Identifier",
                                                                      "name": "context"
                                                                    }
                                                                  ]
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "method"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "arg"
                                                                }
                                                              ]
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "subclassSubclassMethod"
                                                            }
                                                          },
                                                          {
                                                            "type": "Identifier",
                                                            "name": "undefined"
                                                          },
                                                          {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "BinaryExpression",
                                                              "operator": "+",
                                                              "left": {
                                                                "type": "Literal",
                                                                "value": "Subclass"
                                                              },
                                                              "right": {
                                                                "type": "Identifier",
                                                                "name": "description"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "Literal",
                                                              "value": " doesnt have SubclassSubclass methods"
                                                            }
                                                          }
                                                        ]
                                                      }
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "Identifier",
                                                          "name": "same"
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "SubclassSubclass"
                                                                  },
                                                                  "arguments": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "name": "selector"
                                                                    },
                                                                    {
                                                                      "type": "Identifier",
                                                                      "name": "context"
                                                                    }
                                                                  ]
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "method"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "arg"
                                                                }
                                                              ]
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "subclassMethod"
                                                            }
                                                          },
                                                          {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "Subclass"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "fn"
                                                              }
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "subclassMethod"
                                                            }
                                                          },
                                                          {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "BinaryExpression",
                                                              "operator": "+",
                                                              "left": {
                                                                "type": "Literal",
                                                                "value": "SubclassSubclass"
                                                              },
                                                              "right": {
                                                                "type": "Identifier",
                                                                "name": "description"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "Literal",
                                                              "value": " has Subclass methods"
                                                            }
                                                          }
                                                        ]
                                                      }
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "Identifier",
                                                          "name": "same"
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "SubclassSubclass"
                                                                  },
                                                                  "arguments": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "name": "selector"
                                                                    },
                                                                    {
                                                                      "type": "Identifier",
                                                                      "name": "context"
                                                                    }
                                                                  ]
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "method"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "arg"
                                                                }
                                                              ]
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "subclassSubclassMethod"
                                                            }
                                                          },
                                                          {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "SubclassSubclass"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "fn"
                                                              }
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "subclassSubclassMethod"
                                                            }
                                                          },
                                                          {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "BinaryExpression",
                                                              "operator": "+",
                                                              "left": {
                                                                "type": "Literal",
                                                                "value": "SubclassSubclass"
                                                              },
                                                              "right": {
                                                                "type": "Identifier",
                                                                "name": "description"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "Literal",
                                                              "value": " has SubclassSubclass methods"
                                                            }
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  ]
                                                },
                                                "rest": null,
                                                "generator": false,
                                                "expression": false
                                              }
                                            ]
                                          }
                                        }
                                      ]
                                    },
                                    "rest": null,
                                    "generator": false,
                                    "expression": false
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      }
                    ]
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    }
  ]
}
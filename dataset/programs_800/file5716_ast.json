{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "Events"
          },
          "init": null
        },
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "Model"
          },
          "init": null
        },
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "hat"
          },
          "init": null
        },
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "queue"
          },
          "init": null
        },
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "types"
          },
          "init": null
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "hat"
        },
        "right": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "require"
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "hat"
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "queue"
        },
        "right": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "require"
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "./syncqueue"
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "types"
        },
        "right": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "require"
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "../types"
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "Events"
        },
        "right": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "require"
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "./events"
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "module"
          },
          "property": {
            "type": "Identifier",
            "name": "exports"
          }
        },
        "right": {
          "type": "AssignmentExpression",
          "operator": "=",
          "left": {
            "type": "Identifier",
            "name": "Model"
          },
          "right": {
            "type": "FunctionExpression",
            "id": null,
            "params": [
              {
                "type": "Identifier",
                "name": "db"
              },
              {
                "type": "Identifier",
                "name": "options"
              }
            ],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "auth"
                      },
                      "init": null
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "createClient"
                      },
                      "init": null
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "doAuth"
                      },
                      "init": null
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "events"
                      },
                      "init": null
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "getSnapshot"
                      },
                      "init": null
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "queues"
                      },
                      "init": null
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "UnaryExpression",
                    "operator": "!",
                    "argument": {
                      "type": "BinaryExpression",
                      "operator": "instanceof",
                      "left": {
                        "type": "ThisExpression"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "Model"
                      }
                    },
                    "prefix": true
                  },
                  "consequent": {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "NewExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Model"
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "db"
                        },
                        {
                          "type": "Identifier",
                          "name": "options"
                        }
                      ]
                    }
                  },
                  "alternate": null
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "BinaryExpression",
                    "operator": "==",
                    "left": {
                      "type": "Identifier",
                      "name": "options"
                    },
                    "right": {
                      "type": "Literal",
                      "value": null
                    }
                  },
                  "consequent": {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "AssignmentExpression",
                      "operator": "=",
                      "left": {
                        "type": "Identifier",
                        "name": "options"
                      },
                      "right": {
                        "type": "ObjectExpression",
                        "properties": []
                      }
                    }
                  },
                  "alternate": null
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "ThisExpression"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "getOps"
                      }
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "docName"
                        },
                        {
                          "type": "Identifier",
                          "name": "start"
                        },
                        {
                          "type": "Identifier",
                          "name": "end"
                        },
                        {
                          "type": "Identifier",
                          "name": "callback"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "db"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "getOps"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "docName"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "start"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "end"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "callback"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "ThisExpression"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "getSnapshot"
                      }
                    },
                    "right": {
                      "type": "AssignmentExpression",
                      "operator": "=",
                      "left": {
                        "type": "Identifier",
                        "name": "getSnapshot"
                      },
                      "right": {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [
                          {
                            "type": "Identifier",
                            "name": "docName"
                          },
                          {
                            "type": "Identifier",
                            "name": "callback"
                          }
                        ],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ReturnStatement",
                              "argument": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "db"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "getSnapshot"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "docName"
                                  },
                                  {
                                    "type": "Identifier",
                                    "name": "callback"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      }
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "ThisExpression"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "getVersion"
                      }
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "docName"
                        },
                        {
                          "type": "Identifier",
                          "name": "callback"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "db"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "getVersion"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "docName"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "callback"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "ThisExpression"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "create"
                      }
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "docName"
                        },
                        {
                          "type": "Identifier",
                          "name": "type"
                        },
                        {
                          "type": "Identifier",
                          "name": "meta"
                        },
                        {
                          "type": "Identifier",
                          "name": "callback"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "VariableDeclaration",
                            "declarations": [
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "docData"
                                },
                                "init": null
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "_ref"
                                },
                                "init": null
                              }
                            ],
                            "kind": "var"
                          },
                          {
                            "type": "IfStatement",
                            "test": {
                              "type": "BinaryExpression",
                              "operator": "===",
                              "left": {
                                "type": "UnaryExpression",
                                "operator": "typeof",
                                "argument": {
                                  "type": "Identifier",
                                  "name": "meta"
                                },
                                "prefix": true
                              },
                              "right": {
                                "type": "Literal",
                                "value": "function"
                              }
                            },
                            "consequent": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "SequenceExpression",
                                    "expressions": [
                                      {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                          "type": "Identifier",
                                          "name": "_ref"
                                        },
                                        "right": {
                                          "type": "ArrayExpression",
                                          "elements": [
                                            {
                                              "type": "ObjectExpression",
                                              "properties": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "name": "meta"
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                          "type": "Identifier",
                                          "name": "meta"
                                        },
                                        "right": {
                                          "type": "MemberExpression",
                                          "computed": true,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "_ref"
                                          },
                                          "property": {
                                            "type": "Literal",
                                            "value": 0
                                          }
                                        }
                                      },
                                      {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                          "type": "Identifier",
                                          "name": "callback"
                                        },
                                        "right": {
                                          "type": "MemberExpression",
                                          "computed": true,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "_ref"
                                          },
                                          "property": {
                                            "type": "Literal",
                                            "value": 1
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "alternate": null
                          },
                          {
                            "type": "IfStatement",
                            "test": {
                              "type": "BinaryExpression",
                              "operator": "===",
                              "left": {
                                "type": "UnaryExpression",
                                "operator": "typeof",
                                "argument": {
                                  "type": "Identifier",
                                  "name": "type"
                                },
                                "prefix": true
                              },
                              "right": {
                                "type": "Literal",
                                "value": "string"
                              }
                            },
                            "consequent": {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "Identifier",
                                  "name": "type"
                                },
                                "right": {
                                  "type": "MemberExpression",
                                  "computed": true,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "types"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "type"
                                  }
                                }
                              }
                            },
                            "alternate": null
                          },
                          {
                            "type": "IfStatement",
                            "test": {
                              "type": "UnaryExpression",
                              "operator": "!",
                              "argument": {
                                "type": "Identifier",
                                "name": "type"
                              },
                              "prefix": true
                            },
                            "consequent": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "ConditionalExpression",
                                    "test": {
                                      "type": "BinaryExpression",
                                      "operator": "===",
                                      "left": {
                                        "type": "UnaryExpression",
                                        "operator": "typeof",
                                        "argument": {
                                          "type": "Identifier",
                                          "name": "callback"
                                        },
                                        "prefix": true
                                      },
                                      "right": {
                                        "type": "Literal",
                                        "value": "function"
                                      }
                                    },
                                    "consequent": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "callback"
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "Type not found"
                                        }
                                      ]
                                    },
                                    "alternate": {
                                      "type": "UnaryExpression",
                                      "operator": "void",
                                      "argument": {
                                        "type": "Literal",
                                        "value": 0
                                      },
                                      "prefix": true
                                    }
                                  }
                                }
                              ]
                            },
                            "alternate": null
                          },
                          {
                            "type": "IfStatement",
                            "test": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "docName"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "match"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": {}
                                }
                              ]
                            },
                            "consequent": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "ConditionalExpression",
                                    "test": {
                                      "type": "BinaryExpression",
                                      "operator": "===",
                                      "left": {
                                        "type": "UnaryExpression",
                                        "operator": "typeof",
                                        "argument": {
                                          "type": "Identifier",
                                          "name": "callback"
                                        },
                                        "prefix": true
                                      },
                                      "right": {
                                        "type": "Literal",
                                        "value": "function"
                                      }
                                    },
                                    "consequent": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "callback"
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "Invalid document name"
                                        }
                                      ]
                                    },
                                    "alternate": {
                                      "type": "UnaryExpression",
                                      "operator": "void",
                                      "argument": {
                                        "type": "Literal",
                                        "value": 0
                                      },
                                      "prefix": true
                                    }
                                  }
                                }
                              ]
                            },
                            "alternate": null
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "name": "docData"
                              },
                              "right": {
                                "type": "ObjectExpression",
                                "properties": [
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Identifier",
                                      "name": "snapshot"
                                    },
                                    "value": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "type"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "create"
                                        }
                                      },
                                      "arguments": []
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Identifier",
                                      "name": "type"
                                    },
                                    "value": {
                                      "type": "Identifier",
                                      "name": "type"
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Identifier",
                                      "name": "meta"
                                    },
                                    "value": {
                                      "type": "LogicalExpression",
                                      "operator": "||",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "meta"
                                      },
                                      "right": {
                                        "type": "ObjectExpression",
                                        "properties": []
                                      }
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Identifier",
                                      "name": "v"
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": 0
                                    },
                                    "kind": "init"
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "db"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "create"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "docName"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "docData"
                                },
                                {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "error"
                                    }
                                  ],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "IfStatement",
                                        "test": {
                                          "type": "Identifier",
                                          "name": "error"
                                        },
                                        "consequent": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ReturnStatement",
                                              "argument": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "Identifier",
                                                  "name": "callback"
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "error"
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "alternate": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ReturnStatement",
                                              "argument": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "Identifier",
                                                  "name": "callback"
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "Literal",
                                                    "value": null
                                                  },
                                                  {
                                                    "type": "Identifier",
                                                    "name": "docData"
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "queues"
                    },
                    "right": {
                      "type": "ObjectExpression",
                      "properties": []
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "ThisExpression"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "clientCount"
                      }
                    },
                    "right": {
                      "type": "Literal",
                      "value": 0
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "ThisExpression"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "applyOp"
                      }
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "docName"
                        },
                        {
                          "type": "Identifier",
                          "name": "opData"
                        },
                        {
                          "type": "Identifier",
                          "name": "callback"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "LogicalExpression",
                              "operator": "||",
                              "left": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                  "type": "Identifier",
                                  "name": "queues"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "docName"
                                }
                              },
                              "right": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": true,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "queues"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "docName"
                                  }
                                },
                                "right": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "Identifier",
                                    "name": "queue"
                                  },
                                  "arguments": [
                                    {
                                      "type": "FunctionExpression",
                                      "id": null,
                                      "params": [
                                        {
                                          "type": "Identifier",
                                          "name": "opData"
                                        },
                                        {
                                          "type": "Identifier",
                                          "name": "callback"
                                        }
                                      ],
                                      "defaults": [],
                                      "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "ReturnStatement",
                                            "argument": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "getSnapshot"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "docName"
                                                },
                                                {
                                                  "type": "FunctionExpression",
                                                  "id": null,
                                                  "params": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "error"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "docData"
                                                    }
                                                  ],
                                                  "defaults": [],
                                                  "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                          {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                              "type": "Identifier",
                                                              "name": "meta"
                                                            },
                                                            "init": null
                                                          },
                                                          {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                              "type": "Identifier",
                                                              "name": "op"
                                                            },
                                                            "init": null
                                                          },
                                                          {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                              "type": "Identifier",
                                                              "name": "opVersion"
                                                            },
                                                            "init": null
                                                          },
                                                          {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                              "type": "Identifier",
                                                              "name": "snapshot"
                                                            },
                                                            "init": null
                                                          },
                                                          {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                              "type": "Identifier",
                                                              "name": "submit"
                                                            },
                                                            "init": null
                                                          },
                                                          {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                              "type": "Identifier",
                                                              "name": "type"
                                                            },
                                                            "init": null
                                                          },
                                                          {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                              "type": "Identifier",
                                                              "name": "version"
                                                            },
                                                            "init": null
                                                          }
                                                        ],
                                                        "kind": "var"
                                                      },
                                                      {
                                                        "type": "IfStatement",
                                                        "test": {
                                                          "type": "Identifier",
                                                          "name": "error"
                                                        },
                                                        "consequent": {
                                                          "type": "ReturnStatement",
                                                          "argument": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "Identifier",
                                                              "name": "callback"
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "Identifier",
                                                                "name": "error"
                                                              }
                                                            ]
                                                          }
                                                        },
                                                        "alternate": null
                                                      },
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "AssignmentExpression",
                                                          "operator": "=",
                                                          "left": {
                                                            "type": "Identifier",
                                                            "name": "opVersion"
                                                          },
                                                          "right": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "opData"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "v"
                                                            }
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "AssignmentExpression",
                                                          "operator": "=",
                                                          "left": {
                                                            "type": "Identifier",
                                                            "name": "op"
                                                          },
                                                          "right": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "opData"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "op"
                                                            }
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "AssignmentExpression",
                                                          "operator": "=",
                                                          "left": {
                                                            "type": "Identifier",
                                                            "name": "meta"
                                                          },
                                                          "right": {
                                                            "type": "LogicalExpression",
                                                            "operator": "||",
                                                            "left": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "opData"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "meta"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "ObjectExpression",
                                                              "properties": []
                                                            }
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "AssignmentExpression",
                                                          "operator": "=",
                                                          "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "meta"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "ts"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "Date"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "now"
                                                              }
                                                            },
                                                            "arguments": []
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "SequenceExpression",
                                                          "expressions": [
                                                            {
                                                              "type": "AssignmentExpression",
                                                              "operator": "=",
                                                              "left": {
                                                                "type": "Identifier",
                                                                "name": "version"
                                                              },
                                                              "right": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "docData"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "v"
                                                                }
                                                              }
                                                            },
                                                            {
                                                              "type": "AssignmentExpression",
                                                              "operator": "=",
                                                              "left": {
                                                                "type": "Identifier",
                                                                "name": "snapshot"
                                                              },
                                                              "right": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "docData"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "snapshot"
                                                                }
                                                              }
                                                            },
                                                            {
                                                              "type": "AssignmentExpression",
                                                              "operator": "=",
                                                              "left": {
                                                                "type": "Identifier",
                                                                "name": "type"
                                                              },
                                                              "right": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "docData"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "type"
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      },
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "AssignmentExpression",
                                                          "operator": "=",
                                                          "left": {
                                                            "type": "Identifier",
                                                            "name": "submit"
                                                          },
                                                          "right": {
                                                            "type": "FunctionExpression",
                                                            "id": null,
                                                            "params": [],
                                                            "defaults": [],
                                                            "body": {
                                                              "type": "BlockStatement",
                                                              "body": [
                                                                {
                                                                  "type": "VariableDeclaration",
                                                                  "declarations": [
                                                                    {
                                                                      "type": "VariableDeclarator",
                                                                      "id": {
                                                                        "type": "Identifier",
                                                                        "name": "newDocData"
                                                                      },
                                                                      "init": null
                                                                    },
                                                                    {
                                                                      "type": "VariableDeclarator",
                                                                      "id": {
                                                                        "type": "Identifier",
                                                                        "name": "newOpData"
                                                                      },
                                                                      "init": null
                                                                    }
                                                                  ],
                                                                  "kind": "var"
                                                                },
                                                                {
                                                                  "type": "TryStatement",
                                                                  "block": {
                                                                    "type": "BlockStatement",
                                                                    "body": [
                                                                      {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                          "type": "AssignmentExpression",
                                                                          "operator": "=",
                                                                          "left": {
                                                                            "type": "Identifier",
                                                                            "name": "snapshot"
                                                                          },
                                                                          "right": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                              "type": "MemberExpression",
                                                                              "computed": false,
                                                                              "object": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "docData"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "type"
                                                                                }
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "apply"
                                                                              }
                                                                            },
                                                                            "arguments": [
                                                                              {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "docData"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "snapshot"
                                                                                }
                                                                              },
                                                                              {
                                                                                "type": "Identifier",
                                                                                "name": "op"
                                                                              }
                                                                            ]
                                                                          }
                                                                        }
                                                                      }
                                                                    ]
                                                                  },
                                                                  "guardedHandlers": [],
                                                                  "handlers": [
                                                                    {
                                                                      "type": "CatchClause",
                                                                      "param": {
                                                                        "type": "Identifier",
                                                                        "name": "error"
                                                                      },
                                                                      "body": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                          {
                                                                            "type": "ExpressionStatement",
                                                                            "expression": {
                                                                              "type": "CallExpression",
                                                                              "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "console"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "error"
                                                                                }
                                                                              },
                                                                              "arguments": [
                                                                                {
                                                                                  "type": "MemberExpression",
                                                                                  "computed": false,
                                                                                  "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "error"
                                                                                  },
                                                                                  "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "stack"
                                                                                  }
                                                                                }
                                                                              ]
                                                                            }
                                                                          },
                                                                          {
                                                                            "type": "ExpressionStatement",
                                                                            "expression": {
                                                                              "type": "CallExpression",
                                                                              "callee": {
                                                                                "type": "Identifier",
                                                                                "name": "callback"
                                                                              },
                                                                              "arguments": [
                                                                                {
                                                                                  "type": "MemberExpression",
                                                                                  "computed": false,
                                                                                  "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "error"
                                                                                  },
                                                                                  "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "message"
                                                                                  }
                                                                                }
                                                                              ]
                                                                            }
                                                                          },
                                                                          {
                                                                            "type": "ReturnStatement",
                                                                            "argument": null
                                                                          }
                                                                        ]
                                                                      }
                                                                    }
                                                                  ],
                                                                  "finalizer": null
                                                                },
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                      "type": "Identifier",
                                                                      "name": "newOpData"
                                                                    },
                                                                    "right": {
                                                                      "type": "ObjectExpression",
                                                                      "properties": [
                                                                        {
                                                                          "type": "Property",
                                                                          "key": {
                                                                            "type": "Identifier",
                                                                            "name": "op"
                                                                          },
                                                                          "value": {
                                                                            "type": "Identifier",
                                                                            "name": "op"
                                                                          },
                                                                          "kind": "init"
                                                                        },
                                                                        {
                                                                          "type": "Property",
                                                                          "key": {
                                                                            "type": "Identifier",
                                                                            "name": "v"
                                                                          },
                                                                          "value": {
                                                                            "type": "Identifier",
                                                                            "name": "opVersion"
                                                                          },
                                                                          "kind": "init"
                                                                        },
                                                                        {
                                                                          "type": "Property",
                                                                          "key": {
                                                                            "type": "Identifier",
                                                                            "name": "meta"
                                                                          },
                                                                          "value": {
                                                                            "type": "Identifier",
                                                                            "name": "meta"
                                                                          },
                                                                          "kind": "init"
                                                                        }
                                                                      ]
                                                                    }
                                                                  }
                                                                },
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                      "type": "Identifier",
                                                                      "name": "newDocData"
                                                                    },
                                                                    "right": {
                                                                      "type": "ObjectExpression",
                                                                      "properties": [
                                                                        {
                                                                          "type": "Property",
                                                                          "key": {
                                                                            "type": "Identifier",
                                                                            "name": "snapshot"
                                                                          },
                                                                          "value": {
                                                                            "type": "Identifier",
                                                                            "name": "snapshot"
                                                                          },
                                                                          "kind": "init"
                                                                        },
                                                                        {
                                                                          "type": "Property",
                                                                          "key": {
                                                                            "type": "Identifier",
                                                                            "name": "type"
                                                                          },
                                                                          "value": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "Identifier",
                                                                              "name": "type"
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "name"
                                                                            }
                                                                          },
                                                                          "kind": "init"
                                                                        },
                                                                        {
                                                                          "type": "Property",
                                                                          "key": {
                                                                            "type": "Identifier",
                                                                            "name": "v"
                                                                          },
                                                                          "value": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "+",
                                                                            "left": {
                                                                              "type": "Identifier",
                                                                              "name": "opVersion"
                                                                            },
                                                                            "right": {
                                                                              "type": "Literal",
                                                                              "value": 1
                                                                            }
                                                                          },
                                                                          "kind": "init"
                                                                        },
                                                                        {
                                                                          "type": "Property",
                                                                          "key": {
                                                                            "type": "Identifier",
                                                                            "name": "meta"
                                                                          },
                                                                          "value": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "Identifier",
                                                                              "name": "docData"
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "meta"
                                                                            }
                                                                          },
                                                                          "kind": "init"
                                                                        }
                                                                      ]
                                                                    }
                                                                  }
                                                                },
                                                                {
                                                                  "type": "ReturnStatement",
                                                                  "argument": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "db"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "append"
                                                                      }
                                                                    },
                                                                    "arguments": [
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "docName"
                                                                      },
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "newOpData"
                                                                      },
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "newDocData"
                                                                      },
                                                                      {
                                                                        "type": "FunctionExpression",
                                                                        "id": null,
                                                                        "params": [],
                                                                        "defaults": [],
                                                                        "body": {
                                                                          "type": "BlockStatement",
                                                                          "body": [
                                                                            {
                                                                              "type": "ExpressionStatement",
                                                                              "expression": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                  "type": "MemberExpression",
                                                                                  "computed": false,
                                                                                  "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "events"
                                                                                  },
                                                                                  "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "onApplyOp"
                                                                                  }
                                                                                },
                                                                                "arguments": [
                                                                                  {
                                                                                    "type": "Identifier",
                                                                                    "name": "docName"
                                                                                  },
                                                                                  {
                                                                                    "type": "Identifier",
                                                                                    "name": "newOpData"
                                                                                  }
                                                                                ]
                                                                              }
                                                                            },
                                                                            {
                                                                              "type": "ReturnStatement",
                                                                              "argument": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                  "type": "Identifier",
                                                                                  "name": "callback"
                                                                                },
                                                                                "arguments": [
                                                                                  {
                                                                                    "type": "Literal",
                                                                                    "value": null
                                                                                  },
                                                                                  {
                                                                                    "type": "Identifier",
                                                                                    "name": "opVersion"
                                                                                  }
                                                                                ]
                                                                              }
                                                                            }
                                                                          ]
                                                                        },
                                                                        "rest": null,
                                                                        "generator": false,
                                                                        "expression": false
                                                                      }
                                                                    ]
                                                                  }
                                                                }
                                                              ]
                                                            },
                                                            "rest": null,
                                                            "generator": false,
                                                            "expression": false
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "type": "IfStatement",
                                                        "test": {
                                                          "type": "BinaryExpression",
                                                          "operator": ">",
                                                          "left": {
                                                            "type": "Identifier",
                                                            "name": "opVersion"
                                                          },
                                                          "right": {
                                                            "type": "Identifier",
                                                            "name": "version"
                                                          }
                                                        },
                                                        "consequent": {
                                                          "type": "BlockStatement",
                                                          "body": [
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "Identifier",
                                                                  "name": "callback"
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "Literal",
                                                                    "value": "Op at future version"
                                                                  }
                                                                ]
                                                              }
                                                            },
                                                            {
                                                              "type": "ReturnStatement",
                                                              "argument": null
                                                            }
                                                          ]
                                                        },
                                                        "alternate": null
                                                      },
                                                      {
                                                        "type": "IfStatement",
                                                        "test": {
                                                          "type": "BinaryExpression",
                                                          "operator": "<",
                                                          "left": {
                                                            "type": "Identifier",
                                                            "name": "opVersion"
                                                          },
                                                          "right": {
                                                            "type": "Identifier",
                                                            "name": "version"
                                                          }
                                                        },
                                                        "consequent": {
                                                          "type": "BlockStatement",
                                                          "body": [
                                                            {
                                                              "type": "ReturnStatement",
                                                              "argument": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "db"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "getOps"
                                                                  }
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "docName"
                                                                  },
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "opVersion"
                                                                  },
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "version"
                                                                  },
                                                                  {
                                                                    "type": "FunctionExpression",
                                                                    "id": null,
                                                                    "params": [
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "error"
                                                                      },
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "ops"
                                                                      }
                                                                    ],
                                                                    "defaults": [],
                                                                    "body": {
                                                                      "type": "BlockStatement",
                                                                      "body": [
                                                                        {
                                                                          "type": "VariableDeclaration",
                                                                          "declarations": [
                                                                            {
                                                                              "type": "VariableDeclarator",
                                                                              "id": {
                                                                                "type": "Identifier",
                                                                                "name": "realOp"
                                                                              },
                                                                              "init": null
                                                                            },
                                                                            {
                                                                              "type": "VariableDeclarator",
                                                                              "id": {
                                                                                "type": "Identifier",
                                                                                "name": "_i"
                                                                              },
                                                                              "init": null
                                                                            },
                                                                            {
                                                                              "type": "VariableDeclarator",
                                                                              "id": {
                                                                                "type": "Identifier",
                                                                                "name": "_len"
                                                                              },
                                                                              "init": null
                                                                            }
                                                                          ],
                                                                          "kind": "var"
                                                                        },
                                                                        {
                                                                          "type": "IfStatement",
                                                                          "test": {
                                                                            "type": "Identifier",
                                                                            "name": "error"
                                                                          },
                                                                          "consequent": {
                                                                            "type": "ReturnStatement",
                                                                            "argument": {
                                                                              "type": "CallExpression",
                                                                              "callee": {
                                                                                "type": "Identifier",
                                                                                "name": "callback"
                                                                              },
                                                                              "arguments": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "name": "error"
                                                                                }
                                                                              ]
                                                                            }
                                                                          },
                                                                          "alternate": null
                                                                        },
                                                                        {
                                                                          "type": "TryStatement",
                                                                          "block": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                              {
                                                                                "type": "ForStatement",
                                                                                "init": {
                                                                                  "type": "SequenceExpression",
                                                                                  "expressions": [
                                                                                    {
                                                                                      "type": "AssignmentExpression",
                                                                                      "operator": "=",
                                                                                      "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_i"
                                                                                      },
                                                                                      "right": {
                                                                                        "type": "Literal",
                                                                                        "value": 0
                                                                                      }
                                                                                    },
                                                                                    {
                                                                                      "type": "AssignmentExpression",
                                                                                      "operator": "=",
                                                                                      "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_len"
                                                                                      },
                                                                                      "right": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                          "type": "Identifier",
                                                                                          "name": "ops"
                                                                                        },
                                                                                        "property": {
                                                                                          "type": "Identifier",
                                                                                          "name": "length"
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                "test": {
                                                                                  "type": "BinaryExpression",
                                                                                  "operator": "<",
                                                                                  "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_i"
                                                                                  },
                                                                                  "right": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_len"
                                                                                  }
                                                                                },
                                                                                "update": {
                                                                                  "type": "UpdateExpression",
                                                                                  "operator": "++",
                                                                                  "argument": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_i"
                                                                                  },
                                                                                  "prefix": false
                                                                                },
                                                                                "body": {
                                                                                  "type": "BlockStatement",
                                                                                  "body": [
                                                                                    {
                                                                                      "type": "ExpressionStatement",
                                                                                      "expression": {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "=",
                                                                                        "left": {
                                                                                          "type": "Identifier",
                                                                                          "name": "realOp"
                                                                                        },
                                                                                        "right": {
                                                                                          "type": "MemberExpression",
                                                                                          "computed": true,
                                                                                          "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "ops"
                                                                                          },
                                                                                          "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_i"
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    },
                                                                                    {
                                                                                      "type": "ExpressionStatement",
                                                                                      "expression": {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "=",
                                                                                        "left": {
                                                                                          "type": "Identifier",
                                                                                          "name": "op"
                                                                                        },
                                                                                        "right": {
                                                                                          "type": "CallExpression",
                                                                                          "callee": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                              "type": "MemberExpression",
                                                                                              "computed": false,
                                                                                              "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "docData"
                                                                                              },
                                                                                              "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "type"
                                                                                              }
                                                                                            },
                                                                                            "property": {
                                                                                              "type": "Identifier",
                                                                                              "name": "transform"
                                                                                            }
                                                                                          },
                                                                                          "arguments": [
                                                                                            {
                                                                                              "type": "Identifier",
                                                                                              "name": "op"
                                                                                            },
                                                                                            {
                                                                                              "type": "MemberExpression",
                                                                                              "computed": false,
                                                                                              "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "realOp"
                                                                                              },
                                                                                              "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "op"
                                                                                              }
                                                                                            },
                                                                                            {
                                                                                              "type": "Literal",
                                                                                              "value": "left"
                                                                                            }
                                                                                          ]
                                                                                        }
                                                                                      }
                                                                                    },
                                                                                    {
                                                                                      "type": "ExpressionStatement",
                                                                                      "expression": {
                                                                                        "type": "UpdateExpression",
                                                                                        "operator": "++",
                                                                                        "argument": {
                                                                                          "type": "Identifier",
                                                                                          "name": "opVersion"
                                                                                        },
                                                                                        "prefix": false
                                                                                      }
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              }
                                                                            ]
                                                                          },
                                                                          "guardedHandlers": [],
                                                                          "handlers": [
                                                                            {
                                                                              "type": "CatchClause",
                                                                              "param": {
                                                                                "type": "Identifier",
                                                                                "name": "error"
                                                                              },
                                                                              "body": {
                                                                                "type": "BlockStatement",
                                                                                "body": [
                                                                                  {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                      "type": "CallExpression",
                                                                                      "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                          "type": "Identifier",
                                                                                          "name": "console"
                                                                                        },
                                                                                        "property": {
                                                                                          "type": "Identifier",
                                                                                          "name": "error"
                                                                                        }
                                                                                      },
                                                                                      "arguments": [
                                                                                        {
                                                                                          "type": "MemberExpression",
                                                                                          "computed": false,
                                                                                          "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "error"
                                                                                          },
                                                                                          "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "stack"
                                                                                          }
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  },
                                                                                  {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                      "type": "CallExpression",
                                                                                      "callee": {
                                                                                        "type": "Identifier",
                                                                                        "name": "callback"
                                                                                      },
                                                                                      "arguments": [
                                                                                        {
                                                                                          "type": "MemberExpression",
                                                                                          "computed": false,
                                                                                          "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "error"
                                                                                          },
                                                                                          "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "message"
                                                                                          }
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  },
                                                                                  {
                                                                                    "type": "ReturnStatement",
                                                                                    "argument": null
                                                                                  }
                                                                                ]
                                                                              }
                                                                            }
                                                                          ],
                                                                          "finalizer": null
                                                                        },
                                                                        {
                                                                          "type": "ReturnStatement",
                                                                          "argument": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                              "type": "Identifier",
                                                                              "name": "submit"
                                                                            },
                                                                            "arguments": []
                                                                          }
                                                                        }
                                                                      ]
                                                                    },
                                                                    "rest": null,
                                                                    "generator": false,
                                                                    "expression": false
                                                                  }
                                                                ]
                                                              }
                                                            }
                                                          ]
                                                        },
                                                        "alternate": {
                                                          "type": "BlockStatement",
                                                          "body": [
                                                            {
                                                              "type": "ReturnStatement",
                                                              "argument": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "Identifier",
                                                                  "name": "submit"
                                                                },
                                                                "arguments": []
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "rest": null,
                                                  "generator": false,
                                                  "expression": false
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      },
                                      "rest": null,
                                      "generator": false,
                                      "expression": false
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "process"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "nextTick"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "queues"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "docName"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Identifier",
                                              "name": "opData"
                                            },
                                            {
                                              "type": "Identifier",
                                              "name": "callback"
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "ThisExpression"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "applyMetaOp"
                      }
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "docName"
                        },
                        {
                          "type": "Identifier",
                          "name": "metaOpData"
                        },
                        {
                          "type": "Identifier",
                          "name": "callback"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "VariableDeclaration",
                            "declarations": [
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "op"
                                },
                                "init": null
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "v"
                                },
                                "init": null
                              }
                            ],
                            "kind": "var"
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "SequenceExpression",
                              "expressions": [
                                {
                                  "type": "AssignmentExpression",
                                  "operator": "=",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "v"
                                  },
                                  "right": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "metaOpData"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "v"
                                    }
                                  }
                                },
                                {
                                  "type": "AssignmentExpression",
                                  "operator": "=",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "op"
                                  },
                                  "right": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "metaOpData"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "op"
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "type": "ThrowStatement",
                            "argument": {
                              "type": "NewExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "Error"
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": "Not implemented"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": true,
                      "object": {
                        "type": "ThisExpression"
                      },
                      "property": {
                        "type": "Literal",
                        "value": "delete"
                      }
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "docName"
                        },
                        {
                          "type": "Identifier",
                          "name": "callback"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "events"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "removeAllListeners"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "docName"
                                }
                              ]
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "UnaryExpression",
                              "operator": "delete",
                              "argument": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                  "type": "Identifier",
                                  "name": "queues"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "docName"
                                }
                              },
                              "prefix": true
                            }
                          },
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                  "type": "Identifier",
                                  "name": "db"
                                },
                                "property": {
                                  "type": "Literal",
                                  "value": "delete"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "docName"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "callback"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "ThisExpression"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "usage"
                      }
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "VariableDeclaration",
                            "declarations": [
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "count"
                                },
                                "init": {
                                  "type": "Literal",
                                  "value": 0
                                }
                              }
                            ],
                            "kind": "var"
                          },
                          {
                            "type": "ForInStatement",
                            "left": {
                              "type": "VariableDeclaration",
                              "declarations": [
                                {
                                  "type": "VariableDeclarator",
                                  "id": {
                                    "type": "Identifier",
                                    "name": "docName"
                                  },
                                  "init": null
                                }
                              ],
                              "kind": "var"
                            },
                            "right": {
                              "type": "Identifier",
                              "name": "queues"
                            },
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "UpdateExpression",
                                    "operator": "++",
                                    "argument": {
                                      "type": "Identifier",
                                      "name": "count"
                                    },
                                    "prefix": false
                                  }
                                }
                              ]
                            },
                            "each": false
                          },
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "BinaryExpression",
                              "operator": "+",
                              "left": {
                                "type": "BinaryExpression",
                                "operator": "+",
                                "left": {
                                  "type": "BinaryExpression",
                                  "operator": "+",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "count"
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": " share(s) "
                                  }
                                },
                                "right": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "ThisExpression"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "clientCount"
                                  }
                                }
                              },
                              "right": {
                                "type": "Literal",
                                "value": " client(s)"
                              }
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "events"
                    },
                    "right": {
                      "type": "NewExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Events"
                      },
                      "arguments": [
                        {
                          "type": "ThisExpression"
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "ThisExpression"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "listen"
                      }
                    },
                    "right": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "events"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "listen"
                      }
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "ThisExpression"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "removeListener"
                      }
                    },
                    "right": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "events"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "removeListener"
                      }
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "ThisExpression"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "hasListeners"
                      }
                    },
                    "right": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "events"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "hasListeners"
                      }
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "ThisExpression"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "listenFromVersion"
                      }
                    },
                    "right": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "events"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "listenFromVersion"
                      }
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "auth"
                    },
                    "right": {
                      "type": "LogicalExpression",
                      "operator": "||",
                      "left": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "options"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "auth"
                        }
                      },
                      "right": {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [
                          {
                            "type": "Identifier",
                            "name": "client"
                          },
                          {
                            "type": "Identifier",
                            "name": "action"
                          }
                        ],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "VariableDeclaration",
                              "declarations": [
                                {
                                  "type": "VariableDeclarator",
                                  "id": {
                                    "type": "Identifier",
                                    "name": "_ref"
                                  },
                                  "init": null
                                }
                              ],
                              "kind": "var"
                            },
                            {
                              "type": "IfStatement",
                              "test": {
                                "type": "LogicalExpression",
                                "operator": "||",
                                "left": {
                                  "type": "LogicalExpression",
                                  "operator": "||",
                                  "left": {
                                    "type": "LogicalExpression",
                                    "operator": "||",
                                    "left": {
                                      "type": "BinaryExpression",
                                      "operator": "===",
                                      "left": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                          "type": "Identifier",
                                          "name": "_ref"
                                        },
                                        "right": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "action"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "type"
                                          }
                                        }
                                      },
                                      "right": {
                                        "type": "Literal",
                                        "value": "connect"
                                      }
                                    },
                                    "right": {
                                      "type": "BinaryExpression",
                                      "operator": "===",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "_ref"
                                      },
                                      "right": {
                                        "type": "Literal",
                                        "value": "read"
                                      }
                                    }
                                  },
                                  "right": {
                                    "type": "BinaryExpression",
                                    "operator": "===",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "_ref"
                                    },
                                    "right": {
                                      "type": "Literal",
                                      "value": "create"
                                    }
                                  }
                                },
                                "right": {
                                  "type": "BinaryExpression",
                                  "operator": "===",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "_ref"
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": "update"
                                  }
                                }
                              },
                              "consequent": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ReturnStatement",
                                    "argument": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "action"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "accept"
                                        }
                                      },
                                      "arguments": []
                                    }
                                  }
                                ]
                              },
                              "alternate": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ReturnStatement",
                                    "argument": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "action"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "reject"
                                        }
                                      },
                                      "arguments": []
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      }
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "doAuth"
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "client"
                        },
                        {
                          "type": "Identifier",
                          "name": "actionData"
                        },
                        {
                          "type": "Identifier",
                          "name": "name"
                        },
                        {
                          "type": "Identifier",
                          "name": "userCallback"
                        },
                        {
                          "type": "Identifier",
                          "name": "acceptCallback"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "VariableDeclaration",
                            "declarations": [
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "action"
                                },
                                "init": null
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "responded"
                                },
                                "init": null
                              }
                            ],
                            "kind": "var"
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "name": "action"
                              },
                              "right": {
                                "type": "LogicalExpression",
                                "operator": "||",
                                "left": {
                                  "type": "Identifier",
                                  "name": "actionData"
                                },
                                "right": {
                                  "type": "ObjectExpression",
                                  "properties": []
                                }
                              }
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "action"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "name"
                                }
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "name"
                              }
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "action"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "type"
                                }
                              },
                              "right": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "SwitchStatement",
                                        "discriminant": {
                                          "type": "Identifier",
                                          "name": "name"
                                        },
                                        "cases": [
                                          {
                                            "type": "SwitchCase",
                                            "test": {
                                              "type": "Literal",
                                              "value": "connect"
                                            },
                                            "consequent": [
                                              {
                                                "type": "ReturnStatement",
                                                "argument": {
                                                  "type": "Literal",
                                                  "value": "connect"
                                                }
                                              }
                                            ]
                                          },
                                          {
                                            "type": "SwitchCase",
                                            "test": {
                                              "type": "Literal",
                                              "value": "create"
                                            },
                                            "consequent": [
                                              {
                                                "type": "ReturnStatement",
                                                "argument": {
                                                  "type": "Literal",
                                                  "value": "create"
                                                }
                                              }
                                            ]
                                          },
                                          {
                                            "type": "SwitchCase",
                                            "test": {
                                              "type": "Literal",
                                              "value": "get snapshot"
                                            },
                                            "consequent": []
                                          },
                                          {
                                            "type": "SwitchCase",
                                            "test": {
                                              "type": "Literal",
                                              "value": "get ops"
                                            },
                                            "consequent": []
                                          },
                                          {
                                            "type": "SwitchCase",
                                            "test": {
                                              "type": "Literal",
                                              "value": "open"
                                            },
                                            "consequent": [
                                              {
                                                "type": "ReturnStatement",
                                                "argument": {
                                                  "type": "Literal",
                                                  "value": "read"
                                                }
                                              }
                                            ]
                                          },
                                          {
                                            "type": "SwitchCase",
                                            "test": {
                                              "type": "Literal",
                                              "value": "submit op"
                                            },
                                            "consequent": [
                                              {
                                                "type": "ReturnStatement",
                                                "argument": {
                                                  "type": "Literal",
                                                  "value": "update"
                                                }
                                              }
                                            ]
                                          },
                                          {
                                            "type": "SwitchCase",
                                            "test": {
                                              "type": "Literal",
                                              "value": "delete"
                                            },
                                            "consequent": [
                                              {
                                                "type": "ReturnStatement",
                                                "argument": {
                                                  "type": "Literal",
                                                  "value": "delete"
                                                }
                                              }
                                            ]
                                          },
                                          {
                                            "type": "SwitchCase",
                                            "test": null,
                                            "consequent": [
                                              {
                                                "type": "ThrowStatement",
                                                "argument": {
                                                  "type": "NewExpression",
                                                  "callee": {
                                                    "type": "Identifier",
                                                    "name": "Error"
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "BinaryExpression",
                                                      "operator": "+",
                                                      "left": {
                                                        "type": "Literal",
                                                        "value": "Invalid action name "
                                                      },
                                                      "right": {
                                                        "type": "Identifier",
                                                        "name": "name"
                                                      }
                                                    }
                                                  ]
                                                }
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                },
                                "arguments": []
                              }
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "name": "responded"
                              },
                              "right": {
                                "type": "Literal",
                                "value": false
                              }
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "action"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "reject"
                                }
                              },
                              "right": {
                                "type": "FunctionExpression",
                                "id": null,
                                "params": [],
                                "defaults": [],
                                "body": {
                                  "type": "BlockStatement",
                                  "body": [
                                    {
                                      "type": "IfStatement",
                                      "test": {
                                        "type": "Identifier",
                                        "name": "responded"
                                      },
                                      "consequent": {
                                        "type": "ThrowStatement",
                                        "argument": {
                                          "type": "NewExpression",
                                          "callee": {
                                            "type": "Identifier",
                                            "name": "Error"
                                          },
                                          "arguments": [
                                            {
                                              "type": "Literal",
                                              "value": "Multiple accept/reject calls made"
                                            }
                                          ]
                                        }
                                      },
                                      "alternate": null
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                          "type": "Identifier",
                                          "name": "responded"
                                        },
                                        "right": {
                                          "type": "Literal",
                                          "value": true
                                        }
                                      }
                                    },
                                    {
                                      "type": "ReturnStatement",
                                      "argument": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "Identifier",
                                          "name": "userCallback"
                                        },
                                        "arguments": [
                                          {
                                            "type": "Literal",
                                            "value": "forbidden"
                                          },
                                          {
                                            "type": "Literal",
                                            "value": null
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                              }
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "action"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "accept"
                                }
                              },
                              "right": {
                                "type": "FunctionExpression",
                                "id": null,
                                "params": [],
                                "defaults": [],
                                "body": {
                                  "type": "BlockStatement",
                                  "body": [
                                    {
                                      "type": "IfStatement",
                                      "test": {
                                        "type": "Identifier",
                                        "name": "responded"
                                      },
                                      "consequent": {
                                        "type": "ThrowStatement",
                                        "argument": {
                                          "type": "NewExpression",
                                          "callee": {
                                            "type": "Identifier",
                                            "name": "Error"
                                          },
                                          "arguments": [
                                            {
                                              "type": "Literal",
                                              "value": "Multiple accept/reject calls made"
                                            }
                                          ]
                                        }
                                      },
                                      "alternate": null
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                          "type": "Identifier",
                                          "name": "responded"
                                        },
                                        "right": {
                                          "type": "Literal",
                                          "value": true
                                        }
                                      }
                                    },
                                    {
                                      "type": "ReturnStatement",
                                      "argument": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "Identifier",
                                          "name": "acceptCallback"
                                        },
                                        "arguments": []
                                      }
                                    }
                                  ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                              }
                            }
                          },
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "auth"
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "client"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "action"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "createClient"
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "data"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "ObjectExpression",
                              "properties": [
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "id"
                                  },
                                  "value": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "hat"
                                    },
                                    "arguments": []
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "connectTime"
                                  },
                                  "value": {
                                    "type": "NewExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "Date"
                                    },
                                    "arguments": []
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "headers"
                                  },
                                  "value": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "data"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "headers"
                                    }
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "remoteAddress"
                                  },
                                  "value": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "data"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "remoteAddress"
                                    }
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "openDocs"
                                  },
                                  "value": {
                                    "type": "ObjectExpression",
                                    "properties": []
                                  },
                                  "kind": "init"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "ThisExpression"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "clientConnect"
                      }
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "data"
                        },
                        {
                          "type": "Identifier",
                          "name": "callback"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "VariableDeclaration",
                            "declarations": [
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "client"
                                },
                                "init": null
                              }
                            ],
                            "kind": "var"
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "UpdateExpression",
                              "operator": "++",
                              "argument": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "ThisExpression"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "clientCount"
                                }
                              },
                              "prefix": false
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "name": "client"
                              },
                              "right": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "createClient"
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "data"
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "doAuth"
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "client"
                                },
                                {
                                  "type": "Literal",
                                  "value": null
                                },
                                {
                                  "type": "Literal",
                                  "value": "connect"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "callback"
                                },
                                {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "Identifier",
                                            "name": "callback"
                                          },
                                          "arguments": [
                                            {
                                              "type": "Literal",
                                              "value": null
                                            },
                                            {
                                              "type": "Identifier",
                                              "name": "client"
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "ThisExpression"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "clientDisconnect"
                      }
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "client"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "VariableDeclaration",
                            "declarations": [
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "docName"
                                },
                                "init": null
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "_results"
                                },
                                "init": null
                              }
                            ],
                            "kind": "var"
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "UpdateExpression",
                              "operator": "--",
                              "argument": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "ThisExpression"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "clientCount"
                                }
                              },
                              "prefix": false
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "name": "_results"
                              },
                              "right": {
                                "type": "ArrayExpression",
                                "elements": []
                              }
                            }
                          },
                          {
                            "type": "ForInStatement",
                            "left": {
                              "type": "Identifier",
                              "name": "docName"
                            },
                            "right": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "client"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "openDocs"
                              }
                            },
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "_results"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "push"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "db"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "docClosed"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "Identifier",
                                            "name": "docName"
                                          },
                                          {
                                            "type": "Identifier",
                                            "name": "client"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "each": false
                          },
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "Identifier",
                              "name": "_results"
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "ThisExpression"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "clientGetOps"
                      }
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "client"
                        },
                        {
                          "type": "Identifier",
                          "name": "docName"
                        },
                        {
                          "type": "Identifier",
                          "name": "start"
                        },
                        {
                          "type": "Identifier",
                          "name": "end"
                        },
                        {
                          "type": "Identifier",
                          "name": "callback"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "VariableDeclaration",
                            "declarations": [
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "_this"
                                },
                                "init": {
                                  "type": "ThisExpression"
                                }
                              }
                            ],
                            "kind": "var"
                          },
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "doAuth"
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "client"
                                },
                                {
                                  "type": "ObjectExpression",
                                  "properties": [
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Identifier",
                                        "name": "docName"
                                      },
                                      "value": {
                                        "type": "Identifier",
                                        "name": "docName"
                                      },
                                      "kind": "init"
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Identifier",
                                        "name": "start"
                                      },
                                      "value": {
                                        "type": "Identifier",
                                        "name": "start"
                                      },
                                      "kind": "init"
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Identifier",
                                        "name": "end"
                                      },
                                      "value": {
                                        "type": "Identifier",
                                        "name": "end"
                                      },
                                      "kind": "init"
                                    }
                                  ]
                                },
                                {
                                  "type": "Literal",
                                  "value": "get ops"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "callback"
                                },
                                {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "_this"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "getOps"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Identifier",
                                              "name": "docName"
                                            },
                                            {
                                              "type": "Identifier",
                                              "name": "start"
                                            },
                                            {
                                              "type": "Identifier",
                                              "name": "end"
                                            },
                                            {
                                              "type": "Identifier",
                                              "name": "callback"
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "ThisExpression"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "clientGetSnapshot"
                      }
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "client"
                        },
                        {
                          "type": "Identifier",
                          "name": "docName"
                        },
                        {
                          "type": "Identifier",
                          "name": "callback"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "VariableDeclaration",
                            "declarations": [
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "_this"
                                },
                                "init": {
                                  "type": "ThisExpression"
                                }
                              }
                            ],
                            "kind": "var"
                          },
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "doAuth"
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "client"
                                },
                                {
                                  "type": "ObjectExpression",
                                  "properties": [
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Identifier",
                                        "name": "docName"
                                      },
                                      "value": {
                                        "type": "Identifier",
                                        "name": "docName"
                                      },
                                      "kind": "init"
                                    }
                                  ]
                                },
                                {
                                  "type": "Literal",
                                  "value": "get snapshot"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "callback"
                                },
                                {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "_this"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "getSnapshot"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Identifier",
                                              "name": "docName"
                                            },
                                            {
                                              "type": "Identifier",
                                              "name": "callback"
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "ThisExpression"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "clientCreate"
                      }
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "client"
                        },
                        {
                          "type": "Identifier",
                          "name": "docName"
                        },
                        {
                          "type": "Identifier",
                          "name": "type"
                        },
                        {
                          "type": "Identifier",
                          "name": "meta"
                        },
                        {
                          "type": "Identifier",
                          "name": "callback"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "VariableDeclaration",
                            "declarations": [
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "_this"
                                },
                                "init": {
                                  "type": "ThisExpression"
                                }
                              }
                            ],
                            "kind": "var"
                          },
                          {
                            "type": "IfStatement",
                            "test": {
                              "type": "BinaryExpression",
                              "operator": "===",
                              "left": {
                                "type": "UnaryExpression",
                                "operator": "typeof",
                                "argument": {
                                  "type": "Identifier",
                                  "name": "type"
                                },
                                "prefix": true
                              },
                              "right": {
                                "type": "Literal",
                                "value": "string"
                              }
                            },
                            "consequent": {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "Identifier",
                                  "name": "type"
                                },
                                "right": {
                                  "type": "MemberExpression",
                                  "computed": true,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "types"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "type"
                                  }
                                }
                              }
                            },
                            "alternate": null
                          },
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "doAuth"
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "client"
                                },
                                {
                                  "type": "ObjectExpression",
                                  "properties": [
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Identifier",
                                        "name": "docName"
                                      },
                                      "value": {
                                        "type": "Identifier",
                                        "name": "docName"
                                      },
                                      "kind": "init"
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Identifier",
                                        "name": "docType"
                                      },
                                      "value": {
                                        "type": "Identifier",
                                        "name": "type"
                                      },
                                      "kind": "init"
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Identifier",
                                        "name": "meta"
                                      },
                                      "value": {
                                        "type": "Identifier",
                                        "name": "meta"
                                      },
                                      "kind": "init"
                                    }
                                  ]
                                },
                                {
                                  "type": "Literal",
                                  "value": "create"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "callback"
                                },
                                {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "_this"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "create"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Identifier",
                                              "name": "docName"
                                            },
                                            {
                                              "type": "Identifier",
                                              "name": "type"
                                            },
                                            {
                                              "type": "Identifier",
                                              "name": "meta"
                                            },
                                            {
                                              "type": "Identifier",
                                              "name": "callback"
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "ThisExpression"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "clientSubmitOp"
                      }
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "client"
                        },
                        {
                          "type": "Identifier",
                          "name": "docName"
                        },
                        {
                          "type": "Identifier",
                          "name": "opData"
                        },
                        {
                          "type": "Identifier",
                          "name": "callback"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "VariableDeclaration",
                            "declarations": [
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "_this"
                                },
                                "init": {
                                  "type": "ThisExpression"
                                }
                              }
                            ],
                            "kind": "var"
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "LogicalExpression",
                              "operator": "||",
                              "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "opData"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "meta"
                                }
                              },
                              "right": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "opData"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "meta"
                                  }
                                },
                                "right": {
                                  "type": "ObjectExpression",
                                  "properties": []
                                }
                              }
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "opData"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "meta"
                                  }
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "source"
                                }
                              },
                              "right": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "client"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "id"
                                }
                              }
                            }
                          },
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "doAuth"
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "client"
                                },
                                {
                                  "type": "ObjectExpression",
                                  "properties": [
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Identifier",
                                        "name": "docName"
                                      },
                                      "value": {
                                        "type": "Identifier",
                                        "name": "docName"
                                      },
                                      "kind": "init"
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Identifier",
                                        "name": "op"
                                      },
                                      "value": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "opData"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "op"
                                        }
                                      },
                                      "kind": "init"
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Identifier",
                                        "name": "v"
                                      },
                                      "value": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "opData"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "v"
                                        }
                                      },
                                      "kind": "init"
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Identifier",
                                        "name": "meta"
                                      },
                                      "value": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "opData"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "meta"
                                        }
                                      },
                                      "kind": "init"
                                    }
                                  ]
                                },
                                {
                                  "type": "Literal",
                                  "value": "submit op"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "callback"
                                },
                                {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "_this"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "applyOp"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Identifier",
                                              "name": "docName"
                                            },
                                            {
                                              "type": "Identifier",
                                              "name": "opData"
                                            },
                                            {
                                              "type": "Identifier",
                                              "name": "callback"
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "ThisExpression"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "clientDelete"
                      }
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "client"
                        },
                        {
                          "type": "Identifier",
                          "name": "docName"
                        },
                        {
                          "type": "Identifier",
                          "name": "callback"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "VariableDeclaration",
                            "declarations": [
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "_this"
                                },
                                "init": {
                                  "type": "ThisExpression"
                                }
                              }
                            ],
                            "kind": "var"
                          },
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "doAuth"
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "client"
                                },
                                {
                                  "type": "ObjectExpression",
                                  "properties": [
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Identifier",
                                        "name": "docName"
                                      },
                                      "value": {
                                        "type": "Identifier",
                                        "name": "docName"
                                      },
                                      "kind": "init"
                                    }
                                  ]
                                },
                                {
                                  "type": "Literal",
                                  "value": "delete"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "callback"
                                },
                                {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "_this"
                                            },
                                            "property": {
                                              "type": "Literal",
                                              "value": "delete"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Identifier",
                                              "name": "docName"
                                            },
                                            {
                                              "type": "Identifier",
                                              "name": "callback"
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "ThisExpression"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "clientOpen"
                      }
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "client"
                        },
                        {
                          "type": "Identifier",
                          "name": "docName"
                        },
                        {
                          "type": "Identifier",
                          "name": "version"
                        },
                        {
                          "type": "Identifier",
                          "name": "listener"
                        },
                        {
                          "type": "Identifier",
                          "name": "callback"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "VariableDeclaration",
                            "declarations": [
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "clientDidOpen"
                                },
                                "init": null
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "_this"
                                },
                                "init": {
                                  "type": "ThisExpression"
                                }
                              }
                            ],
                            "kind": "var"
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "name": "clientDidOpen"
                              },
                              "right": {
                                "type": "FunctionExpression",
                                "id": null,
                                "params": [],
                                "defaults": [],
                                "body": {
                                  "type": "BlockStatement",
                                  "body": [
                                    {
                                      "type": "ReturnStatement",
                                      "argument": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "db"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "docOpened"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "Identifier",
                                            "name": "docName"
                                          },
                                          {
                                            "type": "Identifier",
                                            "name": "client"
                                          },
                                          {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                              {
                                                "type": "Identifier",
                                                "name": "error"
                                              }
                                            ],
                                            "defaults": [],
                                            "body": {
                                              "type": "BlockStatement",
                                              "body": [
                                                {
                                                  "type": "IfStatement",
                                                  "test": {
                                                    "type": "Identifier",
                                                    "name": "error"
                                                  },
                                                  "consequent": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                          "type": "ConditionalExpression",
                                                          "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "===",
                                                            "left": {
                                                              "type": "UnaryExpression",
                                                              "operator": "typeof",
                                                              "argument": {
                                                                "type": "Identifier",
                                                                "name": "callback"
                                                              },
                                                              "prefix": true
                                                            },
                                                            "right": {
                                                              "type": "Literal",
                                                              "value": "function"
                                                            }
                                                          },
                                                          "consequent": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "Identifier",
                                                              "name": "callback"
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "Identifier",
                                                                "name": "error"
                                                              }
                                                            ]
                                                          },
                                                          "alternate": {
                                                            "type": "UnaryExpression",
                                                            "operator": "void",
                                                            "argument": {
                                                              "type": "Literal",
                                                              "value": 0
                                                            },
                                                            "prefix": true
                                                          }
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "alternate": null
                                                },
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                      "type": "MemberExpression",
                                                      "computed": true,
                                                      "object": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "client"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "openDocs"
                                                        }
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "docName"
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": true
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "ReturnStatement",
                                                  "argument": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "_this"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "listenFromVersion"
                                                      }
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "Identifier",
                                                        "name": "docName"
                                                      },
                                                      {
                                                        "type": "Identifier",
                                                        "name": "version"
                                                      },
                                                      {
                                                        "type": "Identifier",
                                                        "name": "listener"
                                                      },
                                                      {
                                                        "type": "FunctionExpression",
                                                        "id": null,
                                                        "params": [
                                                          {
                                                            "type": "Identifier",
                                                            "name": "error"
                                                          },
                                                          {
                                                            "type": "Identifier",
                                                            "name": "v"
                                                          }
                                                        ],
                                                        "defaults": [],
                                                        "body": {
                                                          "type": "BlockStatement",
                                                          "body": [
                                                            {
                                                              "type": "IfStatement",
                                                              "test": {
                                                                "type": "Identifier",
                                                                "name": "error"
                                                              },
                                                              "consequent": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                  {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                      "type": "UnaryExpression",
                                                                      "operator": "delete",
                                                                      "argument": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "client"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "openDocs"
                                                                          }
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "docName"
                                                                        }
                                                                      },
                                                                      "prefix": true
                                                                    }
                                                                  },
                                                                  {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "db"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "docClosed"
                                                                        }
                                                                      },
                                                                      "arguments": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "name": "docName"
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "name": "client"
                                                                        }
                                                                      ]
                                                                    }
                                                                  }
                                                                ]
                                                              },
                                                              "alternate": null
                                                            },
                                                            {
                                                              "type": "ReturnStatement",
                                                              "argument": {
                                                                "type": "ConditionalExpression",
                                                                "test": {
                                                                  "type": "BinaryExpression",
                                                                  "operator": "===",
                                                                  "left": {
                                                                    "type": "UnaryExpression",
                                                                    "operator": "typeof",
                                                                    "argument": {
                                                                      "type": "Identifier",
                                                                      "name": "callback"
                                                                    },
                                                                    "prefix": true
                                                                  },
                                                                  "right": {
                                                                    "type": "Literal",
                                                                    "value": "function"
                                                                  }
                                                                },
                                                                "consequent": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "callback"
                                                                  },
                                                                  "arguments": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "name": "error"
                                                                    },
                                                                    {
                                                                      "type": "Identifier",
                                                                      "name": "v"
                                                                    }
                                                                  ]
                                                                },
                                                                "alternate": {
                                                                  "type": "UnaryExpression",
                                                                  "operator": "void",
                                                                  "argument": {
                                                                    "type": "Literal",
                                                                    "value": 0
                                                                  },
                                                                  "prefix": true
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        },
                                                        "rest": null,
                                                        "generator": false,
                                                        "expression": false
                                                      }
                                                    ]
                                                  }
                                                }
                                              ]
                                            },
                                            "rest": null,
                                            "generator": false,
                                            "expression": false
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                              }
                            }
                          },
                          {
                            "type": "IfStatement",
                            "test": {
                              "type": "BinaryExpression",
                              "operator": "!=",
                              "left": {
                                "type": "Identifier",
                                "name": "version"
                              },
                              "right": {
                                "type": "Literal",
                                "value": null
                              }
                            },
                            "consequent": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "doAuth"
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "client"
                                      },
                                      {
                                        "type": "ObjectExpression",
                                        "properties": [
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "docName"
                                            },
                                            "value": {
                                              "type": "Identifier",
                                              "name": "docName"
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "start"
                                            },
                                            "value": {
                                              "type": "Identifier",
                                              "name": "version"
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "end"
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": null
                                            },
                                            "kind": "init"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "Literal",
                                        "value": "get ops"
                                      },
                                      {
                                        "type": "Identifier",
                                        "name": "callback"
                                      },
                                      {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [],
                                        "defaults": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ReturnStatement",
                                              "argument": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "Identifier",
                                                  "name": "doAuth"
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "client"
                                                  },
                                                  {
                                                    "type": "ObjectExpression",
                                                    "properties": [
                                                      {
                                                        "type": "Property",
                                                        "key": {
                                                          "type": "Identifier",
                                                          "name": "docName"
                                                        },
                                                        "value": {
                                                          "type": "Identifier",
                                                          "name": "docName"
                                                        },
                                                        "kind": "init"
                                                      },
                                                      {
                                                        "type": "Property",
                                                        "key": {
                                                          "type": "Identifier",
                                                          "name": "v"
                                                        },
                                                        "value": {
                                                          "type": "Identifier",
                                                          "name": "version"
                                                        },
                                                        "kind": "init"
                                                      }
                                                    ]
                                                  },
                                                  {
                                                    "type": "Literal",
                                                    "value": "open"
                                                  },
                                                  {
                                                    "type": "Identifier",
                                                    "name": "callback"
                                                  },
                                                  {
                                                    "type": "Identifier",
                                                    "name": "clientDidOpen"
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "alternate": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "doAuth"
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "client"
                                      },
                                      {
                                        "type": "ObjectExpression",
                                        "properties": [
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "docName"
                                            },
                                            "value": {
                                              "type": "Identifier",
                                              "name": "docName"
                                            },
                                            "kind": "init"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "Literal",
                                        "value": "open"
                                      },
                                      {
                                        "type": "Identifier",
                                        "name": "callback"
                                      },
                                      {
                                        "type": "Identifier",
                                        "name": "clientDidOpen"
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                },
                {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "ThisExpression"
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        }
      }
    }
  ]
}
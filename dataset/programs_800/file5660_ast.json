{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "FunctionExpression",
          "id": null,
          "params": [],
          "defaults": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "program"
                    },
                    "init": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "chinachu"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "getProgramById"
                        }
                      },
                      "arguments": [
                        {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "request"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "param"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "id"
                          }
                        },
                        {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "data"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "schedule"
                          }
                        }
                      ]
                    }
                  }
                ],
                "kind": "var"
              },
              {
                "type": "IfStatement",
                "test": {
                  "type": "BinaryExpression",
                  "operator": "===",
                  "left": {
                    "type": "Identifier",
                    "name": "program"
                  },
                  "right": {
                    "type": "Literal",
                    "value": null
                  }
                },
                "consequent": {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "response"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "error"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": 404
                      }
                    ]
                  }
                },
                "alternate": null
              },
              {
                "type": "SwitchStatement",
                "discriminant": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "Identifier",
                    "name": "request"
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "method"
                  }
                },
                "cases": [
                  {
                    "type": "SwitchCase",
                    "test": {
                      "type": "Literal",
                      "value": "GET"
                    },
                    "consequent": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "response"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "head"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 200
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "response"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "end"
                            }
                          },
                          "arguments": [
                            {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "JSON"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "stringify"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "program"
                                },
                                {
                                  "type": "Literal",
                                  "value": null
                                },
                                {
                                  "type": "Literal",
                                  "value": "  "
                                }
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "type": "ReturnStatement",
                        "argument": null
                      }
                    ]
                  },
                  {
                    "type": "SwitchCase",
                    "test": {
                      "type": "Literal",
                      "value": "PUT"
                    },
                    "consequent": [
                      {
                        "type": "IfStatement",
                        "test": {
                          "type": "BinaryExpression",
                          "operator": "!==",
                          "left": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "chinachu"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "getProgramById"
                              }
                            },
                            "arguments": [
                              {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "program"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "id"
                                }
                              },
                              {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "data"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "reserves"
                                }
                              }
                            ]
                          },
                          "right": {
                            "type": "Literal",
                            "value": null
                          }
                        },
                        "consequent": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ReturnStatement",
                              "argument": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "response"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "error"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Literal",
                                    "value": 409
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "alternate": null
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "child_process"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "exec"
                            }
                          },
                          "arguments": [
                            {
                              "type": "BinaryExpression",
                              "operator": "+",
                              "left": {
                                "type": "Literal",
                                "value": "node app-cli.js -mode reserve -id "
                              },
                              "right": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "program"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "id"
                                }
                              }
                            },
                            {
                              "type": "FunctionExpression",
                              "id": null,
                              "params": [
                                {
                                  "type": "Identifier",
                                  "name": "err"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "stdout"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "stderr"
                                }
                              ],
                              "defaults": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "IfStatement",
                                    "test": {
                                      "type": "Identifier",
                                      "name": "err"
                                    },
                                    "consequent": {
                                      "type": "ReturnStatement",
                                      "argument": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "response"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "error"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "Literal",
                                            "value": 500
                                          }
                                        ]
                                      }
                                    },
                                    "alternate": null
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "response"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "head"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": 200
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "response"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "end"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "{}"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              },
                              "rest": null,
                              "generator": false,
                              "expression": false
                            }
                          ]
                        }
                      },
                      {
                        "type": "ReturnStatement",
                        "argument": null
                      }
                    ]
                  }
                ]
              }
            ]
          },
          "rest": null,
          "generator": false,
          "expression": false
        },
        "arguments": []
      }
    }
  ]
}
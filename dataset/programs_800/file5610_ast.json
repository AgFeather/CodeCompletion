{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "define"
        },
        "arguments": [
          {
            "type": "FunctionExpression",
            "id": null,
            "params": [],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "Literal",
                    "value": "use strict"
                  }
                },
                {
                  "type": "FunctionDeclaration",
                  "id": {
                    "type": "Identifier",
                    "name": "initShim"
                  },
                  "params": [],
                  "defaults": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "idbModules"
                            },
                            "init": {
                              "type": "ObjectExpression",
                              "properties": []
                            }
                          }
                        ],
                        "kind": "var"
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [
                              {
                                "type": "Identifier",
                                "name": "idbModules"
                              }
                            ],
                            "defaults": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "FunctionDeclaration",
                                  "id": {
                                    "type": "Identifier",
                                    "name": "callback"
                                  },
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "fn"
                                    },
                                    {
                                      "type": "Identifier",
                                      "name": "context"
                                    },
                                    {
                                      "type": "Identifier",
                                      "name": "event"
                                    },
                                    {
                                      "type": "Identifier",
                                      "name": "func"
                                    }
                                  ],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "event"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "target"
                                            }
                                          },
                                          "right": {
                                            "type": "Identifier",
                                            "name": "context"
                                          }
                                        }
                                      },
                                      {
                                        "type": "IfStatement",
                                        "test": {
                                          "type": "BinaryExpression",
                                          "operator": "===",
                                          "left": {
                                            "type": "UnaryExpression",
                                            "operator": "typeof",
                                            "argument": {
                                              "type": "MemberExpression",
                                              "computed": true,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "context"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "fn"
                                              }
                                            },
                                            "prefix": true
                                          },
                                          "right": {
                                            "type": "Literal",
                                            "value": "function"
                                          }
                                        },
                                        "consequent": {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "context"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "fn"
                                                }
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "apply"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "Identifier",
                                                "name": "context"
                                              },
                                              {
                                                "type": "ArrayExpression",
                                                "elements": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "event"
                                                  }
                                                ]
                                              }
                                            ]
                                          }
                                        },
                                        "alternate": null
                                      },
                                      {
                                        "type": "IfStatement",
                                        "test": {
                                          "type": "BinaryExpression",
                                          "operator": "===",
                                          "left": {
                                            "type": "UnaryExpression",
                                            "operator": "typeof",
                                            "argument": {
                                              "type": "Identifier",
                                              "name": "func"
                                            },
                                            "prefix": true
                                          },
                                          "right": {
                                            "type": "Literal",
                                            "value": "function"
                                          }
                                        },
                                        "consequent": {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "func"
                                            },
                                            "arguments": []
                                          }
                                        },
                                        "alternate": null
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                },
                                {
                                  "type": "FunctionDeclaration",
                                  "id": {
                                    "type": "Identifier",
                                    "name": "throwDOMException"
                                  },
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "name"
                                    },
                                    {
                                      "type": "Identifier",
                                      "name": "message"
                                    },
                                    {
                                      "type": "Identifier",
                                      "name": "error"
                                    }
                                  ],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "e"
                                            },
                                            "init": {
                                              "type": "NewExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "window"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "DOMException"
                                                  }
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "constructor"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Literal",
                                                  "value": 0
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "name": "message"
                                                }
                                              ]
                                            }
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "e"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "name"
                                            }
                                          },
                                          "right": {
                                            "type": "Identifier",
                                            "name": "name"
                                          }
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "e"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "message"
                                            }
                                          },
                                          "right": {
                                            "type": "Identifier",
                                            "name": "message"
                                          }
                                        }
                                      },
                                      {
                                        "type": "IfStatement",
                                        "test": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "idbModules"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "DEBUG"
                                          }
                                        },
                                        "consequent": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "console"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "log"
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "name"
                                                  },
                                                  {
                                                    "type": "Identifier",
                                                    "name": "message"
                                                  },
                                                  {
                                                    "type": "Identifier",
                                                    "name": "error"
                                                  },
                                                  {
                                                    "type": "Identifier",
                                                    "name": "e"
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "type": "IfStatement",
                                              "test": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "console"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "trace"
                                                }
                                              },
                                              "consequent": {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "console"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "trace"
                                                    }
                                                  },
                                                  "arguments": []
                                                }
                                              },
                                              "alternate": null
                                            }
                                          ]
                                        },
                                        "alternate": null
                                      },
                                      {
                                        "type": "ThrowStatement",
                                        "argument": {
                                          "type": "Identifier",
                                          "name": "e"
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                },
                                {
                                  "type": "VariableDeclaration",
                                  "declarations": [
                                    {
                                      "type": "VariableDeclarator",
                                      "id": {
                                        "type": "Identifier",
                                        "name": "StringList"
                                      },
                                      "init": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [],
                                        "defaults": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "ThisExpression"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "length"
                                                  }
                                                },
                                                "right": {
                                                  "type": "Literal",
                                                  "value": 0
                                                }
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "ThisExpression"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "_items"
                                                  }
                                                },
                                                "right": {
                                                  "type": "ArrayExpression",
                                                  "elements": []
                                                }
                                              }
                                            },
                                            {
                                              "type": "IfStatement",
                                              "test": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "Object"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "defineProperty"
                                                }
                                              },
                                              "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "Object"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "defineProperty"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "ThisExpression"
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": "_items"
                                                        },
                                                        {
                                                          "type": "ObjectExpression",
                                                          "properties": [
                                                            {
                                                              "type": "Property",
                                                              "key": {
                                                                "type": "Identifier",
                                                                "name": "enumerable"
                                                              },
                                                              "value": {
                                                                "type": "Literal",
                                                                "value": false
                                                              },
                                                              "kind": "init"
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ]
                                              },
                                              "alternate": null
                                            }
                                          ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                      }
                                    }
                                  ],
                                  "kind": "var"
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "StringList"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "prototype"
                                      }
                                    },
                                    "right": {
                                      "type": "ObjectExpression",
                                      "properties": [
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "contains"
                                          },
                                          "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                              {
                                                "type": "Identifier",
                                                "name": "str"
                                              }
                                            ],
                                            "defaults": [],
                                            "body": {
                                              "type": "BlockStatement",
                                              "body": [
                                                {
                                                  "type": "ReturnStatement",
                                                  "argument": {
                                                    "type": "BinaryExpression",
                                                    "operator": "!==",
                                                    "left": {
                                                      "type": "UnaryExpression",
                                                      "operator": "-",
                                                      "argument": {
                                                        "type": "Literal",
                                                        "value": 1
                                                      },
                                                      "prefix": true
                                                    },
                                                    "right": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "ThisExpression"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "_items"
                                                          }
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "indexOf"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "str"
                                                        }
                                                      ]
                                                    }
                                                  }
                                                }
                                              ]
                                            },
                                            "rest": null,
                                            "generator": false,
                                            "expression": false
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "item"
                                          },
                                          "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                              {
                                                "type": "Identifier",
                                                "name": "key"
                                              }
                                            ],
                                            "defaults": [],
                                            "body": {
                                              "type": "BlockStatement",
                                              "body": [
                                                {
                                                  "type": "ReturnStatement",
                                                  "argument": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "ThisExpression"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "_items"
                                                      }
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "key"
                                                    }
                                                  }
                                                }
                                              ]
                                            },
                                            "rest": null,
                                            "generator": false,
                                            "expression": false
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "indexOf"
                                          },
                                          "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                              {
                                                "type": "Identifier",
                                                "name": "str"
                                              }
                                            ],
                                            "defaults": [],
                                            "body": {
                                              "type": "BlockStatement",
                                              "body": [
                                                {
                                                  "type": "ReturnStatement",
                                                  "argument": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "_items"
                                                        }
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "indexOf"
                                                      }
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "Identifier",
                                                        "name": "str"
                                                      }
                                                    ]
                                                  }
                                                }
                                              ]
                                            },
                                            "rest": null,
                                            "generator": false,
                                            "expression": false
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "push"
                                          },
                                          "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                              {
                                                "type": "Identifier",
                                                "name": "item"
                                              }
                                            ],
                                            "defaults": [],
                                            "body": {
                                              "type": "BlockStatement",
                                              "body": [
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "_items"
                                                        }
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "push"
                                                      }
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "Identifier",
                                                        "name": "item"
                                                      }
                                                    ]
                                                  }
                                                },
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "+=",
                                                    "left": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "ThisExpression"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "length"
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": 1
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "ForStatement",
                                                  "init": {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                      {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                          "type": "Identifier",
                                                          "name": "i"
                                                        },
                                                        "init": {
                                                          "type": "Literal",
                                                          "value": 0
                                                        }
                                                      }
                                                    ],
                                                    "kind": "var"
                                                  },
                                                  "test": {
                                                    "type": "BinaryExpression",
                                                    "operator": "<",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "i"
                                                    },
                                                    "right": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "_items"
                                                        }
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "length"
                                                      }
                                                    }
                                                  },
                                                  "update": {
                                                    "type": "UpdateExpression",
                                                    "operator": "++",
                                                    "argument": {
                                                      "type": "Identifier",
                                                      "name": "i"
                                                    },
                                                    "prefix": false
                                                  },
                                                  "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "AssignmentExpression",
                                                          "operator": "=",
                                                          "left": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                              "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "i"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "ThisExpression"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "_items"
                                                              }
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "i"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    ]
                                                  }
                                                }
                                              ]
                                            },
                                            "rest": null,
                                            "generator": false,
                                            "expression": false
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "splice"
                                          },
                                          "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [],
                                            "defaults": [],
                                            "body": {
                                              "type": "BlockStatement",
                                              "body": [
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "ThisExpression"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "_items"
                                                          }
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "splice"
                                                        }
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "apply"
                                                      }
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "_items"
                                                        }
                                                      },
                                                      {
                                                        "type": "Identifier",
                                                        "name": "arguments"
                                                      }
                                                    ]
                                                  }
                                                },
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "ThisExpression"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "length"
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "_items"
                                                        }
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "length"
                                                      }
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "ForInStatement",
                                                  "left": {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                      {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                          "type": "Identifier",
                                                          "name": "i"
                                                        },
                                                        "init": null
                                                      }
                                                    ],
                                                    "kind": "var"
                                                  },
                                                  "right": {
                                                    "type": "ThisExpression"
                                                  },
                                                  "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "IfStatement",
                                                        "test": {
                                                          "type": "BinaryExpression",
                                                          "operator": "===",
                                                          "left": {
                                                            "type": "Identifier",
                                                            "name": "i"
                                                          },
                                                          "right": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "Identifier",
                                                              "name": "String"
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "Identifier",
                                                                  "name": "parseInt"
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "i"
                                                                  },
                                                                  {
                                                                    "type": "Literal",
                                                                    "value": 10
                                                                  }
                                                                ]
                                                              }
                                                            ]
                                                          }
                                                        },
                                                        "consequent": {
                                                          "type": "BlockStatement",
                                                          "body": [
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "expression": {
                                                                "type": "UnaryExpression",
                                                                "operator": "delete",
                                                                "argument": {
                                                                  "type": "MemberExpression",
                                                                  "computed": true,
                                                                  "object": {
                                                                    "type": "ThisExpression"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "i"
                                                                  }
                                                                },
                                                                "prefix": true
                                                              }
                                                            }
                                                          ]
                                                        },
                                                        "alternate": null
                                                      }
                                                    ]
                                                  },
                                                  "each": false
                                                },
                                                {
                                                  "type": "ForStatement",
                                                  "init": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "i"
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": 0
                                                    }
                                                  },
                                                  "test": {
                                                    "type": "BinaryExpression",
                                                    "operator": "<",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "i"
                                                    },
                                                    "right": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "_items"
                                                        }
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "length"
                                                      }
                                                    }
                                                  },
                                                  "update": {
                                                    "type": "UpdateExpression",
                                                    "operator": "++",
                                                    "argument": {
                                                      "type": "Identifier",
                                                      "name": "i"
                                                    },
                                                    "prefix": false
                                                  },
                                                  "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "AssignmentExpression",
                                                          "operator": "=",
                                                          "left": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                              "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "i"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "ThisExpression"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "_items"
                                                              }
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "i"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    ]
                                                  }
                                                }
                                              ]
                                            },
                                            "rest": null,
                                            "generator": false,
                                            "expression": false
                                          },
                                          "kind": "init"
                                        }
                                      ]
                                    }
                                  }
                                },
                                {
                                  "type": "IfStatement",
                                  "test": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Object"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "defineProperty"
                                    }
                                  },
                                  "consequent": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ForInStatement",
                                        "left": {
                                          "type": "VariableDeclaration",
                                          "declarations": [
                                            {
                                              "type": "VariableDeclarator",
                                              "id": {
                                                "type": "Identifier",
                                                "name": "i"
                                              },
                                              "init": null
                                            }
                                          ],
                                          "kind": "var"
                                        },
                                        "right": {
                                          "type": "ObjectExpression",
                                          "properties": [
                                            {
                                              "type": "Property",
                                              "key": {
                                                "type": "Literal",
                                                "value": "indexOf"
                                              },
                                              "value": {
                                                "type": "Literal",
                                                "value": false
                                              },
                                              "kind": "init"
                                            },
                                            {
                                              "type": "Property",
                                              "key": {
                                                "type": "Literal",
                                                "value": "push"
                                              },
                                              "value": {
                                                "type": "Literal",
                                                "value": false
                                              },
                                              "kind": "init"
                                            },
                                            {
                                              "type": "Property",
                                              "key": {
                                                "type": "Literal",
                                                "value": "splice"
                                              },
                                              "value": {
                                                "type": "Literal",
                                                "value": false
                                              },
                                              "kind": "init"
                                            }
                                          ]
                                        },
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "Object"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "defineProperty"
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "StringList"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "prototype"
                                                    }
                                                  },
                                                  {
                                                    "type": "Identifier",
                                                    "name": "i"
                                                  },
                                                  {
                                                    "type": "ObjectExpression",
                                                    "properties": [
                                                      {
                                                        "type": "Property",
                                                        "key": {
                                                          "type": "Identifier",
                                                          "name": "enumerable"
                                                        },
                                                        "value": {
                                                          "type": "Literal",
                                                          "value": false
                                                        },
                                                        "kind": "init"
                                                      }
                                                    ]
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "each": false
                                      }
                                    ]
                                  },
                                  "alternate": null
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "idbModules"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "util"
                                      }
                                    },
                                    "right": {
                                      "type": "ObjectExpression",
                                      "properties": [
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Literal",
                                            "value": "throwDOMException"
                                          },
                                          "value": {
                                            "type": "Identifier",
                                            "name": "throwDOMException"
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Literal",
                                            "value": "callback"
                                          },
                                          "value": {
                                            "type": "Identifier",
                                            "name": "callback"
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Literal",
                                            "value": "quote"
                                          },
                                          "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                              {
                                                "type": "Identifier",
                                                "name": "arg"
                                              }
                                            ],
                                            "defaults": [],
                                            "body": {
                                              "type": "BlockStatement",
                                              "body": [
                                                {
                                                  "type": "ReturnStatement",
                                                  "argument": {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                      "type": "BinaryExpression",
                                                      "operator": "+",
                                                      "left": {
                                                        "type": "Literal",
                                                        "value": "'"
                                                      },
                                                      "right": {
                                                        "type": "Identifier",
                                                        "name": "arg"
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": "'"
                                                    }
                                                  }
                                                }
                                              ]
                                            },
                                            "rest": null,
                                            "generator": false,
                                            "expression": false
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Literal",
                                            "value": "StringList"
                                          },
                                          "value": {
                                            "type": "Identifier",
                                            "name": "StringList"
                                          },
                                          "kind": "init"
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            },
                            "rest": null,
                            "generator": false,
                            "expression": false
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "idbModules"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [
                              {
                                "type": "Identifier",
                                "name": "idbModules"
                              }
                            ],
                            "defaults": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "VariableDeclaration",
                                  "declarations": [
                                    {
                                      "type": "VariableDeclarator",
                                      "id": {
                                        "type": "Identifier",
                                        "name": "Sca"
                                      },
                                      "init": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "FunctionExpression",
                                          "id": null,
                                          "params": [],
                                          "defaults": [],
                                          "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "ReturnStatement",
                                                "argument": {
                                                  "type": "ObjectExpression",
                                                  "properties": [
                                                    {
                                                      "type": "Property",
                                                      "key": {
                                                        "type": "Identifier",
                                                        "name": "decycle"
                                                      },
                                                      "value": {
                                                        "type": "FunctionExpression",
                                                        "id": null,
                                                        "params": [
                                                          {
                                                            "type": "Identifier",
                                                            "name": "object"
                                                          },
                                                          {
                                                            "type": "Identifier",
                                                            "name": "callback"
                                                          }
                                                        ],
                                                        "defaults": [],
                                                        "body": {
                                                          "type": "BlockStatement",
                                                          "body": [
                                                            {
                                                              "type": "VariableDeclaration",
                                                              "declarations": [
                                                                {
                                                                  "type": "VariableDeclarator",
                                                                  "id": {
                                                                    "type": "Identifier",
                                                                    "name": "objects"
                                                                  },
                                                                  "init": {
                                                                    "type": "ArrayExpression",
                                                                    "elements": []
                                                                  }
                                                                },
                                                                {
                                                                  "type": "VariableDeclarator",
                                                                  "id": {
                                                                    "type": "Identifier",
                                                                    "name": "paths"
                                                                  },
                                                                  "init": {
                                                                    "type": "ArrayExpression",
                                                                    "elements": []
                                                                  }
                                                                },
                                                                {
                                                                  "type": "VariableDeclarator",
                                                                  "id": {
                                                                    "type": "Identifier",
                                                                    "name": "queuedObjects"
                                                                  },
                                                                  "init": {
                                                                    "type": "ArrayExpression",
                                                                    "elements": []
                                                                  }
                                                                },
                                                                {
                                                                  "type": "VariableDeclarator",
                                                                  "id": {
                                                                    "type": "Identifier",
                                                                    "name": "returnCallback"
                                                                  },
                                                                  "init": {
                                                                    "type": "Identifier",
                                                                    "name": "callback"
                                                                  }
                                                                }
                                                              ],
                                                              "kind": "var"
                                                            },
                                                            {
                                                              "type": "FunctionDeclaration",
                                                              "id": {
                                                                "type": "Identifier",
                                                                "name": "checkForCompletion"
                                                              },
                                                              "params": [],
                                                              "defaults": [],
                                                              "body": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                  {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "===",
                                                                      "left": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "queuedObjects"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "length"
                                                                        }
                                                                      },
                                                                      "right": {
                                                                        "type": "Literal",
                                                                        "value": 0
                                                                      }
                                                                    },
                                                                    "consequent": {
                                                                      "type": "BlockStatement",
                                                                      "body": [
                                                                        {
                                                                          "type": "ExpressionStatement",
                                                                          "expression": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                              "type": "Identifier",
                                                                              "name": "returnCallback"
                                                                            },
                                                                            "arguments": [
                                                                              {
                                                                                "type": "Identifier",
                                                                                "name": "derezObj"
                                                                              }
                                                                            ]
                                                                          }
                                                                        }
                                                                      ]
                                                                    },
                                                                    "alternate": null
                                                                  }
                                                                ]
                                                              },
                                                              "rest": null,
                                                              "generator": false,
                                                              "expression": false
                                                            },
                                                            {
                                                              "type": "FunctionDeclaration",
                                                              "id": {
                                                                "type": "Identifier",
                                                                "name": "readBlobAsDataURL"
                                                              },
                                                              "params": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "blob"
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "path"
                                                                }
                                                              ],
                                                              "defaults": [],
                                                              "body": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                  {
                                                                    "type": "VariableDeclaration",
                                                                    "declarations": [
                                                                      {
                                                                        "type": "VariableDeclarator",
                                                                        "id": {
                                                                          "type": "Identifier",
                                                                          "name": "reader"
                                                                        },
                                                                        "init": {
                                                                          "type": "NewExpression",
                                                                          "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "FileReader"
                                                                          },
                                                                          "arguments": []
                                                                        }
                                                                      }
                                                                    ],
                                                                    "kind": "var"
                                                                  },
                                                                  {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                      "type": "AssignmentExpression",
                                                                      "operator": "=",
                                                                      "left": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "reader"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "onloadend"
                                                                        }
                                                                      },
                                                                      "right": {
                                                                        "type": "FunctionExpression",
                                                                        "id": null,
                                                                        "params": [
                                                                          {
                                                                            "type": "Identifier",
                                                                            "name": "loadedEvent"
                                                                          }
                                                                        ],
                                                                        "defaults": [],
                                                                        "body": {
                                                                          "type": "BlockStatement",
                                                                          "body": [
                                                                            {
                                                                              "type": "VariableDeclaration",
                                                                              "declarations": [
                                                                                {
                                                                                  "type": "VariableDeclarator",
                                                                                  "id": {
                                                                                    "type": "Identifier",
                                                                                    "name": "dataURL"
                                                                                  },
                                                                                  "init": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "MemberExpression",
                                                                                      "computed": false,
                                                                                      "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "loadedEvent"
                                                                                      },
                                                                                      "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "target"
                                                                                      }
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "result"
                                                                                    }
                                                                                  }
                                                                                }
                                                                              ],
                                                                              "kind": "var"
                                                                            },
                                                                            {
                                                                              "type": "VariableDeclaration",
                                                                              "declarations": [
                                                                                {
                                                                                  "type": "VariableDeclarator",
                                                                                  "id": {
                                                                                    "type": "Identifier",
                                                                                    "name": "blobtype"
                                                                                  },
                                                                                  "init": {
                                                                                    "type": "Literal",
                                                                                    "value": "blob"
                                                                                  }
                                                                                }
                                                                              ],
                                                                              "kind": "var"
                                                                            },
                                                                            {
                                                                              "type": "IfStatement",
                                                                              "test": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "instanceof",
                                                                                "left": {
                                                                                  "type": "Identifier",
                                                                                  "name": "blob"
                                                                                },
                                                                                "right": {
                                                                                  "type": "MemberExpression",
                                                                                  "computed": false,
                                                                                  "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "window"
                                                                                  },
                                                                                  "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "File"
                                                                                  }
                                                                                }
                                                                              },
                                                                              "consequent": {
                                                                                "type": "BlockStatement",
                                                                                "body": []
                                                                              },
                                                                              "alternate": null
                                                                            },
                                                                            {
                                                                              "type": "ExpressionStatement",
                                                                              "expression": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                  "type": "Identifier",
                                                                                  "name": "updateEncodedBlob"
                                                                                },
                                                                                "arguments": [
                                                                                  {
                                                                                    "type": "Identifier",
                                                                                    "name": "dataURL"
                                                                                  },
                                                                                  {
                                                                                    "type": "Identifier",
                                                                                    "name": "path"
                                                                                  },
                                                                                  {
                                                                                    "type": "Identifier",
                                                                                    "name": "blobtype"
                                                                                  }
                                                                                ]
                                                                              }
                                                                            }
                                                                          ]
                                                                        },
                                                                        "rest": null,
                                                                        "generator": false,
                                                                        "expression": false
                                                                      }
                                                                    }
                                                                  },
                                                                  {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "reader"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "readAsDataURL"
                                                                        }
                                                                      },
                                                                      "arguments": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "name": "blob"
                                                                        }
                                                                      ]
                                                                    }
                                                                  }
                                                                ]
                                                              },
                                                              "rest": null,
                                                              "generator": false,
                                                              "expression": false
                                                            },
                                                            {
                                                              "type": "FunctionDeclaration",
                                                              "id": {
                                                                "type": "Identifier",
                                                                "name": "updateEncodedBlob"
                                                              },
                                                              "params": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "dataURL"
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "path"
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "blobtype"
                                                                }
                                                              ],
                                                              "defaults": [],
                                                              "body": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                  {
                                                                    "type": "VariableDeclaration",
                                                                    "declarations": [
                                                                      {
                                                                        "type": "VariableDeclarator",
                                                                        "id": {
                                                                          "type": "Identifier",
                                                                          "name": "encoded"
                                                                        },
                                                                        "init": {
                                                                          "type": "CallExpression",
                                                                          "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "Identifier",
                                                                              "name": "queuedObjects"
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "indexOf"
                                                                            }
                                                                          },
                                                                          "arguments": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "name": "path"
                                                                            }
                                                                          ]
                                                                        }
                                                                      }
                                                                    ],
                                                                    "kind": "var"
                                                                  },
                                                                  {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                      "type": "AssignmentExpression",
                                                                      "operator": "=",
                                                                      "left": {
                                                                        "type": "Identifier",
                                                                        "name": "path"
                                                                      },
                                                                      "right": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "path"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "replace"
                                                                          }
                                                                        },
                                                                        "arguments": [
                                                                          {
                                                                            "type": "Literal",
                                                                            "value": "$"
                                                                          },
                                                                          {
                                                                            "type": "Literal",
                                                                            "value": "derezObj"
                                                                          }
                                                                        ]
                                                                      }
                                                                    }
                                                                  },
                                                                  {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "Identifier",
                                                                        "name": "eval"
                                                                      },
                                                                      "arguments": [
                                                                        {
                                                                          "type": "BinaryExpression",
                                                                          "operator": "+",
                                                                          "left": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "+",
                                                                            "left": {
                                                                              "type": "BinaryExpression",
                                                                              "operator": "+",
                                                                              "left": {
                                                                                "type": "Identifier",
                                                                                "name": "path"
                                                                              },
                                                                              "right": {
                                                                                "type": "Literal",
                                                                                "value": ".$enc=\""
                                                                              }
                                                                            },
                                                                            "right": {
                                                                              "type": "Identifier",
                                                                              "name": "dataURL"
                                                                            }
                                                                          },
                                                                          "right": {
                                                                            "type": "Literal",
                                                                            "value": "\""
                                                                          }
                                                                        }
                                                                      ]
                                                                    }
                                                                  },
                                                                  {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "Identifier",
                                                                        "name": "eval"
                                                                      },
                                                                      "arguments": [
                                                                        {
                                                                          "type": "BinaryExpression",
                                                                          "operator": "+",
                                                                          "left": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "+",
                                                                            "left": {
                                                                              "type": "BinaryExpression",
                                                                              "operator": "+",
                                                                              "left": {
                                                                                "type": "Identifier",
                                                                                "name": "path"
                                                                              },
                                                                              "right": {
                                                                                "type": "Literal",
                                                                                "value": ".$type=\""
                                                                              }
                                                                            },
                                                                            "right": {
                                                                              "type": "Identifier",
                                                                              "name": "blobtype"
                                                                            }
                                                                          },
                                                                          "right": {
                                                                            "type": "Literal",
                                                                            "value": "\""
                                                                          }
                                                                        }
                                                                      ]
                                                                    }
                                                                  },
                                                                  {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "queuedObjects"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "splice"
                                                                        }
                                                                      },
                                                                      "arguments": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "name": "encoded"
                                                                        },
                                                                        {
                                                                          "type": "Literal",
                                                                          "value": 1
                                                                        }
                                                                      ]
                                                                    }
                                                                  },
                                                                  {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "Identifier",
                                                                        "name": "checkForCompletion"
                                                                      },
                                                                      "arguments": []
                                                                    }
                                                                  }
                                                                ]
                                                              },
                                                              "rest": null,
                                                              "generator": false,
                                                              "expression": false
                                                            },
                                                            {
                                                              "type": "FunctionDeclaration",
                                                              "id": {
                                                                "type": "Identifier",
                                                                "name": "derez"
                                                              },
                                                              "params": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "value"
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "path"
                                                                }
                                                              ],
                                                              "defaults": [],
                                                              "body": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                  {
                                                                    "type": "VariableDeclaration",
                                                                    "declarations": [
                                                                      {
                                                                        "type": "VariableDeclarator",
                                                                        "id": {
                                                                          "type": "Identifier",
                                                                          "name": "i"
                                                                        },
                                                                        "init": null
                                                                      },
                                                                      {
                                                                        "type": "VariableDeclarator",
                                                                        "id": {
                                                                          "type": "Identifier",
                                                                          "name": "name"
                                                                        },
                                                                        "init": null
                                                                      },
                                                                      {
                                                                        "type": "VariableDeclarator",
                                                                        "id": {
                                                                          "type": "Identifier",
                                                                          "name": "nu"
                                                                        },
                                                                        "init": null
                                                                      }
                                                                    ],
                                                                    "kind": "var"
                                                                  },
                                                                  {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                      "type": "LogicalExpression",
                                                                      "operator": "&&",
                                                                      "left": {
                                                                        "type": "LogicalExpression",
                                                                        "operator": "&&",
                                                                        "left": {
                                                                          "type": "LogicalExpression",
                                                                          "operator": "&&",
                                                                          "left": {
                                                                            "type": "LogicalExpression",
                                                                            "operator": "&&",
                                                                            "left": {
                                                                              "type": "LogicalExpression",
                                                                              "operator": "&&",
                                                                              "left": {
                                                                                "type": "LogicalExpression",
                                                                                "operator": "&&",
                                                                                "left": {
                                                                                  "type": "LogicalExpression",
                                                                                  "operator": "&&",
                                                                                  "left": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "===",
                                                                                    "left": {
                                                                                      "type": "UnaryExpression",
                                                                                      "operator": "typeof",
                                                                                      "argument": {
                                                                                        "type": "Identifier",
                                                                                        "name": "value"
                                                                                      },
                                                                                      "prefix": true
                                                                                    },
                                                                                    "right": {
                                                                                      "type": "Literal",
                                                                                      "value": "object"
                                                                                    }
                                                                                  },
                                                                                  "right": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "!==",
                                                                                    "left": {
                                                                                      "type": "Identifier",
                                                                                      "name": "value"
                                                                                    },
                                                                                    "right": {
                                                                                      "type": "Literal",
                                                                                      "value": null
                                                                                    }
                                                                                  }
                                                                                },
                                                                                "right": {
                                                                                  "type": "UnaryExpression",
                                                                                  "operator": "!",
                                                                                  "argument": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "instanceof",
                                                                                    "left": {
                                                                                      "type": "Identifier",
                                                                                      "name": "value"
                                                                                    },
                                                                                    "right": {
                                                                                      "type": "Identifier",
                                                                                      "name": "Boolean"
                                                                                    }
                                                                                  },
                                                                                  "prefix": true
                                                                                }
                                                                              },
                                                                              "right": {
                                                                                "type": "UnaryExpression",
                                                                                "operator": "!",
                                                                                "argument": {
                                                                                  "type": "BinaryExpression",
                                                                                  "operator": "instanceof",
                                                                                  "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "value"
                                                                                  },
                                                                                  "right": {
                                                                                    "type": "Identifier",
                                                                                    "name": "Date"
                                                                                  }
                                                                                },
                                                                                "prefix": true
                                                                              }
                                                                            },
                                                                            "right": {
                                                                              "type": "UnaryExpression",
                                                                              "operator": "!",
                                                                              "argument": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "instanceof",
                                                                                "left": {
                                                                                  "type": "Identifier",
                                                                                  "name": "value"
                                                                                },
                                                                                "right": {
                                                                                  "type": "Identifier",
                                                                                  "name": "Number"
                                                                                }
                                                                              },
                                                                              "prefix": true
                                                                            }
                                                                          },
                                                                          "right": {
                                                                            "type": "UnaryExpression",
                                                                            "operator": "!",
                                                                            "argument": {
                                                                              "type": "BinaryExpression",
                                                                              "operator": "instanceof",
                                                                              "left": {
                                                                                "type": "Identifier",
                                                                                "name": "value"
                                                                              },
                                                                              "right": {
                                                                                "type": "Identifier",
                                                                                "name": "RegExp"
                                                                              }
                                                                            },
                                                                            "prefix": true
                                                                          }
                                                                        },
                                                                        "right": {
                                                                          "type": "UnaryExpression",
                                                                          "operator": "!",
                                                                          "argument": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "instanceof",
                                                                            "left": {
                                                                              "type": "Identifier",
                                                                              "name": "value"
                                                                            },
                                                                            "right": {
                                                                              "type": "Identifier",
                                                                              "name": "Blob"
                                                                            }
                                                                          },
                                                                          "prefix": true
                                                                        }
                                                                      },
                                                                      "right": {
                                                                        "type": "UnaryExpression",
                                                                        "operator": "!",
                                                                        "argument": {
                                                                          "type": "BinaryExpression",
                                                                          "operator": "instanceof",
                                                                          "left": {
                                                                            "type": "Identifier",
                                                                            "name": "value"
                                                                          },
                                                                          "right": {
                                                                            "type": "Identifier",
                                                                            "name": "String"
                                                                          }
                                                                        },
                                                                        "prefix": true
                                                                      }
                                                                    },
                                                                    "consequent": {
                                                                      "type": "BlockStatement",
                                                                      "body": [
                                                                        {
                                                                          "type": "ForStatement",
                                                                          "init": {
                                                                            "type": "AssignmentExpression",
                                                                            "operator": "=",
                                                                            "left": {
                                                                              "type": "Identifier",
                                                                              "name": "i"
                                                                            },
                                                                            "right": {
                                                                              "type": "Literal",
                                                                              "value": 0
                                                                            }
                                                                          },
                                                                          "test": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "<",
                                                                            "left": {
                                                                              "type": "Identifier",
                                                                              "name": "i"
                                                                            },
                                                                            "right": {
                                                                              "type": "MemberExpression",
                                                                              "computed": false,
                                                                              "object": {
                                                                                "type": "Identifier",
                                                                                "name": "objects"
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "length"
                                                                              }
                                                                            }
                                                                          },
                                                                          "update": {
                                                                            "type": "AssignmentExpression",
                                                                            "operator": "+=",
                                                                            "left": {
                                                                              "type": "Identifier",
                                                                              "name": "i"
                                                                            },
                                                                            "right": {
                                                                              "type": "Literal",
                                                                              "value": 1
                                                                            }
                                                                          },
                                                                          "body": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                              {
                                                                                "type": "IfStatement",
                                                                                "test": {
                                                                                  "type": "BinaryExpression",
                                                                                  "operator": "===",
                                                                                  "left": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "objects"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "i"
                                                                                    }
                                                                                  },
                                                                                  "right": {
                                                                                    "type": "Identifier",
                                                                                    "name": "value"
                                                                                  }
                                                                                },
                                                                                "consequent": {
                                                                                  "type": "BlockStatement",
                                                                                  "body": [
                                                                                    {
                                                                                      "type": "ReturnStatement",
                                                                                      "argument": {
                                                                                        "type": "ObjectExpression",
                                                                                        "properties": [
                                                                                          {
                                                                                            "type": "Property",
                                                                                            "key": {
                                                                                              "type": "Identifier",
                                                                                              "name": "$ref"
                                                                                            },
                                                                                            "value": {
                                                                                              "type": "MemberExpression",
                                                                                              "computed": true,
                                                                                              "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "paths"
                                                                                              },
                                                                                              "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "i"
                                                                                              }
                                                                                            },
                                                                                            "kind": "init"
                                                                                          }
                                                                                        ]
                                                                                      }
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                "alternate": null
                                                                              }
                                                                            ]
                                                                          }
                                                                        },
                                                                        {
                                                                          "type": "ExpressionStatement",
                                                                          "expression": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                              "type": "MemberExpression",
                                                                              "computed": false,
                                                                              "object": {
                                                                                "type": "Identifier",
                                                                                "name": "objects"
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "push"
                                                                              }
                                                                            },
                                                                            "arguments": [
                                                                              {
                                                                                "type": "Identifier",
                                                                                "name": "value"
                                                                              }
                                                                            ]
                                                                          }
                                                                        },
                                                                        {
                                                                          "type": "ExpressionStatement",
                                                                          "expression": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                              "type": "MemberExpression",
                                                                              "computed": false,
                                                                              "object": {
                                                                                "type": "Identifier",
                                                                                "name": "paths"
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "push"
                                                                              }
                                                                            },
                                                                            "arguments": [
                                                                              {
                                                                                "type": "Identifier",
                                                                                "name": "path"
                                                                              }
                                                                            ]
                                                                          }
                                                                        },
                                                                        {
                                                                          "type": "IfStatement",
                                                                          "test": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "===",
                                                                            "left": {
                                                                              "type": "CallExpression",
                                                                              "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "MemberExpression",
                                                                                  "computed": false,
                                                                                  "object": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "Object"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "prototype"
                                                                                    }
                                                                                  },
                                                                                  "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "toString"
                                                                                  }
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "apply"
                                                                                }
                                                                              },
                                                                              "arguments": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "name": "value"
                                                                                }
                                                                              ]
                                                                            },
                                                                            "right": {
                                                                              "type": "Literal",
                                                                              "value": "[object Array]"
                                                                            }
                                                                          },
                                                                          "consequent": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                              {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                  "type": "AssignmentExpression",
                                                                                  "operator": "=",
                                                                                  "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "nu"
                                                                                  },
                                                                                  "right": {
                                                                                    "type": "ArrayExpression",
                                                                                    "elements": []
                                                                                  }
                                                                                }
                                                                              },
                                                                              {
                                                                                "type": "ForStatement",
                                                                                "init": {
                                                                                  "type": "AssignmentExpression",
                                                                                  "operator": "=",
                                                                                  "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "i"
                                                                                  },
                                                                                  "right": {
                                                                                    "type": "Literal",
                                                                                    "value": 0
                                                                                  }
                                                                                },
                                                                                "test": {
                                                                                  "type": "BinaryExpression",
                                                                                  "operator": "<",
                                                                                  "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "i"
                                                                                  },
                                                                                  "right": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "value"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "length"
                                                                                    }
                                                                                  }
                                                                                },
                                                                                "update": {
                                                                                  "type": "AssignmentExpression",
                                                                                  "operator": "+=",
                                                                                  "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "i"
                                                                                  },
                                                                                  "right": {
                                                                                    "type": "Literal",
                                                                                    "value": 1
                                                                                  }
                                                                                },
                                                                                "body": {
                                                                                  "type": "BlockStatement",
                                                                                  "body": [
                                                                                    {
                                                                                      "type": "ExpressionStatement",
                                                                                      "expression": {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "=",
                                                                                        "left": {
                                                                                          "type": "MemberExpression",
                                                                                          "computed": true,
                                                                                          "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "nu"
                                                                                          },
                                                                                          "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "i"
                                                                                          }
                                                                                        },
                                                                                        "right": {
                                                                                          "type": "CallExpression",
                                                                                          "callee": {
                                                                                            "type": "Identifier",
                                                                                            "name": "derez"
                                                                                          },
                                                                                          "arguments": [
                                                                                            {
                                                                                              "type": "MemberExpression",
                                                                                              "computed": true,
                                                                                              "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "value"
                                                                                              },
                                                                                              "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "i"
                                                                                              }
                                                                                            },
                                                                                            {
                                                                                              "type": "BinaryExpression",
                                                                                              "operator": "+",
                                                                                              "left": {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "+",
                                                                                                "left": {
                                                                                                  "type": "BinaryExpression",
                                                                                                  "operator": "+",
                                                                                                  "left": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "path"
                                                                                                  },
                                                                                                  "right": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "["
                                                                                                  }
                                                                                                },
                                                                                                "right": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "i"
                                                                                                }
                                                                                              },
                                                                                              "right": {
                                                                                                "type": "Literal",
                                                                                                "value": "]"
                                                                                              }
                                                                                            }
                                                                                          ]
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              }
                                                                            ]
                                                                          },
                                                                          "alternate": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                              {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                  "type": "AssignmentExpression",
                                                                                  "operator": "=",
                                                                                  "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "nu"
                                                                                  },
                                                                                  "right": {
                                                                                    "type": "ObjectExpression",
                                                                                    "properties": []
                                                                                  }
                                                                                }
                                                                              },
                                                                              {
                                                                                "type": "ForInStatement",
                                                                                "left": {
                                                                                  "type": "Identifier",
                                                                                  "name": "name"
                                                                                },
                                                                                "right": {
                                                                                  "type": "Identifier",
                                                                                  "name": "value"
                                                                                },
                                                                                "body": {
                                                                                  "type": "BlockStatement",
                                                                                  "body": [
                                                                                    {
                                                                                      "type": "IfStatement",
                                                                                      "test": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                          "type": "MemberExpression",
                                                                                          "computed": false,
                                                                                          "object": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                              "type": "MemberExpression",
                                                                                              "computed": false,
                                                                                              "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "Object"
                                                                                              },
                                                                                              "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "prototype"
                                                                                              }
                                                                                            },
                                                                                            "property": {
                                                                                              "type": "Identifier",
                                                                                              "name": "hasOwnProperty"
                                                                                            }
                                                                                          },
                                                                                          "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "call"
                                                                                          }
                                                                                        },
                                                                                        "arguments": [
                                                                                          {
                                                                                            "type": "Identifier",
                                                                                            "name": "value"
                                                                                          },
                                                                                          {
                                                                                            "type": "Identifier",
                                                                                            "name": "name"
                                                                                          }
                                                                                        ]
                                                                                      },
                                                                                      "consequent": {
                                                                                        "type": "BlockStatement",
                                                                                        "body": [
                                                                                          {
                                                                                            "type": "ExpressionStatement",
                                                                                            "expression": {
                                                                                              "type": "AssignmentExpression",
                                                                                              "operator": "=",
                                                                                              "left": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "nu"
                                                                                                },
                                                                                                "property": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "name"
                                                                                                }
                                                                                              },
                                                                                              "right": {
                                                                                                "type": "CallExpression",
                                                                                                "callee": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "derez"
                                                                                                },
                                                                                                "arguments": [
                                                                                                  {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                      "type": "Identifier",
                                                                                                      "name": "value"
                                                                                                    },
                                                                                                    "property": {
                                                                                                      "type": "Identifier",
                                                                                                      "name": "name"
                                                                                                    }
                                                                                                  },
                                                                                                  {
                                                                                                    "type": "BinaryExpression",
                                                                                                    "operator": "+",
                                                                                                    "left": {
                                                                                                      "type": "BinaryExpression",
                                                                                                      "operator": "+",
                                                                                                      "left": {
                                                                                                        "type": "BinaryExpression",
                                                                                                        "operator": "+",
                                                                                                        "left": {
                                                                                                          "type": "Identifier",
                                                                                                          "name": "path"
                                                                                                        },
                                                                                                        "right": {
                                                                                                          "type": "Literal",
                                                                                                          "value": "["
                                                                                                        }
                                                                                                      },
                                                                                                      "right": {
                                                                                                        "type": "CallExpression",
                                                                                                        "callee": {
                                                                                                          "type": "MemberExpression",
                                                                                                          "computed": false,
                                                                                                          "object": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "JSON"
                                                                                                          },
                                                                                                          "property": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "stringify"
                                                                                                          }
                                                                                                        },
                                                                                                        "arguments": [
                                                                                                          {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "name"
                                                                                                          }
                                                                                                        ]
                                                                                                      }
                                                                                                    },
                                                                                                    "right": {
                                                                                                      "type": "Literal",
                                                                                                      "value": "]"
                                                                                                    }
                                                                                                  }
                                                                                                ]
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        ]
                                                                                      },
                                                                                      "alternate": null
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                "each": false
                                                                              }
                                                                            ]
                                                                          }
                                                                        },
                                                                        {
                                                                          "type": "ReturnStatement",
                                                                          "argument": {
                                                                            "type": "Identifier",
                                                                            "name": "nu"
                                                                          }
                                                                        }
                                                                      ]
                                                                    },
                                                                    "alternate": {
                                                                      "type": "IfStatement",
                                                                      "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "instanceof",
                                                                        "left": {
                                                                          "type": "Identifier",
                                                                          "name": "value"
                                                                        },
                                                                        "right": {
                                                                          "type": "Identifier",
                                                                          "name": "Blob"
                                                                        }
                                                                      },
                                                                      "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                          {
                                                                            "type": "ExpressionStatement",
                                                                            "expression": {
                                                                              "type": "CallExpression",
                                                                              "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "queuedObjects"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "push"
                                                                                }
                                                                              },
                                                                              "arguments": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "name": "path"
                                                                                }
                                                                              ]
                                                                            }
                                                                          },
                                                                          {
                                                                            "type": "ExpressionStatement",
                                                                            "expression": {
                                                                              "type": "CallExpression",
                                                                              "callee": {
                                                                                "type": "Identifier",
                                                                                "name": "readBlobAsDataURL"
                                                                              },
                                                                              "arguments": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "name": "value"
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "name": "path"
                                                                                }
                                                                              ]
                                                                            }
                                                                          }
                                                                        ]
                                                                      },
                                                                      "alternate": {
                                                                        "type": "IfStatement",
                                                                        "test": {
                                                                          "type": "BinaryExpression",
                                                                          "operator": "instanceof",
                                                                          "left": {
                                                                            "type": "Identifier",
                                                                            "name": "value"
                                                                          },
                                                                          "right": {
                                                                            "type": "Identifier",
                                                                            "name": "Boolean"
                                                                          }
                                                                        },
                                                                        "consequent": {
                                                                          "type": "BlockStatement",
                                                                          "body": [
                                                                            {
                                                                              "type": "ExpressionStatement",
                                                                              "expression": {
                                                                                "type": "AssignmentExpression",
                                                                                "operator": "=",
                                                                                "left": {
                                                                                  "type": "Identifier",
                                                                                  "name": "value"
                                                                                },
                                                                                "right": {
                                                                                  "type": "ObjectExpression",
                                                                                  "properties": [
                                                                                    {
                                                                                      "type": "Property",
                                                                                      "key": {
                                                                                        "type": "Literal",
                                                                                        "value": "$type"
                                                                                      },
                                                                                      "value": {
                                                                                        "type": "Literal",
                                                                                        "value": "bool"
                                                                                      },
                                                                                      "kind": "init"
                                                                                    },
                                                                                    {
                                                                                      "type": "Property",
                                                                                      "key": {
                                                                                        "type": "Literal",
                                                                                        "value": "$enc"
                                                                                      },
                                                                                      "value": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                          "type": "MemberExpression",
                                                                                          "computed": false,
                                                                                          "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "value"
                                                                                          },
                                                                                          "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "toString"
                                                                                          }
                                                                                        },
                                                                                        "arguments": []
                                                                                      },
                                                                                      "kind": "init"
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              }
                                                                            }
                                                                          ]
                                                                        },
                                                                        "alternate": {
                                                                          "type": "IfStatement",
                                                                          "test": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "instanceof",
                                                                            "left": {
                                                                              "type": "Identifier",
                                                                              "name": "value"
                                                                            },
                                                                            "right": {
                                                                              "type": "Identifier",
                                                                              "name": "Date"
                                                                            }
                                                                          },
                                                                          "consequent": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                              {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                  "type": "AssignmentExpression",
                                                                                  "operator": "=",
                                                                                  "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "value"
                                                                                  },
                                                                                  "right": {
                                                                                    "type": "ObjectExpression",
                                                                                    "properties": [
                                                                                      {
                                                                                        "type": "Property",
                                                                                        "key": {
                                                                                          "type": "Literal",
                                                                                          "value": "$type"
                                                                                        },
                                                                                        "value": {
                                                                                          "type": "Literal",
                                                                                          "value": "date"
                                                                                        },
                                                                                        "kind": "init"
                                                                                      },
                                                                                      {
                                                                                        "type": "Property",
                                                                                        "key": {
                                                                                          "type": "Literal",
                                                                                          "value": "$enc"
                                                                                        },
                                                                                        "value": {
                                                                                          "type": "CallExpression",
                                                                                          "callee": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                              "type": "Identifier",
                                                                                              "name": "value"
                                                                                            },
                                                                                            "property": {
                                                                                              "type": "Identifier",
                                                                                              "name": "getTime"
                                                                                            }
                                                                                          },
                                                                                          "arguments": []
                                                                                        },
                                                                                        "kind": "init"
                                                                                      }
                                                                                    ]
                                                                                  }
                                                                                }
                                                                              }
                                                                            ]
                                                                          },
                                                                          "alternate": {
                                                                            "type": "IfStatement",
                                                                            "test": {
                                                                              "type": "BinaryExpression",
                                                                              "operator": "instanceof",
                                                                              "left": {
                                                                                "type": "Identifier",
                                                                                "name": "value"
                                                                              },
                                                                              "right": {
                                                                                "type": "Identifier",
                                                                                "name": "Number"
                                                                              }
                                                                            },
                                                                            "consequent": {
                                                                              "type": "BlockStatement",
                                                                              "body": [
                                                                                {
                                                                                  "type": "ExpressionStatement",
                                                                                  "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                      "type": "Identifier",
                                                                                      "name": "value"
                                                                                    },
                                                                                    "right": {
                                                                                      "type": "ObjectExpression",
                                                                                      "properties": [
                                                                                        {
                                                                                          "type": "Property",
                                                                                          "key": {
                                                                                            "type": "Literal",
                                                                                            "value": "$type"
                                                                                          },
                                                                                          "value": {
                                                                                            "type": "Literal",
                                                                                            "value": "num"
                                                                                          },
                                                                                          "kind": "init"
                                                                                        },
                                                                                        {
                                                                                          "type": "Property",
                                                                                          "key": {
                                                                                            "type": "Literal",
                                                                                            "value": "$enc"
                                                                                          },
                                                                                          "value": {
                                                                                            "type": "CallExpression",
                                                                                            "callee": {
                                                                                              "type": "MemberExpression",
                                                                                              "computed": false,
                                                                                              "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "value"
                                                                                              },
                                                                                              "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "toString"
                                                                                              }
                                                                                            },
                                                                                            "arguments": []
                                                                                          },
                                                                                          "kind": "init"
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  }
                                                                                }
                                                                              ]
                                                                            },
                                                                            "alternate": {
                                                                              "type": "IfStatement",
                                                                              "test": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "instanceof",
                                                                                "left": {
                                                                                  "type": "Identifier",
                                                                                  "name": "value"
                                                                                },
                                                                                "right": {
                                                                                  "type": "Identifier",
                                                                                  "name": "RegExp"
                                                                                }
                                                                              },
                                                                              "consequent": {
                                                                                "type": "BlockStatement",
                                                                                "body": [
                                                                                  {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                      "type": "AssignmentExpression",
                                                                                      "operator": "=",
                                                                                      "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "value"
                                                                                      },
                                                                                      "right": {
                                                                                        "type": "ObjectExpression",
                                                                                        "properties": [
                                                                                          {
                                                                                            "type": "Property",
                                                                                            "key": {
                                                                                              "type": "Literal",
                                                                                              "value": "$type"
                                                                                            },
                                                                                            "value": {
                                                                                              "type": "Literal",
                                                                                              "value": "regex"
                                                                                            },
                                                                                            "kind": "init"
                                                                                          },
                                                                                          {
                                                                                            "type": "Property",
                                                                                            "key": {
                                                                                              "type": "Literal",
                                                                                              "value": "$enc"
                                                                                            },
                                                                                            "value": {
                                                                                              "type": "CallExpression",
                                                                                              "callee": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": false,
                                                                                                "object": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "value"
                                                                                                },
                                                                                                "property": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "toString"
                                                                                                }
                                                                                              },
                                                                                              "arguments": []
                                                                                            },
                                                                                            "kind": "init"
                                                                                          }
                                                                                        ]
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                ]
                                                                              },
                                                                              "alternate": null
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  },
                                                                  {
                                                                    "type": "ReturnStatement",
                                                                    "argument": {
                                                                      "type": "Identifier",
                                                                      "name": "value"
                                                                    }
                                                                  }
                                                                ]
                                                              },
                                                              "rest": null,
                                                              "generator": false,
                                                              "expression": false
                                                            },
                                                            {
                                                              "type": "VariableDeclaration",
                                                              "declarations": [
                                                                {
                                                                  "type": "VariableDeclarator",
                                                                  "id": {
                                                                    "type": "Identifier",
                                                                    "name": "derezObj"
                                                                  },
                                                                  "init": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "Identifier",
                                                                      "name": "derez"
                                                                    },
                                                                    "arguments": [
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "object"
                                                                      },
                                                                      {
                                                                        "type": "Literal",
                                                                        "value": "$"
                                                                      }
                                                                    ]
                                                                  }
                                                                }
                                                              ],
                                                              "kind": "var"
                                                            },
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "Identifier",
                                                                  "name": "checkForCompletion"
                                                                },
                                                                "arguments": []
                                                              }
                                                            }
                                                          ]
                                                        },
                                                        "rest": null,
                                                        "generator": false,
                                                        "expression": false
                                                      },
                                                      "kind": "init"
                                                    },
                                                    {
                                                      "type": "Property",
                                                      "key": {
                                                        "type": "Identifier",
                                                        "name": "retrocycle"
                                                      },
                                                      "value": {
                                                        "type": "FunctionExpression",
                                                        "id": {
                                                          "type": "Identifier",
                                                          "name": "retrocycle"
                                                        },
                                                        "params": [
                                                          {
                                                            "type": "Identifier",
                                                            "name": "$"
                                                          }
                                                        ],
                                                        "defaults": [],
                                                        "body": {
                                                          "type": "BlockStatement",
                                                          "body": [
                                                            {
                                                              "type": "VariableDeclaration",
                                                              "declarations": [
                                                                {
                                                                  "type": "VariableDeclarator",
                                                                  "id": {
                                                                    "type": "Identifier",
                                                                    "name": "px"
                                                                  },
                                                                  "init": {
                                                                    "type": "Literal",
                                                                    "value": {}
                                                                  }
                                                                }
                                                              ],
                                                              "kind": "var"
                                                            },
                                                            {
                                                              "type": "FunctionDeclaration",
                                                              "id": {
                                                                "type": "Identifier",
                                                                "name": "dataURLToBlob"
                                                              },
                                                              "params": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "dataURL"
                                                                }
                                                              ],
                                                              "defaults": [],
                                                              "body": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                  {
                                                                    "type": "VariableDeclaration",
                                                                    "declarations": [
                                                                      {
                                                                        "type": "VariableDeclarator",
                                                                        "id": {
                                                                          "type": "Identifier",
                                                                          "name": "BASE64_MARKER"
                                                                        },
                                                                        "init": {
                                                                          "type": "Literal",
                                                                          "value": ";base64,"
                                                                        }
                                                                      },
                                                                      {
                                                                        "type": "VariableDeclarator",
                                                                        "id": {
                                                                          "type": "Identifier",
                                                                          "name": "contentType"
                                                                        },
                                                                        "init": null
                                                                      },
                                                                      {
                                                                        "type": "VariableDeclarator",
                                                                        "id": {
                                                                          "type": "Identifier",
                                                                          "name": "parts"
                                                                        },
                                                                        "init": null
                                                                      },
                                                                      {
                                                                        "type": "VariableDeclarator",
                                                                        "id": {
                                                                          "type": "Identifier",
                                                                          "name": "raw"
                                                                        },
                                                                        "init": null
                                                                      }
                                                                    ],
                                                                    "kind": "var"
                                                                  },
                                                                  {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "===",
                                                                      "left": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "dataURL"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "indexOf"
                                                                          }
                                                                        },
                                                                        "arguments": [
                                                                          {
                                                                            "type": "Identifier",
                                                                            "name": "BASE64_MARKER"
                                                                          }
                                                                        ]
                                                                      },
                                                                      "right": {
                                                                        "type": "UnaryExpression",
                                                                        "operator": "-",
                                                                        "argument": {
                                                                          "type": "Literal",
                                                                          "value": 1
                                                                        },
                                                                        "prefix": true
                                                                      }
                                                                    },
                                                                    "consequent": {
                                                                      "type": "BlockStatement",
                                                                      "body": [
                                                                        {
                                                                          "type": "ExpressionStatement",
                                                                          "expression": {
                                                                            "type": "AssignmentExpression",
                                                                            "operator": "=",
                                                                            "left": {
                                                                              "type": "Identifier",
                                                                              "name": "parts"
                                                                            },
                                                                            "right": {
                                                                              "type": "CallExpression",
                                                                              "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "dataURL"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "split"
                                                                                }
                                                                              },
                                                                              "arguments": [
                                                                                {
                                                                                  "type": "Literal",
                                                                                  "value": ","
                                                                                }
                                                                              ]
                                                                            }
                                                                          }
                                                                        },
                                                                        {
                                                                          "type": "ExpressionStatement",
                                                                          "expression": {
                                                                            "type": "AssignmentExpression",
                                                                            "operator": "=",
                                                                            "left": {
                                                                              "type": "Identifier",
                                                                              "name": "contentType"
                                                                            },
                                                                            "right": {
                                                                              "type": "MemberExpression",
                                                                              "computed": true,
                                                                              "object": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                  "type": "MemberExpression",
                                                                                  "computed": false,
                                                                                  "object": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "parts"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Literal",
                                                                                      "value": 0
                                                                                    }
                                                                                  },
                                                                                  "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "split"
                                                                                  }
                                                                                },
                                                                                "arguments": [
                                                                                  {
                                                                                    "type": "Literal",
                                                                                    "value": ":"
                                                                                  }
                                                                                ]
                                                                              },
                                                                              "property": {
                                                                                "type": "Literal",
                                                                                "value": 1
                                                                              }
                                                                            }
                                                                          }
                                                                        },
                                                                        {
                                                                          "type": "ExpressionStatement",
                                                                          "expression": {
                                                                            "type": "AssignmentExpression",
                                                                            "operator": "=",
                                                                            "left": {
                                                                              "type": "Identifier",
                                                                              "name": "raw"
                                                                            },
                                                                            "right": {
                                                                              "type": "MemberExpression",
                                                                              "computed": true,
                                                                              "object": {
                                                                                "type": "Identifier",
                                                                                "name": "parts"
                                                                              },
                                                                              "property": {
                                                                                "type": "Literal",
                                                                                "value": 1
                                                                              }
                                                                            }
                                                                          }
                                                                        },
                                                                        {
                                                                          "type": "ReturnStatement",
                                                                          "argument": {
                                                                            "type": "NewExpression",
                                                                            "callee": {
                                                                              "type": "Identifier",
                                                                              "name": "Blob"
                                                                            },
                                                                            "arguments": [
                                                                              {
                                                                                "type": "ArrayExpression",
                                                                                "elements": [
                                                                                  {
                                                                                    "type": "Identifier",
                                                                                    "name": "raw"
                                                                                  }
                                                                                ]
                                                                              },
                                                                              {
                                                                                "type": "ObjectExpression",
                                                                                "properties": [
                                                                                  {
                                                                                    "type": "Property",
                                                                                    "key": {
                                                                                      "type": "Identifier",
                                                                                      "name": "type"
                                                                                    },
                                                                                    "value": {
                                                                                      "type": "Identifier",
                                                                                      "name": "contentType"
                                                                                    },
                                                                                    "kind": "init"
                                                                                  }
                                                                                ]
                                                                              }
                                                                            ]
                                                                          }
                                                                        }
                                                                      ]
                                                                    },
                                                                    "alternate": null
                                                                  },
                                                                  {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                      "type": "AssignmentExpression",
                                                                      "operator": "=",
                                                                      "left": {
                                                                        "type": "Identifier",
                                                                        "name": "parts"
                                                                      },
                                                                      "right": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "dataURL"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "split"
                                                                          }
                                                                        },
                                                                        "arguments": [
                                                                          {
                                                                            "type": "Identifier",
                                                                            "name": "BASE64_MARKER"
                                                                          }
                                                                        ]
                                                                      }
                                                                    }
                                                                  },
                                                                  {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                      "type": "AssignmentExpression",
                                                                      "operator": "=",
                                                                      "left": {
                                                                        "type": "Identifier",
                                                                        "name": "contentType"
                                                                      },
                                                                      "right": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                          "type": "CallExpression",
                                                                          "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "MemberExpression",
                                                                              "computed": true,
                                                                              "object": {
                                                                                "type": "Identifier",
                                                                                "name": "parts"
                                                                              },
                                                                              "property": {
                                                                                "type": "Literal",
                                                                                "value": 0
                                                                              }
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "split"
                                                                            }
                                                                          },
                                                                          "arguments": [
                                                                            {
                                                                              "type": "Literal",
                                                                              "value": ":"
                                                                            }
                                                                          ]
                                                                        },
                                                                        "property": {
                                                                          "type": "Literal",
                                                                          "value": 1
                                                                        }
                                                                      }
                                                                    }
                                                                  },
                                                                  {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                      "type": "AssignmentExpression",
                                                                      "operator": "=",
                                                                      "left": {
                                                                        "type": "Identifier",
                                                                        "name": "raw"
                                                                      },
                                                                      "right": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "window"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "atob"
                                                                          }
                                                                        },
                                                                        "arguments": [
                                                                          {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                              "type": "Identifier",
                                                                              "name": "parts"
                                                                            },
                                                                            "property": {
                                                                              "type": "Literal",
                                                                              "value": 1
                                                                            }
                                                                          }
                                                                        ]
                                                                      }
                                                                    }
                                                                  },
                                                                  {
                                                                    "type": "VariableDeclaration",
                                                                    "declarations": [
                                                                      {
                                                                        "type": "VariableDeclarator",
                                                                        "id": {
                                                                          "type": "Identifier",
                                                                          "name": "rawLength"
                                                                        },
                                                                        "init": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "raw"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "length"
                                                                          }
                                                                        }
                                                                      }
                                                                    ],
                                                                    "kind": "var"
                                                                  },
                                                                  {
                                                                    "type": "VariableDeclaration",
                                                                    "declarations": [
                                                                      {
                                                                        "type": "VariableDeclarator",
                                                                        "id": {
                                                                          "type": "Identifier",
                                                                          "name": "uInt8Array"
                                                                        },
                                                                        "init": {
                                                                          "type": "NewExpression",
                                                                          "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "Uint8Array"
                                                                          },
                                                                          "arguments": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "name": "rawLength"
                                                                            }
                                                                          ]
                                                                        }
                                                                      }
                                                                    ],
                                                                    "kind": "var"
                                                                  },
                                                                  {
                                                                    "type": "ForStatement",
                                                                    "init": {
                                                                      "type": "VariableDeclaration",
                                                                      "declarations": [
                                                                        {
                                                                          "type": "VariableDeclarator",
                                                                          "id": {
                                                                            "type": "Identifier",
                                                                            "name": "i"
                                                                          },
                                                                          "init": {
                                                                            "type": "Literal",
                                                                            "value": 0
                                                                          }
                                                                        }
                                                                      ],
                                                                      "kind": "var"
                                                                    },
                                                                    "test": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "<",
                                                                      "left": {
                                                                        "type": "Identifier",
                                                                        "name": "i"
                                                                      },
                                                                      "right": {
                                                                        "type": "Identifier",
                                                                        "name": "rawLength"
                                                                      }
                                                                    },
                                                                    "update": {
                                                                      "type": "UpdateExpression",
                                                                      "operator": "++",
                                                                      "argument": {
                                                                        "type": "Identifier",
                                                                        "name": "i"
                                                                      },
                                                                      "prefix": true
                                                                    },
                                                                    "body": {
                                                                      "type": "BlockStatement",
                                                                      "body": [
                                                                        {
                                                                          "type": "ExpressionStatement",
                                                                          "expression": {
                                                                            "type": "AssignmentExpression",
                                                                            "operator": "=",
                                                                            "left": {
                                                                              "type": "MemberExpression",
                                                                              "computed": true,
                                                                              "object": {
                                                                                "type": "Identifier",
                                                                                "name": "uInt8Array"
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "i"
                                                                              }
                                                                            },
                                                                            "right": {
                                                                              "type": "CallExpression",
                                                                              "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "raw"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "charCodeAt"
                                                                                }
                                                                              },
                                                                              "arguments": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "name": "i"
                                                                                }
                                                                              ]
                                                                            }
                                                                          }
                                                                        }
                                                                      ]
                                                                    }
                                                                  },
                                                                  {
                                                                    "type": "ReturnStatement",
                                                                    "argument": {
                                                                      "type": "NewExpression",
                                                                      "callee": {
                                                                        "type": "Identifier",
                                                                        "name": "Blob"
                                                                      },
                                                                      "arguments": [
                                                                        {
                                                                          "type": "ArrayExpression",
                                                                          "elements": [
                                                                            {
                                                                              "type": "MemberExpression",
                                                                              "computed": false,
                                                                              "object": {
                                                                                "type": "Identifier",
                                                                                "name": "uInt8Array"
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "buffer"
                                                                              }
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "ObjectExpression",
                                                                          "properties": [
                                                                            {
                                                                              "type": "Property",
                                                                              "key": {
                                                                                "type": "Identifier",
                                                                                "name": "type"
                                                                              },
                                                                              "value": {
                                                                                "type": "Identifier",
                                                                                "name": "contentType"
                                                                              },
                                                                              "kind": "init"
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  }
                                                                ]
                                                              },
                                                              "rest": null,
                                                              "generator": false,
                                                              "expression": false
                                                            },
                                                            {
                                                              "type": "FunctionDeclaration",
                                                              "id": {
                                                                "type": "Identifier",
                                                                "name": "rez"
                                                              },
                                                              "params": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "value"
                                                                }
                                                              ],
                                                              "defaults": [],
                                                              "body": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                  {
                                                                    "type": "VariableDeclaration",
                                                                    "declarations": [
                                                                      {
                                                                        "type": "VariableDeclarator",
                                                                        "id": {
                                                                          "type": "Identifier",
                                                                          "name": "i"
                                                                        },
                                                                        "init": null
                                                                      },
                                                                      {
                                                                        "type": "VariableDeclarator",
                                                                        "id": {
                                                                          "type": "Identifier",
                                                                          "name": "item"
                                                                        },
                                                                        "init": null
                                                                      },
                                                                      {
                                                                        "type": "VariableDeclarator",
                                                                        "id": {
                                                                          "type": "Identifier",
                                                                          "name": "name"
                                                                        },
                                                                        "init": null
                                                                      },
                                                                      {
                                                                        "type": "VariableDeclarator",
                                                                        "id": {
                                                                          "type": "Identifier",
                                                                          "name": "path"
                                                                        },
                                                                        "init": null
                                                                      }
                                                                    ],
                                                                    "kind": "var"
                                                                  },
                                                                  {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                      "type": "LogicalExpression",
                                                                      "operator": "&&",
                                                                      "left": {
                                                                        "type": "Identifier",
                                                                        "name": "value"
                                                                      },
                                                                      "right": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "===",
                                                                        "left": {
                                                                          "type": "UnaryExpression",
                                                                          "operator": "typeof",
                                                                          "argument": {
                                                                            "type": "Identifier",
                                                                            "name": "value"
                                                                          },
                                                                          "prefix": true
                                                                        },
                                                                        "right": {
                                                                          "type": "Literal",
                                                                          "value": "object"
                                                                        }
                                                                      }
                                                                    },
                                                                    "consequent": {
                                                                      "type": "BlockStatement",
                                                                      "body": [
                                                                        {
                                                                          "type": "IfStatement",
                                                                          "test": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "===",
                                                                            "left": {
                                                                              "type": "CallExpression",
                                                                              "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "MemberExpression",
                                                                                  "computed": false,
                                                                                  "object": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "Object"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "prototype"
                                                                                    }
                                                                                  },
                                                                                  "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "toString"
                                                                                  }
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "apply"
                                                                                }
                                                                              },
                                                                              "arguments": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "name": "value"
                                                                                }
                                                                              ]
                                                                            },
                                                                            "right": {
                                                                              "type": "Literal",
                                                                              "value": "[object Array]"
                                                                            }
                                                                          },
                                                                          "consequent": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                              {
                                                                                "type": "ForStatement",
                                                                                "init": {
                                                                                  "type": "AssignmentExpression",
                                                                                  "operator": "=",
                                                                                  "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "i"
                                                                                  },
                                                                                  "right": {
                                                                                    "type": "Literal",
                                                                                    "value": 0
                                                                                  }
                                                                                },
                                                                                "test": {
                                                                                  "type": "BinaryExpression",
                                                                                  "operator": "<",
                                                                                  "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "i"
                                                                                  },
                                                                                  "right": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "value"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "length"
                                                                                    }
                                                                                  }
                                                                                },
                                                                                "update": {
                                                                                  "type": "AssignmentExpression",
                                                                                  "operator": "+=",
                                                                                  "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "i"
                                                                                  },
                                                                                  "right": {
                                                                                    "type": "Literal",
                                                                                    "value": 1
                                                                                  }
                                                                                },
                                                                                "body": {
                                                                                  "type": "BlockStatement",
                                                                                  "body": [
                                                                                    {
                                                                                      "type": "ExpressionStatement",
                                                                                      "expression": {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "=",
                                                                                        "left": {
                                                                                          "type": "Identifier",
                                                                                          "name": "item"
                                                                                        },
                                                                                        "right": {
                                                                                          "type": "MemberExpression",
                                                                                          "computed": true,
                                                                                          "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "value"
                                                                                          },
                                                                                          "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "i"
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    },
                                                                                    {
                                                                                      "type": "IfStatement",
                                                                                      "test": {
                                                                                        "type": "LogicalExpression",
                                                                                        "operator": "&&",
                                                                                        "left": {
                                                                                          "type": "Identifier",
                                                                                          "name": "item"
                                                                                        },
                                                                                        "right": {
                                                                                          "type": "BinaryExpression",
                                                                                          "operator": "===",
                                                                                          "left": {
                                                                                            "type": "UnaryExpression",
                                                                                            "operator": "typeof",
                                                                                            "argument": {
                                                                                              "type": "Identifier",
                                                                                              "name": "item"
                                                                                            },
                                                                                            "prefix": true
                                                                                          },
                                                                                          "right": {
                                                                                            "type": "Literal",
                                                                                            "value": "object"
                                                                                          }
                                                                                        }
                                                                                      },
                                                                                      "consequent": {
                                                                                        "type": "BlockStatement",
                                                                                        "body": [
                                                                                          {
                                                                                            "type": "ExpressionStatement",
                                                                                            "expression": {
                                                                                              "type": "AssignmentExpression",
                                                                                              "operator": "=",
                                                                                              "left": {
                                                                                                "type": "Identifier",
                                                                                                "name": "path"
                                                                                              },
                                                                                              "right": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": false,
                                                                                                "object": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "item"
                                                                                                },
                                                                                                "property": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "$ref"
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          },
                                                                                          {
                                                                                            "type": "IfStatement",
                                                                                            "test": {
                                                                                              "type": "LogicalExpression",
                                                                                              "operator": "&&",
                                                                                              "left": {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "===",
                                                                                                "left": {
                                                                                                  "type": "UnaryExpression",
                                                                                                  "operator": "typeof",
                                                                                                  "argument": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "path"
                                                                                                  },
                                                                                                  "prefix": true
                                                                                                },
                                                                                                "right": {
                                                                                                  "type": "Literal",
                                                                                                  "value": "string"
                                                                                                }
                                                                                              },
                                                                                              "right": {
                                                                                                "type": "CallExpression",
                                                                                                "callee": {
                                                                                                  "type": "MemberExpression",
                                                                                                  "computed": false,
                                                                                                  "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "px"
                                                                                                  },
                                                                                                  "property": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "test"
                                                                                                  }
                                                                                                },
                                                                                                "arguments": [
                                                                                                  {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "path"
                                                                                                  }
                                                                                                ]
                                                                                              }
                                                                                            },
                                                                                            "consequent": {
                                                                                              "type": "BlockStatement",
                                                                                              "body": [
                                                                                                {
                                                                                                  "type": "ExpressionStatement",
                                                                                                  "expression": {
                                                                                                    "type": "AssignmentExpression",
                                                                                                    "operator": "=",
                                                                                                    "left": {
                                                                                                      "type": "MemberExpression",
                                                                                                      "computed": true,
                                                                                                      "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "value"
                                                                                                      },
                                                                                                      "property": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "i"
                                                                                                      }
                                                                                                    },
                                                                                                    "right": {
                                                                                                      "type": "CallExpression",
                                                                                                      "callee": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "eval"
                                                                                                      },
                                                                                                      "arguments": [
                                                                                                        {
                                                                                                          "type": "Identifier",
                                                                                                          "name": "path"
                                                                                                        }
                                                                                                      ]
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              ]
                                                                                            },
                                                                                            "alternate": {
                                                                                              "type": "BlockStatement",
                                                                                              "body": [
                                                                                                {
                                                                                                  "type": "ExpressionStatement",
                                                                                                  "expression": {
                                                                                                    "type": "AssignmentExpression",
                                                                                                    "operator": "=",
                                                                                                    "left": {
                                                                                                      "type": "MemberExpression",
                                                                                                      "computed": true,
                                                                                                      "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "value"
                                                                                                      },
                                                                                                      "property": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "i"
                                                                                                      }
                                                                                                    },
                                                                                                    "right": {
                                                                                                      "type": "CallExpression",
                                                                                                      "callee": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "rez"
                                                                                                      },
                                                                                                      "arguments": [
                                                                                                        {
                                                                                                          "type": "Identifier",
                                                                                                          "name": "item"
                                                                                                        }
                                                                                                      ]
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              ]
                                                                                            }
                                                                                          }
                                                                                        ]
                                                                                      },
                                                                                      "alternate": null
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              }
                                                                            ]
                                                                          },
                                                                          "alternate": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                              {
                                                                                "type": "IfStatement",
                                                                                "test": {
                                                                                  "type": "BinaryExpression",
                                                                                  "operator": "!==",
                                                                                  "left": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "value"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "$type"
                                                                                    }
                                                                                  },
                                                                                  "right": {
                                                                                    "type": "Identifier",
                                                                                    "name": "undefined"
                                                                                  }
                                                                                },
                                                                                "consequent": {
                                                                                  "type": "BlockStatement",
                                                                                  "body": [
                                                                                    {
                                                                                      "type": "SwitchStatement",
                                                                                      "discriminant": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                          "type": "Identifier",
                                                                                          "name": "value"
                                                                                        },
                                                                                        "property": {
                                                                                          "type": "Identifier",
                                                                                          "name": "$type"
                                                                                        }
                                                                                      },
                                                                                      "cases": [
                                                                                        {
                                                                                          "type": "SwitchCase",
                                                                                          "test": {
                                                                                            "type": "Literal",
                                                                                            "value": "blob"
                                                                                          },
                                                                                          "consequent": []
                                                                                        },
                                                                                        {
                                                                                          "type": "SwitchCase",
                                                                                          "test": {
                                                                                            "type": "Literal",
                                                                                            "value": "file"
                                                                                          },
                                                                                          "consequent": [
                                                                                            {
                                                                                              "type": "ExpressionStatement",
                                                                                              "expression": {
                                                                                                "type": "AssignmentExpression",
                                                                                                "operator": "=",
                                                                                                "left": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "value"
                                                                                                },
                                                                                                "right": {
                                                                                                  "type": "CallExpression",
                                                                                                  "callee": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "dataURLToBlob"
                                                                                                  },
                                                                                                  "arguments": [
                                                                                                    {
                                                                                                      "type": "MemberExpression",
                                                                                                      "computed": false,
                                                                                                      "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "value"
                                                                                                      },
                                                                                                      "property": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "$enc"
                                                                                                      }
                                                                                                    }
                                                                                                  ]
                                                                                                }
                                                                                              }
                                                                                            },
                                                                                            {
                                                                                              "type": "BreakStatement",
                                                                                              "label": null
                                                                                            }
                                                                                          ]
                                                                                        },
                                                                                        {
                                                                                          "type": "SwitchCase",
                                                                                          "test": {
                                                                                            "type": "Literal",
                                                                                            "value": "bool"
                                                                                          },
                                                                                          "consequent": [
                                                                                            {
                                                                                              "type": "ExpressionStatement",
                                                                                              "expression": {
                                                                                                "type": "AssignmentExpression",
                                                                                                "operator": "=",
                                                                                                "left": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "value"
                                                                                                },
                                                                                                "right": {
                                                                                                  "type": "CallExpression",
                                                                                                  "callee": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "Boolean"
                                                                                                  },
                                                                                                  "arguments": [
                                                                                                    {
                                                                                                      "type": "BinaryExpression",
                                                                                                      "operator": "===",
                                                                                                      "left": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": false,
                                                                                                        "object": {
                                                                                                          "type": "Identifier",
                                                                                                          "name": "value"
                                                                                                        },
                                                                                                        "property": {
                                                                                                          "type": "Identifier",
                                                                                                          "name": "$enc"
                                                                                                        }
                                                                                                      },
                                                                                                      "right": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "true"
                                                                                                      }
                                                                                                    }
                                                                                                  ]
                                                                                                }
                                                                                              }
                                                                                            },
                                                                                            {
                                                                                              "type": "BreakStatement",
                                                                                              "label": null
                                                                                            }
                                                                                          ]
                                                                                        },
                                                                                        {
                                                                                          "type": "SwitchCase",
                                                                                          "test": {
                                                                                            "type": "Literal",
                                                                                            "value": "date"
                                                                                          },
                                                                                          "consequent": [
                                                                                            {
                                                                                              "type": "ExpressionStatement",
                                                                                              "expression": {
                                                                                                "type": "AssignmentExpression",
                                                                                                "operator": "=",
                                                                                                "left": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "value"
                                                                                                },
                                                                                                "right": {
                                                                                                  "type": "NewExpression",
                                                                                                  "callee": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "Date"
                                                                                                  },
                                                                                                  "arguments": [
                                                                                                    {
                                                                                                      "type": "MemberExpression",
                                                                                                      "computed": false,
                                                                                                      "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "value"
                                                                                                      },
                                                                                                      "property": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "$enc"
                                                                                                      }
                                                                                                    }
                                                                                                  ]
                                                                                                }
                                                                                              }
                                                                                            },
                                                                                            {
                                                                                              "type": "BreakStatement",
                                                                                              "label": null
                                                                                            }
                                                                                          ]
                                                                                        },
                                                                                        {
                                                                                          "type": "SwitchCase",
                                                                                          "test": {
                                                                                            "type": "Literal",
                                                                                            "value": "num"
                                                                                          },
                                                                                          "consequent": [
                                                                                            {
                                                                                              "type": "ExpressionStatement",
                                                                                              "expression": {
                                                                                                "type": "AssignmentExpression",
                                                                                                "operator": "=",
                                                                                                "left": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "value"
                                                                                                },
                                                                                                "right": {
                                                                                                  "type": "CallExpression",
                                                                                                  "callee": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "Number"
                                                                                                  },
                                                                                                  "arguments": [
                                                                                                    {
                                                                                                      "type": "MemberExpression",
                                                                                                      "computed": false,
                                                                                                      "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "value"
                                                                                                      },
                                                                                                      "property": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "$enc"
                                                                                                      }
                                                                                                    }
                                                                                                  ]
                                                                                                }
                                                                                              }
                                                                                            },
                                                                                            {
                                                                                              "type": "BreakStatement",
                                                                                              "label": null
                                                                                            }
                                                                                          ]
                                                                                        },
                                                                                        {
                                                                                          "type": "SwitchCase",
                                                                                          "test": {
                                                                                            "type": "Literal",
                                                                                            "value": "regex"
                                                                                          },
                                                                                          "consequent": [
                                                                                            {
                                                                                              "type": "ExpressionStatement",
                                                                                              "expression": {
                                                                                                "type": "AssignmentExpression",
                                                                                                "operator": "=",
                                                                                                "left": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "value"
                                                                                                },
                                                                                                "right": {
                                                                                                  "type": "CallExpression",
                                                                                                  "callee": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "eval"
                                                                                                  },
                                                                                                  "arguments": [
                                                                                                    {
                                                                                                      "type": "MemberExpression",
                                                                                                      "computed": false,
                                                                                                      "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "value"
                                                                                                      },
                                                                                                      "property": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "$enc"
                                                                                                      }
                                                                                                    }
                                                                                                  ]
                                                                                                }
                                                                                              }
                                                                                            },
                                                                                            {
                                                                                              "type": "BreakStatement",
                                                                                              "label": null
                                                                                            }
                                                                                          ]
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                "alternate": {
                                                                                  "type": "BlockStatement",
                                                                                  "body": [
                                                                                    {
                                                                                      "type": "ForInStatement",
                                                                                      "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "name"
                                                                                      },
                                                                                      "right": {
                                                                                        "type": "Identifier",
                                                                                        "name": "value"
                                                                                      },
                                                                                      "body": {
                                                                                        "type": "BlockStatement",
                                                                                        "body": [
                                                                                          {
                                                                                            "type": "IfStatement",
                                                                                            "test": {
                                                                                              "type": "BinaryExpression",
                                                                                              "operator": "===",
                                                                                              "left": {
                                                                                                "type": "UnaryExpression",
                                                                                                "operator": "typeof",
                                                                                                "argument": {
                                                                                                  "type": "MemberExpression",
                                                                                                  "computed": true,
                                                                                                  "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "value"
                                                                                                  },
                                                                                                  "property": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "name"
                                                                                                  }
                                                                                                },
                                                                                                "prefix": true
                                                                                              },
                                                                                              "right": {
                                                                                                "type": "Literal",
                                                                                                "value": "object"
                                                                                              }
                                                                                            },
                                                                                            "consequent": {
                                                                                              "type": "BlockStatement",
                                                                                              "body": [
                                                                                                {
                                                                                                  "type": "ExpressionStatement",
                                                                                                  "expression": {
                                                                                                    "type": "AssignmentExpression",
                                                                                                    "operator": "=",
                                                                                                    "left": {
                                                                                                      "type": "Identifier",
                                                                                                      "name": "item"
                                                                                                    },
                                                                                                    "right": {
                                                                                                      "type": "MemberExpression",
                                                                                                      "computed": true,
                                                                                                      "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "value"
                                                                                                      },
                                                                                                      "property": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "name"
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                },
                                                                                                {
                                                                                                  "type": "IfStatement",
                                                                                                  "test": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "item"
                                                                                                  },
                                                                                                  "consequent": {
                                                                                                    "type": "BlockStatement",
                                                                                                    "body": [
                                                                                                      {
                                                                                                        "type": "ExpressionStatement",
                                                                                                        "expression": {
                                                                                                          "type": "AssignmentExpression",
                                                                                                          "operator": "=",
                                                                                                          "left": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "path"
                                                                                                          },
                                                                                                          "right": {
                                                                                                            "type": "MemberExpression",
                                                                                                            "computed": false,
                                                                                                            "object": {
                                                                                                              "type": "Identifier",
                                                                                                              "name": "item"
                                                                                                            },
                                                                                                            "property": {
                                                                                                              "type": "Identifier",
                                                                                                              "name": "$ref"
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      },
                                                                                                      {
                                                                                                        "type": "IfStatement",
                                                                                                        "test": {
                                                                                                          "type": "LogicalExpression",
                                                                                                          "operator": "&&",
                                                                                                          "left": {
                                                                                                            "type": "BinaryExpression",
                                                                                                            "operator": "===",
                                                                                                            "left": {
                                                                                                              "type": "UnaryExpression",
                                                                                                              "operator": "typeof",
                                                                                                              "argument": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "path"
                                                                                                              },
                                                                                                              "prefix": true
                                                                                                            },
                                                                                                            "right": {
                                                                                                              "type": "Literal",
                                                                                                              "value": "string"
                                                                                                            }
                                                                                                          },
                                                                                                          "right": {
                                                                                                            "type": "CallExpression",
                                                                                                            "callee": {
                                                                                                              "type": "MemberExpression",
                                                                                                              "computed": false,
                                                                                                              "object": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "px"
                                                                                                              },
                                                                                                              "property": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "test"
                                                                                                              }
                                                                                                            },
                                                                                                            "arguments": [
                                                                                                              {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "path"
                                                                                                              }
                                                                                                            ]
                                                                                                          }
                                                                                                        },
                                                                                                        "consequent": {
                                                                                                          "type": "BlockStatement",
                                                                                                          "body": [
                                                                                                            {
                                                                                                              "type": "ExpressionStatement",
                                                                                                              "expression": {
                                                                                                                "type": "AssignmentExpression",
                                                                                                                "operator": "=",
                                                                                                                "left": {
                                                                                                                  "type": "MemberExpression",
                                                                                                                  "computed": true,
                                                                                                                  "object": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "value"
                                                                                                                  },
                                                                                                                  "property": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "name"
                                                                                                                  }
                                                                                                                },
                                                                                                                "right": {
                                                                                                                  "type": "CallExpression",
                                                                                                                  "callee": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "eval"
                                                                                                                  },
                                                                                                                  "arguments": [
                                                                                                                    {
                                                                                                                      "type": "Identifier",
                                                                                                                      "name": "path"
                                                                                                                    }
                                                                                                                  ]
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          ]
                                                                                                        },
                                                                                                        "alternate": {
                                                                                                          "type": "BlockStatement",
                                                                                                          "body": [
                                                                                                            {
                                                                                                              "type": "ExpressionStatement",
                                                                                                              "expression": {
                                                                                                                "type": "AssignmentExpression",
                                                                                                                "operator": "=",
                                                                                                                "left": {
                                                                                                                  "type": "MemberExpression",
                                                                                                                  "computed": true,
                                                                                                                  "object": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "value"
                                                                                                                  },
                                                                                                                  "property": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "name"
                                                                                                                  }
                                                                                                                },
                                                                                                                "right": {
                                                                                                                  "type": "CallExpression",
                                                                                                                  "callee": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "rez"
                                                                                                                  },
                                                                                                                  "arguments": [
                                                                                                                    {
                                                                                                                      "type": "Identifier",
                                                                                                                      "name": "item"
                                                                                                                    }
                                                                                                                  ]
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          ]
                                                                                                        }
                                                                                                      }
                                                                                                    ]
                                                                                                  },
                                                                                                  "alternate": null
                                                                                                }
                                                                                              ]
                                                                                            },
                                                                                            "alternate": null
                                                                                          }
                                                                                        ]
                                                                                      },
                                                                                      "each": false
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              }
                                                                            ]
                                                                          }
                                                                        }
                                                                      ]
                                                                    },
                                                                    "alternate": null
                                                                  },
                                                                  {
                                                                    "type": "ReturnStatement",
                                                                    "argument": {
                                                                      "type": "Identifier",
                                                                      "name": "value"
                                                                    }
                                                                  }
                                                                ]
                                                              },
                                                              "rest": null,
                                                              "generator": false,
                                                              "expression": false
                                                            },
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "Identifier",
                                                                  "name": "rez"
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "$"
                                                                  }
                                                                ]
                                                              }
                                                            },
                                                            {
                                                              "type": "ReturnStatement",
                                                              "argument": {
                                                                "type": "Identifier",
                                                                "name": "$"
                                                              }
                                                            }
                                                          ]
                                                        },
                                                        "rest": null,
                                                        "generator": false,
                                                        "expression": false
                                                      },
                                                      "kind": "init"
                                                    },
                                                    {
                                                      "type": "Property",
                                                      "key": {
                                                        "type": "Literal",
                                                        "value": "encode"
                                                      },
                                                      "value": {
                                                        "type": "FunctionExpression",
                                                        "id": null,
                                                        "params": [
                                                          {
                                                            "type": "Identifier",
                                                            "name": "val"
                                                          },
                                                          {
                                                            "type": "Identifier",
                                                            "name": "callback"
                                                          }
                                                        ],
                                                        "defaults": [],
                                                        "body": {
                                                          "type": "BlockStatement",
                                                          "body": [
                                                            {
                                                              "type": "FunctionDeclaration",
                                                              "id": {
                                                                "type": "Identifier",
                                                                "name": "finishEncode"
                                                              },
                                                              "params": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "val"
                                                                }
                                                              ],
                                                              "defaults": [],
                                                              "body": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                  {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "Identifier",
                                                                        "name": "callback"
                                                                      },
                                                                      "arguments": [
                                                                        {
                                                                          "type": "CallExpression",
                                                                          "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "Identifier",
                                                                              "name": "JSON"
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "stringify"
                                                                            }
                                                                          },
                                                                          "arguments": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "name": "val"
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  }
                                                                ]
                                                              },
                                                              "rest": null,
                                                              "generator": false,
                                                              "expression": false
                                                            },
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "ThisExpression"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "decycle"
                                                                  }
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "val"
                                                                  },
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "finishEncode"
                                                                  }
                                                                ]
                                                              }
                                                            }
                                                          ]
                                                        },
                                                        "rest": null,
                                                        "generator": false,
                                                        "expression": false
                                                      },
                                                      "kind": "init"
                                                    },
                                                    {
                                                      "type": "Property",
                                                      "key": {
                                                        "type": "Literal",
                                                        "value": "decode"
                                                      },
                                                      "value": {
                                                        "type": "FunctionExpression",
                                                        "id": null,
                                                        "params": [
                                                          {
                                                            "type": "Identifier",
                                                            "name": "val"
                                                          }
                                                        ],
                                                        "defaults": [],
                                                        "body": {
                                                          "type": "BlockStatement",
                                                          "body": [
                                                            {
                                                              "type": "ReturnStatement",
                                                              "argument": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "ThisExpression"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "retrocycle"
                                                                  }
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "JSON"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "parse"
                                                                      }
                                                                    },
                                                                    "arguments": [
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "val"
                                                                      }
                                                                    ]
                                                                  }
                                                                ]
                                                              }
                                                            }
                                                          ]
                                                        },
                                                        "rest": null,
                                                        "generator": false,
                                                        "expression": false
                                                      },
                                                      "kind": "init"
                                                    }
                                                  ]
                                                }
                                              }
                                            ]
                                          },
                                          "rest": null,
                                          "generator": false,
                                          "expression": false
                                        },
                                        "arguments": []
                                      }
                                    }
                                  ],
                                  "kind": "var"
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "idbModules"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "Sca"
                                      }
                                    },
                                    "right": {
                                      "type": "Identifier",
                                      "name": "Sca"
                                    }
                                  }
                                }
                              ]
                            },
                            "rest": null,
                            "generator": false,
                            "expression": false
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "idbModules"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [
                              {
                                "type": "Identifier",
                                "name": "idbModules"
                              }
                            ],
                            "defaults": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "VariableDeclaration",
                                  "declarations": [
                                    {
                                      "type": "VariableDeclarator",
                                      "id": {
                                        "type": "Identifier",
                                        "name": "collations"
                                      },
                                      "init": {
                                        "type": "ArrayExpression",
                                        "elements": [
                                          {
                                            "type": "Literal",
                                            "value": ""
                                          },
                                          {
                                            "type": "Literal",
                                            "value": "number"
                                          },
                                          {
                                            "type": "Literal",
                                            "value": "string"
                                          },
                                          {
                                            "type": "Literal",
                                            "value": "boolean"
                                          },
                                          {
                                            "type": "Literal",
                                            "value": "object"
                                          },
                                          {
                                            "type": "Literal",
                                            "value": "undefined"
                                          }
                                        ]
                                      }
                                    }
                                  ],
                                  "kind": "var"
                                },
                                {
                                  "type": "VariableDeclaration",
                                  "declarations": [
                                    {
                                      "type": "VariableDeclarator",
                                      "id": {
                                        "type": "Identifier",
                                        "name": "getGenericEncoder"
                                      },
                                      "init": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [],
                                        "defaults": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ReturnStatement",
                                              "argument": {
                                                "type": "ObjectExpression",
                                                "properties": [
                                                  {
                                                    "type": "Property",
                                                    "key": {
                                                      "type": "Literal",
                                                      "value": "encode"
                                                    },
                                                    "value": {
                                                      "type": "FunctionExpression",
                                                      "id": null,
                                                      "params": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "key"
                                                        }
                                                      ],
                                                      "defaults": [],
                                                      "body": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "ReturnStatement",
                                                            "argument": {
                                                              "type": "BinaryExpression",
                                                              "operator": "+",
                                                              "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "collations"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "indexOf"
                                                                    }
                                                                  },
                                                                  "arguments": [
                                                                    {
                                                                      "type": "UnaryExpression",
                                                                      "operator": "typeof",
                                                                      "argument": {
                                                                        "type": "Identifier",
                                                                        "name": "key"
                                                                      },
                                                                      "prefix": true
                                                                    }
                                                                  ]
                                                                },
                                                                "right": {
                                                                  "type": "Literal",
                                                                  "value": "-"
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "JSON"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "stringify"
                                                                  }
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "key"
                                                                  }
                                                                ]
                                                              }
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      "rest": null,
                                                      "generator": false,
                                                      "expression": false
                                                    },
                                                    "kind": "init"
                                                  },
                                                  {
                                                    "type": "Property",
                                                    "key": {
                                                      "type": "Literal",
                                                      "value": "decode"
                                                    },
                                                    "value": {
                                                      "type": "FunctionExpression",
                                                      "id": null,
                                                      "params": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "key"
                                                        }
                                                      ],
                                                      "defaults": [],
                                                      "body": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "IfStatement",
                                                            "test": {
                                                              "type": "BinaryExpression",
                                                              "operator": "===",
                                                              "left": {
                                                                "type": "UnaryExpression",
                                                                "operator": "typeof",
                                                                "argument": {
                                                                  "type": "Identifier",
                                                                  "name": "key"
                                                                },
                                                                "prefix": true
                                                              },
                                                              "right": {
                                                                "type": "Literal",
                                                                "value": "undefined"
                                                              }
                                                            },
                                                            "consequent": {
                                                              "type": "BlockStatement",
                                                              "body": [
                                                                {
                                                                  "type": "ReturnStatement",
                                                                  "argument": {
                                                                    "type": "Identifier",
                                                                    "name": "undefined"
                                                                  }
                                                                }
                                                              ]
                                                            },
                                                            "alternate": {
                                                              "type": "BlockStatement",
                                                              "body": [
                                                                {
                                                                  "type": "ReturnStatement",
                                                                  "argument": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "JSON"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "parse"
                                                                      }
                                                                    },
                                                                    "arguments": [
                                                                      {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "key"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "substring"
                                                                          }
                                                                        },
                                                                        "arguments": [
                                                                          {
                                                                            "type": "Literal",
                                                                            "value": 2
                                                                          }
                                                                        ]
                                                                      }
                                                                    ]
                                                                  }
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      "rest": null,
                                                      "generator": false,
                                                      "expression": false
                                                    },
                                                    "kind": "init"
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                      }
                                    }
                                  ],
                                  "kind": "var"
                                },
                                {
                                  "type": "VariableDeclaration",
                                  "declarations": [
                                    {
                                      "type": "VariableDeclarator",
                                      "id": {
                                        "type": "Identifier",
                                        "name": "types"
                                      },
                                      "init": {
                                        "type": "ObjectExpression",
                                        "properties": [
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Literal",
                                              "value": "number"
                                            },
                                            "value": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "getGenericEncoder"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Literal",
                                                  "value": "number"
                                                }
                                              ]
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Literal",
                                              "value": "boolean"
                                            },
                                            "value": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "getGenericEncoder"
                                              },
                                              "arguments": []
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Literal",
                                              "value": "object"
                                            },
                                            "value": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "getGenericEncoder"
                                              },
                                              "arguments": []
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Literal",
                                              "value": "string"
                                            },
                                            "value": {
                                              "type": "ObjectExpression",
                                              "properties": [
                                                {
                                                  "type": "Property",
                                                  "key": {
                                                    "type": "Literal",
                                                    "value": "encode"
                                                  },
                                                  "value": {
                                                    "type": "FunctionExpression",
                                                    "id": null,
                                                    "params": [
                                                      {
                                                        "type": "Identifier",
                                                        "name": "key"
                                                      }
                                                    ],
                                                    "defaults": [],
                                                    "body": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ReturnStatement",
                                                          "argument": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "BinaryExpression",
                                                              "operator": "+",
                                                              "left": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "collations"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "indexOf"
                                                                  }
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "Literal",
                                                                    "value": "string"
                                                                  }
                                                                ]
                                                              },
                                                              "right": {
                                                                "type": "Literal",
                                                                "value": "-"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "key"
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "rest": null,
                                                    "generator": false,
                                                    "expression": false
                                                  },
                                                  "kind": "init"
                                                },
                                                {
                                                  "type": "Property",
                                                  "key": {
                                                    "type": "Literal",
                                                    "value": "decode"
                                                  },
                                                  "value": {
                                                    "type": "FunctionExpression",
                                                    "id": null,
                                                    "params": [
                                                      {
                                                        "type": "Identifier",
                                                        "name": "key"
                                                      }
                                                    ],
                                                    "defaults": [],
                                                    "body": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ReturnStatement",
                                                          "argument": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": ""
                                                            },
                                                            "right": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "key"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "substring"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Literal",
                                                                  "value": 2
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "rest": null,
                                                    "generator": false,
                                                    "expression": false
                                                  },
                                                  "kind": "init"
                                                }
                                              ]
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Literal",
                                              "value": "undefined"
                                            },
                                            "value": {
                                              "type": "ObjectExpression",
                                              "properties": [
                                                {
                                                  "type": "Property",
                                                  "key": {
                                                    "type": "Literal",
                                                    "value": "encode"
                                                  },
                                                  "value": {
                                                    "type": "FunctionExpression",
                                                    "id": null,
                                                    "params": [
                                                      {
                                                        "type": "Identifier",
                                                        "name": "key"
                                                      }
                                                    ],
                                                    "defaults": [],
                                                    "body": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ReturnStatement",
                                                          "argument": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "collations"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "indexOf"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Literal",
                                                                  "value": "undefined"
                                                                }
                                                              ]
                                                            },
                                                            "right": {
                                                              "type": "Literal",
                                                              "value": "-undefined"
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "rest": null,
                                                    "generator": false,
                                                    "expression": false
                                                  },
                                                  "kind": "init"
                                                },
                                                {
                                                  "type": "Property",
                                                  "key": {
                                                    "type": "Literal",
                                                    "value": "decode"
                                                  },
                                                  "value": {
                                                    "type": "FunctionExpression",
                                                    "id": null,
                                                    "params": [
                                                      {
                                                        "type": "Identifier",
                                                        "name": "key"
                                                      }
                                                    ],
                                                    "defaults": [],
                                                    "body": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ReturnStatement",
                                                          "argument": {
                                                            "type": "Identifier",
                                                            "name": "undefined"
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "rest": null,
                                                    "generator": false,
                                                    "expression": false
                                                  },
                                                  "kind": "init"
                                                }
                                              ]
                                            },
                                            "kind": "init"
                                          }
                                        ]
                                      }
                                    }
                                  ],
                                  "kind": "var"
                                },
                                {
                                  "type": "VariableDeclaration",
                                  "declarations": [
                                    {
                                      "type": "VariableDeclarator",
                                      "id": {
                                        "type": "Identifier",
                                        "name": "Key"
                                      },
                                      "init": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "FunctionExpression",
                                          "id": null,
                                          "params": [],
                                          "defaults": [],
                                          "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "ReturnStatement",
                                                "argument": {
                                                  "type": "ObjectExpression",
                                                  "properties": [
                                                    {
                                                      "type": "Property",
                                                      "key": {
                                                        "type": "Identifier",
                                                        "name": "encode"
                                                      },
                                                      "value": {
                                                        "type": "FunctionExpression",
                                                        "id": null,
                                                        "params": [
                                                          {
                                                            "type": "Identifier",
                                                            "name": "key"
                                                          }
                                                        ],
                                                        "defaults": [],
                                                        "body": {
                                                          "type": "BlockStatement",
                                                          "body": [
                                                            {
                                                              "type": "ReturnStatement",
                                                              "argument": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "types"
                                                                    },
                                                                    "property": {
                                                                      "type": "UnaryExpression",
                                                                      "operator": "typeof",
                                                                      "argument": {
                                                                        "type": "Identifier",
                                                                        "name": "key"
                                                                      },
                                                                      "prefix": true
                                                                    }
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "encode"
                                                                  }
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "key"
                                                                  }
                                                                ]
                                                              }
                                                            }
                                                          ]
                                                        },
                                                        "rest": null,
                                                        "generator": false,
                                                        "expression": false
                                                      },
                                                      "kind": "init"
                                                    },
                                                    {
                                                      "type": "Property",
                                                      "key": {
                                                        "type": "Identifier",
                                                        "name": "decode"
                                                      },
                                                      "value": {
                                                        "type": "FunctionExpression",
                                                        "id": null,
                                                        "params": [
                                                          {
                                                            "type": "Identifier",
                                                            "name": "key"
                                                          }
                                                        ],
                                                        "defaults": [],
                                                        "body": {
                                                          "type": "BlockStatement",
                                                          "body": [
                                                            {
                                                              "type": "ReturnStatement",
                                                              "argument": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "types"
                                                                    },
                                                                    "property": {
                                                                      "type": "MemberExpression",
                                                                      "computed": true,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "collations"
                                                                      },
                                                                      "property": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "key"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "substring"
                                                                          }
                                                                        },
                                                                        "arguments": [
                                                                          {
                                                                            "type": "Literal",
                                                                            "value": 0
                                                                          },
                                                                          {
                                                                            "type": "Literal",
                                                                            "value": 1
                                                                          }
                                                                        ]
                                                                      }
                                                                    }
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "decode"
                                                                  }
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "key"
                                                                  }
                                                                ]
                                                              }
                                                            }
                                                          ]
                                                        },
                                                        "rest": null,
                                                        "generator": false,
                                                        "expression": false
                                                      },
                                                      "kind": "init"
                                                    }
                                                  ]
                                                }
                                              }
                                            ]
                                          },
                                          "rest": null,
                                          "generator": false,
                                          "expression": false
                                        },
                                        "arguments": []
                                      }
                                    }
                                  ],
                                  "kind": "var"
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "idbModules"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "Key"
                                      }
                                    },
                                    "right": {
                                      "type": "Identifier",
                                      "name": "Key"
                                    }
                                  }
                                }
                              ]
                            },
                            "rest": null,
                            "generator": false,
                            "expression": false
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "idbModules"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [
                              {
                                "type": "Identifier",
                                "name": "idbModules"
                              },
                              {
                                "type": "Identifier",
                                "name": "undefined"
                              }
                            ],
                            "defaults": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "VariableDeclaration",
                                  "declarations": [
                                    {
                                      "type": "VariableDeclarator",
                                      "id": {
                                        "type": "Identifier",
                                        "name": "Event"
                                      },
                                      "init": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                          {
                                            "type": "Identifier",
                                            "name": "type"
                                          },
                                          {
                                            "type": "Identifier",
                                            "name": "debug"
                                          }
                                        ],
                                        "defaults": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ReturnStatement",
                                              "argument": {
                                                "type": "ObjectExpression",
                                                "properties": [
                                                  {
                                                    "type": "Property",
                                                    "key": {
                                                      "type": "Literal",
                                                      "value": "type"
                                                    },
                                                    "value": {
                                                      "type": "Identifier",
                                                      "name": "type"
                                                    },
                                                    "kind": "init"
                                                  },
                                                  {
                                                    "type": "Property",
                                                    "key": {
                                                      "type": "Identifier",
                                                      "name": "debug"
                                                    },
                                                    "value": {
                                                      "type": "Identifier",
                                                      "name": "debug"
                                                    },
                                                    "kind": "init"
                                                  },
                                                  {
                                                    "type": "Property",
                                                    "key": {
                                                      "type": "Identifier",
                                                      "name": "bubbles"
                                                    },
                                                    "value": {
                                                      "type": "Literal",
                                                      "value": false
                                                    },
                                                    "kind": "init"
                                                  },
                                                  {
                                                    "type": "Property",
                                                    "key": {
                                                      "type": "Identifier",
                                                      "name": "cancelable"
                                                    },
                                                    "value": {
                                                      "type": "Literal",
                                                      "value": false
                                                    },
                                                    "kind": "init"
                                                  },
                                                  {
                                                    "type": "Property",
                                                    "key": {
                                                      "type": "Identifier",
                                                      "name": "eventPhase"
                                                    },
                                                    "value": {
                                                      "type": "Literal",
                                                      "value": 0
                                                    },
                                                    "kind": "init"
                                                  },
                                                  {
                                                    "type": "Property",
                                                    "key": {
                                                      "type": "Identifier",
                                                      "name": "timeStamp"
                                                    },
                                                    "value": {
                                                      "type": "NewExpression",
                                                      "callee": {
                                                        "type": "Identifier",
                                                        "name": "Date"
                                                      },
                                                      "arguments": []
                                                    },
                                                    "kind": "init"
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                      }
                                    }
                                  ],
                                  "kind": "var"
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "idbModules"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "Event"
                                      }
                                    },
                                    "right": {
                                      "type": "Identifier",
                                      "name": "Event"
                                    }
                                  }
                                }
                              ]
                            },
                            "rest": null,
                            "generator": false,
                            "expression": false
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "idbModules"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [
                              {
                                "type": "Identifier",
                                "name": "idbModules"
                              }
                            ],
                            "defaults": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "VariableDeclaration",
                                  "declarations": [
                                    {
                                      "type": "VariableDeclarator",
                                      "id": {
                                        "type": "Identifier",
                                        "name": "IDBRequest"
                                      },
                                      "init": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [],
                                        "defaults": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "ThisExpression"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "onsuccess"
                                                  }
                                                },
                                                "right": {
                                                  "type": "AssignmentExpression",
                                                  "operator": "=",
                                                  "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "onerror"
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "ThisExpression"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "result"
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "error"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "ThisExpression"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "source"
                                                          }
                                                        },
                                                        "right": {
                                                          "type": "AssignmentExpression",
                                                          "operator": "=",
                                                          "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "transaction"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": null
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "ThisExpression"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "readyState"
                                                  }
                                                },
                                                "right": {
                                                  "type": "Literal",
                                                  "value": "pending"
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                      }
                                    }
                                  ],
                                  "kind": "var"
                                },
                                {
                                  "type": "VariableDeclaration",
                                  "declarations": [
                                    {
                                      "type": "VariableDeclarator",
                                      "id": {
                                        "type": "Identifier",
                                        "name": "IDBOpenRequest"
                                      },
                                      "init": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [],
                                        "defaults": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "ThisExpression"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "onblocked"
                                                  }
                                                },
                                                "right": {
                                                  "type": "AssignmentExpression",
                                                  "operator": "=",
                                                  "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "onupgradeneeded"
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "Literal",
                                                    "value": null
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                      }
                                    }
                                  ],
                                  "kind": "var"
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "IDBOpenRequest"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "prototype"
                                      }
                                    },
                                    "right": {
                                      "type": "Identifier",
                                      "name": "IDBRequest"
                                    }
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "idbModules"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "IDBRequest"
                                      }
                                    },
                                    "right": {
                                      "type": "Identifier",
                                      "name": "IDBRequest"
                                    }
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "idbModules"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "IDBOpenRequest"
                                      }
                                    },
                                    "right": {
                                      "type": "Identifier",
                                      "name": "IDBOpenRequest"
                                    }
                                  }
                                }
                              ]
                            },
                            "rest": null,
                            "generator": false,
                            "expression": false
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "idbModules"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [
                              {
                                "type": "Identifier",
                                "name": "idbModules"
                              },
                              {
                                "type": "Identifier",
                                "name": "undefined"
                              }
                            ],
                            "defaults": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "VariableDeclaration",
                                  "declarations": [
                                    {
                                      "type": "VariableDeclarator",
                                      "id": {
                                        "type": "Identifier",
                                        "name": "IDBKeyRange"
                                      },
                                      "init": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                          {
                                            "type": "Identifier",
                                            "name": "lower"
                                          },
                                          {
                                            "type": "Identifier",
                                            "name": "upper"
                                          },
                                          {
                                            "type": "Identifier",
                                            "name": "lowerOpen"
                                          },
                                          {
                                            "type": "Identifier",
                                            "name": "upperOpen"
                                          }
                                        ],
                                        "defaults": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "ThisExpression"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "lower"
                                                  }
                                                },
                                                "right": {
                                                  "type": "Identifier",
                                                  "name": "lower"
                                                }
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "ThisExpression"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "upper"
                                                  }
                                                },
                                                "right": {
                                                  "type": "Identifier",
                                                  "name": "upper"
                                                }
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "ThisExpression"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "lowerOpen"
                                                  }
                                                },
                                                "right": {
                                                  "type": "Identifier",
                                                  "name": "lowerOpen"
                                                }
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "ThisExpression"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "upperOpen"
                                                  }
                                                },
                                                "right": {
                                                  "type": "Identifier",
                                                  "name": "upperOpen"
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                      }
                                    }
                                  ],
                                  "kind": "var"
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "IDBKeyRange"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "only"
                                      }
                                    },
                                    "right": {
                                      "type": "FunctionExpression",
                                      "id": null,
                                      "params": [
                                        {
                                          "type": "Identifier",
                                          "name": "value"
                                        }
                                      ],
                                      "defaults": [],
                                      "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "ReturnStatement",
                                            "argument": {
                                              "type": "NewExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "IDBKeyRange"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "value"
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "name": "value"
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": false
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": false
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      },
                                      "rest": null,
                                      "generator": false,
                                      "expression": false
                                    }
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "IDBKeyRange"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "lowerBound"
                                      }
                                    },
                                    "right": {
                                      "type": "FunctionExpression",
                                      "id": null,
                                      "params": [
                                        {
                                          "type": "Identifier",
                                          "name": "value"
                                        },
                                        {
                                          "type": "Identifier",
                                          "name": "open"
                                        }
                                      ],
                                      "defaults": [],
                                      "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "ReturnStatement",
                                            "argument": {
                                              "type": "NewExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "IDBKeyRange"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "value"
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "name": "undefined"
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "name": "open"
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "name": "undefined"
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      },
                                      "rest": null,
                                      "generator": false,
                                      "expression": false
                                    }
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "IDBKeyRange"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "upperBound"
                                      }
                                    },
                                    "right": {
                                      "type": "FunctionExpression",
                                      "id": null,
                                      "params": [
                                        {
                                          "type": "Identifier",
                                          "name": "value"
                                        }
                                      ],
                                      "defaults": [],
                                      "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "ReturnStatement",
                                            "argument": {
                                              "type": "NewExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "IDBKeyRange"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "undefined"
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "name": "value"
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "name": "undefined"
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "name": "open"
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      },
                                      "rest": null,
                                      "generator": false,
                                      "expression": false
                                    }
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "IDBKeyRange"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "bound"
                                      }
                                    },
                                    "right": {
                                      "type": "FunctionExpression",
                                      "id": null,
                                      "params": [
                                        {
                                          "type": "Identifier",
                                          "name": "lower"
                                        },
                                        {
                                          "type": "Identifier",
                                          "name": "upper"
                                        },
                                        {
                                          "type": "Identifier",
                                          "name": "lowerOpen"
                                        },
                                        {
                                          "type": "Identifier",
                                          "name": "upperOpen"
                                        }
                                      ],
                                      "defaults": [],
                                      "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "ReturnStatement",
                                            "argument": {
                                              "type": "NewExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "IDBKeyRange"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "lower"
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "name": "upper"
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "name": "lowerOpen"
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "name": "upperOpen"
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      },
                                      "rest": null,
                                      "generator": false,
                                      "expression": false
                                    }
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "idbModules"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "IDBKeyRange"
                                      }
                                    },
                                    "right": {
                                      "type": "Identifier",
                                      "name": "IDBKeyRange"
                                    }
                                  }
                                }
                              ]
                            },
                            "rest": null,
                            "generator": false,
                            "expression": false
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "idbModules"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [
                              {
                                "type": "Identifier",
                                "name": "idbModules"
                              },
                              {
                                "type": "Identifier",
                                "name": "undefined"
                              }
                            ],
                            "defaults": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "FunctionDeclaration",
                                  "id": {
                                    "type": "Identifier",
                                    "name": "IDBCursor"
                                  },
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "range"
                                    },
                                    {
                                      "type": "Identifier",
                                      "name": "direction"
                                    },
                                    {
                                      "type": "Identifier",
                                      "name": "idbObjectStore"
                                    },
                                    {
                                      "type": "Identifier",
                                      "name": "cursorRequest"
                                    },
                                    {
                                      "type": "Identifier",
                                      "name": "keyColumnName"
                                    },
                                    {
                                      "type": "Identifier",
                                      "name": "valueColumnName"
                                    }
                                  ],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "__range"
                                            }
                                          },
                                          "right": {
                                            "type": "Identifier",
                                            "name": "range"
                                          }
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "source"
                                            }
                                          },
                                          "right": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "ThisExpression"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "__idbObjectStore"
                                              }
                                            },
                                            "right": {
                                              "type": "Identifier",
                                              "name": "idbObjectStore"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "__req"
                                            }
                                          },
                                          "right": {
                                            "type": "Identifier",
                                            "name": "cursorRequest"
                                          }
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "key"
                                            }
                                          },
                                          "right": {
                                            "type": "Identifier",
                                            "name": "undefined"
                                          }
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "direction"
                                            }
                                          },
                                          "right": {
                                            "type": "Identifier",
                                            "name": "direction"
                                          }
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "__keyColumnName"
                                            }
                                          },
                                          "right": {
                                            "type": "Identifier",
                                            "name": "keyColumnName"
                                          }
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "__valueColumnName"
                                            }
                                          },
                                          "right": {
                                            "type": "Identifier",
                                            "name": "valueColumnName"
                                          }
                                        }
                                      },
                                      {
                                        "type": "IfStatement",
                                        "test": {
                                          "type": "UnaryExpression",
                                          "operator": "!",
                                          "argument": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "ThisExpression"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "source"
                                                }
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "transaction"
                                              }
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "__active"
                                            }
                                          },
                                          "prefix": true
                                        },
                                        "consequent": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "idbModules"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "util"
                                                    }
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "throwDOMException"
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "Literal",
                                                    "value": "TransactionInactiveError - The transaction this IDBObjectStore belongs to is not active."
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "alternate": null
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "__offset"
                                            }
                                          },
                                          "right": {
                                            "type": "UnaryExpression",
                                            "operator": "-",
                                            "argument": {
                                              "type": "Literal",
                                              "value": 1
                                            },
                                            "prefix": true
                                          }
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "__lastKeyContinued"
                                            }
                                          },
                                          "right": {
                                            "type": "Identifier",
                                            "name": "undefined"
                                          }
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Literal",
                                              "value": "continue"
                                            }
                                          },
                                          "arguments": []
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "IDBCursor"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "prototype"
                                        }
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "__find"
                                      }
                                    },
                                    "right": {
                                      "type": "FunctionExpression",
                                      "id": null,
                                      "params": [
                                        {
                                          "type": "Identifier",
                                          "name": "key"
                                        },
                                        {
                                          "type": "Identifier",
                                          "name": "tx"
                                        },
                                        {
                                          "type": "Identifier",
                                          "name": "success"
                                        },
                                        {
                                          "type": "Identifier",
                                          "name": "error"
                                        }
                                      ],
                                      "defaults": [],
                                      "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                              {
                                                "type": "VariableDeclarator",
                                                "id": {
                                                  "type": "Identifier",
                                                  "name": "me"
                                                },
                                                "init": {
                                                  "type": "ThisExpression"
                                                }
                                              }
                                            ],
                                            "kind": "var"
                                          },
                                          {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                              {
                                                "type": "VariableDeclarator",
                                                "id": {
                                                  "type": "Identifier",
                                                  "name": "sql"
                                                },
                                                "init": {
                                                  "type": "ArrayExpression",
                                                  "elements": [
                                                    {
                                                      "type": "Literal",
                                                      "value": "SELECT * FROM "
                                                    },
                                                    {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "idbModules"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "util"
                                                          }
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "quote"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "me"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "__idbObjectStore"
                                                            }
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "name"
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              }
                                            ],
                                            "kind": "var"
                                          },
                                          {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                              {
                                                "type": "VariableDeclarator",
                                                "id": {
                                                  "type": "Identifier",
                                                  "name": "sqlValues"
                                                },
                                                "init": {
                                                  "type": "ArrayExpression",
                                                  "elements": []
                                                }
                                              }
                                            ],
                                            "kind": "var"
                                          },
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "sql"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "push"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Literal",
                                                  "value": "WHERE "
                                                },
                                                {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "me"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "__keyColumnName"
                                                  }
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": " NOT NULL"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "IfStatement",
                                            "test": {
                                              "type": "LogicalExpression",
                                              "operator": "&&",
                                              "left": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "me"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "__range"
                                                }
                                              },
                                              "right": {
                                                "type": "LogicalExpression",
                                                "operator": "||",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "me"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "__range"
                                                    }
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "lower"
                                                  }
                                                },
                                                "right": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "me"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "__range"
                                                    }
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "upper"
                                                  }
                                                }
                                              }
                                            },
                                            "consequent": {
                                              "type": "BlockStatement",
                                              "body": [
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "sql"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "push"
                                                      }
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "Literal",
                                                        "value": "AND"
                                                      }
                                                    ]
                                                  }
                                                },
                                                {
                                                  "type": "IfStatement",
                                                  "test": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "me"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "__range"
                                                      }
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "lower"
                                                    }
                                                  },
                                                  "consequent": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "sql"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "push"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "BinaryExpression",
                                                              "operator": "+",
                                                              "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "me"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "__keyColumnName"
                                                                  }
                                                                },
                                                                "right": {
                                                                  "type": "ConditionalExpression",
                                                                  "test": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "me"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "__range"
                                                                      }
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "lowerOpen"
                                                                    }
                                                                  },
                                                                  "consequent": {
                                                                    "type": "Literal",
                                                                    "value": " >"
                                                                  },
                                                                  "alternate": {
                                                                    "type": "Literal",
                                                                    "value": " >= "
                                                                  }
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "Literal",
                                                                "value": " ?"
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      },
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "sqlValues"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "push"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "idbModules"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "Key"
                                                                  }
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "encode"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "me"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "__range"
                                                                    }
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "lower"
                                                                  }
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "alternate": null
                                                },
                                                {
                                                  "type": "IfStatement",
                                                  "test": {
                                                    "type": "LogicalExpression",
                                                    "operator": "&&",
                                                    "left": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "me"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "__range"
                                                        }
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "lower"
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "me"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "__range"
                                                        }
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "upper"
                                                      }
                                                    }
                                                  },
                                                  "consequent": {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "sql"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "push"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Literal",
                                                          "value": "AND"
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  "alternate": null
                                                },
                                                {
                                                  "type": "IfStatement",
                                                  "test": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "me"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "__range"
                                                      }
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "upper"
                                                    }
                                                  },
                                                  "consequent": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "sql"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "push"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "BinaryExpression",
                                                              "operator": "+",
                                                              "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "me"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "__keyColumnName"
                                                                  }
                                                                },
                                                                "right": {
                                                                  "type": "ConditionalExpression",
                                                                  "test": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "me"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "__range"
                                                                      }
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "upperOpen"
                                                                    }
                                                                  },
                                                                  "consequent": {
                                                                    "type": "Literal",
                                                                    "value": " < "
                                                                  },
                                                                  "alternate": {
                                                                    "type": "Literal",
                                                                    "value": " <= "
                                                                  }
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "Literal",
                                                                "value": " ?"
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      },
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "sqlValues"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "push"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "idbModules"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "Key"
                                                                  }
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "encode"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "me"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "__range"
                                                                    }
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "upper"
                                                                  }
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "alternate": null
                                                }
                                              ]
                                            },
                                            "alternate": null
                                          },
                                          {
                                            "type": "IfStatement",
                                            "test": {
                                              "type": "BinaryExpression",
                                              "operator": "!==",
                                              "left": {
                                                "type": "UnaryExpression",
                                                "operator": "typeof",
                                                "argument": {
                                                  "type": "Identifier",
                                                  "name": "key"
                                                },
                                                "prefix": true
                                              },
                                              "right": {
                                                "type": "Literal",
                                                "value": "undefined"
                                              }
                                            },
                                            "consequent": {
                                              "type": "BlockStatement",
                                              "body": [
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "me"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "__lastKeyContinued"
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "Identifier",
                                                      "name": "key"
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "me"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "__offset"
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": 0
                                                    }
                                                  }
                                                }
                                              ]
                                            },
                                            "alternate": null
                                          },
                                          {
                                            "type": "IfStatement",
                                            "test": {
                                              "type": "BinaryExpression",
                                              "operator": "!==",
                                              "left": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "me"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "__lastKeyContinued"
                                                }
                                              },
                                              "right": {
                                                "type": "Identifier",
                                                "name": "undefined"
                                              }
                                            },
                                            "consequent": {
                                              "type": "BlockStatement",
                                              "body": [
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "sql"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "push"
                                                      }
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "BinaryExpression",
                                                        "operator": "+",
                                                        "left": {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "Literal",
                                                            "value": "AND "
                                                          },
                                                          "right": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "me"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "__keyColumnName"
                                                            }
                                                          }
                                                        },
                                                        "right": {
                                                          "type": "Literal",
                                                          "value": " >= ?"
                                                        }
                                                      }
                                                    ]
                                                  }
                                                },
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "sqlValues"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "push"
                                                      }
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "idbModules"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "Key"
                                                            }
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "encode"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "me"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "__lastKeyContinued"
                                                            }
                                                          }
                                                        ]
                                                      }
                                                    ]
                                                  }
                                                }
                                              ]
                                            },
                                            "alternate": null
                                          },
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "sql"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "push"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Literal",
                                                  "value": "ORDER BY "
                                                },
                                                {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "me"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "__keyColumnName"
                                                  }
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "sql"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "push"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "BinaryExpression",
                                                  "operator": "+",
                                                  "left": {
                                                    "type": "Literal",
                                                    "value": "LIMIT 1 OFFSET "
                                                  },
                                                  "right": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "me"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "__offset"
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "IfStatement",
                                            "test": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "idbModules"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "DEBUG"
                                              }
                                            },
                                            "consequent": {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "console"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "log"
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "sql"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "join"
                                                      }
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "Literal",
                                                        "value": " "
                                                      }
                                                    ]
                                                  },
                                                  {
                                                    "type": "Identifier",
                                                    "name": "sqlValues"
                                                  }
                                                ]
                                              }
                                            },
                                            "alternate": null
                                          },
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "tx"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "executeSql"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "sql"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "join"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Literal",
                                                      "value": " "
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "name": "sqlValues"
                                                },
                                                {
                                                  "type": "FunctionExpression",
                                                  "id": null,
                                                  "params": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "tx"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "data"
                                                    }
                                                  ],
                                                  "defaults": [],
                                                  "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "IfStatement",
                                                        "test": {
                                                          "type": "BinaryExpression",
                                                          "operator": "===",
                                                          "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "data"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "rows"
                                                              }
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "length"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": 1
                                                          }
                                                        },
                                                        "consequent": {
                                                          "type": "BlockStatement",
                                                          "body": [
                                                            {
                                                              "type": "VariableDeclaration",
                                                              "declarations": [
                                                                {
                                                                  "type": "VariableDeclarator",
                                                                  "id": {
                                                                    "type": "Identifier",
                                                                    "name": "key"
                                                                  },
                                                                  "init": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "idbModules"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "Key"
                                                                        }
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "decode"
                                                                      }
                                                                    },
                                                                    "arguments": [
                                                                      {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                          "type": "CallExpression",
                                                                          "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "MemberExpression",
                                                                              "computed": false,
                                                                              "object": {
                                                                                "type": "Identifier",
                                                                                "name": "data"
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "rows"
                                                                              }
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "item"
                                                                            }
                                                                          },
                                                                          "arguments": [
                                                                            {
                                                                              "type": "Literal",
                                                                              "value": 0
                                                                            }
                                                                          ]
                                                                        },
                                                                        "property": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "me"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "__keyColumnName"
                                                                          }
                                                                        }
                                                                      }
                                                                    ]
                                                                  }
                                                                }
                                                              ],
                                                              "kind": "var"
                                                            },
                                                            {
                                                              "type": "VariableDeclaration",
                                                              "declarations": [
                                                                {
                                                                  "type": "VariableDeclarator",
                                                                  "id": {
                                                                    "type": "Identifier",
                                                                    "name": "val"
                                                                  },
                                                                  "init": {
                                                                    "type": "ConditionalExpression",
                                                                    "test": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "===",
                                                                      "left": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "me"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "__valueColumnName"
                                                                        }
                                                                      },
                                                                      "right": {
                                                                        "type": "Literal",
                                                                        "value": "value"
                                                                      }
                                                                    },
                                                                    "consequent": {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "idbModules"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "Sca"
                                                                          }
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "decode"
                                                                        }
                                                                      },
                                                                      "arguments": [
                                                                        {
                                                                          "type": "MemberExpression",
                                                                          "computed": true,
                                                                          "object": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                              "type": "MemberExpression",
                                                                              "computed": false,
                                                                              "object": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "data"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "rows"
                                                                                }
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "item"
                                                                              }
                                                                            },
                                                                            "arguments": [
                                                                              {
                                                                                "type": "Literal",
                                                                                "value": 0
                                                                              }
                                                                            ]
                                                                          },
                                                                          "property": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "Identifier",
                                                                              "name": "me"
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "__valueColumnName"
                                                                            }
                                                                          }
                                                                        }
                                                                      ]
                                                                    },
                                                                    "alternate": {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "idbModules"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "Key"
                                                                          }
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "decode"
                                                                        }
                                                                      },
                                                                      "arguments": [
                                                                        {
                                                                          "type": "MemberExpression",
                                                                          "computed": true,
                                                                          "object": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                              "type": "MemberExpression",
                                                                              "computed": false,
                                                                              "object": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "data"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "rows"
                                                                                }
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "item"
                                                                              }
                                                                            },
                                                                            "arguments": [
                                                                              {
                                                                                "type": "Literal",
                                                                                "value": 0
                                                                              }
                                                                            ]
                                                                          },
                                                                          "property": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "Identifier",
                                                                              "name": "me"
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "__valueColumnName"
                                                                            }
                                                                          }
                                                                        }
                                                                      ]
                                                                    }
                                                                  }
                                                                }
                                                              ],
                                                              "kind": "var"
                                                            },
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "Identifier",
                                                                  "name": "success"
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "key"
                                                                  },
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "val"
                                                                  }
                                                                ]
                                                              }
                                                            }
                                                          ]
                                                        },
                                                        "alternate": {
                                                          "type": "BlockStatement",
                                                          "body": [
                                                            {
                                                              "type": "IfStatement",
                                                              "test": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "idbModules"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "DEBUG"
                                                                }
                                                              },
                                                              "consequent": {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "console"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "log"
                                                                    }
                                                                  },
                                                                  "arguments": [
                                                                    {
                                                                      "type": "Literal",
                                                                      "value": "Reached end of cursors"
                                                                    }
                                                                  ]
                                                                }
                                                              },
                                                              "alternate": null
                                                            },
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "Identifier",
                                                                  "name": "success"
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "undefined"
                                                                  },
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "undefined"
                                                                  }
                                                                ]
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "rest": null,
                                                  "generator": false,
                                                  "expression": false
                                                },
                                                {
                                                  "type": "FunctionExpression",
                                                  "id": null,
                                                  "params": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "tx"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "data"
                                                    }
                                                  ],
                                                  "defaults": [],
                                                  "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "IfStatement",
                                                        "test": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "idbModules"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "DEBUG"
                                                          }
                                                        },
                                                        "consequent": {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "console"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "log"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "Literal",
                                                                "value": "Could not execute Cursor.continue"
                                                              }
                                                            ]
                                                          }
                                                        },
                                                        "alternate": null
                                                      },
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "Identifier",
                                                            "name": "error"
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "Identifier",
                                                              "name": "data"
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "rest": null,
                                                  "generator": false,
                                                  "expression": false
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      },
                                      "rest": null,
                                      "generator": false,
                                      "expression": false
                                    }
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": true,
                                      "object": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "IDBCursor"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "prototype"
                                        }
                                      },
                                      "property": {
                                        "type": "Literal",
                                        "value": "continue"
                                      }
                                    },
                                    "right": {
                                      "type": "FunctionExpression",
                                      "id": null,
                                      "params": [
                                        {
                                          "type": "Identifier",
                                          "name": "key"
                                        }
                                      ],
                                      "defaults": [],
                                      "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                              {
                                                "type": "VariableDeclarator",
                                                "id": {
                                                  "type": "Identifier",
                                                  "name": "me"
                                                },
                                                "init": {
                                                  "type": "ThisExpression"
                                                }
                                              }
                                            ],
                                            "kind": "var"
                                          },
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "__idbObjectStore"
                                                    }
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "transaction"
                                                  }
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "__addToTransactionQueue"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "FunctionExpression",
                                                  "id": null,
                                                  "params": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "tx"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "args"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "success"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "error"
                                                    }
                                                  ],
                                                  "defaults": [],
                                                  "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "UpdateExpression",
                                                          "operator": "++",
                                                          "argument": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "me"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "__offset"
                                                            }
                                                          },
                                                          "prefix": false
                                                        }
                                                      },
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "me"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "__find"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "Identifier",
                                                              "name": "key"
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "name": "tx"
                                                            },
                                                            {
                                                              "type": "FunctionExpression",
                                                              "id": null,
                                                              "params": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "key"
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "val"
                                                                }
                                                              ],
                                                              "defaults": [],
                                                              "body": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                  {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                      "type": "AssignmentExpression",
                                                                      "operator": "=",
                                                                      "left": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "me"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "key"
                                                                        }
                                                                      },
                                                                      "right": {
                                                                        "type": "Identifier",
                                                                        "name": "key"
                                                                      }
                                                                    }
                                                                  },
                                                                  {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                      "type": "AssignmentExpression",
                                                                      "operator": "=",
                                                                      "left": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "me"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "value"
                                                                        }
                                                                      },
                                                                      "right": {
                                                                        "type": "Identifier",
                                                                        "name": "val"
                                                                      }
                                                                    }
                                                                  },
                                                                  {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "Identifier",
                                                                        "name": "success"
                                                                      },
                                                                      "arguments": [
                                                                        {
                                                                          "type": "ConditionalExpression",
                                                                          "test": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "!==",
                                                                            "left": {
                                                                              "type": "UnaryExpression",
                                                                              "operator": "typeof",
                                                                              "argument": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "me"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "key"
                                                                                }
                                                                              },
                                                                              "prefix": true
                                                                            },
                                                                            "right": {
                                                                              "type": "Literal",
                                                                              "value": "undefined"
                                                                            }
                                                                          },
                                                                          "consequent": {
                                                                            "type": "Identifier",
                                                                            "name": "me"
                                                                          },
                                                                          "alternate": {
                                                                            "type": "Identifier",
                                                                            "name": "undefined"
                                                                          }
                                                                        },
                                                                        {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "me"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "__req"
                                                                          }
                                                                        }
                                                                      ]
                                                                    }
                                                                  }
                                                                ]
                                                              },
                                                              "rest": null,
                                                              "generator": false,
                                                              "expression": false
                                                            },
                                                            {
                                                              "type": "FunctionExpression",
                                                              "id": null,
                                                              "params": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "data"
                                                                }
                                                              ],
                                                              "defaults": [],
                                                              "body": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                  {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "Identifier",
                                                                        "name": "error"
                                                                      },
                                                                      "arguments": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "name": "data"
                                                                        }
                                                                      ]
                                                                    }
                                                                  }
                                                                ]
                                                              },
                                                              "rest": null,
                                                              "generator": false,
                                                              "expression": false
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "rest": null,
                                                  "generator": false,
                                                  "expression": false
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      },
                                      "rest": null,
                                      "generator": false,
                                      "expression": false
                                    }
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "IDBCursor"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "prototype"
                                        }
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "advance"
                                      }
                                    },
                                    "right": {
                                      "type": "FunctionExpression",
                                      "id": null,
                                      "params": [
                                        {
                                          "type": "Identifier",
                                          "name": "count"
                                        }
                                      ],
                                      "defaults": [],
                                      "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "IfStatement",
                                            "test": {
                                              "type": "BinaryExpression",
                                              "operator": "<=",
                                              "left": {
                                                "type": "Identifier",
                                                "name": "count"
                                              },
                                              "right": {
                                                "type": "Literal",
                                                "value": 0
                                              }
                                            },
                                            "consequent": {
                                              "type": "BlockStatement",
                                              "body": [
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "idbModules"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "util"
                                                        }
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "throwDOMException"
                                                      }
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "Literal",
                                                        "value": "Type Error - Count is invalid - 0 or negative"
                                                      },
                                                      {
                                                        "type": "Identifier",
                                                        "name": "count"
                                                      }
                                                    ]
                                                  }
                                                }
                                              ]
                                            },
                                            "alternate": null
                                          },
                                          {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                              {
                                                "type": "VariableDeclarator",
                                                "id": {
                                                  "type": "Identifier",
                                                  "name": "me"
                                                },
                                                "init": {
                                                  "type": "ThisExpression"
                                                }
                                              }
                                            ],
                                            "kind": "var"
                                          },
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "__idbObjectStore"
                                                    }
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "transaction"
                                                  }
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "__addToTransactionQueue"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "FunctionExpression",
                                                  "id": null,
                                                  "params": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "tx"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "args"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "success"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "error"
                                                    }
                                                  ],
                                                  "defaults": [],
                                                  "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "AssignmentExpression",
                                                          "operator": "+=",
                                                          "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "me"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "__offset"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Identifier",
                                                            "name": "count"
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "me"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "__find"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "Identifier",
                                                              "name": "undefined"
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "name": "tx"
                                                            },
                                                            {
                                                              "type": "FunctionExpression",
                                                              "id": null,
                                                              "params": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "key"
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "value"
                                                                }
                                                              ],
                                                              "defaults": [],
                                                              "body": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                  {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                      "type": "AssignmentExpression",
                                                                      "operator": "=",
                                                                      "left": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "me"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "key"
                                                                        }
                                                                      },
                                                                      "right": {
                                                                        "type": "Identifier",
                                                                        "name": "key"
                                                                      }
                                                                    }
                                                                  },
                                                                  {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                      "type": "AssignmentExpression",
                                                                      "operator": "=",
                                                                      "left": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "me"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "value"
                                                                        }
                                                                      },
                                                                      "right": {
                                                                        "type": "Identifier",
                                                                        "name": "value"
                                                                      }
                                                                    }
                                                                  },
                                                                  {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "Identifier",
                                                                        "name": "success"
                                                                      },
                                                                      "arguments": [
                                                                        {
                                                                          "type": "ConditionalExpression",
                                                                          "test": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "!==",
                                                                            "left": {
                                                                              "type": "UnaryExpression",
                                                                              "operator": "typeof",
                                                                              "argument": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "me"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "key"
                                                                                }
                                                                              },
                                                                              "prefix": true
                                                                            },
                                                                            "right": {
                                                                              "type": "Literal",
                                                                              "value": "undefined"
                                                                            }
                                                                          },
                                                                          "consequent": {
                                                                            "type": "Identifier",
                                                                            "name": "me"
                                                                          },
                                                                          "alternate": {
                                                                            "type": "Identifier",
                                                                            "name": "undefined"
                                                                          }
                                                                        },
                                                                        {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "me"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "__req"
                                                                          }
                                                                        }
                                                                      ]
                                                                    }
                                                                  }
                                                                ]
                                                              },
                                                              "rest": null,
                                                              "generator": false,
                                                              "expression": false
                                                            },
                                                            {
                                                              "type": "FunctionExpression",
                                                              "id": null,
                                                              "params": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "data"
                                                                }
                                                              ],
                                                              "defaults": [],
                                                              "body": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                  {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "Identifier",
                                                                        "name": "error"
                                                                      },
                                                                      "arguments": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "name": "data"
                                                                        }
                                                                      ]
                                                                    }
                                                                  }
                                                                ]
                                                              },
                                                              "rest": null,
                                                              "generator": false,
                                                              "expression": false
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "rest": null,
                                                  "generator": false,
                                                  "expression": false
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      },
                                      "rest": null,
                                      "generator": false,
                                      "expression": false
                                    }
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "IDBCursor"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "prototype"
                                        }
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "update"
                                      }
                                    },
                                    "right": {
                                      "type": "FunctionExpression",
                                      "id": null,
                                      "params": [
                                        {
                                          "type": "Identifier",
                                          "name": "valueToUpdate"
                                        }
                                      ],
                                      "defaults": [],
                                      "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                              {
                                                "type": "VariableDeclarator",
                                                "id": {
                                                  "type": "Identifier",
                                                  "name": "me"
                                                },
                                                "init": {
                                                  "type": "ThisExpression"
                                                }
                                              },
                                              {
                                                "type": "VariableDeclarator",
                                                "id": {
                                                  "type": "Identifier",
                                                  "name": "request"
                                                },
                                                "init": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "__idbObjectStore"
                                                        }
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "transaction"
                                                      }
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "__createRequest"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "FunctionExpression",
                                                      "id": null,
                                                      "params": [],
                                                      "defaults": [],
                                                      "body": {
                                                        "type": "BlockStatement",
                                                        "body": []
                                                      },
                                                      "rest": null,
                                                      "generator": false,
                                                      "expression": false
                                                    }
                                                  ]
                                                }
                                              }
                                            ],
                                            "kind": "var"
                                          },
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "idbModules"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "Sca"
                                                  }
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "encode"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "valueToUpdate"
                                                },
                                                {
                                                  "type": "FunctionExpression",
                                                  "id": null,
                                                  "params": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "encoded"
                                                    }
                                                  ],
                                                  "defaults": [],
                                                  "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "ThisExpression"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "__idbObjectStore"
                                                              }
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "__pushToQueue"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "Identifier",
                                                              "name": "request"
                                                            },
                                                            {
                                                              "type": "FunctionExpression",
                                                              "id": null,
                                                              "params": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "tx"
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "args"
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "success"
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "error"
                                                                }
                                                              ],
                                                              "defaults": [],
                                                              "body": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                  {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "me"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "__find"
                                                                        }
                                                                      },
                                                                      "arguments": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "name": "undefined"
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "name": "tx"
                                                                        },
                                                                        {
                                                                          "type": "FunctionExpression",
                                                                          "id": null,
                                                                          "params": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "name": "key"
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "name": "value"
                                                                            }
                                                                          ],
                                                                          "defaults": [],
                                                                          "body": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                              {
                                                                                "type": "VariableDeclaration",
                                                                                "declarations": [
                                                                                  {
                                                                                    "type": "VariableDeclarator",
                                                                                    "id": {
                                                                                      "type": "Identifier",
                                                                                      "name": "sql"
                                                                                    },
                                                                                    "init": {
                                                                                      "type": "BinaryExpression",
                                                                                      "operator": "+",
                                                                                      "left": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "+",
                                                                                        "left": {
                                                                                          "type": "Literal",
                                                                                          "value": "UPDATE "
                                                                                        },
                                                                                        "right": {
                                                                                          "type": "CallExpression",
                                                                                          "callee": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                              "type": "MemberExpression",
                                                                                              "computed": false,
                                                                                              "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "idbModules"
                                                                                              },
                                                                                              "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "util"
                                                                                              }
                                                                                            },
                                                                                            "property": {
                                                                                              "type": "Identifier",
                                                                                              "name": "quote"
                                                                                            }
                                                                                          },
                                                                                          "arguments": [
                                                                                            {
                                                                                              "type": "MemberExpression",
                                                                                              "computed": false,
                                                                                              "object": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": false,
                                                                                                "object": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "me"
                                                                                                },
                                                                                                "property": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "__idbObjectStore"
                                                                                                }
                                                                                              },
                                                                                              "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "name"
                                                                                              }
                                                                                            }
                                                                                          ]
                                                                                        }
                                                                                      },
                                                                                      "right": {
                                                                                        "type": "Literal",
                                                                                        "value": " SET value = ? WHERE key = ?"
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                ],
                                                                                "kind": "var"
                                                                              },
                                                                              {
                                                                                "type": "IfStatement",
                                                                                "test": {
                                                                                  "type": "MemberExpression",
                                                                                  "computed": false,
                                                                                  "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "idbModules"
                                                                                  },
                                                                                  "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "DEBUG"
                                                                                  }
                                                                                },
                                                                                "consequent": {
                                                                                  "type": "ExpressionStatement",
                                                                                  "expression": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                      "type": "MemberExpression",
                                                                                      "computed": false,
                                                                                      "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "console"
                                                                                      },
                                                                                      "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "log"
                                                                                      }
                                                                                    },
                                                                                    "arguments": [
                                                                                      {
                                                                                        "type": "Identifier",
                                                                                        "name": "sql"
                                                                                      },
                                                                                      {
                                                                                        "type": "Identifier",
                                                                                        "name": "encoded"
                                                                                      },
                                                                                      {
                                                                                        "type": "Identifier",
                                                                                        "name": "key"
                                                                                      }
                                                                                    ]
                                                                                  }
                                                                                },
                                                                                "alternate": null
                                                                              },
                                                                              {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                  "type": "CallExpression",
                                                                                  "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "tx"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "executeSql"
                                                                                    }
                                                                                  },
                                                                                  "arguments": [
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "name": "sql"
                                                                                    },
                                                                                    {
                                                                                      "type": "ArrayExpression",
                                                                                      "elements": [
                                                                                        {
                                                                                          "type": "CallExpression",
                                                                                          "callee": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                              "type": "MemberExpression",
                                                                                              "computed": false,
                                                                                              "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "idbModules"
                                                                                              },
                                                                                              "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "Sca"
                                                                                              }
                                                                                            },
                                                                                            "property": {
                                                                                              "type": "Identifier",
                                                                                              "name": "encode"
                                                                                            }
                                                                                          },
                                                                                          "arguments": [
                                                                                            {
                                                                                              "type": "Identifier",
                                                                                              "name": "encoded"
                                                                                            }
                                                                                          ]
                                                                                        },
                                                                                        {
                                                                                          "type": "CallExpression",
                                                                                          "callee": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                              "type": "MemberExpression",
                                                                                              "computed": false,
                                                                                              "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "idbModules"
                                                                                              },
                                                                                              "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "Key"
                                                                                              }
                                                                                            },
                                                                                            "property": {
                                                                                              "type": "Identifier",
                                                                                              "name": "encode"
                                                                                            }
                                                                                          },
                                                                                          "arguments": [
                                                                                            {
                                                                                              "type": "Identifier",
                                                                                              "name": "key"
                                                                                            }
                                                                                          ]
                                                                                        }
                                                                                      ]
                                                                                    },
                                                                                    {
                                                                                      "type": "FunctionExpression",
                                                                                      "id": null,
                                                                                      "params": [
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "name": "tx"
                                                                                        },
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "name": "data"
                                                                                        }
                                                                                      ],
                                                                                      "defaults": [],
                                                                                      "body": {
                                                                                        "type": "BlockStatement",
                                                                                        "body": [
                                                                                          {
                                                                                            "type": "IfStatement",
                                                                                            "test": {
                                                                                              "type": "BinaryExpression",
                                                                                              "operator": "===",
                                                                                              "left": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": false,
                                                                                                "object": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "data"
                                                                                                },
                                                                                                "property": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "rowsAffected"
                                                                                                }
                                                                                              },
                                                                                              "right": {
                                                                                                "type": "Literal",
                                                                                                "value": 1
                                                                                              }
                                                                                            },
                                                                                            "consequent": {
                                                                                              "type": "BlockStatement",
                                                                                              "body": [
                                                                                                {
                                                                                                  "type": "ExpressionStatement",
                                                                                                  "expression": {
                                                                                                    "type": "CallExpression",
                                                                                                    "callee": {
                                                                                                      "type": "Identifier",
                                                                                                      "name": "success"
                                                                                                    },
                                                                                                    "arguments": [
                                                                                                      {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "key"
                                                                                                      }
                                                                                                    ]
                                                                                                  }
                                                                                                }
                                                                                              ]
                                                                                            },
                                                                                            "alternate": {
                                                                                              "type": "BlockStatement",
                                                                                              "body": [
                                                                                                {
                                                                                                  "type": "ExpressionStatement",
                                                                                                  "expression": {
                                                                                                    "type": "CallExpression",
                                                                                                    "callee": {
                                                                                                      "type": "Identifier",
                                                                                                      "name": "error"
                                                                                                    },
                                                                                                    "arguments": [
                                                                                                      {
                                                                                                        "type": "BinaryExpression",
                                                                                                        "operator": "+",
                                                                                                        "left": {
                                                                                                          "type": "Literal",
                                                                                                          "value": "No rowns with key found"
                                                                                                        },
                                                                                                        "right": {
                                                                                                          "type": "Identifier",
                                                                                                          "name": "key"
                                                                                                        }
                                                                                                      }
                                                                                                    ]
                                                                                                  }
                                                                                                }
                                                                                              ]
                                                                                            }
                                                                                          }
                                                                                        ]
                                                                                      },
                                                                                      "rest": null,
                                                                                      "generator": false,
                                                                                      "expression": false
                                                                                    },
                                                                                    {
                                                                                      "type": "FunctionExpression",
                                                                                      "id": null,
                                                                                      "params": [
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "name": "tx"
                                                                                        },
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "name": "data"
                                                                                        }
                                                                                      ],
                                                                                      "defaults": [],
                                                                                      "body": {
                                                                                        "type": "BlockStatement",
                                                                                        "body": [
                                                                                          {
                                                                                            "type": "ExpressionStatement",
                                                                                            "expression": {
                                                                                              "type": "CallExpression",
                                                                                              "callee": {
                                                                                                "type": "Identifier",
                                                                                                "name": "error"
                                                                                              },
                                                                                              "arguments": [
                                                                                                {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "data"
                                                                                                }
                                                                                              ]
                                                                                            }
                                                                                          }
                                                                                        ]
                                                                                      },
                                                                                      "rest": null,
                                                                                      "generator": false,
                                                                                      "expression": false
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              }
                                                                            ]
                                                                          },
                                                                          "rest": null,
                                                                          "generator": false,
                                                                          "expression": false
                                                                        },
                                                                        {
                                                                          "type": "FunctionExpression",
                                                                          "id": null,
                                                                          "params": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "name": "data"
                                                                            }
                                                                          ],
                                                                          "defaults": [],
                                                                          "body": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                              {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                  "type": "CallExpression",
                                                                                  "callee": {
                                                                                    "type": "Identifier",
                                                                                    "name": "error"
                                                                                  },
                                                                                  "arguments": [
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "name": "data"
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              }
                                                                            ]
                                                                          },
                                                                          "rest": null,
                                                                          "generator": false,
                                                                          "expression": false
                                                                        }
                                                                      ]
                                                                    }
                                                                  }
                                                                ]
                                                              },
                                                              "rest": null,
                                                              "generator": false,
                                                              "expression": false
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "rest": null,
                                                  "generator": false,
                                                  "expression": false
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "ReturnStatement",
                                            "argument": {
                                              "type": "Identifier",
                                              "name": "request"
                                            }
                                          }
                                        ]
                                      },
                                      "rest": null,
                                      "generator": false,
                                      "expression": false
                                    }
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": true,
                                      "object": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "IDBCursor"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "prototype"
                                        }
                                      },
                                      "property": {
                                        "type": "Literal",
                                        "value": "delete"
                                      }
                                    },
                                    "right": {
                                      "type": "FunctionExpression",
                                      "id": null,
                                      "params": [],
                                      "defaults": [],
                                      "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                              {
                                                "type": "VariableDeclarator",
                                                "id": {
                                                  "type": "Identifier",
                                                  "name": "me"
                                                },
                                                "init": {
                                                  "type": "ThisExpression"
                                                }
                                              }
                                            ],
                                            "kind": "var"
                                          },
                                          {
                                            "type": "ReturnStatement",
                                            "argument": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "__idbObjectStore"
                                                    }
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "transaction"
                                                  }
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "__addToTransactionQueue"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "FunctionExpression",
                                                  "id": null,
                                                  "params": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "tx"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "args"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "success"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "error"
                                                    }
                                                  ],
                                                  "defaults": [],
                                                  "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "me"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "__find"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "Identifier",
                                                              "name": "undefined"
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "name": "tx"
                                                            },
                                                            {
                                                              "type": "FunctionExpression",
                                                              "id": null,
                                                              "params": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "key"
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "value"
                                                                }
                                                              ],
                                                              "defaults": [],
                                                              "body": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                  {
                                                                    "type": "VariableDeclaration",
                                                                    "declarations": [
                                                                      {
                                                                        "type": "VariableDeclarator",
                                                                        "id": {
                                                                          "type": "Identifier",
                                                                          "name": "sql"
                                                                        },
                                                                        "init": {
                                                                          "type": "BinaryExpression",
                                                                          "operator": "+",
                                                                          "left": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "+",
                                                                            "left": {
                                                                              "type": "Literal",
                                                                              "value": "DELETE FROM  "
                                                                            },
                                                                            "right": {
                                                                              "type": "CallExpression",
                                                                              "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "MemberExpression",
                                                                                  "computed": false,
                                                                                  "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "idbModules"
                                                                                  },
                                                                                  "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "util"
                                                                                  }
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "quote"
                                                                                }
                                                                              },
                                                                              "arguments": [
                                                                                {
                                                                                  "type": "MemberExpression",
                                                                                  "computed": false,
                                                                                  "object": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "me"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "__idbObjectStore"
                                                                                    }
                                                                                  },
                                                                                  "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "name"
                                                                                  }
                                                                                }
                                                                              ]
                                                                            }
                                                                          },
                                                                          "right": {
                                                                            "type": "Literal",
                                                                            "value": " WHERE key = ?"
                                                                          }
                                                                        }
                                                                      }
                                                                    ],
                                                                    "kind": "var"
                                                                  },
                                                                  {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "idbModules"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "DEBUG"
                                                                      }
                                                                    },
                                                                    "consequent": {
                                                                      "type": "ExpressionStatement",
                                                                      "expression": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "console"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "log"
                                                                          }
                                                                        },
                                                                        "arguments": [
                                                                          {
                                                                            "type": "Identifier",
                                                                            "name": "sql"
                                                                          },
                                                                          {
                                                                            "type": "Identifier",
                                                                            "name": "key"
                                                                          }
                                                                        ]
                                                                      }
                                                                    },
                                                                    "alternate": null
                                                                  },
                                                                  {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "tx"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "executeSql"
                                                                        }
                                                                      },
                                                                      "arguments": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "name": "sql"
                                                                        },
                                                                        {
                                                                          "type": "ArrayExpression",
                                                                          "elements": [
                                                                            {
                                                                              "type": "CallExpression",
                                                                              "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "MemberExpression",
                                                                                  "computed": false,
                                                                                  "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "idbModules"
                                                                                  },
                                                                                  "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "Key"
                                                                                  }
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "encode"
                                                                                }
                                                                              },
                                                                              "arguments": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "name": "key"
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "FunctionExpression",
                                                                          "id": null,
                                                                          "params": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "name": "tx"
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "name": "data"
                                                                            }
                                                                          ],
                                                                          "defaults": [],
                                                                          "body": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                              {
                                                                                "type": "IfStatement",
                                                                                "test": {
                                                                                  "type": "BinaryExpression",
                                                                                  "operator": "===",
                                                                                  "left": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "data"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "rowsAffected"
                                                                                    }
                                                                                  },
                                                                                  "right": {
                                                                                    "type": "Literal",
                                                                                    "value": 1
                                                                                  }
                                                                                },
                                                                                "consequent": {
                                                                                  "type": "BlockStatement",
                                                                                  "body": [
                                                                                    {
                                                                                      "type": "ExpressionStatement",
                                                                                      "expression": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                          "type": "Identifier",
                                                                                          "name": "success"
                                                                                        },
                                                                                        "arguments": [
                                                                                          {
                                                                                            "type": "Identifier",
                                                                                            "name": "undefined"
                                                                                          }
                                                                                        ]
                                                                                      }
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                "alternate": {
                                                                                  "type": "BlockStatement",
                                                                                  "body": [
                                                                                    {
                                                                                      "type": "ExpressionStatement",
                                                                                      "expression": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                          "type": "Identifier",
                                                                                          "name": "error"
                                                                                        },
                                                                                        "arguments": [
                                                                                          {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "+",
                                                                                            "left": {
                                                                                              "type": "Literal",
                                                                                              "value": "No rowns with key found"
                                                                                            },
                                                                                            "right": {
                                                                                              "type": "Identifier",
                                                                                              "name": "key"
                                                                                            }
                                                                                          }
                                                                                        ]
                                                                                      }
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              }
                                                                            ]
                                                                          },
                                                                          "rest": null,
                                                                          "generator": false,
                                                                          "expression": false
                                                                        },
                                                                        {
                                                                          "type": "FunctionExpression",
                                                                          "id": null,
                                                                          "params": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "name": "tx"
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "name": "data"
                                                                            }
                                                                          ],
                                                                          "defaults": [],
                                                                          "body": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                              {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                  "type": "CallExpression",
                                                                                  "callee": {
                                                                                    "type": "Identifier",
                                                                                    "name": "error"
                                                                                  },
                                                                                  "arguments": [
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "name": "data"
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              }
                                                                            ]
                                                                          },
                                                                          "rest": null,
                                                                          "generator": false,
                                                                          "expression": false
                                                                        }
                                                                      ]
                                                                    }
                                                                  }
                                                                ]
                                                              },
                                                              "rest": null,
                                                              "generator": false,
                                                              "expression": false
                                                            },
                                                            {
                                                              "type": "FunctionExpression",
                                                              "id": null,
                                                              "params": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "data"
                                                                }
                                                              ],
                                                              "defaults": [],
                                                              "body": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                  {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "Identifier",
                                                                        "name": "error"
                                                                      },
                                                                      "arguments": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "name": "data"
                                                                        }
                                                                      ]
                                                                    }
                                                                  }
                                                                ]
                                                              },
                                                              "rest": null,
                                                              "generator": false,
                                                              "expression": false
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "rest": null,
                                                  "generator": false,
                                                  "expression": false
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      },
                                      "rest": null,
                                      "generator": false,
                                      "expression": false
                                    }
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "idbModules"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "IDBCursor"
                                      }
                                    },
                                    "right": {
                                      "type": "Identifier",
                                      "name": "IDBCursor"
                                    }
                                  }
                                }
                              ]
                            },
                            "rest": null,
                            "generator": false,
                            "expression": false
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "idbModules"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [
                              {
                                "type": "Identifier",
                                "name": "idbModules"
                              },
                              {
                                "type": "Identifier",
                                "name": "undefined"
                              }
                            ],
                            "defaults": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "FunctionDeclaration",
                                  "id": {
                                    "type": "Identifier",
                                    "name": "IDBIndex"
                                  },
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "indexName"
                                    },
                                    {
                                      "type": "Identifier",
                                      "name": "idbObjectStore"
                                    }
                                  ],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "indexName"
                                            }
                                          },
                                          "right": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "ThisExpression"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "name"
                                              }
                                            },
                                            "right": {
                                              "type": "Identifier",
                                              "name": "indexName"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "__idbObjectStore"
                                            }
                                          },
                                          "right": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "ThisExpression"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "objectStore"
                                              }
                                            },
                                            "right": {
                                              "type": "AssignmentExpression",
                                              "operator": "=",
                                              "left": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "ThisExpression"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "source"
                                                }
                                              },
                                              "right": {
                                                "type": "Identifier",
                                                "name": "idbObjectStore"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "indexList"
                                            },
                                            "init": {
                                              "type": "LogicalExpression",
                                              "operator": "&&",
                                              "left": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "idbObjectStore"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "__storeProps"
                                                }
                                              },
                                              "right": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "idbObjectStore"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "__storeProps"
                                                  }
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "indexList"
                                                }
                                              }
                                            }
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "IfStatement",
                                        "test": {
                                          "type": "Identifier",
                                          "name": "indexList"
                                        },
                                        "consequent": {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "indexList"
                                            },
                                            "right": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "JSON"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "parse"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "indexList"
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        "alternate": null
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "keyPath"
                                            }
                                          },
                                          "right": {
                                            "type": "LogicalExpression",
                                            "operator": "||",
                                            "left": {
                                              "type": "LogicalExpression",
                                              "operator": "&&",
                                              "left": {
                                                "type": "LogicalExpression",
                                                "operator": "&&",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "indexList"
                                                },
                                                "right": {
                                                  "type": "MemberExpression",
                                                  "computed": true,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "indexList"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "indexName"
                                                  }
                                                }
                                              },
                                              "right": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "MemberExpression",
                                                  "computed": true,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "indexList"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "indexName"
                                                  }
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "keyPath"
                                                }
                                              }
                                            },
                                            "right": {
                                              "type": "Identifier",
                                              "name": "indexName"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ArrayExpression",
                                              "elements": [
                                                {
                                                  "type": "Literal",
                                                  "value": "multiEntry"
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": "unique"
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "forEach"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "prop"
                                                }
                                              ],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                          "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "prop"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "LogicalExpression",
                                                        "operator": "&&",
                                                        "left": {
                                                          "type": "LogicalExpression",
                                                          "operator": "&&",
                                                          "left": {
                                                            "type": "LogicalExpression",
                                                            "operator": "&&",
                                                            "left": {
                                                              "type": "UnaryExpression",
                                                              "operator": "!",
                                                              "argument": {
                                                                "type": "UnaryExpression",
                                                                "operator": "!",
                                                                "argument": {
                                                                  "type": "Identifier",
                                                                  "name": "indexList"
                                                                },
                                                                "prefix": true
                                                              },
                                                              "prefix": true
                                                            },
                                                            "right": {
                                                              "type": "UnaryExpression",
                                                              "operator": "!",
                                                              "argument": {
                                                                "type": "UnaryExpression",
                                                                "operator": "!",
                                                                "argument": {
                                                                  "type": "MemberExpression",
                                                                  "computed": true,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "indexList"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "indexName"
                                                                  }
                                                                },
                                                                "prefix": true
                                                              },
                                                              "prefix": true
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "UnaryExpression",
                                                            "operator": "!",
                                                            "argument": {
                                                              "type": "UnaryExpression",
                                                              "operator": "!",
                                                              "argument": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "MemberExpression",
                                                                  "computed": true,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "indexList"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "indexName"
                                                                  }
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "optionalParams"
                                                                }
                                                              },
                                                              "prefix": true
                                                            },
                                                            "prefix": true
                                                          }
                                                        },
                                                        "right": {
                                                          "type": "UnaryExpression",
                                                          "operator": "!",
                                                          "argument": {
                                                            "type": "UnaryExpression",
                                                            "operator": "!",
                                                            "argument": {
                                                              "type": "MemberExpression",
                                                              "computed": true,
                                                              "object": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "MemberExpression",
                                                                  "computed": true,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "indexList"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "indexName"
                                                                  }
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "optionalParams"
                                                                }
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "prop"
                                                              }
                                                            },
                                                            "prefix": true
                                                          },
                                                          "prefix": true
                                                        }
                                                      }
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            },
                                            {
                                              "type": "ThisExpression"
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "IDBIndex"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "prototype"
                                        }
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "__createIndex"
                                      }
                                    },
                                    "right": {
                                      "type": "FunctionExpression",
                                      "id": null,
                                      "params": [
                                        {
                                          "type": "Identifier",
                                          "name": "indexName"
                                        },
                                        {
                                          "type": "Identifier",
                                          "name": "keyPath"
                                        },
                                        {
                                          "type": "Identifier",
                                          "name": "optionalParameters"
                                        }
                                      ],
                                      "defaults": [],
                                      "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                              {
                                                "type": "VariableDeclarator",
                                                "id": {
                                                  "type": "Identifier",
                                                  "name": "me"
                                                },
                                                "init": {
                                                  "type": "ThisExpression"
                                                }
                                              }
                                            ],
                                            "kind": "var"
                                          },
                                          {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                              {
                                                "type": "VariableDeclarator",
                                                "id": {
                                                  "type": "Identifier",
                                                  "name": "transaction"
                                                },
                                                "init": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "me"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "__idbObjectStore"
                                                    }
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "transaction"
                                                  }
                                                }
                                              }
                                            ],
                                            "kind": "var"
                                          },
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "transaction"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "__addToTransactionQueue"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "FunctionExpression",
                                                  "id": null,
                                                  "params": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "tx"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "args"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "success"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "failure"
                                                    }
                                                  ],
                                                  "defaults": [],
                                                  "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "me"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "__idbObjectStore"
                                                              }
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "__getStoreProps"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "Identifier",
                                                              "name": "tx"
                                                            },
                                                            {
                                                              "type": "FunctionExpression",
                                                              "id": null,
                                                              "params": [],
                                                              "defaults": [],
                                                              "body": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                  {
                                                                    "type": "FunctionDeclaration",
                                                                    "id": {
                                                                      "type": "Identifier",
                                                                      "name": "error"
                                                                    },
                                                                    "params": [],
                                                                    "defaults": [],
                                                                    "body": {
                                                                      "type": "BlockStatement",
                                                                      "body": [
                                                                        {
                                                                          "type": "ExpressionStatement",
                                                                          "expression": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                              "type": "MemberExpression",
                                                                              "computed": false,
                                                                              "object": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "idbModules"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "util"
                                                                                }
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "throwDOMException"
                                                                              }
                                                                            },
                                                                            "arguments": [
                                                                              {
                                                                                "type": "Literal",
                                                                                "value": 0
                                                                              },
                                                                              {
                                                                                "type": "Literal",
                                                                                "value": "Could not create new index"
                                                                              },
                                                                              {
                                                                                "type": "Identifier",
                                                                                "name": "arguments"
                                                                              }
                                                                            ]
                                                                          }
                                                                        }
                                                                      ]
                                                                    },
                                                                    "rest": null,
                                                                    "generator": false,
                                                                    "expression": false
                                                                  },
                                                                  {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "!==",
                                                                      "left": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "transaction"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "mode"
                                                                        }
                                                                      },
                                                                      "right": {
                                                                        "type": "Literal",
                                                                        "value": 2
                                                                      }
                                                                    },
                                                                    "consequent": {
                                                                      "type": "BlockStatement",
                                                                      "body": [
                                                                        {
                                                                          "type": "ExpressionStatement",
                                                                          "expression": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                              "type": "MemberExpression",
                                                                              "computed": false,
                                                                              "object": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "idbModules"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "util"
                                                                                }
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "throwDOMException"
                                                                              }
                                                                            },
                                                                            "arguments": [
                                                                              {
                                                                                "type": "Literal",
                                                                                "value": 0
                                                                              },
                                                                              {
                                                                                "type": "Literal",
                                                                                "value": "Invalid State error, not a version transaction"
                                                                              },
                                                                              {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "me"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "transaction"
                                                                                }
                                                                              }
                                                                            ]
                                                                          }
                                                                        }
                                                                      ]
                                                                    },
                                                                    "alternate": null
                                                                  },
                                                                  {
                                                                    "type": "VariableDeclaration",
                                                                    "declarations": [
                                                                      {
                                                                        "type": "VariableDeclarator",
                                                                        "id": {
                                                                          "type": "Identifier",
                                                                          "name": "idxList"
                                                                        },
                                                                        "init": {
                                                                          "type": "CallExpression",
                                                                          "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "Identifier",
                                                                              "name": "JSON"
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "parse"
                                                                            }
                                                                          },
                                                                          "arguments": [
                                                                            {
                                                                              "type": "MemberExpression",
                                                                              "computed": false,
                                                                              "object": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "MemberExpression",
                                                                                  "computed": false,
                                                                                  "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "me"
                                                                                  },
                                                                                  "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "__idbObjectStore"
                                                                                  }
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "__storeProps"
                                                                                }
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "indexList"
                                                                              }
                                                                            }
                                                                          ]
                                                                        }
                                                                      }
                                                                    ],
                                                                    "kind": "var"
                                                                  },
                                                                  {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "!==",
                                                                      "left": {
                                                                        "type": "UnaryExpression",
                                                                        "operator": "typeof",
                                                                        "argument": {
                                                                          "type": "MemberExpression",
                                                                          "computed": true,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "idxList"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "indexName"
                                                                          }
                                                                        },
                                                                        "prefix": true
                                                                      },
                                                                      "right": {
                                                                        "type": "Literal",
                                                                        "value": "undefined"
                                                                      }
                                                                    },
                                                                    "consequent": {
                                                                      "type": "BlockStatement",
                                                                      "body": [
                                                                        {
                                                                          "type": "ExpressionStatement",
                                                                          "expression": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                              "type": "MemberExpression",
                                                                              "computed": false,
                                                                              "object": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "idbModules"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "util"
                                                                                }
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "throwDOMException"
                                                                              }
                                                                            },
                                                                            "arguments": [
                                                                              {
                                                                                "type": "Literal",
                                                                                "value": 0
                                                                              },
                                                                              {
                                                                                "type": "Literal",
                                                                                "value": "Index already exists on store"
                                                                              },
                                                                              {
                                                                                "type": "Identifier",
                                                                                "name": "idxList"
                                                                              }
                                                                            ]
                                                                          }
                                                                        }
                                                                      ]
                                                                    },
                                                                    "alternate": null
                                                                  },
                                                                  {
                                                                    "type": "VariableDeclaration",
                                                                    "declarations": [
                                                                      {
                                                                        "type": "VariableDeclarator",
                                                                        "id": {
                                                                          "type": "Identifier",
                                                                          "name": "columnName"
                                                                        },
                                                                        "init": {
                                                                          "type": "Identifier",
                                                                          "name": "indexName"
                                                                        }
                                                                      }
                                                                    ],
                                                                    "kind": "var"
                                                                  },
                                                                  {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                      "type": "AssignmentExpression",
                                                                      "operator": "=",
                                                                      "left": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "idxList"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "indexName"
                                                                        }
                                                                      },
                                                                      "right": {
                                                                        "type": "ObjectExpression",
                                                                        "properties": [
                                                                          {
                                                                            "type": "Property",
                                                                            "key": {
                                                                              "type": "Literal",
                                                                              "value": "columnName"
                                                                            },
                                                                            "value": {
                                                                              "type": "Identifier",
                                                                              "name": "columnName"
                                                                            },
                                                                            "kind": "init"
                                                                          },
                                                                          {
                                                                            "type": "Property",
                                                                            "key": {
                                                                              "type": "Literal",
                                                                              "value": "keyPath"
                                                                            },
                                                                            "value": {
                                                                              "type": "Identifier",
                                                                              "name": "keyPath"
                                                                            },
                                                                            "kind": "init"
                                                                          },
                                                                          {
                                                                            "type": "Property",
                                                                            "key": {
                                                                              "type": "Literal",
                                                                              "value": "optionalParams"
                                                                            },
                                                                            "value": {
                                                                              "type": "Identifier",
                                                                              "name": "optionalParameters"
                                                                            },
                                                                            "kind": "init"
                                                                          }
                                                                        ]
                                                                      }
                                                                    }
                                                                  },
                                                                  {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                      "type": "AssignmentExpression",
                                                                      "operator": "=",
                                                                      "left": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "Identifier",
                                                                              "name": "me"
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "__idbObjectStore"
                                                                            }
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "__storeProps"
                                                                          }
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "indexList"
                                                                        }
                                                                      },
                                                                      "right": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "JSON"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "stringify"
                                                                          }
                                                                        },
                                                                        "arguments": [
                                                                          {
                                                                            "type": "Identifier",
                                                                            "name": "idxList"
                                                                          }
                                                                        ]
                                                                      }
                                                                    }
                                                                  },
                                                                  {
                                                                    "type": "VariableDeclaration",
                                                                    "declarations": [
                                                                      {
                                                                        "type": "VariableDeclarator",
                                                                        "id": {
                                                                          "type": "Identifier",
                                                                          "name": "sql"
                                                                        },
                                                                        "init": {
                                                                          "type": "CallExpression",
                                                                          "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "ArrayExpression",
                                                                              "elements": [
                                                                                {
                                                                                  "type": "Literal",
                                                                                  "value": "ALTER TABLE"
                                                                                },
                                                                                {
                                                                                  "type": "CallExpression",
                                                                                  "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "MemberExpression",
                                                                                      "computed": false,
                                                                                      "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "idbModules"
                                                                                      },
                                                                                      "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "util"
                                                                                      }
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "quote"
                                                                                    }
                                                                                  },
                                                                                  "arguments": [
                                                                                    {
                                                                                      "type": "MemberExpression",
                                                                                      "computed": false,
                                                                                      "object": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                          "type": "Identifier",
                                                                                          "name": "me"
                                                                                        },
                                                                                        "property": {
                                                                                          "type": "Identifier",
                                                                                          "name": "__idbObjectStore"
                                                                                        }
                                                                                      },
                                                                                      "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "name"
                                                                                      }
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                {
                                                                                  "type": "Literal",
                                                                                  "value": "ADD"
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "name": "columnName"
                                                                                },
                                                                                {
                                                                                  "type": "Literal",
                                                                                  "value": "BLOB"
                                                                                }
                                                                              ]
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "join"
                                                                            }
                                                                          },
                                                                          "arguments": [
                                                                            {
                                                                              "type": "Literal",
                                                                              "value": " "
                                                                            }
                                                                          ]
                                                                        }
                                                                      }
                                                                    ],
                                                                    "kind": "var"
                                                                  },
                                                                  {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "idbModules"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "DEBUG"
                                                                      }
                                                                    },
                                                                    "consequent": {
                                                                      "type": "ExpressionStatement",
                                                                      "expression": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "console"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "log"
                                                                          }
                                                                        },
                                                                        "arguments": [
                                                                          {
                                                                            "type": "Identifier",
                                                                            "name": "sql"
                                                                          }
                                                                        ]
                                                                      }
                                                                    },
                                                                    "alternate": null
                                                                  },
                                                                  {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "tx"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "executeSql"
                                                                        }
                                                                      },
                                                                      "arguments": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "name": "sql"
                                                                        },
                                                                        {
                                                                          "type": "ArrayExpression",
                                                                          "elements": []
                                                                        },
                                                                        {
                                                                          "type": "FunctionExpression",
                                                                          "id": null,
                                                                          "params": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "name": "tx"
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "name": "data"
                                                                            }
                                                                          ],
                                                                          "defaults": [],
                                                                          "body": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                              {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                  "type": "CallExpression",
                                                                                  "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "tx"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "executeSql"
                                                                                    }
                                                                                  },
                                                                                  "arguments": [
                                                                                    {
                                                                                      "type": "BinaryExpression",
                                                                                      "operator": "+",
                                                                                      "left": {
                                                                                        "type": "Literal",
                                                                                        "value": "SELECT * FROM "
                                                                                      },
                                                                                      "right": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                          "type": "MemberExpression",
                                                                                          "computed": false,
                                                                                          "object": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                              "type": "Identifier",
                                                                                              "name": "idbModules"
                                                                                            },
                                                                                            "property": {
                                                                                              "type": "Identifier",
                                                                                              "name": "util"
                                                                                            }
                                                                                          },
                                                                                          "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "quote"
                                                                                          }
                                                                                        },
                                                                                        "arguments": [
                                                                                          {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                              "type": "MemberExpression",
                                                                                              "computed": false,
                                                                                              "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "me"
                                                                                              },
                                                                                              "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "__idbObjectStore"
                                                                                              }
                                                                                            },
                                                                                            "property": {
                                                                                              "type": "Identifier",
                                                                                              "name": "name"
                                                                                            }
                                                                                          }
                                                                                        ]
                                                                                      }
                                                                                    },
                                                                                    {
                                                                                      "type": "ArrayExpression",
                                                                                      "elements": []
                                                                                    },
                                                                                    {
                                                                                      "type": "FunctionExpression",
                                                                                      "id": null,
                                                                                      "params": [
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "name": "tx"
                                                                                        },
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "name": "data"
                                                                                        }
                                                                                      ],
                                                                                      "defaults": [],
                                                                                      "body": {
                                                                                        "type": "BlockStatement",
                                                                                        "body": [
                                                                                          {
                                                                                            "type": "ExpressionStatement",
                                                                                            "expression": {
                                                                                              "type": "CallExpression",
                                                                                              "callee": {
                                                                                                "type": "FunctionExpression",
                                                                                                "id": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "initIndexForRow"
                                                                                                },
                                                                                                "params": [
                                                                                                  {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "i"
                                                                                                  }
                                                                                                ],
                                                                                                "defaults": [],
                                                                                                "body": {
                                                                                                  "type": "BlockStatement",
                                                                                                  "body": [
                                                                                                    {
                                                                                                      "type": "IfStatement",
                                                                                                      "test": {
                                                                                                        "type": "BinaryExpression",
                                                                                                        "operator": "<",
                                                                                                        "left": {
                                                                                                          "type": "Identifier",
                                                                                                          "name": "i"
                                                                                                        },
                                                                                                        "right": {
                                                                                                          "type": "MemberExpression",
                                                                                                          "computed": false,
                                                                                                          "object": {
                                                                                                            "type": "MemberExpression",
                                                                                                            "computed": false,
                                                                                                            "object": {
                                                                                                              "type": "Identifier",
                                                                                                              "name": "data"
                                                                                                            },
                                                                                                            "property": {
                                                                                                              "type": "Identifier",
                                                                                                              "name": "rows"
                                                                                                            }
                                                                                                          },
                                                                                                          "property": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "length"
                                                                                                          }
                                                                                                        }
                                                                                                      },
                                                                                                      "consequent": {
                                                                                                        "type": "BlockStatement",
                                                                                                        "body": [
                                                                                                          {
                                                                                                            "type": "TryStatement",
                                                                                                            "block": {
                                                                                                              "type": "BlockStatement",
                                                                                                              "body": [
                                                                                                                {
                                                                                                                  "type": "ExpressionStatement",
                                                                                                                  "expression": {
                                                                                                                    "type": "CallExpression",
                                                                                                                    "callee": {
                                                                                                                      "type": "MemberExpression",
                                                                                                                      "computed": false,
                                                                                                                      "object": {
                                                                                                                        "type": "MemberExpression",
                                                                                                                        "computed": false,
                                                                                                                        "object": {
                                                                                                                          "type": "Identifier",
                                                                                                                          "name": "idbModules"
                                                                                                                        },
                                                                                                                        "property": {
                                                                                                                          "type": "Identifier",
                                                                                                                          "name": "Sca"
                                                                                                                        }
                                                                                                                      },
                                                                                                                      "property": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "decode"
                                                                                                                      }
                                                                                                                    },
                                                                                                                    "arguments": [
                                                                                                                      {
                                                                                                                        "type": "MemberExpression",
                                                                                                                        "computed": false,
                                                                                                                        "object": {
                                                                                                                          "type": "CallExpression",
                                                                                                                          "callee": {
                                                                                                                            "type": "MemberExpression",
                                                                                                                            "computed": false,
                                                                                                                            "object": {
                                                                                                                              "type": "MemberExpression",
                                                                                                                              "computed": false,
                                                                                                                              "object": {
                                                                                                                                "type": "Identifier",
                                                                                                                                "name": "data"
                                                                                                                              },
                                                                                                                              "property": {
                                                                                                                                "type": "Identifier",
                                                                                                                                "name": "rows"
                                                                                                                              }
                                                                                                                            },
                                                                                                                            "property": {
                                                                                                                              "type": "Identifier",
                                                                                                                              "name": "item"
                                                                                                                            }
                                                                                                                          },
                                                                                                                          "arguments": [
                                                                                                                            {
                                                                                                                              "type": "Identifier",
                                                                                                                              "name": "i"
                                                                                                                            }
                                                                                                                          ]
                                                                                                                        },
                                                                                                                        "property": {
                                                                                                                          "type": "Identifier",
                                                                                                                          "name": "value"
                                                                                                                        }
                                                                                                                      }
                                                                                                                    ]
                                                                                                                  }
                                                                                                                },
                                                                                                                {
                                                                                                                  "type": "VariableDeclaration",
                                                                                                                  "declarations": [
                                                                                                                    {
                                                                                                                      "type": "VariableDeclarator",
                                                                                                                      "id": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "indexKey"
                                                                                                                      },
                                                                                                                      "init": {
                                                                                                                        "type": "CallExpression",
                                                                                                                        "callee": {
                                                                                                                          "type": "Identifier",
                                                                                                                          "name": "eval"
                                                                                                                        },
                                                                                                                        "arguments": [
                                                                                                                          {
                                                                                                                            "type": "BinaryExpression",
                                                                                                                            "operator": "+",
                                                                                                                            "left": {
                                                                                                                              "type": "BinaryExpression",
                                                                                                                              "operator": "+",
                                                                                                                              "left": {
                                                                                                                                "type": "Literal",
                                                                                                                                "value": "value['"
                                                                                                                              },
                                                                                                                              "right": {
                                                                                                                                "type": "Identifier",
                                                                                                                                "name": "keyPath"
                                                                                                                              }
                                                                                                                            },
                                                                                                                            "right": {
                                                                                                                              "type": "Literal",
                                                                                                                              "value": "']"
                                                                                                                            }
                                                                                                                          }
                                                                                                                        ]
                                                                                                                      }
                                                                                                                    }
                                                                                                                  ],
                                                                                                                  "kind": "var"
                                                                                                                },
                                                                                                                {
                                                                                                                  "type": "ExpressionStatement",
                                                                                                                  "expression": {
                                                                                                                    "type": "CallExpression",
                                                                                                                    "callee": {
                                                                                                                      "type": "MemberExpression",
                                                                                                                      "computed": false,
                                                                                                                      "object": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "tx"
                                                                                                                      },
                                                                                                                      "property": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "executeSql"
                                                                                                                      }
                                                                                                                    },
                                                                                                                    "arguments": [
                                                                                                                      {
                                                                                                                        "type": "BinaryExpression",
                                                                                                                        "operator": "+",
                                                                                                                        "left": {
                                                                                                                          "type": "BinaryExpression",
                                                                                                                          "operator": "+",
                                                                                                                          "left": {
                                                                                                                            "type": "BinaryExpression",
                                                                                                                            "operator": "+",
                                                                                                                            "left": {
                                                                                                                              "type": "BinaryExpression",
                                                                                                                              "operator": "+",
                                                                                                                              "left": {
                                                                                                                                "type": "Literal",
                                                                                                                                "value": "UPDATE "
                                                                                                                              },
                                                                                                                              "right": {
                                                                                                                                "type": "CallExpression",
                                                                                                                                "callee": {
                                                                                                                                  "type": "MemberExpression",
                                                                                                                                  "computed": false,
                                                                                                                                  "object": {
                                                                                                                                    "type": "MemberExpression",
                                                                                                                                    "computed": false,
                                                                                                                                    "object": {
                                                                                                                                      "type": "Identifier",
                                                                                                                                      "name": "idbModules"
                                                                                                                                    },
                                                                                                                                    "property": {
                                                                                                                                      "type": "Identifier",
                                                                                                                                      "name": "util"
                                                                                                                                    }
                                                                                                                                  },
                                                                                                                                  "property": {
                                                                                                                                    "type": "Identifier",
                                                                                                                                    "name": "quote"
                                                                                                                                  }
                                                                                                                                },
                                                                                                                                "arguments": [
                                                                                                                                  {
                                                                                                                                    "type": "MemberExpression",
                                                                                                                                    "computed": false,
                                                                                                                                    "object": {
                                                                                                                                      "type": "MemberExpression",
                                                                                                                                      "computed": false,
                                                                                                                                      "object": {
                                                                                                                                        "type": "Identifier",
                                                                                                                                        "name": "me"
                                                                                                                                      },
                                                                                                                                      "property": {
                                                                                                                                        "type": "Identifier",
                                                                                                                                        "name": "__idbObjectStore"
                                                                                                                                      }
                                                                                                                                    },
                                                                                                                                    "property": {
                                                                                                                                      "type": "Identifier",
                                                                                                                                      "name": "name"
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                ]
                                                                                                                              }
                                                                                                                            },
                                                                                                                            "right": {
                                                                                                                              "type": "Literal",
                                                                                                                              "value": " set "
                                                                                                                            }
                                                                                                                          },
                                                                                                                          "right": {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "columnName"
                                                                                                                          }
                                                                                                                        },
                                                                                                                        "right": {
                                                                                                                          "type": "Literal",
                                                                                                                          "value": " = ? where key = ?"
                                                                                                                        }
                                                                                                                      },
                                                                                                                      {
                                                                                                                        "type": "ArrayExpression",
                                                                                                                        "elements": [
                                                                                                                          {
                                                                                                                            "type": "CallExpression",
                                                                                                                            "callee": {
                                                                                                                              "type": "MemberExpression",
                                                                                                                              "computed": false,
                                                                                                                              "object": {
                                                                                                                                "type": "MemberExpression",
                                                                                                                                "computed": false,
                                                                                                                                "object": {
                                                                                                                                  "type": "Identifier",
                                                                                                                                  "name": "idbModules"
                                                                                                                                },
                                                                                                                                "property": {
                                                                                                                                  "type": "Identifier",
                                                                                                                                  "name": "Key"
                                                                                                                                }
                                                                                                                              },
                                                                                                                              "property": {
                                                                                                                                "type": "Identifier",
                                                                                                                                "name": "encode"
                                                                                                                              }
                                                                                                                            },
                                                                                                                            "arguments": [
                                                                                                                              {
                                                                                                                                "type": "Identifier",
                                                                                                                                "name": "indexKey"
                                                                                                                              }
                                                                                                                            ]
                                                                                                                          },
                                                                                                                          {
                                                                                                                            "type": "MemberExpression",
                                                                                                                            "computed": false,
                                                                                                                            "object": {
                                                                                                                              "type": "CallExpression",
                                                                                                                              "callee": {
                                                                                                                                "type": "MemberExpression",
                                                                                                                                "computed": false,
                                                                                                                                "object": {
                                                                                                                                  "type": "MemberExpression",
                                                                                                                                  "computed": false,
                                                                                                                                  "object": {
                                                                                                                                    "type": "Identifier",
                                                                                                                                    "name": "data"
                                                                                                                                  },
                                                                                                                                  "property": {
                                                                                                                                    "type": "Identifier",
                                                                                                                                    "name": "rows"
                                                                                                                                  }
                                                                                                                                },
                                                                                                                                "property": {
                                                                                                                                  "type": "Identifier",
                                                                                                                                  "name": "item"
                                                                                                                                }
                                                                                                                              },
                                                                                                                              "arguments": [
                                                                                                                                {
                                                                                                                                  "type": "Identifier",
                                                                                                                                  "name": "i"
                                                                                                                                }
                                                                                                                              ]
                                                                                                                            },
                                                                                                                            "property": {
                                                                                                                              "type": "Identifier",
                                                                                                                              "name": "key"
                                                                                                                            }
                                                                                                                          }
                                                                                                                        ]
                                                                                                                      },
                                                                                                                      {
                                                                                                                        "type": "FunctionExpression",
                                                                                                                        "id": null,
                                                                                                                        "params": [
                                                                                                                          {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "tx"
                                                                                                                          },
                                                                                                                          {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "data"
                                                                                                                          }
                                                                                                                        ],
                                                                                                                        "defaults": [],
                                                                                                                        "body": {
                                                                                                                          "type": "BlockStatement",
                                                                                                                          "body": [
                                                                                                                            {
                                                                                                                              "type": "ExpressionStatement",
                                                                                                                              "expression": {
                                                                                                                                "type": "CallExpression",
                                                                                                                                "callee": {
                                                                                                                                  "type": "Identifier",
                                                                                                                                  "name": "initIndexForRow"
                                                                                                                                },
                                                                                                                                "arguments": [
                                                                                                                                  {
                                                                                                                                    "type": "BinaryExpression",
                                                                                                                                    "operator": "+",
                                                                                                                                    "left": {
                                                                                                                                      "type": "Identifier",
                                                                                                                                      "name": "i"
                                                                                                                                    },
                                                                                                                                    "right": {
                                                                                                                                      "type": "Literal",
                                                                                                                                      "value": 1
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                ]
                                                                                                                              }
                                                                                                                            }
                                                                                                                          ]
                                                                                                                        },
                                                                                                                        "rest": null,
                                                                                                                        "generator": false,
                                                                                                                        "expression": false
                                                                                                                      },
                                                                                                                      {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "error"
                                                                                                                      }
                                                                                                                    ]
                                                                                                                  }
                                                                                                                }
                                                                                                              ]
                                                                                                            },
                                                                                                            "guardedHandlers": [],
                                                                                                            "handlers": [
                                                                                                              {
                                                                                                                "type": "CatchClause",
                                                                                                                "param": {
                                                                                                                  "type": "Identifier",
                                                                                                                  "name": "e"
                                                                                                                },
                                                                                                                "body": {
                                                                                                                  "type": "BlockStatement",
                                                                                                                  "body": [
                                                                                                                    {
                                                                                                                      "type": "ExpressionStatement",
                                                                                                                      "expression": {
                                                                                                                        "type": "CallExpression",
                                                                                                                        "callee": {
                                                                                                                          "type": "Identifier",
                                                                                                                          "name": "initIndexForRow"
                                                                                                                        },
                                                                                                                        "arguments": [
                                                                                                                          {
                                                                                                                            "type": "BinaryExpression",
                                                                                                                            "operator": "+",
                                                                                                                            "left": {
                                                                                                                              "type": "Identifier",
                                                                                                                              "name": "i"
                                                                                                                            },
                                                                                                                            "right": {
                                                                                                                              "type": "Literal",
                                                                                                                              "value": 1
                                                                                                                            }
                                                                                                                          }
                                                                                                                        ]
                                                                                                                      }
                                                                                                                    }
                                                                                                                  ]
                                                                                                                }
                                                                                                              }
                                                                                                            ],
                                                                                                            "finalizer": null
                                                                                                          }
                                                                                                        ]
                                                                                                      },
                                                                                                      "alternate": {
                                                                                                        "type": "BlockStatement",
                                                                                                        "body": [
                                                                                                          {
                                                                                                            "type": "IfStatement",
                                                                                                            "test": {
                                                                                                              "type": "MemberExpression",
                                                                                                              "computed": false,
                                                                                                              "object": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "idbModules"
                                                                                                              },
                                                                                                              "property": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "DEBUG"
                                                                                                              }
                                                                                                            },
                                                                                                            "consequent": {
                                                                                                              "type": "ExpressionStatement",
                                                                                                              "expression": {
                                                                                                                "type": "CallExpression",
                                                                                                                "callee": {
                                                                                                                  "type": "MemberExpression",
                                                                                                                  "computed": false,
                                                                                                                  "object": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "console"
                                                                                                                  },
                                                                                                                  "property": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "log"
                                                                                                                  }
                                                                                                                },
                                                                                                                "arguments": [
                                                                                                                  {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": "Updating the indexes in table"
                                                                                                                  },
                                                                                                                  {
                                                                                                                    "type": "MemberExpression",
                                                                                                                    "computed": false,
                                                                                                                    "object": {
                                                                                                                      "type": "MemberExpression",
                                                                                                                      "computed": false,
                                                                                                                      "object": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "me"
                                                                                                                      },
                                                                                                                      "property": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "__idbObjectStore"
                                                                                                                      }
                                                                                                                    },
                                                                                                                    "property": {
                                                                                                                      "type": "Identifier",
                                                                                                                      "name": "__storeProps"
                                                                                                                    }
                                                                                                                  }
                                                                                                                ]
                                                                                                              }
                                                                                                            },
                                                                                                            "alternate": null
                                                                                                          },
                                                                                                          {
                                                                                                            "type": "ExpressionStatement",
                                                                                                            "expression": {
                                                                                                              "type": "CallExpression",
                                                                                                              "callee": {
                                                                                                                "type": "MemberExpression",
                                                                                                                "computed": false,
                                                                                                                "object": {
                                                                                                                  "type": "Identifier",
                                                                                                                  "name": "tx"
                                                                                                                },
                                                                                                                "property": {
                                                                                                                  "type": "Identifier",
                                                                                                                  "name": "executeSql"
                                                                                                                }
                                                                                                              },
                                                                                                              "arguments": [
                                                                                                                {
                                                                                                                  "type": "Literal",
                                                                                                                  "value": "UPDATE __sys__ set indexList = ? where name = ?"
                                                                                                                },
                                                                                                                {
                                                                                                                  "type": "ArrayExpression",
                                                                                                                  "elements": [
                                                                                                                    {
                                                                                                                      "type": "MemberExpression",
                                                                                                                      "computed": false,
                                                                                                                      "object": {
                                                                                                                        "type": "MemberExpression",
                                                                                                                        "computed": false,
                                                                                                                        "object": {
                                                                                                                          "type": "MemberExpression",
                                                                                                                          "computed": false,
                                                                                                                          "object": {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "me"
                                                                                                                          },
                                                                                                                          "property": {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "__idbObjectStore"
                                                                                                                          }
                                                                                                                        },
                                                                                                                        "property": {
                                                                                                                          "type": "Identifier",
                                                                                                                          "name": "__storeProps"
                                                                                                                        }
                                                                                                                      },
                                                                                                                      "property": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "indexList"
                                                                                                                      }
                                                                                                                    },
                                                                                                                    {
                                                                                                                      "type": "MemberExpression",
                                                                                                                      "computed": false,
                                                                                                                      "object": {
                                                                                                                        "type": "MemberExpression",
                                                                                                                        "computed": false,
                                                                                                                        "object": {
                                                                                                                          "type": "Identifier",
                                                                                                                          "name": "me"
                                                                                                                        },
                                                                                                                        "property": {
                                                                                                                          "type": "Identifier",
                                                                                                                          "name": "__idbObjectStore"
                                                                                                                        }
                                                                                                                      },
                                                                                                                      "property": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "name"
                                                                                                                      }
                                                                                                                    }
                                                                                                                  ]
                                                                                                                },
                                                                                                                {
                                                                                                                  "type": "FunctionExpression",
                                                                                                                  "id": null,
                                                                                                                  "params": [],
                                                                                                                  "defaults": [],
                                                                                                                  "body": {
                                                                                                                    "type": "BlockStatement",
                                                                                                                    "body": [
                                                                                                                      {
                                                                                                                        "type": "ExpressionStatement",
                                                                                                                        "expression": {
                                                                                                                          "type": "CallExpression",
                                                                                                                          "callee": {
                                                                                                                            "type": "MemberExpression",
                                                                                                                            "computed": false,
                                                                                                                            "object": {
                                                                                                                              "type": "MemberExpression",
                                                                                                                              "computed": false,
                                                                                                                              "object": {
                                                                                                                                "type": "Identifier",
                                                                                                                                "name": "me"
                                                                                                                              },
                                                                                                                              "property": {
                                                                                                                                "type": "Identifier",
                                                                                                                                "name": "__idbObjectStore"
                                                                                                                              }
                                                                                                                            },
                                                                                                                            "property": {
                                                                                                                              "type": "Identifier",
                                                                                                                              "name": "__setReadyState"
                                                                                                                            }
                                                                                                                          },
                                                                                                                          "arguments": [
                                                                                                                            {
                                                                                                                              "type": "Literal",
                                                                                                                              "value": "createIndex"
                                                                                                                            },
                                                                                                                            {
                                                                                                                              "type": "Literal",
                                                                                                                              "value": true
                                                                                                                            }
                                                                                                                          ]
                                                                                                                        }
                                                                                                                      },
                                                                                                                      {
                                                                                                                        "type": "ExpressionStatement",
                                                                                                                        "expression": {
                                                                                                                          "type": "CallExpression",
                                                                                                                          "callee": {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "success"
                                                                                                                          },
                                                                                                                          "arguments": [
                                                                                                                            {
                                                                                                                              "type": "Identifier",
                                                                                                                              "name": "me"
                                                                                                                            }
                                                                                                                          ]
                                                                                                                        }
                                                                                                                      }
                                                                                                                    ]
                                                                                                                  },
                                                                                                                  "rest": null,
                                                                                                                  "generator": false,
                                                                                                                  "expression": false
                                                                                                                },
                                                                                                                {
                                                                                                                  "type": "Identifier",
                                                                                                                  "name": "error"
                                                                                                                }
                                                                                                              ]
                                                                                                            }
                                                                                                          }
                                                                                                        ]
                                                                                                      }
                                                                                                    }
                                                                                                  ]
                                                                                                },
                                                                                                "rest": null,
                                                                                                "generator": false,
                                                                                                "expression": false
                                                                                              },
                                                                                              "arguments": [
                                                                                                {
                                                                                                  "type": "Literal",
                                                                                                  "value": 0
                                                                                                }
                                                                                              ]
                                                                                            }
                                                                                          }
                                                                                        ]
                                                                                      },
                                                                                      "rest": null,
                                                                                      "generator": false,
                                                                                      "expression": false
                                                                                    },
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "name": "error"
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              }
                                                                            ]
                                                                          },
                                                                          "rest": null,
                                                                          "generator": false,
                                                                          "expression": false
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "name": "error"
                                                                        }
                                                                      ]
                                                                    }
                                                                  }
                                                                ]
                                                              },
                                                              "rest": null,
                                                              "generator": false,
                                                              "expression": false
                                                            },
                                                            {
                                                              "type": "Literal",
                                                              "value": "createObjectStore"
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "rest": null,
                                                  "generator": false,
                                                  "expression": false
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      },
                                      "rest": null,
                                      "generator": false,
                                      "expression": false
                                    }
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "IDBIndex"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "prototype"
                                        }
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "openCursor"
                                      }
                                    },
                                    "right": {
                                      "type": "FunctionExpression",
                                      "id": null,
                                      "params": [
                                        {
                                          "type": "Identifier",
                                          "name": "range"
                                        },
                                        {
                                          "type": "Identifier",
                                          "name": "direction"
                                        }
                                      ],
                                      "defaults": [],
                                      "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                              {
                                                "type": "VariableDeclarator",
                                                "id": {
                                                  "type": "Identifier",
                                                  "name": "cursorRequest"
                                                },
                                                "init": {
                                                  "type": "NewExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "idbModules"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "IDBRequest"
                                                    }
                                                  },
                                                  "arguments": []
                                                }
                                              }
                                            ],
                                            "kind": "var"
                                          },
                                          {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                              {
                                                "type": "VariableDeclarator",
                                                "id": {
                                                  "type": "Identifier",
                                                  "name": "cursor"
                                                },
                                                "init": {
                                                  "type": "NewExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "idbModules"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "IDBCursor"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "range"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "direction"
                                                    },
                                                    {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "ThisExpression"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "source"
                                                      }
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "cursorRequest"
                                                    },
                                                    {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "ThisExpression"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "indexName"
                                                      }
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "value"
                                                    }
                                                  ]
                                                }
                                              }
                                            ],
                                            "kind": "var"
                                          },
                                          {
                                            "type": "ReturnStatement",
                                            "argument": {
                                              "type": "Identifier",
                                              "name": "cursorRequest"
                                            }
                                          }
                                        ]
                                      },
                                      "rest": null,
                                      "generator": false,
                                      "expression": false
                                    }
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "IDBIndex"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "prototype"
                                        }
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "openKeyCursor"
                                      }
                                    },
                                    "right": {
                                      "type": "FunctionExpression",
                                      "id": null,
                                      "params": [
                                        {
                                          "type": "Identifier",
                                          "name": "range"
                                        },
                                        {
                                          "type": "Identifier",
                                          "name": "direction"
                                        }
                                      ],
                                      "defaults": [],
                                      "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                              {
                                                "type": "VariableDeclarator",
                                                "id": {
                                                  "type": "Identifier",
                                                  "name": "cursorRequest"
                                                },
                                                "init": {
                                                  "type": "NewExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "idbModules"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "IDBRequest"
                                                    }
                                                  },
                                                  "arguments": []
                                                }
                                              }
                                            ],
                                            "kind": "var"
                                          },
                                          {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                              {
                                                "type": "VariableDeclarator",
                                                "id": {
                                                  "type": "Identifier",
                                                  "name": "cursor"
                                                },
                                                "init": {
                                                  "type": "NewExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "idbModules"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "IDBCursor"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "range"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "direction"
                                                    },
                                                    {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "ThisExpression"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "source"
                                                      }
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "cursorRequest"
                                                    },
                                                    {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "ThisExpression"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "indexName"
                                                      }
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "key"
                                                    }
                                                  ]
                                                }
                                              }
                                            ],
                                            "kind": "var"
                                          },
                                          {
                                            "type": "ReturnStatement",
                                            "argument": {
                                              "type": "Identifier",
                                              "name": "cursorRequest"
                                            }
                                          }
                                        ]
                                      },
                                      "rest": null,
                                      "generator": false,
                                      "expression": false
                                    }
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "IDBIndex"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "prototype"
                                        }
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "__fetchIndexData"
                                      }
                                    },
                                    "right": {
                                      "type": "FunctionExpression",
                                      "id": null,
                                      "params": [
                                        {
                                          "type": "Identifier",
                                          "name": "key"
                                        },
                                        {
                                          "type": "Identifier",
                                          "name": "opType"
                                        }
                                      ],
                                      "defaults": [],
                                      "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                              {
                                                "type": "VariableDeclarator",
                                                "id": {
                                                  "type": "Identifier",
                                                  "name": "me"
                                                },
                                                "init": {
                                                  "type": "ThisExpression"
                                                }
                                              }
                                            ],
                                            "kind": "var"
                                          },
                                          {
                                            "type": "ReturnStatement",
                                            "argument": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "me"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "__idbObjectStore"
                                                    }
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "transaction"
                                                  }
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "__addToTransactionQueue"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "FunctionExpression",
                                                  "id": null,
                                                  "params": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "tx"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "args"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "success"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "error"
                                                    }
                                                  ],
                                                  "defaults": [],
                                                  "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                          {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                              "type": "Identifier",
                                                              "name": "sql"
                                                            },
                                                            "init": {
                                                              "type": "ArrayExpression",
                                                              "elements": [
                                                                {
                                                                  "type": "Literal",
                                                                  "value": "SELECT * FROM "
                                                                },
                                                                {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "idbModules"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "util"
                                                                      }
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "quote"
                                                                    }
                                                                  },
                                                                  "arguments": [
                                                                    {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "me"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "__idbObjectStore"
                                                                        }
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "name"
                                                                      }
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "Literal",
                                                                  "value": " WHERE"
                                                                },
                                                                {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "me"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "indexName"
                                                                  }
                                                                },
                                                                {
                                                                  "type": "Literal",
                                                                  "value": "NOT NULL"
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        ],
                                                        "kind": "var"
                                                      },
                                                      {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                          {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                              "type": "Identifier",
                                                              "name": "sqlValues"
                                                            },
                                                            "init": {
                                                              "type": "ArrayExpression",
                                                              "elements": []
                                                            }
                                                          }
                                                        ],
                                                        "kind": "var"
                                                      },
                                                      {
                                                        "type": "IfStatement",
                                                        "test": {
                                                          "type": "BinaryExpression",
                                                          "operator": "!==",
                                                          "left": {
                                                            "type": "UnaryExpression",
                                                            "operator": "typeof",
                                                            "argument": {
                                                              "type": "Identifier",
                                                              "name": "key"
                                                            },
                                                            "prefix": true
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "undefined"
                                                          }
                                                        },
                                                        "consequent": {
                                                          "type": "BlockStatement",
                                                          "body": [
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "sql"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "push"
                                                                  }
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "Literal",
                                                                    "value": "AND"
                                                                  },
                                                                  {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "me"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "indexName"
                                                                    }
                                                                  },
                                                                  {
                                                                    "type": "Literal",
                                                                    "value": " = ?"
                                                                  }
                                                                ]
                                                              }
                                                            },
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "sqlValues"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "push"
                                                                  }
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "idbModules"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "Key"
                                                                        }
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "encode"
                                                                      }
                                                                    },
                                                                    "arguments": [
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "key"
                                                                      }
                                                                    ]
                                                                  }
                                                                ]
                                                              }
                                                            }
                                                          ]
                                                        },
                                                        "alternate": null
                                                      },
                                                      {
                                                        "type": "IfStatement",
                                                        "test": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "idbModules"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "DEBUG"
                                                          }
                                                        },
                                                        "consequent": {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "console"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "log"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "Literal",
                                                                "value": "Trying to fetch data for Index"
                                                              },
                                                              {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "sql"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "join"
                                                                  }
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "Literal",
                                                                    "value": " "
                                                                  }
                                                                ]
                                                              },
                                                              {
                                                                "type": "Identifier",
                                                                "name": "sqlValues"
                                                              }
                                                            ]
                                                          }
                                                        },
                                                        "alternate": null
                                                      },
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "tx"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "executeSql"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "sql"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "join"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Literal",
                                                                  "value": " "
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "name": "sqlValues"
                                                            },
                                                            {
                                                              "type": "FunctionExpression",
                                                              "id": null,
                                                              "params": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "tx"
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "data"
                                                                }
                                                              ],
                                                              "defaults": [],
                                                              "body": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                  {
                                                                    "type": "VariableDeclaration",
                                                                    "declarations": [
                                                                      {
                                                                        "type": "VariableDeclarator",
                                                                        "id": {
                                                                          "type": "Identifier",
                                                                          "name": "d"
                                                                        },
                                                                        "init": null
                                                                      }
                                                                    ],
                                                                    "kind": "var"
                                                                  },
                                                                  {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "===",
                                                                      "left": {
                                                                        "type": "Identifier",
                                                                        "name": "opType"
                                                                      },
                                                                      "right": {
                                                                        "type": "Literal",
                                                                        "value": "count"
                                                                      }
                                                                    },
                                                                    "consequent": {
                                                                      "type": "BlockStatement",
                                                                      "body": [
                                                                        {
                                                                          "type": "ExpressionStatement",
                                                                          "expression": {
                                                                            "type": "AssignmentExpression",
                                                                            "operator": "=",
                                                                            "left": {
                                                                              "type": "Identifier",
                                                                              "name": "d"
                                                                            },
                                                                            "right": {
                                                                              "type": "MemberExpression",
                                                                              "computed": false,
                                                                              "object": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "data"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "rows"
                                                                                }
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "length"
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      ]
                                                                    },
                                                                    "alternate": {
                                                                      "type": "IfStatement",
                                                                      "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "===",
                                                                        "left": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "Identifier",
                                                                              "name": "data"
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "rows"
                                                                            }
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "length"
                                                                          }
                                                                        },
                                                                        "right": {
                                                                          "type": "Literal",
                                                                          "value": 0
                                                                        }
                                                                      },
                                                                      "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                          {
                                                                            "type": "ExpressionStatement",
                                                                            "expression": {
                                                                              "type": "AssignmentExpression",
                                                                              "operator": "=",
                                                                              "left": {
                                                                                "type": "Identifier",
                                                                                "name": "d"
                                                                              },
                                                                              "right": {
                                                                                "type": "Identifier",
                                                                                "name": "undefined"
                                                                              }
                                                                            }
                                                                          }
                                                                        ]
                                                                      },
                                                                      "alternate": {
                                                                        "type": "IfStatement",
                                                                        "test": {
                                                                          "type": "BinaryExpression",
                                                                          "operator": "===",
                                                                          "left": {
                                                                            "type": "Identifier",
                                                                            "name": "opType"
                                                                          },
                                                                          "right": {
                                                                            "type": "Literal",
                                                                            "value": "key"
                                                                          }
                                                                        },
                                                                        "consequent": {
                                                                          "type": "BlockStatement",
                                                                          "body": [
                                                                            {
                                                                              "type": "ExpressionStatement",
                                                                              "expression": {
                                                                                "type": "AssignmentExpression",
                                                                                "operator": "=",
                                                                                "left": {
                                                                                  "type": "Identifier",
                                                                                  "name": "d"
                                                                                },
                                                                                "right": {
                                                                                  "type": "CallExpression",
                                                                                  "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "MemberExpression",
                                                                                      "computed": false,
                                                                                      "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "idbModules"
                                                                                      },
                                                                                      "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "Key"
                                                                                      }
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "decode"
                                                                                    }
                                                                                  },
                                                                                  "arguments": [
                                                                                    {
                                                                                      "type": "MemberExpression",
                                                                                      "computed": false,
                                                                                      "object": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                          "type": "MemberExpression",
                                                                                          "computed": false,
                                                                                          "object": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                              "type": "Identifier",
                                                                                              "name": "data"
                                                                                            },
                                                                                            "property": {
                                                                                              "type": "Identifier",
                                                                                              "name": "rows"
                                                                                            }
                                                                                          },
                                                                                          "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "item"
                                                                                          }
                                                                                        },
                                                                                        "arguments": [
                                                                                          {
                                                                                            "type": "Literal",
                                                                                            "value": 0
                                                                                          }
                                                                                        ]
                                                                                      },
                                                                                      "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "key"
                                                                                      }
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              }
                                                                            }
                                                                          ]
                                                                        },
                                                                        "alternate": {
                                                                          "type": "BlockStatement",
                                                                          "body": [
                                                                            {
                                                                              "type": "ExpressionStatement",
                                                                              "expression": {
                                                                                "type": "AssignmentExpression",
                                                                                "operator": "=",
                                                                                "left": {
                                                                                  "type": "Identifier",
                                                                                  "name": "d"
                                                                                },
                                                                                "right": {
                                                                                  "type": "CallExpression",
                                                                                  "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "MemberExpression",
                                                                                      "computed": false,
                                                                                      "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "idbModules"
                                                                                      },
                                                                                      "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "Sca"
                                                                                      }
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "decode"
                                                                                    }
                                                                                  },
                                                                                  "arguments": [
                                                                                    {
                                                                                      "type": "MemberExpression",
                                                                                      "computed": false,
                                                                                      "object": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                          "type": "MemberExpression",
                                                                                          "computed": false,
                                                                                          "object": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                              "type": "Identifier",
                                                                                              "name": "data"
                                                                                            },
                                                                                            "property": {
                                                                                              "type": "Identifier",
                                                                                              "name": "rows"
                                                                                            }
                                                                                          },
                                                                                          "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "item"
                                                                                          }
                                                                                        },
                                                                                        "arguments": [
                                                                                          {
                                                                                            "type": "Literal",
                                                                                            "value": 0
                                                                                          }
                                                                                        ]
                                                                                      },
                                                                                      "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "value"
                                                                                      }
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              }
                                                                            }
                                                                          ]
                                                                        }
                                                                      }
                                                                    }
                                                                  },
                                                                  {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "Identifier",
                                                                        "name": "success"
                                                                      },
                                                                      "arguments": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "name": "d"
                                                                        }
                                                                      ]
                                                                    }
                                                                  }
                                                                ]
                                                              },
                                                              "rest": null,
                                                              "generator": false,
                                                              "expression": false
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "name": "error"
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "rest": null,
                                                  "generator": false,
                                                  "expression": false
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      },
                                      "rest": null,
                                      "generator": false,
                                      "expression": false
                                    }
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "IDBIndex"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "prototype"
                                        }
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "get"
                                      }
                                    },
                                    "right": {
                                      "type": "FunctionExpression",
                                      "id": null,
                                      "params": [
                                        {
                                          "type": "Identifier",
                                          "name": "key"
                                        }
                                      ],
                                      "defaults": [],
                                      "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "ReturnStatement",
                                            "argument": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "ThisExpression"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "__fetchIndexData"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "key"
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": "value"
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      },
                                      "rest": null,
                                      "generator": false,
                                      "expression": false
                                    }
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "IDBIndex"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "prototype"
                                        }
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "getKey"
                                      }
                                    },
                                    "right": {
                                      "type": "FunctionExpression",
                                      "id": null,
                                      "params": [
                                        {
                                          "type": "Identifier",
                                          "name": "key"
                                        }
                                      ],
                                      "defaults": [],
                                      "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "ReturnStatement",
                                            "argument": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "ThisExpression"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "__fetchIndexData"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "key"
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": "key"
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      },
                                      "rest": null,
                                      "generator": false,
                                      "expression": false
                                    }
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "IDBIndex"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "prototype"
                                        }
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "count"
                                      }
                                    },
                                    "right": {
                                      "type": "FunctionExpression",
                                      "id": null,
                                      "params": [
                                        {
                                          "type": "Identifier",
                                          "name": "key"
                                        }
                                      ],
                                      "defaults": [],
                                      "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "ReturnStatement",
                                            "argument": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "ThisExpression"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "__fetchIndexData"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "key"
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": "count"
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      },
                                      "rest": null,
                                      "generator": false,
                                      "expression": false
                                    }
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "idbModules"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "IDBIndex"
                                      }
                                    },
                                    "right": {
                                      "type": "Identifier",
                                      "name": "IDBIndex"
                                    }
                                  }
                                }
                              ]
                            },
                            "rest": null,
                            "generator": false,
                            "expression": false
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "idbModules"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [
                              {
                                "type": "Identifier",
                                "name": "idbModules"
                              }
                            ],
                            "defaults": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "VariableDeclaration",
                                  "declarations": [
                                    {
                                      "type": "VariableDeclarator",
                                      "id": {
                                        "type": "Identifier",
                                        "name": "IDBObjectStore"
                                      },
                                      "init": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                          {
                                            "type": "Identifier",
                                            "name": "name"
                                          },
                                          {
                                            "type": "Identifier",
                                            "name": "idbTransaction"
                                          },
                                          {
                                            "type": "Identifier",
                                            "name": "ready"
                                          }
                                        ],
                                        "defaults": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "ThisExpression"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "name"
                                                  }
                                                },
                                                "right": {
                                                  "type": "Identifier",
                                                  "name": "name"
                                                }
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "ThisExpression"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "transaction"
                                                  }
                                                },
                                                "right": {
                                                  "type": "Identifier",
                                                  "name": "idbTransaction"
                                                }
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "ThisExpression"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "__ready"
                                                  }
                                                },
                                                "right": {
                                                  "type": "ObjectExpression",
                                                  "properties": []
                                                }
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "ThisExpression"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "__setReadyState"
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "Literal",
                                                    "value": "createObjectStore"
                                                  },
                                                  {
                                                    "type": "ConditionalExpression",
                                                    "test": {
                                                      "type": "BinaryExpression",
                                                      "operator": "===",
                                                      "left": {
                                                        "type": "UnaryExpression",
                                                        "operator": "typeof",
                                                        "argument": {
                                                          "type": "Identifier",
                                                          "name": "ready"
                                                        },
                                                        "prefix": true
                                                      },
                                                      "right": {
                                                        "type": "Literal",
                                                        "value": "undefined"
                                                      }
                                                    },
                                                    "consequent": {
                                                      "type": "Literal",
                                                      "value": true
                                                    },
                                                    "alternate": {
                                                      "type": "Identifier",
                                                      "name": "ready"
                                                    }
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "ThisExpression"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "indexNames"
                                                  }
                                                },
                                                "right": {
                                                  "type": "NewExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "idbModules"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "util"
                                                      }
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "StringList"
                                                    }
                                                  },
                                                  "arguments": []
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                      }
                                    }
                                  ],
                                  "kind": "var"
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "IDBObjectStore"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "prototype"
                                        }
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "__setReadyState"
                                      }
                                    },
                                    "right": {
                                      "type": "FunctionExpression",
                                      "id": null,
                                      "params": [
                                        {
                                          "type": "Identifier",
                                          "name": "key"
                                        },
                                        {
                                          "type": "Identifier",
                                          "name": "val"
                                        }
                                      ],
                                      "defaults": [],
                                      "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "AssignmentExpression",
                                              "operator": "=",
                                              "left": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "ThisExpression"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "__ready"
                                                  }
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "key"
                                                }
                                              },
                                              "right": {
                                                "type": "Identifier",
                                                "name": "val"
                                              }
                                            }
                                          }
                                        ]
                                      },
                                      "rest": null,
                                      "generator": false,
                                      "expression": false
                                    }
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "IDBObjectStore"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "prototype"
                                        }
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "__waitForReady"
                                      }
                                    },
                                    "right": {
                                      "type": "FunctionExpression",
                                      "id": null,
                                      "params": [
                                        {
                                          "type": "Identifier",
                                          "name": "callback"
                                        },
                                        {
                                          "type": "Identifier",
                                          "name": "key"
                                        }
                                      ],
                                      "defaults": [],
                                      "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                              {
                                                "type": "VariableDeclarator",
                                                "id": {
                                                  "type": "Identifier",
                                                  "name": "ready"
                                                },
                                                "init": {
                                                  "type": "Literal",
                                                  "value": true
                                                }
                                              }
                                            ],
                                            "kind": "var"
                                          },
                                          {
                                            "type": "IfStatement",
                                            "test": {
                                              "type": "BinaryExpression",
                                              "operator": "!==",
                                              "left": {
                                                "type": "UnaryExpression",
                                                "operator": "typeof",
                                                "argument": {
                                                  "type": "Identifier",
                                                  "name": "key"
                                                },
                                                "prefix": true
                                              },
                                              "right": {
                                                "type": "Literal",
                                                "value": "undefined"
                                              }
                                            },
                                            "consequent": {
                                              "type": "BlockStatement",
                                              "body": [
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "ready"
                                                    },
                                                    "right": {
                                                      "type": "ConditionalExpression",
                                                      "test": {
                                                        "type": "BinaryExpression",
                                                        "operator": "===",
                                                        "left": {
                                                          "type": "UnaryExpression",
                                                          "operator": "typeof",
                                                          "argument": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "ThisExpression"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "__ready"
                                                              }
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "key"
                                                            }
                                                          },
                                                          "prefix": true
                                                        },
                                                        "right": {
                                                          "type": "Literal",
                                                          "value": "undefined"
                                                        }
                                                      },
                                                      "consequent": {
                                                        "type": "Literal",
                                                        "value": true
                                                      },
                                                      "alternate": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "ThisExpression"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "__ready"
                                                          }
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "key"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              ]
                                            },
                                            "alternate": {
                                              "type": "BlockStatement",
                                              "body": [
                                                {
                                                  "type": "ForInStatement",
                                                  "left": {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                      {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                          "type": "Identifier",
                                                          "name": "x"
                                                        },
                                                        "init": null
                                                      }
                                                    ],
                                                    "kind": "var"
                                                  },
                                                  "right": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "__ready"
                                                    }
                                                  },
                                                  "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "IfStatement",
                                                        "test": {
                                                          "type": "UnaryExpression",
                                                          "operator": "!",
                                                          "argument": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "ThisExpression"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "__ready"
                                                              }
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "x"
                                                            }
                                                          },
                                                          "prefix": true
                                                        },
                                                        "consequent": {
                                                          "type": "BlockStatement",
                                                          "body": [
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "expression": {
                                                                "type": "AssignmentExpression",
                                                                "operator": "=",
                                                                "left": {
                                                                  "type": "Identifier",
                                                                  "name": "ready"
                                                                },
                                                                "right": {
                                                                  "type": "Literal",
                                                                  "value": false
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        },
                                                        "alternate": null
                                                      }
                                                    ]
                                                  },
                                                  "each": false
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "IfStatement",
                                            "test": {
                                              "type": "Identifier",
                                              "name": "ready"
                                            },
                                            "consequent": {
                                              "type": "BlockStatement",
                                              "body": [
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "Identifier",
                                                      "name": "callback"
                                                    },
                                                    "arguments": []
                                                  }
                                                }
                                              ]
                                            },
                                            "alternate": {
                                              "type": "BlockStatement",
                                              "body": [
                                                {
                                                  "type": "IfStatement",
                                                  "test": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "idbModules"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "DEBUG"
                                                    }
                                                  },
                                                  "consequent": {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "console"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "log"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Literal",
                                                          "value": "Waiting for to be ready"
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "name": "key"
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  "alternate": null
                                                },
                                                {
                                                  "type": "VariableDeclaration",
                                                  "declarations": [
                                                    {
                                                      "type": "VariableDeclarator",
                                                      "id": {
                                                        "type": "Identifier",
                                                        "name": "me"
                                                      },
                                                      "init": {
                                                        "type": "ThisExpression"
                                                      }
                                                    }
                                                  ],
                                                  "kind": "var"
                                                },
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "window"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "setTimeout"
                                                      }
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "FunctionExpression",
                                                        "id": null,
                                                        "params": [],
                                                        "defaults": [],
                                                        "body": {
                                                          "type": "BlockStatement",
                                                          "body": [
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "me"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "__waitForReady"
                                                                  }
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "callback"
                                                                  },
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "key"
                                                                  }
                                                                ]
                                                              }
                                                            }
                                                          ]
                                                        },
                                                        "rest": null,
                                                        "generator": false,
                                                        "expression": false
                                                      },
                                                      {
                                                        "type": "Literal",
                                                        "value": 100
                                                      }
                                                    ]
                                                  }
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      },
                                      "rest": null,
                                      "generator": false,
                                      "expression": false
                                    }
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "IDBObjectStore"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "prototype"
                                        }
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "__getStoreProps"
                                      }
                                    },
                                    "right": {
                                      "type": "FunctionExpression",
                                      "id": null,
                                      "params": [
                                        {
                                          "type": "Identifier",
                                          "name": "tx"
                                        },
                                        {
                                          "type": "Identifier",
                                          "name": "callback"
                                        },
                                        {
                                          "type": "Identifier",
                                          "name": "waitOnProperty"
                                        }
                                      ],
                                      "defaults": [],
                                      "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                              {
                                                "type": "VariableDeclarator",
                                                "id": {
                                                  "type": "Identifier",
                                                  "name": "me"
                                                },
                                                "init": {
                                                  "type": "ThisExpression"
                                                }
                                              }
                                            ],
                                            "kind": "var"
                                          },
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "ThisExpression"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "__waitForReady"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "FunctionExpression",
                                                  "id": null,
                                                  "params": [],
                                                  "defaults": [],
                                                  "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "IfStatement",
                                                        "test": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "me"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "__storeProps"
                                                          }
                                                        },
                                                        "consequent": {
                                                          "type": "BlockStatement",
                                                          "body": [
                                                            {
                                                              "type": "IfStatement",
                                                              "test": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "idbModules"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "DEBUG"
                                                                }
                                                              },
                                                              "consequent": {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "console"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "log"
                                                                    }
                                                                  },
                                                                  "arguments": [
                                                                    {
                                                                      "type": "Literal",
                                                                      "value": "Store properties - cached"
                                                                    },
                                                                    {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "me"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "__storeProps"
                                                                      }
                                                                    }
                                                                  ]
                                                                }
                                                              },
                                                              "alternate": null
                                                            },
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "Identifier",
                                                                  "name": "callback"
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "me"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "__storeProps"
                                                                    }
                                                                  }
                                                                ]
                                                              }
                                                            }
                                                          ]
                                                        },
                                                        "alternate": {
                                                          "type": "BlockStatement",
                                                          "body": [
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "tx"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "executeSql"
                                                                  }
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "Literal",
                                                                    "value": "SELECT * FROM __sys__ where name = ?"
                                                                  },
                                                                  {
                                                                    "type": "ArrayExpression",
                                                                    "elements": [
                                                                      {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "me"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "name"
                                                                        }
                                                                      }
                                                                    ]
                                                                  },
                                                                  {
                                                                    "type": "FunctionExpression",
                                                                    "id": null,
                                                                    "params": [
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "tx"
                                                                      },
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "data"
                                                                      }
                                                                    ],
                                                                    "defaults": [],
                                                                    "body": {
                                                                      "type": "BlockStatement",
                                                                      "body": [
                                                                        {
                                                                          "type": "IfStatement",
                                                                          "test": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "!==",
                                                                            "left": {
                                                                              "type": "MemberExpression",
                                                                              "computed": false,
                                                                              "object": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "data"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "rows"
                                                                                }
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "length"
                                                                              }
                                                                            },
                                                                            "right": {
                                                                              "type": "Literal",
                                                                              "value": 1
                                                                            }
                                                                          },
                                                                          "consequent": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                              {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                  "type": "CallExpression",
                                                                                  "callee": {
                                                                                    "type": "Identifier",
                                                                                    "name": "callback"
                                                                                  },
                                                                                  "arguments": []
                                                                                }
                                                                              }
                                                                            ]
                                                                          },
                                                                          "alternate": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                              {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                  "type": "AssignmentExpression",
                                                                                  "operator": "=",
                                                                                  "left": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "me"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "__storeProps"
                                                                                    }
                                                                                  },
                                                                                  "right": {
                                                                                    "type": "ObjectExpression",
                                                                                    "properties": [
                                                                                      {
                                                                                        "type": "Property",
                                                                                        "key": {
                                                                                          "type": "Literal",
                                                                                          "value": "name"
                                                                                        },
                                                                                        "value": {
                                                                                          "type": "MemberExpression",
                                                                                          "computed": false,
                                                                                          "object": {
                                                                                            "type": "CallExpression",
                                                                                            "callee": {
                                                                                              "type": "MemberExpression",
                                                                                              "computed": false,
                                                                                              "object": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": false,
                                                                                                "object": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "data"
                                                                                                },
                                                                                                "property": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "rows"
                                                                                                }
                                                                                              },
                                                                                              "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "item"
                                                                                              }
                                                                                            },
                                                                                            "arguments": [
                                                                                              {
                                                                                                "type": "Literal",
                                                                                                "value": 0
                                                                                              }
                                                                                            ]
                                                                                          },
                                                                                          "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "name"
                                                                                          }
                                                                                        },
                                                                                        "kind": "init"
                                                                                      },
                                                                                      {
                                                                                        "type": "Property",
                                                                                        "key": {
                                                                                          "type": "Literal",
                                                                                          "value": "indexList"
                                                                                        },
                                                                                        "value": {
                                                                                          "type": "MemberExpression",
                                                                                          "computed": false,
                                                                                          "object": {
                                                                                            "type": "CallExpression",
                                                                                            "callee": {
                                                                                              "type": "MemberExpression",
                                                                                              "computed": false,
                                                                                              "object": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": false,
                                                                                                "object": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "data"
                                                                                                },
                                                                                                "property": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "rows"
                                                                                                }
                                                                                              },
                                                                                              "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "item"
                                                                                              }
                                                                                            },
                                                                                            "arguments": [
                                                                                              {
                                                                                                "type": "Literal",
                                                                                                "value": 0
                                                                                              }
                                                                                            ]
                                                                                          },
                                                                                          "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "indexList"
                                                                                          }
                                                                                        },
                                                                                        "kind": "init"
                                                                                      },
                                                                                      {
                                                                                        "type": "Property",
                                                                                        "key": {
                                                                                          "type": "Literal",
                                                                                          "value": "autoInc"
                                                                                        },
                                                                                        "value": {
                                                                                          "type": "MemberExpression",
                                                                                          "computed": false,
                                                                                          "object": {
                                                                                            "type": "CallExpression",
                                                                                            "callee": {
                                                                                              "type": "MemberExpression",
                                                                                              "computed": false,
                                                                                              "object": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": false,
                                                                                                "object": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "data"
                                                                                                },
                                                                                                "property": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "rows"
                                                                                                }
                                                                                              },
                                                                                              "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "item"
                                                                                              }
                                                                                            },
                                                                                            "arguments": [
                                                                                              {
                                                                                                "type": "Literal",
                                                                                                "value": 0
                                                                                              }
                                                                                            ]
                                                                                          },
                                                                                          "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "autoInc"
                                                                                          }
                                                                                        },
                                                                                        "kind": "init"
                                                                                      },
                                                                                      {
                                                                                        "type": "Property",
                                                                                        "key": {
                                                                                          "type": "Literal",
                                                                                          "value": "keyPath"
                                                                                        },
                                                                                        "value": {
                                                                                          "type": "MemberExpression",
                                                                                          "computed": false,
                                                                                          "object": {
                                                                                            "type": "CallExpression",
                                                                                            "callee": {
                                                                                              "type": "MemberExpression",
                                                                                              "computed": false,
                                                                                              "object": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": false,
                                                                                                "object": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "data"
                                                                                                },
                                                                                                "property": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "rows"
                                                                                                }
                                                                                              },
                                                                                              "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "item"
                                                                                              }
                                                                                            },
                                                                                            "arguments": [
                                                                                              {
                                                                                                "type": "Literal",
                                                                                                "value": 0
                                                                                              }
                                                                                            ]
                                                                                          },
                                                                                          "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "keyPath"
                                                                                          }
                                                                                        },
                                                                                        "kind": "init"
                                                                                      }
                                                                                    ]
                                                                                  }
                                                                                }
                                                                              },
                                                                              {
                                                                                "type": "IfStatement",
                                                                                "test": {
                                                                                  "type": "MemberExpression",
                                                                                  "computed": false,
                                                                                  "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "idbModules"
                                                                                  },
                                                                                  "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "DEBUG"
                                                                                  }
                                                                                },
                                                                                "consequent": {
                                                                                  "type": "ExpressionStatement",
                                                                                  "expression": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                      "type": "MemberExpression",
                                                                                      "computed": false,
                                                                                      "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "console"
                                                                                      },
                                                                                      "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "log"
                                                                                      }
                                                                                    },
                                                                                    "arguments": [
                                                                                      {
                                                                                        "type": "Literal",
                                                                                        "value": "Store properties"
                                                                                      },
                                                                                      {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                          "type": "Identifier",
                                                                                          "name": "me"
                                                                                        },
                                                                                        "property": {
                                                                                          "type": "Identifier",
                                                                                          "name": "__storeProps"
                                                                                        }
                                                                                      }
                                                                                    ]
                                                                                  }
                                                                                },
                                                                                "alternate": null
                                                                              },
                                                                              {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                  "type": "CallExpression",
                                                                                  "callee": {
                                                                                    "type": "Identifier",
                                                                                    "name": "callback"
                                                                                  },
                                                                                  "arguments": [
                                                                                    {
                                                                                      "type": "MemberExpression",
                                                                                      "computed": false,
                                                                                      "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "me"
                                                                                      },
                                                                                      "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "__storeProps"
                                                                                      }
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              }
                                                                            ]
                                                                          }
                                                                        }
                                                                      ]
                                                                    },
                                                                    "rest": null,
                                                                    "generator": false,
                                                                    "expression": false
                                                                  },
                                                                  {
                                                                    "type": "FunctionExpression",
                                                                    "id": null,
                                                                    "params": [],
                                                                    "defaults": [],
                                                                    "body": {
                                                                      "type": "BlockStatement",
                                                                      "body": [
                                                                        {
                                                                          "type": "ExpressionStatement",
                                                                          "expression": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                              "type": "Identifier",
                                                                              "name": "callback"
                                                                            },
                                                                            "arguments": []
                                                                          }
                                                                        }
                                                                      ]
                                                                    },
                                                                    "rest": null,
                                                                    "generator": false,
                                                                    "expression": false
                                                                  }
                                                                ]
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "rest": null,
                                                  "generator": false,
                                                  "expression": false
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "name": "waitOnProperty"
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      },
                                      "rest": null,
                                      "generator": false,
                                      "expression": false
                                    }
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "IDBObjectStore"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "prototype"
                                        }
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "__deriveKey"
                                      }
                                    },
                                    "right": {
                                      "type": "FunctionExpression",
                                      "id": null,
                                      "params": [
                                        {
                                          "type": "Identifier",
                                          "name": "tx"
                                        },
                                        {
                                          "type": "Identifier",
                                          "name": "value"
                                        },
                                        {
                                          "type": "Identifier",
                                          "name": "key"
                                        },
                                        {
                                          "type": "Identifier",
                                          "name": "callback"
                                        }
                                      ],
                                      "defaults": [],
                                      "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "FunctionDeclaration",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "getNextAutoIncKey"
                                            },
                                            "params": [],
                                            "defaults": [],
                                            "body": {
                                              "type": "BlockStatement",
                                              "body": [
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "tx"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "executeSql"
                                                      }
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "Literal",
                                                        "value": "SELECT * FROM sqlite_sequence where name like ?"
                                                      },
                                                      {
                                                        "type": "ArrayExpression",
                                                        "elements": [
                                                          {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "me"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "name"
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      {
                                                        "type": "FunctionExpression",
                                                        "id": null,
                                                        "params": [
                                                          {
                                                            "type": "Identifier",
                                                            "name": "tx"
                                                          },
                                                          {
                                                            "type": "Identifier",
                                                            "name": "data"
                                                          }
                                                        ],
                                                        "defaults": [],
                                                        "body": {
                                                          "type": "BlockStatement",
                                                          "body": [
                                                            {
                                                              "type": "IfStatement",
                                                              "test": {
                                                                "type": "BinaryExpression",
                                                                "operator": "!==",
                                                                "left": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "data"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "rows"
                                                                    }
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "length"
                                                                  }
                                                                },
                                                                "right": {
                                                                  "type": "Literal",
                                                                  "value": 1
                                                                }
                                                              },
                                                              "consequent": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                  {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "Identifier",
                                                                        "name": "callback"
                                                                      },
                                                                      "arguments": [
                                                                        {
                                                                          "type": "Literal",
                                                                          "value": 0
                                                                        }
                                                                      ]
                                                                    }
                                                                  }
                                                                ]
                                                              },
                                                              "alternate": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                  {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "Identifier",
                                                                        "name": "callback"
                                                                      },
                                                                      "arguments": [
                                                                        {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                              "type": "MemberExpression",
                                                                              "computed": false,
                                                                              "object": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "data"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "rows"
                                                                                }
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "item"
                                                                              }
                                                                            },
                                                                            "arguments": [
                                                                              {
                                                                                "type": "Literal",
                                                                                "value": 0
                                                                              }
                                                                            ]
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "seq"
                                                                          }
                                                                        }
                                                                      ]
                                                                    }
                                                                  }
                                                                ]
                                                              }
                                                            }
                                                          ]
                                                        },
                                                        "rest": null,
                                                        "generator": false,
                                                        "expression": false
                                                      },
                                                      {
                                                        "type": "FunctionExpression",
                                                        "id": null,
                                                        "params": [
                                                          {
                                                            "type": "Identifier",
                                                            "name": "tx"
                                                          },
                                                          {
                                                            "type": "Identifier",
                                                            "name": "error"
                                                          }
                                                        ],
                                                        "defaults": [],
                                                        "body": {
                                                          "type": "BlockStatement",
                                                          "body": [
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "idbModules"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "util"
                                                                    }
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "throwDOMException"
                                                                  }
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "Literal",
                                                                    "value": 0
                                                                  },
                                                                  {
                                                                    "type": "Literal",
                                                                    "value": "Data Error - Could not get the auto increment value for key"
                                                                  },
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "error"
                                                                  }
                                                                ]
                                                              }
                                                            }
                                                          ]
                                                        },
                                                        "rest": null,
                                                        "generator": false,
                                                        "expression": false
                                                      }
                                                    ]
                                                  }
                                                }
                                              ]
                                            },
                                            "rest": null,
                                            "generator": false,
                                            "expression": false
                                          },
                                          {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                              {
                                                "type": "VariableDeclarator",
                                                "id": {
                                                  "type": "Identifier",
                                                  "name": "me"
                                                },
                                                "init": {
                                                  "type": "ThisExpression"
                                                }
                                              }
                                            ],
                                            "kind": "var"
                                          },
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "me"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "__getStoreProps"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "tx"
                                                },
                                                {
                                                  "type": "FunctionExpression",
                                                  "id": null,
                                                  "params": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "props"
                                                    }
                                                  ],
                                                  "defaults": [],
                                                  "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "IfStatement",
                                                        "test": {
                                                          "type": "UnaryExpression",
                                                          "operator": "!",
                                                          "argument": {
                                                            "type": "Identifier",
                                                            "name": "props"
                                                          },
                                                          "prefix": true
                                                        },
                                                        "consequent": {
                                                          "type": "BlockStatement",
                                                          "body": [
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "idbModules"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "util"
                                                                    }
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "throwDOMException"
                                                                  }
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "Literal",
                                                                    "value": 0
                                                                  },
                                                                  {
                                                                    "type": "Literal",
                                                                    "value": "Data Error - Could not locate defination for this table"
                                                                  },
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "props"
                                                                  }
                                                                ]
                                                              }
                                                            }
                                                          ]
                                                        },
                                                        "alternate": null
                                                      },
                                                      {
                                                        "type": "IfStatement",
                                                        "test": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "props"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "keyPath"
                                                          }
                                                        },
                                                        "consequent": {
                                                          "type": "BlockStatement",
                                                          "body": [
                                                            {
                                                              "type": "IfStatement",
                                                              "test": {
                                                                "type": "BinaryExpression",
                                                                "operator": "!==",
                                                                "left": {
                                                                  "type": "UnaryExpression",
                                                                  "operator": "typeof",
                                                                  "argument": {
                                                                    "type": "Identifier",
                                                                    "name": "key"
                                                                  },
                                                                  "prefix": true
                                                                },
                                                                "right": {
                                                                  "type": "Literal",
                                                                  "value": "undefined"
                                                                }
                                                              },
                                                              "consequent": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                  {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "idbModules"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "util"
                                                                          }
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "throwDOMException"
                                                                        }
                                                                      },
                                                                      "arguments": [
                                                                        {
                                                                          "type": "Literal",
                                                                          "value": 0
                                                                        },
                                                                        {
                                                                          "type": "Literal",
                                                                          "value": "Data Error - The object store uses in-line keys and the key parameter was provided"
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "name": "props"
                                                                        }
                                                                      ]
                                                                    }
                                                                  }
                                                                ]
                                                              },
                                                              "alternate": null
                                                            },
                                                            {
                                                              "type": "IfStatement",
                                                              "test": {
                                                                "type": "Identifier",
                                                                "name": "value"
                                                              },
                                                              "consequent": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                  {
                                                                    "type": "TryStatement",
                                                                    "block": {
                                                                      "type": "BlockStatement",
                                                                      "body": [
                                                                        {
                                                                          "type": "VariableDeclaration",
                                                                          "declarations": [
                                                                            {
                                                                              "type": "VariableDeclarator",
                                                                              "id": {
                                                                                "type": "Identifier",
                                                                                "name": "primaryKey"
                                                                              },
                                                                              "init": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                  "type": "Identifier",
                                                                                  "name": "eval"
                                                                                },
                                                                                "arguments": [
                                                                                  {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "+",
                                                                                    "left": {
                                                                                      "type": "BinaryExpression",
                                                                                      "operator": "+",
                                                                                      "left": {
                                                                                        "type": "Literal",
                                                                                        "value": "value['"
                                                                                      },
                                                                                      "right": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                          "type": "Identifier",
                                                                                          "name": "props"
                                                                                        },
                                                                                        "property": {
                                                                                          "type": "Identifier",
                                                                                          "name": "keyPath"
                                                                                        }
                                                                                      }
                                                                                    },
                                                                                    "right": {
                                                                                      "type": "Literal",
                                                                                      "value": "']"
                                                                                    }
                                                                                  }
                                                                                ]
                                                                              }
                                                                            }
                                                                          ],
                                                                          "kind": "var"
                                                                        },
                                                                        {
                                                                          "type": "IfStatement",
                                                                          "test": {
                                                                            "type": "UnaryExpression",
                                                                            "operator": "!",
                                                                            "argument": {
                                                                              "type": "Identifier",
                                                                              "name": "primaryKey"
                                                                            },
                                                                            "prefix": true
                                                                          },
                                                                          "consequent": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                              {
                                                                                "type": "IfStatement",
                                                                                "test": {
                                                                                  "type": "BinaryExpression",
                                                                                  "operator": "===",
                                                                                  "left": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "props"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "autoInc"
                                                                                    }
                                                                                  },
                                                                                  "right": {
                                                                                    "type": "Literal",
                                                                                    "value": "true"
                                                                                  }
                                                                                },
                                                                                "consequent": {
                                                                                  "type": "BlockStatement",
                                                                                  "body": [
                                                                                    {
                                                                                      "type": "ExpressionStatement",
                                                                                      "expression": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                          "type": "Identifier",
                                                                                          "name": "getNextAutoIncKey"
                                                                                        },
                                                                                        "arguments": []
                                                                                      }
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                "alternate": {
                                                                                  "type": "BlockStatement",
                                                                                  "body": [
                                                                                    {
                                                                                      "type": "ExpressionStatement",
                                                                                      "expression": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                          "type": "MemberExpression",
                                                                                          "computed": false,
                                                                                          "object": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                              "type": "Identifier",
                                                                                              "name": "idbModules"
                                                                                            },
                                                                                            "property": {
                                                                                              "type": "Identifier",
                                                                                              "name": "util"
                                                                                            }
                                                                                          },
                                                                                          "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "throwDOMException"
                                                                                          }
                                                                                        },
                                                                                        "arguments": [
                                                                                          {
                                                                                            "type": "Literal",
                                                                                            "value": 0
                                                                                          },
                                                                                          {
                                                                                            "type": "Literal",
                                                                                            "value": "Data Error - Could not eval key from keyPath"
                                                                                          }
                                                                                        ]
                                                                                      }
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              }
                                                                            ]
                                                                          },
                                                                          "alternate": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                              {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                  "type": "CallExpression",
                                                                                  "callee": {
                                                                                    "type": "Identifier",
                                                                                    "name": "callback"
                                                                                  },
                                                                                  "arguments": [
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "name": "primaryKey"
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              }
                                                                            ]
                                                                          }
                                                                        }
                                                                      ]
                                                                    },
                                                                    "guardedHandlers": [],
                                                                    "handlers": [
                                                                      {
                                                                        "type": "CatchClause",
                                                                        "param": {
                                                                          "type": "Identifier",
                                                                          "name": "e"
                                                                        },
                                                                        "body": {
                                                                          "type": "BlockStatement",
                                                                          "body": [
                                                                            {
                                                                              "type": "ExpressionStatement",
                                                                              "expression": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                  "type": "MemberExpression",
                                                                                  "computed": false,
                                                                                  "object": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "idbModules"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "util"
                                                                                    }
                                                                                  },
                                                                                  "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "throwDOMException"
                                                                                  }
                                                                                },
                                                                                "arguments": [
                                                                                  {
                                                                                    "type": "Literal",
                                                                                    "value": 0
                                                                                  },
                                                                                  {
                                                                                    "type": "Literal",
                                                                                    "value": "Data Error - Could not eval key from keyPath"
                                                                                  },
                                                                                  {
                                                                                    "type": "Identifier",
                                                                                    "name": "e"
                                                                                  }
                                                                                ]
                                                                              }
                                                                            }
                                                                          ]
                                                                        }
                                                                      }
                                                                    ],
                                                                    "finalizer": null
                                                                  }
                                                                ]
                                                              },
                                                              "alternate": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                  {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "idbModules"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "util"
                                                                          }
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "throwDOMException"
                                                                        }
                                                                      },
                                                                      "arguments": [
                                                                        {
                                                                          "type": "Literal",
                                                                          "value": 0
                                                                        },
                                                                        {
                                                                          "type": "Literal",
                                                                          "value": "Data Error - KeyPath was specified, but value was not"
                                                                        }
                                                                      ]
                                                                    }
                                                                  }
                                                                ]
                                                              }
                                                            }
                                                          ]
                                                        },
                                                        "alternate": {
                                                          "type": "BlockStatement",
                                                          "body": [
                                                            {
                                                              "type": "IfStatement",
                                                              "test": {
                                                                "type": "BinaryExpression",
                                                                "operator": "!==",
                                                                "left": {
                                                                  "type": "UnaryExpression",
                                                                  "operator": "typeof",
                                                                  "argument": {
                                                                    "type": "Identifier",
                                                                    "name": "key"
                                                                  },
                                                                  "prefix": true
                                                                },
                                                                "right": {
                                                                  "type": "Literal",
                                                                  "value": "undefined"
                                                                }
                                                              },
                                                              "consequent": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                  {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "Identifier",
                                                                        "name": "callback"
                                                                      },
                                                                      "arguments": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "name": "key"
                                                                        }
                                                                      ]
                                                                    }
                                                                  }
                                                                ]
                                                              },
                                                              "alternate": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                  {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "===",
                                                                      "left": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "props"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "autoInc"
                                                                        }
                                                                      },
                                                                      "right": {
                                                                        "type": "Literal",
                                                                        "value": "false"
                                                                      }
                                                                    },
                                                                    "consequent": {
                                                                      "type": "BlockStatement",
                                                                      "body": [
                                                                        {
                                                                          "type": "ExpressionStatement",
                                                                          "expression": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                              "type": "MemberExpression",
                                                                              "computed": false,
                                                                              "object": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "idbModules"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "util"
                                                                                }
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "throwDOMException"
                                                                              }
                                                                            },
                                                                            "arguments": [
                                                                              {
                                                                                "type": "Literal",
                                                                                "value": 0
                                                                              },
                                                                              {
                                                                                "type": "Literal",
                                                                                "value": "Data Error - The object store uses out-of-line keys and has no key generator and the key parameter was not provided. "
                                                                              },
                                                                              {
                                                                                "type": "Identifier",
                                                                                "name": "props"
                                                                              }
                                                                            ]
                                                                          }
                                                                        }
                                                                      ]
                                                                    },
                                                                    "alternate": {
                                                                      "type": "BlockStatement",
                                                                      "body": [
                                                                        {
                                                                          "type": "ExpressionStatement",
                                                                          "expression": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                              "type": "Identifier",
                                                                              "name": "getNextAutoIncKey"
                                                                            },
                                                                            "arguments": []
                                                                          }
                                                                        }
                                                                      ]
                                                                    }
                                                                  }
                                                                ]
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "rest": null,
                                                  "generator": false,
                                                  "expression": false
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      },
                                      "rest": null,
                                      "generator": false,
                                      "expression": false
                                    }
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "IDBObjectStore"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "prototype"
                                        }
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "__insertData"
                                      }
                                    },
                                    "right": {
                                      "type": "FunctionExpression",
                                      "id": null,
                                      "params": [
                                        {
                                          "type": "Identifier",
                                          "name": "tx"
                                        },
                                        {
                                          "type": "Identifier",
                                          "name": "value"
                                        },
                                        {
                                          "type": "Identifier",
                                          "name": "primaryKey"
                                        },
                                        {
                                          "type": "Identifier",
                                          "name": "success"
                                        },
                                        {
                                          "type": "Identifier",
                                          "name": "error"
                                        }
                                      ],
                                      "defaults": [],
                                      "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                              {
                                                "type": "VariableDeclarator",
                                                "id": {
                                                  "type": "Identifier",
                                                  "name": "paramMap"
                                                },
                                                "init": {
                                                  "type": "ObjectExpression",
                                                  "properties": []
                                                }
                                              }
                                            ],
                                            "kind": "var"
                                          },
                                          {
                                            "type": "IfStatement",
                                            "test": {
                                              "type": "BinaryExpression",
                                              "operator": "!==",
                                              "left": {
                                                "type": "UnaryExpression",
                                                "operator": "typeof",
                                                "argument": {
                                                  "type": "Identifier",
                                                  "name": "primaryKey"
                                                },
                                                "prefix": true
                                              },
                                              "right": {
                                                "type": "Literal",
                                                "value": "undefined"
                                              }
                                            },
                                            "consequent": {
                                              "type": "BlockStatement",
                                              "body": [
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "paramMap"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "key"
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "idbModules"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "Key"
                                                          }
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "encode"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "primaryKey"
                                                        }
                                                      ]
                                                    }
                                                  }
                                                }
                                              ]
                                            },
                                            "alternate": null
                                          },
                                          {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                              {
                                                "type": "VariableDeclarator",
                                                "id": {
                                                  "type": "Identifier",
                                                  "name": "indexes"
                                                },
                                                "init": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "JSON"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "parse"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "__storeProps"
                                                        }
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "indexList"
                                                      }
                                                    }
                                                  ]
                                                }
                                              }
                                            ],
                                            "kind": "var"
                                          },
                                          {
                                            "type": "ForInStatement",
                                            "left": {
                                              "type": "VariableDeclaration",
                                              "declarations": [
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "key"
                                                  },
                                                  "init": null
                                                }
                                              ],
                                              "kind": "var"
                                            },
                                            "right": {
                                              "type": "Identifier",
                                              "name": "indexes"
                                            },
                                            "body": {
                                              "type": "BlockStatement",
                                              "body": [
                                                {
                                                  "type": "TryStatement",
                                                  "block": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "AssignmentExpression",
                                                          "operator": "=",
                                                          "left": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "paramMap"
                                                            },
                                                            "property": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "indexes"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "key"
                                                                }
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "columnName"
                                                              }
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "idbModules"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "Key"
                                                                }
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "encode"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "Identifier",
                                                                  "name": "eval"
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "+",
                                                                    "left": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "+",
                                                                      "left": {
                                                                        "type": "Literal",
                                                                        "value": "value['"
                                                                      },
                                                                      "right": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "MemberExpression",
                                                                          "computed": true,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "indexes"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "key"
                                                                          }
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "keyPath"
                                                                        }
                                                                      }
                                                                    },
                                                                    "right": {
                                                                      "type": "Literal",
                                                                      "value": "']"
                                                                    }
                                                                  }
                                                                ]
                                                              }
                                                            ]
                                                          }
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "guardedHandlers": [],
                                                  "handlers": [
                                                    {
                                                      "type": "CatchClause",
                                                      "param": {
                                                        "type": "Identifier",
                                                        "name": "e"
                                                      },
                                                      "body": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "Identifier",
                                                                "name": "error"
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "e"
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  ],
                                                  "finalizer": null
                                                }
                                              ]
                                            },
                                            "each": false
                                          },
                                          {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                              {
                                                "type": "VariableDeclarator",
                                                "id": {
                                                  "type": "Identifier",
                                                  "name": "sqlStart"
                                                },
                                                "init": {
                                                  "type": "ArrayExpression",
                                                  "elements": [
                                                    {
                                                      "type": "Literal",
                                                      "value": "INSERT INTO "
                                                    },
                                                    {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "idbModules"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "util"
                                                          }
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "quote"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "ThisExpression"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "name"
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "("
                                                    }
                                                  ]
                                                }
                                              }
                                            ],
                                            "kind": "var"
                                          },
                                          {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                              {
                                                "type": "VariableDeclarator",
                                                "id": {
                                                  "type": "Identifier",
                                                  "name": "sqlEnd"
                                                },
                                                "init": {
                                                  "type": "ArrayExpression",
                                                  "elements": [
                                                    {
                                                      "type": "Literal",
                                                      "value": " VALUES ("
                                                    }
                                                  ]
                                                }
                                              }
                                            ],
                                            "kind": "var"
                                          },
                                          {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                              {
                                                "type": "VariableDeclarator",
                                                "id": {
                                                  "type": "Identifier",
                                                  "name": "sqlValues"
                                                },
                                                "init": {
                                                  "type": "ArrayExpression",
                                                  "elements": []
                                                }
                                              }
                                            ],
                                            "kind": "var"
                                          },
                                          {
                                            "type": "ForInStatement",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "key"
                                            },
                                            "right": {
                                              "type": "Identifier",
                                              "name": "paramMap"
                                            },
                                            "body": {
                                              "type": "BlockStatement",
                                              "body": [
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "sqlStart"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "push"
                                                      }
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "BinaryExpression",
                                                        "operator": "+",
                                                        "left": {
                                                          "type": "Identifier",
                                                          "name": "key"
                                                        },
                                                        "right": {
                                                          "type": "Literal",
                                                          "value": ","
                                                        }
                                                      }
                                                    ]
                                                  }
                                                },
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "sqlEnd"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "push"
                                                      }
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "Literal",
                                                        "value": "?,"
                                                      }
                                                    ]
                                                  }
                                                },
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "sqlValues"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "push"
                                                      }
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "paramMap"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "key"
                                                        }
                                                      }
                                                    ]
                                                  }
                                                }
                                              ]
                                            },
                                            "each": false
                                          },
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "sqlStart"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "push"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Literal",
                                                  "value": "value )"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "sqlEnd"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "push"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Literal",
                                                  "value": "?)"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "sqlValues"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "push"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "value"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                              {
                                                "type": "VariableDeclarator",
                                                "id": {
                                                  "type": "Identifier",
                                                  "name": "sql"
                                                },
                                                "init": {
                                                  "type": "BinaryExpression",
                                                  "operator": "+",
                                                  "left": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "sqlStart"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "join"
                                                      }
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "Literal",
                                                        "value": " "
                                                      }
                                                    ]
                                                  },
                                                  "right": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "sqlEnd"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "join"
                                                      }
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "Literal",
                                                        "value": " "
                                                      }
                                                    ]
                                                  }
                                                }
                                              }
                                            ],
                                            "kind": "var"
                                          },
                                          {
                                            "type": "IfStatement",
                                            "test": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "idbModules"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "DEBUG"
                                              }
                                            },
                                            "consequent": {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "console"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "log"
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "Literal",
                                                    "value": "SQL for adding"
                                                  },
                                                  {
                                                    "type": "Identifier",
                                                    "name": "sql"
                                                  },
                                                  {
                                                    "type": "Identifier",
                                                    "name": "sqlValues"
                                                  }
                                                ]
                                              }
                                            },
                                            "alternate": null
                                          },
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "tx"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "executeSql"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "sql"
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "name": "sqlValues"
                                                },
                                                {
                                                  "type": "FunctionExpression",
                                                  "id": null,
                                                  "params": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "tx"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "data"
                                                    }
                                                  ],
                                                  "defaults": [],
                                                  "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "Identifier",
                                                            "name": "success"
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "Identifier",
                                                              "name": "primaryKey"
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "rest": null,
                                                  "generator": false,
                                                  "expression": false
                                                },
                                                {
                                                  "type": "FunctionExpression",
                                                  "id": null,
                                                  "params": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "tx"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "err"
                                                    }
                                                  ],
                                                  "defaults": [],
                                                  "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "Identifier",
                                                            "name": "error"
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "Identifier",
                                                              "name": "err"
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "rest": null,
                                                  "generator": false,
                                                  "expression": false
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      },
                                      "rest": null,
                                      "generator": false,
                                      "expression": false
                                    }
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "IDBObjectStore"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "prototype"
                                        }
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "add"
                                      }
                                    },
                                    "right": {
                                      "type": "FunctionExpression",
                                      "id": null,
                                      "params": [
                                        {
                                          "type": "Identifier",
                                          "name": "value"
                                        },
                                        {
                                          "type": "Identifier",
                                          "name": "key"
                                        }
                                      ],
                                      "defaults": [],
                                      "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                              {
                                                "type": "VariableDeclarator",
                                                "id": {
                                                  "type": "Identifier",
                                                  "name": "me"
                                                },
                                                "init": {
                                                  "type": "ThisExpression"
                                                }
                                              },
                                              {
                                                "type": "VariableDeclarator",
                                                "id": {
                                                  "type": "Identifier",
                                                  "name": "request"
                                                },
                                                "init": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "me"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "transaction"
                                                      }
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "__createRequest"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "FunctionExpression",
                                                      "id": null,
                                                      "params": [],
                                                      "defaults": [],
                                                      "body": {
                                                        "type": "BlockStatement",
                                                        "body": []
                                                      },
                                                      "rest": null,
                                                      "generator": false,
                                                      "expression": false
                                                    }
                                                  ]
                                                }
                                              }
                                            ],
                                            "kind": "var"
                                          },
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "idbModules"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "Sca"
                                                  }
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "encode"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "value"
                                                },
                                                {
                                                  "type": "FunctionExpression",
                                                  "id": null,
                                                  "params": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "encoded"
                                                    }
                                                  ],
                                                  "defaults": [],
                                                  "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "me"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "transaction"
                                                              }
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "__pushToQueue"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "Identifier",
                                                              "name": "request"
                                                            },
                                                            {
                                                              "type": "FunctionExpression",
                                                              "id": null,
                                                              "params": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "tx"
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "args"
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "success"
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "error"
                                                                }
                                                              ],
                                                              "defaults": [],
                                                              "body": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                  {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "me"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "__deriveKey"
                                                                        }
                                                                      },
                                                                      "arguments": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "name": "tx"
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "name": "value"
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "name": "key"
                                                                        },
                                                                        {
                                                                          "type": "FunctionExpression",
                                                                          "id": null,
                                                                          "params": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "name": "primaryKey"
                                                                            }
                                                                          ],
                                                                          "defaults": [],
                                                                          "body": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                              {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                  "type": "CallExpression",
                                                                                  "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "me"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "__insertData"
                                                                                    }
                                                                                  },
                                                                                  "arguments": [
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "name": "tx"
                                                                                    },
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "name": "encoded"
                                                                                    },
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "name": "primaryKey"
                                                                                    },
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "name": "success"
                                                                                    },
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "name": "error"
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              }
                                                                            ]
                                                                          },
                                                                          "rest": null,
                                                                          "generator": false,
                                                                          "expression": false
                                                                        }
                                                                      ]
                                                                    }
                                                                  }
                                                                ]
                                                              },
                                                              "rest": null,
                                                              "generator": false,
                                                              "expression": false
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "rest": null,
                                                  "generator": false,
                                                  "expression": false
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "ReturnStatement",
                                            "argument": {
                                              "type": "Identifier",
                                              "name": "request"
                                            }
                                          }
                                        ]
                                      },
                                      "rest": null,
                                      "generator": false,
                                      "expression": false
                                    }
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "IDBObjectStore"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "prototype"
                                        }
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "put"
                                      }
                                    },
                                    "right": {
                                      "type": "FunctionExpression",
                                      "id": null,
                                      "params": [
                                        {
                                          "type": "Identifier",
                                          "name": "value"
                                        },
                                        {
                                          "type": "Identifier",
                                          "name": "key"
                                        }
                                      ],
                                      "defaults": [],
                                      "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                              {
                                                "type": "VariableDeclarator",
                                                "id": {
                                                  "type": "Identifier",
                                                  "name": "me"
                                                },
                                                "init": {
                                                  "type": "ThisExpression"
                                                }
                                              },
                                              {
                                                "type": "VariableDeclarator",
                                                "id": {
                                                  "type": "Identifier",
                                                  "name": "request"
                                                },
                                                "init": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "me"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "transaction"
                                                      }
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "__createRequest"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "FunctionExpression",
                                                      "id": null,
                                                      "params": [],
                                                      "defaults": [],
                                                      "body": {
                                                        "type": "BlockStatement",
                                                        "body": []
                                                      },
                                                      "rest": null,
                                                      "generator": false,
                                                      "expression": false
                                                    }
                                                  ]
                                                }
                                              }
                                            ],
                                            "kind": "var"
                                          },
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "idbModules"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "Sca"
                                                  }
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "encode"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "value"
                                                },
                                                {
                                                  "type": "FunctionExpression",
                                                  "id": null,
                                                  "params": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "encoded"
                                                    }
                                                  ],
                                                  "defaults": [],
                                                  "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "me"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "transaction"
                                                              }
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "__pushToQueue"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "Identifier",
                                                              "name": "request"
                                                            },
                                                            {
                                                              "type": "FunctionExpression",
                                                              "id": null,
                                                              "params": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "tx"
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "args"
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "success"
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "error"
                                                                }
                                                              ],
                                                              "defaults": [],
                                                              "body": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                  {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "me"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "__deriveKey"
                                                                        }
                                                                      },
                                                                      "arguments": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "name": "tx"
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "name": "value"
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "name": "key"
                                                                        },
                                                                        {
                                                                          "type": "FunctionExpression",
                                                                          "id": null,
                                                                          "params": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "name": "primaryKey"
                                                                            }
                                                                          ],
                                                                          "defaults": [],
                                                                          "body": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                              {
                                                                                "type": "VariableDeclaration",
                                                                                "declarations": [
                                                                                  {
                                                                                    "type": "VariableDeclarator",
                                                                                    "id": {
                                                                                      "type": "Identifier",
                                                                                      "name": "sql"
                                                                                    },
                                                                                    "init": {
                                                                                      "type": "BinaryExpression",
                                                                                      "operator": "+",
                                                                                      "left": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "+",
                                                                                        "left": {
                                                                                          "type": "Literal",
                                                                                          "value": "DELETE FROM "
                                                                                        },
                                                                                        "right": {
                                                                                          "type": "CallExpression",
                                                                                          "callee": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                              "type": "MemberExpression",
                                                                                              "computed": false,
                                                                                              "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "idbModules"
                                                                                              },
                                                                                              "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "util"
                                                                                              }
                                                                                            },
                                                                                            "property": {
                                                                                              "type": "Identifier",
                                                                                              "name": "quote"
                                                                                            }
                                                                                          },
                                                                                          "arguments": [
                                                                                            {
                                                                                              "type": "MemberExpression",
                                                                                              "computed": false,
                                                                                              "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "me"
                                                                                              },
                                                                                              "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "name"
                                                                                              }
                                                                                            }
                                                                                          ]
                                                                                        }
                                                                                      },
                                                                                      "right": {
                                                                                        "type": "Literal",
                                                                                        "value": " where key = ?"
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                ],
                                                                                "kind": "var"
                                                                              },
                                                                              {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                  "type": "CallExpression",
                                                                                  "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "tx"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "executeSql"
                                                                                    }
                                                                                  },
                                                                                  "arguments": [
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "name": "sql"
                                                                                    },
                                                                                    {
                                                                                      "type": "ArrayExpression",
                                                                                      "elements": [
                                                                                        {
                                                                                          "type": "CallExpression",
                                                                                          "callee": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                              "type": "MemberExpression",
                                                                                              "computed": false,
                                                                                              "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "idbModules"
                                                                                              },
                                                                                              "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "Key"
                                                                                              }
                                                                                            },
                                                                                            "property": {
                                                                                              "type": "Identifier",
                                                                                              "name": "encode"
                                                                                            }
                                                                                          },
                                                                                          "arguments": [
                                                                                            {
                                                                                              "type": "Identifier",
                                                                                              "name": "primaryKey"
                                                                                            }
                                                                                          ]
                                                                                        }
                                                                                      ]
                                                                                    },
                                                                                    {
                                                                                      "type": "FunctionExpression",
                                                                                      "id": null,
                                                                                      "params": [
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "name": "tx"
                                                                                        },
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "name": "data"
                                                                                        }
                                                                                      ],
                                                                                      "defaults": [],
                                                                                      "body": {
                                                                                        "type": "BlockStatement",
                                                                                        "body": [
                                                                                          {
                                                                                            "type": "IfStatement",
                                                                                            "test": {
                                                                                              "type": "MemberExpression",
                                                                                              "computed": false,
                                                                                              "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "idbModules"
                                                                                              },
                                                                                              "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "DEBUG"
                                                                                              }
                                                                                            },
                                                                                            "consequent": {
                                                                                              "type": "ExpressionStatement",
                                                                                              "expression": {
                                                                                                "type": "CallExpression",
                                                                                                "callee": {
                                                                                                  "type": "MemberExpression",
                                                                                                  "computed": false,
                                                                                                  "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "console"
                                                                                                  },
                                                                                                  "property": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "log"
                                                                                                  }
                                                                                                },
                                                                                                "arguments": [
                                                                                                  {
                                                                                                    "type": "Literal",
                                                                                                    "value": "Did the row with the"
                                                                                                  },
                                                                                                  {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "primaryKey"
                                                                                                  },
                                                                                                  {
                                                                                                    "type": "Literal",
                                                                                                    "value": "exist? "
                                                                                                  },
                                                                                                  {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": false,
                                                                                                    "object": {
                                                                                                      "type": "Identifier",
                                                                                                      "name": "data"
                                                                                                    },
                                                                                                    "property": {
                                                                                                      "type": "Identifier",
                                                                                                      "name": "rowsAffected"
                                                                                                    }
                                                                                                  }
                                                                                                ]
                                                                                              }
                                                                                            },
                                                                                            "alternate": null
                                                                                          },
                                                                                          {
                                                                                            "type": "ExpressionStatement",
                                                                                            "expression": {
                                                                                              "type": "CallExpression",
                                                                                              "callee": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": false,
                                                                                                "object": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "me"
                                                                                                },
                                                                                                "property": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "__insertData"
                                                                                                }
                                                                                              },
                                                                                              "arguments": [
                                                                                                {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "tx"
                                                                                                },
                                                                                                {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "encoded"
                                                                                                },
                                                                                                {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "primaryKey"
                                                                                                },
                                                                                                {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "success"
                                                                                                },
                                                                                                {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "error"
                                                                                                }
                                                                                              ]
                                                                                            }
                                                                                          }
                                                                                        ]
                                                                                      },
                                                                                      "rest": null,
                                                                                      "generator": false,
                                                                                      "expression": false
                                                                                    },
                                                                                    {
                                                                                      "type": "FunctionExpression",
                                                                                      "id": null,
                                                                                      "params": [
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "name": "tx"
                                                                                        },
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "name": "err"
                                                                                        }
                                                                                      ],
                                                                                      "defaults": [],
                                                                                      "body": {
                                                                                        "type": "BlockStatement",
                                                                                        "body": [
                                                                                          {
                                                                                            "type": "ExpressionStatement",
                                                                                            "expression": {
                                                                                              "type": "CallExpression",
                                                                                              "callee": {
                                                                                                "type": "Identifier",
                                                                                                "name": "error"
                                                                                              },
                                                                                              "arguments": [
                                                                                                {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "err"
                                                                                                }
                                                                                              ]
                                                                                            }
                                                                                          }
                                                                                        ]
                                                                                      },
                                                                                      "rest": null,
                                                                                      "generator": false,
                                                                                      "expression": false
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              }
                                                                            ]
                                                                          },
                                                                          "rest": null,
                                                                          "generator": false,
                                                                          "expression": false
                                                                        }
                                                                      ]
                                                                    }
                                                                  }
                                                                ]
                                                              },
                                                              "rest": null,
                                                              "generator": false,
                                                              "expression": false
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "rest": null,
                                                  "generator": false,
                                                  "expression": false
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "ReturnStatement",
                                            "argument": {
                                              "type": "Identifier",
                                              "name": "request"
                                            }
                                          }
                                        ]
                                      },
                                      "rest": null,
                                      "generator": false,
                                      "expression": false
                                    }
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "IDBObjectStore"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "prototype"
                                        }
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "get"
                                      }
                                    },
                                    "right": {
                                      "type": "FunctionExpression",
                                      "id": null,
                                      "params": [
                                        {
                                          "type": "Identifier",
                                          "name": "key"
                                        }
                                      ],
                                      "defaults": [],
                                      "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                              {
                                                "type": "VariableDeclarator",
                                                "id": {
                                                  "type": "Identifier",
                                                  "name": "me"
                                                },
                                                "init": {
                                                  "type": "ThisExpression"
                                                }
                                              }
                                            ],
                                            "kind": "var"
                                          },
                                          {
                                            "type": "ReturnStatement",
                                            "argument": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "me"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "transaction"
                                                  }
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "__addToTransactionQueue"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "FunctionExpression",
                                                  "id": null,
                                                  "params": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "tx"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "args"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "success"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "error"
                                                    }
                                                  ],
                                                  "defaults": [],
                                                  "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "me"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "__waitForReady"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "FunctionExpression",
                                                              "id": null,
                                                              "params": [],
                                                              "defaults": [],
                                                              "body": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                  {
                                                                    "type": "VariableDeclaration",
                                                                    "declarations": [
                                                                      {
                                                                        "type": "VariableDeclarator",
                                                                        "id": {
                                                                          "type": "Identifier",
                                                                          "name": "primaryKey"
                                                                        },
                                                                        "init": {
                                                                          "type": "CallExpression",
                                                                          "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "MemberExpression",
                                                                              "computed": false,
                                                                              "object": {
                                                                                "type": "Identifier",
                                                                                "name": "idbModules"
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "Key"
                                                                              }
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "encode"
                                                                            }
                                                                          },
                                                                          "arguments": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "name": "key"
                                                                            }
                                                                          ]
                                                                        }
                                                                      }
                                                                    ],
                                                                    "kind": "var"
                                                                  },
                                                                  {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "idbModules"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "DEBUG"
                                                                      }
                                                                    },
                                                                    "consequent": {
                                                                      "type": "ExpressionStatement",
                                                                      "expression": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "console"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "log"
                                                                          }
                                                                        },
                                                                        "arguments": [
                                                                          {
                                                                            "type": "Literal",
                                                                            "value": "Fetching"
                                                                          },
                                                                          {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "Identifier",
                                                                              "name": "me"
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "name"
                                                                            }
                                                                          },
                                                                          {
                                                                            "type": "Identifier",
                                                                            "name": "primaryKey"
                                                                          }
                                                                        ]
                                                                      }
                                                                    },
                                                                    "alternate": null
                                                                  },
                                                                  {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "tx"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "executeSql"
                                                                        }
                                                                      },
                                                                      "arguments": [
                                                                        {
                                                                          "type": "BinaryExpression",
                                                                          "operator": "+",
                                                                          "left": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "+",
                                                                            "left": {
                                                                              "type": "Literal",
                                                                              "value": "SELECT * FROM "
                                                                            },
                                                                            "right": {
                                                                              "type": "CallExpression",
                                                                              "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "MemberExpression",
                                                                                  "computed": false,
                                                                                  "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "idbModules"
                                                                                  },
                                                                                  "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "util"
                                                                                  }
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "quote"
                                                                                }
                                                                              },
                                                                              "arguments": [
                                                                                {
                                                                                  "type": "MemberExpression",
                                                                                  "computed": false,
                                                                                  "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "me"
                                                                                  },
                                                                                  "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "name"
                                                                                  }
                                                                                }
                                                                              ]
                                                                            }
                                                                          },
                                                                          "right": {
                                                                            "type": "Literal",
                                                                            "value": " where key = ?"
                                                                          }
                                                                        },
                                                                        {
                                                                          "type": "ArrayExpression",
                                                                          "elements": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "name": "primaryKey"
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "FunctionExpression",
                                                                          "id": null,
                                                                          "params": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "name": "tx"
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "name": "data"
                                                                            }
                                                                          ],
                                                                          "defaults": [],
                                                                          "body": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                              {
                                                                                "type": "IfStatement",
                                                                                "test": {
                                                                                  "type": "MemberExpression",
                                                                                  "computed": false,
                                                                                  "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "idbModules"
                                                                                  },
                                                                                  "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "DEBUG"
                                                                                  }
                                                                                },
                                                                                "consequent": {
                                                                                  "type": "ExpressionStatement",
                                                                                  "expression": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                      "type": "MemberExpression",
                                                                                      "computed": false,
                                                                                      "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "console"
                                                                                      },
                                                                                      "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "log"
                                                                                      }
                                                                                    },
                                                                                    "arguments": [
                                                                                      {
                                                                                        "type": "Literal",
                                                                                        "value": "Fetched data"
                                                                                      },
                                                                                      {
                                                                                        "type": "Identifier",
                                                                                        "name": "data"
                                                                                      }
                                                                                    ]
                                                                                  }
                                                                                },
                                                                                "alternate": null
                                                                              },
                                                                              {
                                                                                "type": "TryStatement",
                                                                                "block": {
                                                                                  "type": "BlockStatement",
                                                                                  "body": [
                                                                                    {
                                                                                      "type": "IfStatement",
                                                                                      "test": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "===",
                                                                                        "left": {
                                                                                          "type": "Literal",
                                                                                          "value": 0
                                                                                        },
                                                                                        "right": {
                                                                                          "type": "MemberExpression",
                                                                                          "computed": false,
                                                                                          "object": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                              "type": "Identifier",
                                                                                              "name": "data"
                                                                                            },
                                                                                            "property": {
                                                                                              "type": "Identifier",
                                                                                              "name": "rows"
                                                                                            }
                                                                                          },
                                                                                          "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "length"
                                                                                          }
                                                                                        }
                                                                                      },
                                                                                      "consequent": {
                                                                                        "type": "BlockStatement",
                                                                                        "body": [
                                                                                          {
                                                                                            "type": "ReturnStatement",
                                                                                            "argument": {
                                                                                              "type": "CallExpression",
                                                                                              "callee": {
                                                                                                "type": "Identifier",
                                                                                                "name": "success"
                                                                                              },
                                                                                              "arguments": []
                                                                                            }
                                                                                          }
                                                                                        ]
                                                                                      },
                                                                                      "alternate": null
                                                                                    },
                                                                                    {
                                                                                      "type": "ExpressionStatement",
                                                                                      "expression": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                          "type": "Identifier",
                                                                                          "name": "success"
                                                                                        },
                                                                                        "arguments": [
                                                                                          {
                                                                                            "type": "CallExpression",
                                                                                            "callee": {
                                                                                              "type": "MemberExpression",
                                                                                              "computed": false,
                                                                                              "object": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": false,
                                                                                                "object": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "idbModules"
                                                                                                },
                                                                                                "property": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "Sca"
                                                                                                }
                                                                                              },
                                                                                              "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "decode"
                                                                                              }
                                                                                            },
                                                                                            "arguments": [
                                                                                              {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": false,
                                                                                                "object": {
                                                                                                  "type": "CallExpression",
                                                                                                  "callee": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": false,
                                                                                                    "object": {
                                                                                                      "type": "MemberExpression",
                                                                                                      "computed": false,
                                                                                                      "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "data"
                                                                                                      },
                                                                                                      "property": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "rows"
                                                                                                      }
                                                                                                    },
                                                                                                    "property": {
                                                                                                      "type": "Identifier",
                                                                                                      "name": "item"
                                                                                                    }
                                                                                                  },
                                                                                                  "arguments": [
                                                                                                    {
                                                                                                      "type": "Literal",
                                                                                                      "value": 0
                                                                                                    }
                                                                                                  ]
                                                                                                },
                                                                                                "property": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "value"
                                                                                                }
                                                                                              }
                                                                                            ]
                                                                                          }
                                                                                        ]
                                                                                      }
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                "guardedHandlers": [],
                                                                                "handlers": [
                                                                                  {
                                                                                    "type": "CatchClause",
                                                                                    "param": {
                                                                                      "type": "Identifier",
                                                                                      "name": "e"
                                                                                    },
                                                                                    "body": {
                                                                                      "type": "BlockStatement",
                                                                                      "body": [
                                                                                        {
                                                                                          "type": "IfStatement",
                                                                                          "test": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                              "type": "Identifier",
                                                                                              "name": "idbModules"
                                                                                            },
                                                                                            "property": {
                                                                                              "type": "Identifier",
                                                                                              "name": "DEBUG"
                                                                                            }
                                                                                          },
                                                                                          "consequent": {
                                                                                            "type": "ExpressionStatement",
                                                                                            "expression": {
                                                                                              "type": "CallExpression",
                                                                                              "callee": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": false,
                                                                                                "object": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "console"
                                                                                                },
                                                                                                "property": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "log"
                                                                                                }
                                                                                              },
                                                                                              "arguments": [
                                                                                                {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "e"
                                                                                                }
                                                                                              ]
                                                                                            }
                                                                                          },
                                                                                          "alternate": null
                                                                                        },
                                                                                        {
                                                                                          "type": "ExpressionStatement",
                                                                                          "expression": {
                                                                                            "type": "CallExpression",
                                                                                            "callee": {
                                                                                              "type": "Identifier",
                                                                                              "name": "success"
                                                                                            },
                                                                                            "arguments": [
                                                                                              {
                                                                                                "type": "Identifier",
                                                                                                "name": "undefined"
                                                                                              }
                                                                                            ]
                                                                                          }
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  }
                                                                                ],
                                                                                "finalizer": null
                                                                              }
                                                                            ]
                                                                          },
                                                                          "rest": null,
                                                                          "generator": false,
                                                                          "expression": false
                                                                        },
                                                                        {
                                                                          "type": "FunctionExpression",
                                                                          "id": null,
                                                                          "params": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "name": "tx"
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "name": "err"
                                                                            }
                                                                          ],
                                                                          "defaults": [],
                                                                          "body": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                              {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                  "type": "CallExpression",
                                                                                  "callee": {
                                                                                    "type": "Identifier",
                                                                                    "name": "error"
                                                                                  },
                                                                                  "arguments": [
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "name": "err"
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              }
                                                                            ]
                                                                          },
                                                                          "rest": null,
                                                                          "generator": false,
                                                                          "expression": false
                                                                        }
                                                                      ]
                                                                    }
                                                                  }
                                                                ]
                                                              },
                                                              "rest": null,
                                                              "generator": false,
                                                              "expression": false
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "rest": null,
                                                  "generator": false,
                                                  "expression": false
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      },
                                      "rest": null,
                                      "generator": false,
                                      "expression": false
                                    }
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": true,
                                      "object": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "IDBObjectStore"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "prototype"
                                        }
                                      },
                                      "property": {
                                        "type": "Literal",
                                        "value": "delete"
                                      }
                                    },
                                    "right": {
                                      "type": "FunctionExpression",
                                      "id": null,
                                      "params": [
                                        {
                                          "type": "Identifier",
                                          "name": "key"
                                        }
                                      ],
                                      "defaults": [],
                                      "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                              {
                                                "type": "VariableDeclarator",
                                                "id": {
                                                  "type": "Identifier",
                                                  "name": "me"
                                                },
                                                "init": {
                                                  "type": "ThisExpression"
                                                }
                                              }
                                            ],
                                            "kind": "var"
                                          },
                                          {
                                            "type": "ReturnStatement",
                                            "argument": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "me"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "transaction"
                                                  }
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "__addToTransactionQueue"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "FunctionExpression",
                                                  "id": null,
                                                  "params": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "tx"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "args"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "success"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "error"
                                                    }
                                                  ],
                                                  "defaults": [],
                                                  "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "me"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "__waitForReady"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "FunctionExpression",
                                                              "id": null,
                                                              "params": [],
                                                              "defaults": [],
                                                              "body": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                  {
                                                                    "type": "VariableDeclaration",
                                                                    "declarations": [
                                                                      {
                                                                        "type": "VariableDeclarator",
                                                                        "id": {
                                                                          "type": "Identifier",
                                                                          "name": "primaryKey"
                                                                        },
                                                                        "init": {
                                                                          "type": "CallExpression",
                                                                          "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "MemberExpression",
                                                                              "computed": false,
                                                                              "object": {
                                                                                "type": "Identifier",
                                                                                "name": "idbModules"
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "Key"
                                                                              }
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "encode"
                                                                            }
                                                                          },
                                                                          "arguments": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "name": "key"
                                                                            }
                                                                          ]
                                                                        }
                                                                      }
                                                                    ],
                                                                    "kind": "var"
                                                                  },
                                                                  {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "idbModules"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "DEBUG"
                                                                      }
                                                                    },
                                                                    "consequent": {
                                                                      "type": "ExpressionStatement",
                                                                      "expression": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "console"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "log"
                                                                          }
                                                                        },
                                                                        "arguments": [
                                                                          {
                                                                            "type": "Literal",
                                                                            "value": "Fetching"
                                                                          },
                                                                          {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "Identifier",
                                                                              "name": "me"
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "name"
                                                                            }
                                                                          },
                                                                          {
                                                                            "type": "Identifier",
                                                                            "name": "primaryKey"
                                                                          }
                                                                        ]
                                                                      }
                                                                    },
                                                                    "alternate": null
                                                                  },
                                                                  {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "tx"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "executeSql"
                                                                        }
                                                                      },
                                                                      "arguments": [
                                                                        {
                                                                          "type": "BinaryExpression",
                                                                          "operator": "+",
                                                                          "left": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "+",
                                                                            "left": {
                                                                              "type": "Literal",
                                                                              "value": "DELETE FROM "
                                                                            },
                                                                            "right": {
                                                                              "type": "CallExpression",
                                                                              "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "MemberExpression",
                                                                                  "computed": false,
                                                                                  "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "idbModules"
                                                                                  },
                                                                                  "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "util"
                                                                                  }
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "quote"
                                                                                }
                                                                              },
                                                                              "arguments": [
                                                                                {
                                                                                  "type": "MemberExpression",
                                                                                  "computed": false,
                                                                                  "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "me"
                                                                                  },
                                                                                  "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "name"
                                                                                  }
                                                                                }
                                                                              ]
                                                                            }
                                                                          },
                                                                          "right": {
                                                                            "type": "Literal",
                                                                            "value": " where key = ?"
                                                                          }
                                                                        },
                                                                        {
                                                                          "type": "ArrayExpression",
                                                                          "elements": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "name": "primaryKey"
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "FunctionExpression",
                                                                          "id": null,
                                                                          "params": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "name": "tx"
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "name": "data"
                                                                            }
                                                                          ],
                                                                          "defaults": [],
                                                                          "body": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                              {
                                                                                "type": "IfStatement",
                                                                                "test": {
                                                                                  "type": "MemberExpression",
                                                                                  "computed": false,
                                                                                  "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "idbModules"
                                                                                  },
                                                                                  "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "DEBUG"
                                                                                  }
                                                                                },
                                                                                "consequent": {
                                                                                  "type": "ExpressionStatement",
                                                                                  "expression": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                      "type": "MemberExpression",
                                                                                      "computed": false,
                                                                                      "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "console"
                                                                                      },
                                                                                      "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "log"
                                                                                      }
                                                                                    },
                                                                                    "arguments": [
                                                                                      {
                                                                                        "type": "Literal",
                                                                                        "value": "Deleted from database"
                                                                                      },
                                                                                      {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                          "type": "Identifier",
                                                                                          "name": "data"
                                                                                        },
                                                                                        "property": {
                                                                                          "type": "Identifier",
                                                                                          "name": "rowsAffected"
                                                                                        }
                                                                                      }
                                                                                    ]
                                                                                  }
                                                                                },
                                                                                "alternate": null
                                                                              },
                                                                              {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                  "type": "CallExpression",
                                                                                  "callee": {
                                                                                    "type": "Identifier",
                                                                                    "name": "success"
                                                                                  },
                                                                                  "arguments": []
                                                                                }
                                                                              }
                                                                            ]
                                                                          },
                                                                          "rest": null,
                                                                          "generator": false,
                                                                          "expression": false
                                                                        },
                                                                        {
                                                                          "type": "FunctionExpression",
                                                                          "id": null,
                                                                          "params": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "name": "tx"
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "name": "err"
                                                                            }
                                                                          ],
                                                                          "defaults": [],
                                                                          "body": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                              {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                  "type": "CallExpression",
                                                                                  "callee": {
                                                                                    "type": "Identifier",
                                                                                    "name": "error"
                                                                                  },
                                                                                  "arguments": [
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "name": "err"
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              }
                                                                            ]
                                                                          },
                                                                          "rest": null,
                                                                          "generator": false,
                                                                          "expression": false
                                                                        }
                                                                      ]
                                                                    }
                                                                  }
                                                                ]
                                                              },
                                                              "rest": null,
                                                              "generator": false,
                                                              "expression": false
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "rest": null,
                                                  "generator": false,
                                                  "expression": false
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      },
                                      "rest": null,
                                      "generator": false,
                                      "expression": false
                                    }
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "IDBObjectStore"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "prototype"
                                        }
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "clear"
                                      }
                                    },
                                    "right": {
                                      "type": "FunctionExpression",
                                      "id": null,
                                      "params": [],
                                      "defaults": [],
                                      "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                              {
                                                "type": "VariableDeclarator",
                                                "id": {
                                                  "type": "Identifier",
                                                  "name": "me"
                                                },
                                                "init": {
                                                  "type": "ThisExpression"
                                                }
                                              }
                                            ],
                                            "kind": "var"
                                          },
                                          {
                                            "type": "ReturnStatement",
                                            "argument": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "me"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "transaction"
                                                  }
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "__addToTransactionQueue"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "FunctionExpression",
                                                  "id": null,
                                                  "params": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "tx"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "args"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "success"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "error"
                                                    }
                                                  ],
                                                  "defaults": [],
                                                  "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "me"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "__waitForReady"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "FunctionExpression",
                                                              "id": null,
                                                              "params": [],
                                                              "defaults": [],
                                                              "body": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                  {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "tx"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "executeSql"
                                                                        }
                                                                      },
                                                                      "arguments": [
                                                                        {
                                                                          "type": "BinaryExpression",
                                                                          "operator": "+",
                                                                          "left": {
                                                                            "type": "Literal",
                                                                            "value": "DELETE FROM "
                                                                          },
                                                                          "right": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                              "type": "MemberExpression",
                                                                              "computed": false,
                                                                              "object": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "idbModules"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "util"
                                                                                }
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "quote"
                                                                              }
                                                                            },
                                                                            "arguments": [
                                                                              {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "me"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "name"
                                                                                }
                                                                              }
                                                                            ]
                                                                          }
                                                                        },
                                                                        {
                                                                          "type": "ArrayExpression",
                                                                          "elements": []
                                                                        },
                                                                        {
                                                                          "type": "FunctionExpression",
                                                                          "id": null,
                                                                          "params": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "name": "tx"
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "name": "data"
                                                                            }
                                                                          ],
                                                                          "defaults": [],
                                                                          "body": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                              {
                                                                                "type": "IfStatement",
                                                                                "test": {
                                                                                  "type": "MemberExpression",
                                                                                  "computed": false,
                                                                                  "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "idbModules"
                                                                                  },
                                                                                  "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "DEBUG"
                                                                                  }
                                                                                },
                                                                                "consequent": {
                                                                                  "type": "ExpressionStatement",
                                                                                  "expression": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                      "type": "MemberExpression",
                                                                                      "computed": false,
                                                                                      "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "console"
                                                                                      },
                                                                                      "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "log"
                                                                                      }
                                                                                    },
                                                                                    "arguments": [
                                                                                      {
                                                                                        "type": "Literal",
                                                                                        "value": "Cleared all records from database"
                                                                                      },
                                                                                      {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                          "type": "Identifier",
                                                                                          "name": "data"
                                                                                        },
                                                                                        "property": {
                                                                                          "type": "Identifier",
                                                                                          "name": "rowsAffected"
                                                                                        }
                                                                                      }
                                                                                    ]
                                                                                  }
                                                                                },
                                                                                "alternate": null
                                                                              },
                                                                              {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                  "type": "CallExpression",
                                                                                  "callee": {
                                                                                    "type": "Identifier",
                                                                                    "name": "success"
                                                                                  },
                                                                                  "arguments": []
                                                                                }
                                                                              }
                                                                            ]
                                                                          },
                                                                          "rest": null,
                                                                          "generator": false,
                                                                          "expression": false
                                                                        },
                                                                        {
                                                                          "type": "FunctionExpression",
                                                                          "id": null,
                                                                          "params": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "name": "tx"
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "name": "err"
                                                                            }
                                                                          ],
                                                                          "defaults": [],
                                                                          "body": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                              {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                  "type": "CallExpression",
                                                                                  "callee": {
                                                                                    "type": "Identifier",
                                                                                    "name": "error"
                                                                                  },
                                                                                  "arguments": [
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "name": "err"
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              }
                                                                            ]
                                                                          },
                                                                          "rest": null,
                                                                          "generator": false,
                                                                          "expression": false
                                                                        }
                                                                      ]
                                                                    }
                                                                  }
                                                                ]
                                                              },
                                                              "rest": null,
                                                              "generator": false,
                                                              "expression": false
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "rest": null,
                                                  "generator": false,
                                                  "expression": false
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      },
                                      "rest": null,
                                      "generator": false,
                                      "expression": false
                                    }
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "IDBObjectStore"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "prototype"
                                        }
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "count"
                                      }
                                    },
                                    "right": {
                                      "type": "FunctionExpression",
                                      "id": null,
                                      "params": [
                                        {
                                          "type": "Identifier",
                                          "name": "key"
                                        }
                                      ],
                                      "defaults": [],
                                      "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                              {
                                                "type": "VariableDeclarator",
                                                "id": {
                                                  "type": "Identifier",
                                                  "name": "me"
                                                },
                                                "init": {
                                                  "type": "ThisExpression"
                                                }
                                              }
                                            ],
                                            "kind": "var"
                                          },
                                          {
                                            "type": "ReturnStatement",
                                            "argument": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "me"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "transaction"
                                                  }
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "__addToTransactionQueue"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "FunctionExpression",
                                                  "id": null,
                                                  "params": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "tx"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "args"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "success"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "error"
                                                    }
                                                  ],
                                                  "defaults": [],
                                                  "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "me"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "__waitForReady"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "FunctionExpression",
                                                              "id": null,
                                                              "params": [],
                                                              "defaults": [],
                                                              "body": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                  {
                                                                    "type": "VariableDeclaration",
                                                                    "declarations": [
                                                                      {
                                                                        "type": "VariableDeclarator",
                                                                        "id": {
                                                                          "type": "Identifier",
                                                                          "name": "sql"
                                                                        },
                                                                        "init": {
                                                                          "type": "BinaryExpression",
                                                                          "operator": "+",
                                                                          "left": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "+",
                                                                            "left": {
                                                                              "type": "Literal",
                                                                              "value": "SELECT * FROM "
                                                                            },
                                                                            "right": {
                                                                              "type": "CallExpression",
                                                                              "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "MemberExpression",
                                                                                  "computed": false,
                                                                                  "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "idbModules"
                                                                                  },
                                                                                  "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "util"
                                                                                  }
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "quote"
                                                                                }
                                                                              },
                                                                              "arguments": [
                                                                                {
                                                                                  "type": "MemberExpression",
                                                                                  "computed": false,
                                                                                  "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "me"
                                                                                  },
                                                                                  "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "name"
                                                                                  }
                                                                                }
                                                                              ]
                                                                            }
                                                                          },
                                                                          "right": {
                                                                            "type": "ConditionalExpression",
                                                                            "test": {
                                                                              "type": "BinaryExpression",
                                                                              "operator": "!==",
                                                                              "left": {
                                                                                "type": "UnaryExpression",
                                                                                "operator": "typeof",
                                                                                "argument": {
                                                                                  "type": "Identifier",
                                                                                  "name": "key"
                                                                                },
                                                                                "prefix": true
                                                                              },
                                                                              "right": {
                                                                                "type": "Literal",
                                                                                "value": "undefined"
                                                                              }
                                                                            },
                                                                            "consequent": {
                                                                              "type": "Literal",
                                                                              "value": " WHERE key = ?"
                                                                            },
                                                                            "alternate": {
                                                                              "type": "Literal",
                                                                              "value": ""
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    ],
                                                                    "kind": "var"
                                                                  },
                                                                  {
                                                                    "type": "VariableDeclaration",
                                                                    "declarations": [
                                                                      {
                                                                        "type": "VariableDeclarator",
                                                                        "id": {
                                                                          "type": "Identifier",
                                                                          "name": "sqlValues"
                                                                        },
                                                                        "init": {
                                                                          "type": "ArrayExpression",
                                                                          "elements": []
                                                                        }
                                                                      }
                                                                    ],
                                                                    "kind": "var"
                                                                  },
                                                                  {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "!==",
                                                                      "left": {
                                                                        "type": "UnaryExpression",
                                                                        "operator": "typeof",
                                                                        "argument": {
                                                                          "type": "Identifier",
                                                                          "name": "key"
                                                                        },
                                                                        "prefix": true
                                                                      },
                                                                      "right": {
                                                                        "type": "Literal",
                                                                        "value": "undefined"
                                                                      }
                                                                    },
                                                                    "consequent": {
                                                                      "type": "ExpressionStatement",
                                                                      "expression": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "sqlValues"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "push"
                                                                          }
                                                                        },
                                                                        "arguments": [
                                                                          {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                              "type": "MemberExpression",
                                                                              "computed": false,
                                                                              "object": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "idbModules"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "Key"
                                                                                }
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "encode"
                                                                              }
                                                                            },
                                                                            "arguments": [
                                                                              {
                                                                                "type": "Identifier",
                                                                                "name": "key"
                                                                              }
                                                                            ]
                                                                          }
                                                                        ]
                                                                      }
                                                                    },
                                                                    "alternate": null
                                                                  },
                                                                  {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "tx"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "executeSql"
                                                                        }
                                                                      },
                                                                      "arguments": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "name": "sql"
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "name": "sqlValues"
                                                                        },
                                                                        {
                                                                          "type": "FunctionExpression",
                                                                          "id": null,
                                                                          "params": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "name": "tx"
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "name": "data"
                                                                            }
                                                                          ],
                                                                          "defaults": [],
                                                                          "body": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                              {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                  "type": "CallExpression",
                                                                                  "callee": {
                                                                                    "type": "Identifier",
                                                                                    "name": "success"
                                                                                  },
                                                                                  "arguments": [
                                                                                    {
                                                                                      "type": "MemberExpression",
                                                                                      "computed": false,
                                                                                      "object": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                          "type": "Identifier",
                                                                                          "name": "data"
                                                                                        },
                                                                                        "property": {
                                                                                          "type": "Identifier",
                                                                                          "name": "rows"
                                                                                        }
                                                                                      },
                                                                                      "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "length"
                                                                                      }
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              }
                                                                            ]
                                                                          },
                                                                          "rest": null,
                                                                          "generator": false,
                                                                          "expression": false
                                                                        },
                                                                        {
                                                                          "type": "FunctionExpression",
                                                                          "id": null,
                                                                          "params": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "name": "tx"
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "name": "err"
                                                                            }
                                                                          ],
                                                                          "defaults": [],
                                                                          "body": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                              {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                  "type": "CallExpression",
                                                                                  "callee": {
                                                                                    "type": "Identifier",
                                                                                    "name": "error"
                                                                                  },
                                                                                  "arguments": [
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "name": "err"
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              }
                                                                            ]
                                                                          },
                                                                          "rest": null,
                                                                          "generator": false,
                                                                          "expression": false
                                                                        }
                                                                      ]
                                                                    }
                                                                  }
                                                                ]
                                                              },
                                                              "rest": null,
                                                              "generator": false,
                                                              "expression": false
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "rest": null,
                                                  "generator": false,
                                                  "expression": false
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      },
                                      "rest": null,
                                      "generator": false,
                                      "expression": false
                                    }
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "IDBObjectStore"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "prototype"
                                        }
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "openCursor"
                                      }
                                    },
                                    "right": {
                                      "type": "FunctionExpression",
                                      "id": null,
                                      "params": [
                                        {
                                          "type": "Identifier",
                                          "name": "range"
                                        },
                                        {
                                          "type": "Identifier",
                                          "name": "direction"
                                        }
                                      ],
                                      "defaults": [],
                                      "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                              {
                                                "type": "VariableDeclarator",
                                                "id": {
                                                  "type": "Identifier",
                                                  "name": "cursorRequest"
                                                },
                                                "init": {
                                                  "type": "NewExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "idbModules"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "IDBRequest"
                                                    }
                                                  },
                                                  "arguments": []
                                                }
                                              }
                                            ],
                                            "kind": "var"
                                          },
                                          {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                              {
                                                "type": "VariableDeclarator",
                                                "id": {
                                                  "type": "Identifier",
                                                  "name": "cursor"
                                                },
                                                "init": {
                                                  "type": "NewExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "idbModules"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "IDBCursor"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "range"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "direction"
                                                    },
                                                    {
                                                      "type": "ThisExpression"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "cursorRequest"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "key"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "value"
                                                    }
                                                  ]
                                                }
                                              }
                                            ],
                                            "kind": "var"
                                          },
                                          {
                                            "type": "ReturnStatement",
                                            "argument": {
                                              "type": "Identifier",
                                              "name": "cursorRequest"
                                            }
                                          }
                                        ]
                                      },
                                      "rest": null,
                                      "generator": false,
                                      "expression": false
                                    }
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "IDBObjectStore"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "prototype"
                                        }
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "index"
                                      }
                                    },
                                    "right": {
                                      "type": "FunctionExpression",
                                      "id": null,
                                      "params": [
                                        {
                                          "type": "Identifier",
                                          "name": "indexName"
                                        }
                                      ],
                                      "defaults": [],
                                      "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                              {
                                                "type": "VariableDeclarator",
                                                "id": {
                                                  "type": "Identifier",
                                                  "name": "index"
                                                },
                                                "init": {
                                                  "type": "NewExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "idbModules"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "IDBIndex"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "indexName"
                                                    },
                                                    {
                                                      "type": "ThisExpression"
                                                    }
                                                  ]
                                                }
                                              }
                                            ],
                                            "kind": "var"
                                          },
                                          {
                                            "type": "ReturnStatement",
                                            "argument": {
                                              "type": "Identifier",
                                              "name": "index"
                                            }
                                          }
                                        ]
                                      },
                                      "rest": null,
                                      "generator": false,
                                      "expression": false
                                    }
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "IDBObjectStore"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "prototype"
                                        }
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "createIndex"
                                      }
                                    },
                                    "right": {
                                      "type": "FunctionExpression",
                                      "id": null,
                                      "params": [
                                        {
                                          "type": "Identifier",
                                          "name": "indexName"
                                        },
                                        {
                                          "type": "Identifier",
                                          "name": "keyPath"
                                        },
                                        {
                                          "type": "Identifier",
                                          "name": "optionalParameters"
                                        }
                                      ],
                                      "defaults": [],
                                      "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                              {
                                                "type": "VariableDeclarator",
                                                "id": {
                                                  "type": "Identifier",
                                                  "name": "me"
                                                },
                                                "init": {
                                                  "type": "ThisExpression"
                                                }
                                              }
                                            ],
                                            "kind": "var"
                                          },
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "AssignmentExpression",
                                              "operator": "=",
                                              "left": {
                                                "type": "Identifier",
                                                "name": "optionalParameters"
                                              },
                                              "right": {
                                                "type": "LogicalExpression",
                                                "operator": "||",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "optionalParameters"
                                                },
                                                "right": {
                                                  "type": "ObjectExpression",
                                                  "properties": []
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "me"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "__setReadyState"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Literal",
                                                  "value": "createIndex"
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": false
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                              {
                                                "type": "VariableDeclarator",
                                                "id": {
                                                  "type": "Identifier",
                                                  "name": "result"
                                                },
                                                "init": {
                                                  "type": "NewExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "idbModules"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "IDBIndex"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "indexName"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "me"
                                                    }
                                                  ]
                                                }
                                              }
                                            ],
                                            "kind": "var"
                                          },
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "me"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "__waitForReady"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "FunctionExpression",
                                                  "id": null,
                                                  "params": [],
                                                  "defaults": [],
                                                  "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "result"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "__createIndex"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "Identifier",
                                                              "name": "indexName"
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "name": "keyPath"
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "name": "optionalParameters"
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "rest": null,
                                                  "generator": false,
                                                  "expression": false
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": "createObjectStore"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "me"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "indexNames"
                                                  }
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "push"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "indexName"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "ReturnStatement",
                                            "argument": {
                                              "type": "Identifier",
                                              "name": "result"
                                            }
                                          }
                                        ]
                                      },
                                      "rest": null,
                                      "generator": false,
                                      "expression": false
                                    }
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "IDBObjectStore"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "prototype"
                                        }
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "deleteIndex"
                                      }
                                    },
                                    "right": {
                                      "type": "FunctionExpression",
                                      "id": null,
                                      "params": [
                                        {
                                          "type": "Identifier",
                                          "name": "indexName"
                                        }
                                      ],
                                      "defaults": [],
                                      "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                              {
                                                "type": "VariableDeclarator",
                                                "id": {
                                                  "type": "Identifier",
                                                  "name": "result"
                                                },
                                                "init": {
                                                  "type": "NewExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "idbModules"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "IDBIndex"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "indexName"
                                                    },
                                                    {
                                                      "type": "ThisExpression"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": false
                                                    }
                                                  ]
                                                }
                                              }
                                            ],
                                            "kind": "var"
                                          },
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "result"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "__deleteIndex"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "indexName"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "ReturnStatement",
                                            "argument": {
                                              "type": "Identifier",
                                              "name": "result"
                                            }
                                          }
                                        ]
                                      },
                                      "rest": null,
                                      "generator": false,
                                      "expression": false
                                    }
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "idbModules"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "IDBObjectStore"
                                      }
                                    },
                                    "right": {
                                      "type": "Identifier",
                                      "name": "IDBObjectStore"
                                    }
                                  }
                                }
                              ]
                            },
                            "rest": null,
                            "generator": false,
                            "expression": false
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "idbModules"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [
                              {
                                "type": "Identifier",
                                "name": "idbModules"
                              }
                            ],
                            "defaults": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "VariableDeclaration",
                                  "declarations": [
                                    {
                                      "type": "VariableDeclarator",
                                      "id": {
                                        "type": "Identifier",
                                        "name": "READ"
                                      },
                                      "init": {
                                        "type": "Literal",
                                        "value": 0
                                      }
                                    }
                                  ],
                                  "kind": "var"
                                },
                                {
                                  "type": "VariableDeclaration",
                                  "declarations": [
                                    {
                                      "type": "VariableDeclarator",
                                      "id": {
                                        "type": "Identifier",
                                        "name": "READ_WRITE"
                                      },
                                      "init": {
                                        "type": "Literal",
                                        "value": 1
                                      }
                                    }
                                  ],
                                  "kind": "var"
                                },
                                {
                                  "type": "VariableDeclaration",
                                  "declarations": [
                                    {
                                      "type": "VariableDeclarator",
                                      "id": {
                                        "type": "Identifier",
                                        "name": "VERSION_TRANSACTION"
                                      },
                                      "init": {
                                        "type": "Literal",
                                        "value": 2
                                      }
                                    }
                                  ],
                                  "kind": "var"
                                },
                                {
                                  "type": "VariableDeclaration",
                                  "declarations": [
                                    {
                                      "type": "VariableDeclarator",
                                      "id": {
                                        "type": "Identifier",
                                        "name": "IDBTransaction"
                                      },
                                      "init": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                          {
                                            "type": "Identifier",
                                            "name": "storeNames"
                                          },
                                          {
                                            "type": "Identifier",
                                            "name": "mode"
                                          },
                                          {
                                            "type": "Identifier",
                                            "name": "db"
                                          }
                                        ],
                                        "defaults": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "IfStatement",
                                              "test": {
                                                "type": "BinaryExpression",
                                                "operator": "===",
                                                "left": {
                                                  "type": "UnaryExpression",
                                                  "operator": "typeof",
                                                  "argument": {
                                                    "type": "Identifier",
                                                    "name": "mode"
                                                  },
                                                  "prefix": true
                                                },
                                                "right": {
                                                  "type": "Literal",
                                                  "value": "number"
                                                }
                                              },
                                              "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "mode"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "Identifier",
                                                        "name": "mode"
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "IfStatement",
                                                    "test": {
                                                      "type": "LogicalExpression",
                                                      "operator": "&&",
                                                      "left": {
                                                        "type": "BinaryExpression",
                                                        "operator": "!==",
                                                        "left": {
                                                          "type": "Identifier",
                                                          "name": "mode"
                                                        },
                                                        "right": {
                                                          "type": "Literal",
                                                          "value": 2
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "idbModules"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "DEBUG"
                                                        }
                                                      }
                                                    },
                                                    "consequent": {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "console"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "log"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Literal",
                                                            "value": "Mode should be a string, but was specified as "
                                                          },
                                                          {
                                                            "type": "Identifier",
                                                            "name": "mode"
                                                          }
                                                        ]
                                                      }
                                                    },
                                                    "alternate": null
                                                  }
                                                ]
                                              },
                                              "alternate": {
                                                "type": "IfStatement",
                                                "test": {
                                                  "type": "BinaryExpression",
                                                  "operator": "===",
                                                  "left": {
                                                    "type": "UnaryExpression",
                                                    "operator": "typeof",
                                                    "argument": {
                                                      "type": "Identifier",
                                                      "name": "mode"
                                                    },
                                                    "prefix": true
                                                  },
                                                  "right": {
                                                    "type": "Literal",
                                                    "value": "string"
                                                  }
                                                },
                                                "consequent": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "SwitchStatement",
                                                      "discriminant": {
                                                        "type": "Identifier",
                                                        "name": "mode"
                                                      },
                                                      "cases": [
                                                        {
                                                          "type": "SwitchCase",
                                                          "test": {
                                                            "type": "Literal",
                                                            "value": "readwrite"
                                                          },
                                                          "consequent": [
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "expression": {
                                                                "type": "AssignmentExpression",
                                                                "operator": "=",
                                                                "left": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "ThisExpression"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "mode"
                                                                  }
                                                                },
                                                                "right": {
                                                                  "type": "Identifier",
                                                                  "name": "READ_WRITE"
                                                                }
                                                              }
                                                            },
                                                            {
                                                              "type": "BreakStatement",
                                                              "label": null
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "SwitchCase",
                                                          "test": {
                                                            "type": "Literal",
                                                            "value": "readonly"
                                                          },
                                                          "consequent": [
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "expression": {
                                                                "type": "AssignmentExpression",
                                                                "operator": "=",
                                                                "left": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "ThisExpression"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "mode"
                                                                  }
                                                                },
                                                                "right": {
                                                                  "type": "Identifier",
                                                                  "name": "READ"
                                                                }
                                                              }
                                                            },
                                                            {
                                                              "type": "BreakStatement",
                                                              "label": null
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "SwitchCase",
                                                          "test": null,
                                                          "consequent": [
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "expression": {
                                                                "type": "AssignmentExpression",
                                                                "operator": "=",
                                                                "left": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "ThisExpression"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "mode"
                                                                  }
                                                                },
                                                                "right": {
                                                                  "type": "Identifier",
                                                                  "name": "READ"
                                                                }
                                                              }
                                                            },
                                                            {
                                                              "type": "BreakStatement",
                                                              "label": null
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                "alternate": null
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "ThisExpression"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "storeNames"
                                                  }
                                                },
                                                "right": {
                                                  "type": "ConditionalExpression",
                                                  "test": {
                                                    "type": "BinaryExpression",
                                                    "operator": "===",
                                                    "left": {
                                                      "type": "UnaryExpression",
                                                      "operator": "typeof",
                                                      "argument": {
                                                        "type": "Identifier",
                                                        "name": "storeNames"
                                                      },
                                                      "prefix": true
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": "string"
                                                    }
                                                  },
                                                  "consequent": {
                                                    "type": "ArrayExpression",
                                                    "elements": [
                                                      {
                                                        "type": "Identifier",
                                                        "name": "storeNames"
                                                      }
                                                    ]
                                                  },
                                                  "alternate": {
                                                    "type": "Identifier",
                                                    "name": "storeNames"
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "type": "ForStatement",
                                              "init": {
                                                "type": "VariableDeclaration",
                                                "declarations": [
                                                  {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                      "type": "Identifier",
                                                      "name": "i"
                                                    },
                                                    "init": {
                                                      "type": "Literal",
                                                      "value": 0
                                                    }
                                                  }
                                                ],
                                                "kind": "var"
                                              },
                                              "test": {
                                                "type": "BinaryExpression",
                                                "operator": "<",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "i"
                                                },
                                                "right": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "storeNames"
                                                    }
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "length"
                                                  }
                                                }
                                              },
                                              "update": {
                                                "type": "UpdateExpression",
                                                "operator": "++",
                                                "argument": {
                                                  "type": "Identifier",
                                                  "name": "i"
                                                },
                                                "prefix": false
                                              },
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "IfStatement",
                                                    "test": {
                                                      "type": "UnaryExpression",
                                                      "operator": "!",
                                                      "argument": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "db"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "objectStoreNames"
                                                            }
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "contains"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "ThisExpression"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "storeNames"
                                                              }
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "i"
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      "prefix": true
                                                    },
                                                    "consequent": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "idbModules"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "util"
                                                                }
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "throwDOMException"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "Literal",
                                                                "value": 0
                                                              },
                                                              {
                                                                "type": "Literal",
                                                                "value": "The operation failed because the requested database object could not be found. For example, an object store did not exist but was being opened."
                                                              },
                                                              {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "ThisExpression"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "storeNames"
                                                                  }
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "i"
                                                                }
                                                              }
                                                            ]
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "alternate": null
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "ThisExpression"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "__active"
                                                  }
                                                },
                                                "right": {
                                                  "type": "Literal",
                                                  "value": true
                                                }
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "ThisExpression"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "__running"
                                                  }
                                                },
                                                "right": {
                                                  "type": "Literal",
                                                  "value": false
                                                }
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "ThisExpression"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "__requests"
                                                  }
                                                },
                                                "right": {
                                                  "type": "ArrayExpression",
                                                  "elements": []
                                                }
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "ThisExpression"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "__aborted"
                                                  }
                                                },
                                                "right": {
                                                  "type": "Literal",
                                                  "value": false
                                                }
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "ThisExpression"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "db"
                                                  }
                                                },
                                                "right": {
                                                  "type": "Identifier",
                                                  "name": "db"
                                                }
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "ThisExpression"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "error"
                                                  }
                                                },
                                                "right": {
                                                  "type": "Literal",
                                                  "value": null
                                                }
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "ThisExpression"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "onabort"
                                                  }
                                                },
                                                "right": {
                                                  "type": "AssignmentExpression",
                                                  "operator": "=",
                                                  "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "onerror"
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "ThisExpression"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "oncomplete"
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": null
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                      }
                                    }
                                  ],
                                  "kind": "var"
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "IDBTransaction"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "prototype"
                                        }
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "__executeRequests"
                                      }
                                    },
                                    "right": {
                                      "type": "FunctionExpression",
                                      "id": null,
                                      "params": [],
                                      "defaults": [],
                                      "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "IfStatement",
                                            "test": {
                                              "type": "LogicalExpression",
                                              "operator": "&&",
                                              "left": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "ThisExpression"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "__running"
                                                }
                                              },
                                              "right": {
                                                "type": "BinaryExpression",
                                                "operator": "!==",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "ThisExpression"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "mode"
                                                  }
                                                },
                                                "right": {
                                                  "type": "Identifier",
                                                  "name": "VERSION_TRANSACTION"
                                                }
                                              }
                                            },
                                            "consequent": {
                                              "type": "BlockStatement",
                                              "body": [
                                                {
                                                  "type": "IfStatement",
                                                  "test": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "idbModules"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "DEBUG"
                                                    }
                                                  },
                                                  "consequent": {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "console"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "log"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Literal",
                                                          "value": "Looks like the request set is already running"
                                                        },
                                                        {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "ThisExpression"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "mode"
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  "alternate": null
                                                },
                                                {
                                                  "type": "ReturnStatement",
                                                  "argument": null
                                                }
                                              ]
                                            },
                                            "alternate": null
                                          },
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "AssignmentExpression",
                                              "operator": "=",
                                              "left": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "ThisExpression"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "__running"
                                                }
                                              },
                                              "right": {
                                                "type": "Literal",
                                                "value": true
                                              }
                                            }
                                          },
                                          {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                              {
                                                "type": "VariableDeclarator",
                                                "id": {
                                                  "type": "Identifier",
                                                  "name": "me"
                                                },
                                                "init": {
                                                  "type": "ThisExpression"
                                                }
                                              }
                                            ],
                                            "kind": "var"
                                          },
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "window"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "setTimeout"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "FunctionExpression",
                                                  "id": null,
                                                  "params": [],
                                                  "defaults": [],
                                                  "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "IfStatement",
                                                        "test": {
                                                          "type": "LogicalExpression",
                                                          "operator": "&&",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "!==",
                                                            "left": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "me"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "mode"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "Literal",
                                                              "value": 2
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "UnaryExpression",
                                                            "operator": "!",
                                                            "argument": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "me"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "__active"
                                                              }
                                                            },
                                                            "prefix": true
                                                          }
                                                        },
                                                        "consequent": {
                                                          "type": "BlockStatement",
                                                          "body": [
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "idbModules"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "util"
                                                                    }
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "throwDOMException"
                                                                  }
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "Literal",
                                                                    "value": 0
                                                                  },
                                                                  {
                                                                    "type": "Literal",
                                                                    "value": "A request was placed against a transaction which is currently not active, or which is finished"
                                                                  },
                                                                  {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "me"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "__active"
                                                                    }
                                                                  }
                                                                ]
                                                              }
                                                            }
                                                          ]
                                                        },
                                                        "alternate": null
                                                      },
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "me"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "db"
                                                                }
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "__db"
                                                              }
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "transaction"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "FunctionExpression",
                                                              "id": null,
                                                              "params": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "tx"
                                                                }
                                                              ],
                                                              "defaults": [],
                                                              "body": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                  {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                      "type": "AssignmentExpression",
                                                                      "operator": "=",
                                                                      "left": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "me"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "__tx"
                                                                        }
                                                                      },
                                                                      "right": {
                                                                        "type": "Identifier",
                                                                        "name": "tx"
                                                                      }
                                                                    }
                                                                  },
                                                                  {
                                                                    "type": "VariableDeclaration",
                                                                    "declarations": [
                                                                      {
                                                                        "type": "VariableDeclarator",
                                                                        "id": {
                                                                          "type": "Identifier",
                                                                          "name": "q"
                                                                        },
                                                                        "init": {
                                                                          "type": "Literal",
                                                                          "value": null
                                                                        }
                                                                      },
                                                                      {
                                                                        "type": "VariableDeclarator",
                                                                        "id": {
                                                                          "type": "Identifier",
                                                                          "name": "i"
                                                                        },
                                                                        "init": {
                                                                          "type": "Literal",
                                                                          "value": 0
                                                                        }
                                                                      }
                                                                    ],
                                                                    "kind": "var"
                                                                  },
                                                                  {
                                                                    "type": "FunctionDeclaration",
                                                                    "id": {
                                                                      "type": "Identifier",
                                                                      "name": "success"
                                                                    },
                                                                    "params": [
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "result"
                                                                      },
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "req"
                                                                      }
                                                                    ],
                                                                    "defaults": [],
                                                                    "body": {
                                                                      "type": "BlockStatement",
                                                                      "body": [
                                                                        {
                                                                          "type": "IfStatement",
                                                                          "test": {
                                                                            "type": "Identifier",
                                                                            "name": "req"
                                                                          },
                                                                          "consequent": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                              {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                  "type": "AssignmentExpression",
                                                                                  "operator": "=",
                                                                                  "left": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "q"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "req"
                                                                                    }
                                                                                  },
                                                                                  "right": {
                                                                                    "type": "Identifier",
                                                                                    "name": "req"
                                                                                  }
                                                                                }
                                                                              }
                                                                            ]
                                                                          },
                                                                          "alternate": null
                                                                        },
                                                                        {
                                                                          "type": "ExpressionStatement",
                                                                          "expression": {
                                                                            "type": "AssignmentExpression",
                                                                            "operator": "=",
                                                                            "left": {
                                                                              "type": "MemberExpression",
                                                                              "computed": false,
                                                                              "object": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "q"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "req"
                                                                                }
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "readyState"
                                                                              }
                                                                            },
                                                                            "right": {
                                                                              "type": "Literal",
                                                                              "value": "done"
                                                                            }
                                                                          }
                                                                        },
                                                                        {
                                                                          "type": "ExpressionStatement",
                                                                          "expression": {
                                                                            "type": "AssignmentExpression",
                                                                            "operator": "=",
                                                                            "left": {
                                                                              "type": "MemberExpression",
                                                                              "computed": false,
                                                                              "object": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "q"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "req"
                                                                                }
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "result"
                                                                              }
                                                                            },
                                                                            "right": {
                                                                              "type": "Identifier",
                                                                              "name": "result"
                                                                            }
                                                                          }
                                                                        },
                                                                        {
                                                                          "type": "ExpressionStatement",
                                                                          "expression": {
                                                                            "type": "UnaryExpression",
                                                                            "operator": "delete",
                                                                            "argument": {
                                                                              "type": "MemberExpression",
                                                                              "computed": false,
                                                                              "object": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "q"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "req"
                                                                                }
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "error"
                                                                              }
                                                                            },
                                                                            "prefix": true
                                                                          }
                                                                        },
                                                                        {
                                                                          "type": "VariableDeclaration",
                                                                          "declarations": [
                                                                            {
                                                                              "type": "VariableDeclarator",
                                                                              "id": {
                                                                                "type": "Identifier",
                                                                                "name": "e"
                                                                              },
                                                                              "init": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                  "type": "MemberExpression",
                                                                                  "computed": false,
                                                                                  "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "idbModules"
                                                                                  },
                                                                                  "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "Event"
                                                                                  }
                                                                                },
                                                                                "arguments": [
                                                                                  {
                                                                                    "type": "Literal",
                                                                                    "value": "success"
                                                                                  }
                                                                                ]
                                                                              }
                                                                            }
                                                                          ],
                                                                          "kind": "var"
                                                                        },
                                                                        {
                                                                          "type": "ExpressionStatement",
                                                                          "expression": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                              "type": "MemberExpression",
                                                                              "computed": false,
                                                                              "object": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "idbModules"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "util"
                                                                                }
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "callback"
                                                                              }
                                                                            },
                                                                            "arguments": [
                                                                              {
                                                                                "type": "Literal",
                                                                                "value": "onsuccess"
                                                                              },
                                                                              {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "q"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "req"
                                                                                }
                                                                              },
                                                                              {
                                                                                "type": "Identifier",
                                                                                "name": "e"
                                                                              }
                                                                            ]
                                                                          }
                                                                        },
                                                                        {
                                                                          "type": "ExpressionStatement",
                                                                          "expression": {
                                                                            "type": "UpdateExpression",
                                                                            "operator": "++",
                                                                            "argument": {
                                                                              "type": "Identifier",
                                                                              "name": "i"
                                                                            },
                                                                            "prefix": false
                                                                          }
                                                                        },
                                                                        {
                                                                          "type": "ExpressionStatement",
                                                                          "expression": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                              "type": "Identifier",
                                                                              "name": "executeRequest"
                                                                            },
                                                                            "arguments": []
                                                                          }
                                                                        }
                                                                      ]
                                                                    },
                                                                    "rest": null,
                                                                    "generator": false,
                                                                    "expression": false
                                                                  },
                                                                  {
                                                                    "type": "FunctionDeclaration",
                                                                    "id": {
                                                                      "type": "Identifier",
                                                                      "name": "error"
                                                                    },
                                                                    "params": [
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "errorVal"
                                                                      }
                                                                    ],
                                                                    "defaults": [],
                                                                    "body": {
                                                                      "type": "BlockStatement",
                                                                      "body": [
                                                                        {
                                                                          "type": "ExpressionStatement",
                                                                          "expression": {
                                                                            "type": "AssignmentExpression",
                                                                            "operator": "=",
                                                                            "left": {
                                                                              "type": "MemberExpression",
                                                                              "computed": false,
                                                                              "object": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "q"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "req"
                                                                                }
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "readyState"
                                                                              }
                                                                            },
                                                                            "right": {
                                                                              "type": "Literal",
                                                                              "value": "done"
                                                                            }
                                                                          }
                                                                        },
                                                                        {
                                                                          "type": "ExpressionStatement",
                                                                          "expression": {
                                                                            "type": "AssignmentExpression",
                                                                            "operator": "=",
                                                                            "left": {
                                                                              "type": "MemberExpression",
                                                                              "computed": false,
                                                                              "object": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "q"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "req"
                                                                                }
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "error"
                                                                              }
                                                                            },
                                                                            "right": {
                                                                              "type": "Literal",
                                                                              "value": "DOMError"
                                                                            }
                                                                          }
                                                                        },
                                                                        {
                                                                          "type": "VariableDeclaration",
                                                                          "declarations": [
                                                                            {
                                                                              "type": "VariableDeclarator",
                                                                              "id": {
                                                                                "type": "Identifier",
                                                                                "name": "e"
                                                                              },
                                                                              "init": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                  "type": "MemberExpression",
                                                                                  "computed": false,
                                                                                  "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "idbModules"
                                                                                  },
                                                                                  "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "Event"
                                                                                  }
                                                                                },
                                                                                "arguments": [
                                                                                  {
                                                                                    "type": "Literal",
                                                                                    "value": "error"
                                                                                  },
                                                                                  {
                                                                                    "type": "Identifier",
                                                                                    "name": "arguments"
                                                                                  }
                                                                                ]
                                                                              }
                                                                            }
                                                                          ],
                                                                          "kind": "var"
                                                                        },
                                                                        {
                                                                          "type": "ExpressionStatement",
                                                                          "expression": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                              "type": "MemberExpression",
                                                                              "computed": false,
                                                                              "object": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "idbModules"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "util"
                                                                                }
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "callback"
                                                                              }
                                                                            },
                                                                            "arguments": [
                                                                              {
                                                                                "type": "Literal",
                                                                                "value": "onerror"
                                                                              },
                                                                              {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "q"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "req"
                                                                                }
                                                                              },
                                                                              {
                                                                                "type": "Identifier",
                                                                                "name": "e"
                                                                              }
                                                                            ]
                                                                          }
                                                                        },
                                                                        {
                                                                          "type": "ExpressionStatement",
                                                                          "expression": {
                                                                            "type": "UpdateExpression",
                                                                            "operator": "++",
                                                                            "argument": {
                                                                              "type": "Identifier",
                                                                              "name": "i"
                                                                            },
                                                                            "prefix": false
                                                                          }
                                                                        },
                                                                        {
                                                                          "type": "ExpressionStatement",
                                                                          "expression": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                              "type": "Identifier",
                                                                              "name": "executeRequest"
                                                                            },
                                                                            "arguments": []
                                                                          }
                                                                        }
                                                                      ]
                                                                    },
                                                                    "rest": null,
                                                                    "generator": false,
                                                                    "expression": false
                                                                  },
                                                                  {
                                                                    "type": "FunctionDeclaration",
                                                                    "id": {
                                                                      "type": "Identifier",
                                                                      "name": "executeRequest"
                                                                    },
                                                                    "params": [],
                                                                    "defaults": [],
                                                                    "body": {
                                                                      "type": "BlockStatement",
                                                                      "body": [
                                                                        {
                                                                          "type": "IfStatement",
                                                                          "test": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": ">=",
                                                                            "left": {
                                                                              "type": "Identifier",
                                                                              "name": "i"
                                                                            },
                                                                            "right": {
                                                                              "type": "MemberExpression",
                                                                              "computed": false,
                                                                              "object": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "me"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "__requests"
                                                                                }
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "length"
                                                                              }
                                                                            }
                                                                          },
                                                                          "consequent": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                              {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                  "type": "AssignmentExpression",
                                                                                  "operator": "=",
                                                                                  "left": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "me"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "__active"
                                                                                    }
                                                                                  },
                                                                                  "right": {
                                                                                    "type": "Literal",
                                                                                    "value": false
                                                                                  }
                                                                                }
                                                                              },
                                                                              {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                  "type": "AssignmentExpression",
                                                                                  "operator": "=",
                                                                                  "left": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "me"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "__requests"
                                                                                    }
                                                                                  },
                                                                                  "right": {
                                                                                    "type": "ArrayExpression",
                                                                                    "elements": []
                                                                                  }
                                                                                }
                                                                              },
                                                                              {
                                                                                "type": "ReturnStatement",
                                                                                "argument": null
                                                                              }
                                                                            ]
                                                                          },
                                                                          "alternate": null
                                                                        },
                                                                        {
                                                                          "type": "ExpressionStatement",
                                                                          "expression": {
                                                                            "type": "AssignmentExpression",
                                                                            "operator": "=",
                                                                            "left": {
                                                                              "type": "Identifier",
                                                                              "name": "q"
                                                                            },
                                                                            "right": {
                                                                              "type": "MemberExpression",
                                                                              "computed": true,
                                                                              "object": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "me"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "__requests"
                                                                                }
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "i"
                                                                              }
                                                                            }
                                                                          }
                                                                        },
                                                                        {
                                                                          "type": "ExpressionStatement",
                                                                          "expression": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                              "type": "MemberExpression",
                                                                              "computed": false,
                                                                              "object": {
                                                                                "type": "Identifier",
                                                                                "name": "q"
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "op"
                                                                              }
                                                                            },
                                                                            "arguments": [
                                                                              {
                                                                                "type": "Identifier",
                                                                                "name": "tx"
                                                                              },
                                                                              {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "q"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "args"
                                                                                }
                                                                              },
                                                                              {
                                                                                "type": "Identifier",
                                                                                "name": "success"
                                                                              },
                                                                              {
                                                                                "type": "Identifier",
                                                                                "name": "error"
                                                                              }
                                                                            ]
                                                                          }
                                                                        }
                                                                      ]
                                                                    },
                                                                    "rest": null,
                                                                    "generator": false,
                                                                    "expression": false
                                                                  },
                                                                  {
                                                                    "type": "TryStatement",
                                                                    "block": {
                                                                      "type": "BlockStatement",
                                                                      "body": [
                                                                        {
                                                                          "type": "ExpressionStatement",
                                                                          "expression": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                              "type": "Identifier",
                                                                              "name": "executeRequest"
                                                                            },
                                                                            "arguments": []
                                                                          }
                                                                        }
                                                                      ]
                                                                    },
                                                                    "guardedHandlers": [],
                                                                    "handlers": [
                                                                      {
                                                                        "type": "CatchClause",
                                                                        "param": {
                                                                          "type": "Identifier",
                                                                          "name": "e"
                                                                        },
                                                                        "body": {
                                                                          "type": "BlockStatement",
                                                                          "body": [
                                                                            {
                                                                              "type": "IfStatement",
                                                                              "test": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "idbModules"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "DEBUG"
                                                                                }
                                                                              },
                                                                              "consequent": {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                  "type": "CallExpression",
                                                                                  "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "console"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "log"
                                                                                    }
                                                                                  },
                                                                                  "arguments": [
                                                                                    {
                                                                                      "type": "Literal",
                                                                                      "value": "An exception occured in transaction"
                                                                                    },
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "name": "arguments"
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              },
                                                                              "alternate": null
                                                                            },
                                                                            {
                                                                              "type": "IfStatement",
                                                                              "test": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "===",
                                                                                "left": {
                                                                                  "type": "UnaryExpression",
                                                                                  "operator": "typeof",
                                                                                  "argument": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "me"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "onerror"
                                                                                    }
                                                                                  },
                                                                                  "prefix": true
                                                                                },
                                                                                "right": {
                                                                                  "type": "Literal",
                                                                                  "value": "function"
                                                                                }
                                                                              },
                                                                              "consequent": {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                  "type": "CallExpression",
                                                                                  "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "me"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "onerror"
                                                                                    }
                                                                                  },
                                                                                  "arguments": []
                                                                                }
                                                                              },
                                                                              "alternate": null
                                                                            }
                                                                          ]
                                                                        }
                                                                      }
                                                                    ],
                                                                    "finalizer": null
                                                                  }
                                                                ]
                                                              },
                                                              "rest": null,
                                                              "generator": false,
                                                              "expression": false
                                                            },
                                                            {
                                                              "type": "FunctionExpression",
                                                              "id": null,
                                                              "params": [],
                                                              "defaults": [],
                                                              "body": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                  {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "idbModules"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "DEBUG"
                                                                      }
                                                                    },
                                                                    "consequent": {
                                                                      "type": "ExpressionStatement",
                                                                      "expression": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "console"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "log"
                                                                          }
                                                                        },
                                                                        "arguments": [
                                                                          {
                                                                            "type": "Literal",
                                                                            "value": "An error in transaction"
                                                                          },
                                                                          {
                                                                            "type": "Identifier",
                                                                            "name": "arguments"
                                                                          }
                                                                        ]
                                                                      }
                                                                    },
                                                                    "alternate": null
                                                                  },
                                                                  {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "===",
                                                                      "left": {
                                                                        "type": "UnaryExpression",
                                                                        "operator": "typeof",
                                                                        "argument": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "me"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "onerror"
                                                                          }
                                                                        },
                                                                        "prefix": true
                                                                      },
                                                                      "right": {
                                                                        "type": "Literal",
                                                                        "value": "function"
                                                                      }
                                                                    },
                                                                    "consequent": {
                                                                      "type": "ExpressionStatement",
                                                                      "expression": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "me"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "onerror"
                                                                          }
                                                                        },
                                                                        "arguments": []
                                                                      }
                                                                    },
                                                                    "alternate": null
                                                                  }
                                                                ]
                                                              },
                                                              "rest": null,
                                                              "generator": false,
                                                              "expression": false
                                                            },
                                                            {
                                                              "type": "FunctionExpression",
                                                              "id": null,
                                                              "params": [],
                                                              "defaults": [],
                                                              "body": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                  {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "idbModules"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "DEBUG"
                                                                      }
                                                                    },
                                                                    "consequent": {
                                                                      "type": "ExpressionStatement",
                                                                      "expression": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "console"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "log"
                                                                          }
                                                                        },
                                                                        "arguments": [
                                                                          {
                                                                            "type": "Literal",
                                                                            "value": "Transaction completed"
                                                                          },
                                                                          {
                                                                            "type": "Identifier",
                                                                            "name": "arguments"
                                                                          }
                                                                        ]
                                                                      }
                                                                    },
                                                                    "alternate": null
                                                                  },
                                                                  {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "===",
                                                                      "left": {
                                                                        "type": "UnaryExpression",
                                                                        "operator": "typeof",
                                                                        "argument": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "me"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "oncomplete"
                                                                          }
                                                                        },
                                                                        "prefix": true
                                                                      },
                                                                      "right": {
                                                                        "type": "Literal",
                                                                        "value": "function"
                                                                      }
                                                                    },
                                                                    "consequent": {
                                                                      "type": "ExpressionStatement",
                                                                      "expression": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "me"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "oncomplete"
                                                                          }
                                                                        },
                                                                        "arguments": []
                                                                      }
                                                                    },
                                                                    "alternate": null
                                                                  }
                                                                ]
                                                              },
                                                              "rest": null,
                                                              "generator": false,
                                                              "expression": false
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "rest": null,
                                                  "generator": false,
                                                  "expression": false
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 1
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      },
                                      "rest": null,
                                      "generator": false,
                                      "expression": false
                                    }
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "IDBTransaction"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "prototype"
                                        }
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "__addToTransactionQueue"
                                      }
                                    },
                                    "right": {
                                      "type": "FunctionExpression",
                                      "id": null,
                                      "params": [
                                        {
                                          "type": "Identifier",
                                          "name": "callback"
                                        },
                                        {
                                          "type": "Identifier",
                                          "name": "args"
                                        }
                                      ],
                                      "defaults": [],
                                      "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "IfStatement",
                                            "test": {
                                              "type": "LogicalExpression",
                                              "operator": "&&",
                                              "left": {
                                                "type": "UnaryExpression",
                                                "operator": "!",
                                                "argument": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "ThisExpression"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "__active"
                                                  }
                                                },
                                                "prefix": true
                                              },
                                              "right": {
                                                "type": "BinaryExpression",
                                                "operator": "!==",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "ThisExpression"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "mode"
                                                  }
                                                },
                                                "right": {
                                                  "type": "Identifier",
                                                  "name": "VERSION_TRANSACTION"
                                                }
                                              }
                                            },
                                            "consequent": {
                                              "type": "BlockStatement",
                                              "body": [
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "idbModules"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "util"
                                                        }
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "throwDOMException"
                                                      }
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "Literal",
                                                        "value": 0
                                                      },
                                                      {
                                                        "type": "Literal",
                                                        "value": "A request was placed against a transaction which is currently not active, or which is finished."
                                                      },
                                                      {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "__mode"
                                                        }
                                                      }
                                                    ]
                                                  }
                                                }
                                              ]
                                            },
                                            "alternate": null
                                          },
                                          {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                              {
                                                "type": "VariableDeclarator",
                                                "id": {
                                                  "type": "Identifier",
                                                  "name": "request"
                                                },
                                                "init": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "__createRequest"
                                                    }
                                                  },
                                                  "arguments": []
                                                }
                                              }
                                            ],
                                            "kind": "var"
                                          },
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "ThisExpression"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "__pushToQueue"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "request"
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "name": "callback"
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "name": "args"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "ReturnStatement",
                                            "argument": {
                                              "type": "Identifier",
                                              "name": "request"
                                            }
                                          }
                                        ]
                                      },
                                      "rest": null,
                                      "generator": false,
                                      "expression": false
                                    }
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "IDBTransaction"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "prototype"
                                        }
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "__createRequest"
                                      }
                                    },
                                    "right": {
                                      "type": "FunctionExpression",
                                      "id": null,
                                      "params": [],
                                      "defaults": [],
                                      "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                              {
                                                "type": "VariableDeclarator",
                                                "id": {
                                                  "type": "Identifier",
                                                  "name": "request"
                                                },
                                                "init": {
                                                  "type": "NewExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "idbModules"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "IDBRequest"
                                                    }
                                                  },
                                                  "arguments": []
                                                }
                                              }
                                            ],
                                            "kind": "var"
                                          },
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "AssignmentExpression",
                                              "operator": "=",
                                              "left": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "request"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "source"
                                                }
                                              },
                                              "right": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "ThisExpression"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "db"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "type": "ReturnStatement",
                                            "argument": {
                                              "type": "Identifier",
                                              "name": "request"
                                            }
                                          }
                                        ]
                                      },
                                      "rest": null,
                                      "generator": false,
                                      "expression": false
                                    }
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "IDBTransaction"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "prototype"
                                        }
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "__pushToQueue"
                                      }
                                    },
                                    "right": {
                                      "type": "FunctionExpression",
                                      "id": null,
                                      "params": [
                                        {
                                          "type": "Identifier",
                                          "name": "request"
                                        },
                                        {
                                          "type": "Identifier",
                                          "name": "callback"
                                        },
                                        {
                                          "type": "Identifier",
                                          "name": "args"
                                        }
                                      ],
                                      "defaults": [],
                                      "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "ThisExpression"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "__requests"
                                                  }
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "push"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "ObjectExpression",
                                                  "properties": [
                                                    {
                                                      "type": "Property",
                                                      "key": {
                                                        "type": "Literal",
                                                        "value": "op"
                                                      },
                                                      "value": {
                                                        "type": "Identifier",
                                                        "name": "callback"
                                                      },
                                                      "kind": "init"
                                                    },
                                                    {
                                                      "type": "Property",
                                                      "key": {
                                                        "type": "Literal",
                                                        "value": "args"
                                                      },
                                                      "value": {
                                                        "type": "Identifier",
                                                        "name": "args"
                                                      },
                                                      "kind": "init"
                                                    },
                                                    {
                                                      "type": "Property",
                                                      "key": {
                                                        "type": "Literal",
                                                        "value": "req"
                                                      },
                                                      "value": {
                                                        "type": "Identifier",
                                                        "name": "request"
                                                      },
                                                      "kind": "init"
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "ThisExpression"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "__executeRequests"
                                                }
                                              },
                                              "arguments": []
                                            }
                                          }
                                        ]
                                      },
                                      "rest": null,
                                      "generator": false,
                                      "expression": false
                                    }
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "IDBTransaction"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "prototype"
                                        }
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "objectStore"
                                      }
                                    },
                                    "right": {
                                      "type": "FunctionExpression",
                                      "id": null,
                                      "params": [
                                        {
                                          "type": "Identifier",
                                          "name": "objectStoreName"
                                        }
                                      ],
                                      "defaults": [],
                                      "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "ReturnStatement",
                                            "argument": {
                                              "type": "NewExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "idbModules"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "IDBObjectStore"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "objectStoreName"
                                                },
                                                {
                                                  "type": "ThisExpression"
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      },
                                      "rest": null,
                                      "generator": false,
                                      "expression": false
                                    }
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "IDBTransaction"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "prototype"
                                        }
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "abort"
                                      }
                                    },
                                    "right": {
                                      "type": "FunctionExpression",
                                      "id": null,
                                      "params": [],
                                      "defaults": [],
                                      "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "IfStatement",
                                            "test": {
                                              "type": "UnaryExpression",
                                              "operator": "!",
                                              "argument": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "ThisExpression"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "__active"
                                                }
                                              },
                                              "prefix": true
                                            },
                                            "consequent": {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "idbModules"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "util"
                                                    }
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "throwDOMException"
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "Literal",
                                                    "value": 0
                                                  },
                                                  {
                                                    "type": "Literal",
                                                    "value": "A request was placed against a transaction which is currently not active, or which is finished"
                                                  },
                                                  {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "__active"
                                                    }
                                                  }
                                                ]
                                              }
                                            },
                                            "alternate": null
                                          }
                                        ]
                                      },
                                      "rest": null,
                                      "generator": false,
                                      "expression": false
                                    }
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "IDBTransaction"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "prototype"
                                        }
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "READ_ONLY"
                                      }
                                    },
                                    "right": {
                                      "type": "Literal",
                                      "value": 0
                                    }
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "IDBTransaction"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "prototype"
                                        }
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "READ_WRITE"
                                      }
                                    },
                                    "right": {
                                      "type": "Literal",
                                      "value": 1
                                    }
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "IDBTransaction"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "prototype"
                                        }
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "VERSION_CHANGE"
                                      }
                                    },
                                    "right": {
                                      "type": "Literal",
                                      "value": 2
                                    }
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "idbModules"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "IDBTransaction"
                                      }
                                    },
                                    "right": {
                                      "type": "Identifier",
                                      "name": "IDBTransaction"
                                    }
                                  }
                                }
                              ]
                            },
                            "rest": null,
                            "generator": false,
                            "expression": false
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "idbModules"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [
                              {
                                "type": "Identifier",
                                "name": "idbModules"
                              }
                            ],
                            "defaults": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "VariableDeclaration",
                                  "declarations": [
                                    {
                                      "type": "VariableDeclarator",
                                      "id": {
                                        "type": "Identifier",
                                        "name": "IDBDatabase"
                                      },
                                      "init": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                          {
                                            "type": "Identifier",
                                            "name": "db"
                                          },
                                          {
                                            "type": "Identifier",
                                            "name": "name"
                                          },
                                          {
                                            "type": "Identifier",
                                            "name": "version"
                                          },
                                          {
                                            "type": "Identifier",
                                            "name": "storeProperties"
                                          }
                                        ],
                                        "defaults": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "ThisExpression"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "__db"
                                                  }
                                                },
                                                "right": {
                                                  "type": "Identifier",
                                                  "name": "db"
                                                }
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "ThisExpression"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "version"
                                                  }
                                                },
                                                "right": {
                                                  "type": "Identifier",
                                                  "name": "version"
                                                }
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "ThisExpression"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "__storeProperties"
                                                  }
                                                },
                                                "right": {
                                                  "type": "Identifier",
                                                  "name": "storeProperties"
                                                }
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "ThisExpression"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "objectStoreNames"
                                                  }
                                                },
                                                "right": {
                                                  "type": "NewExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "idbModules"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "util"
                                                      }
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "StringList"
                                                    }
                                                  },
                                                  "arguments": []
                                                }
                                              }
                                            },
                                            {
                                              "type": "ForStatement",
                                              "init": {
                                                "type": "VariableDeclaration",
                                                "declarations": [
                                                  {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                      "type": "Identifier",
                                                      "name": "i"
                                                    },
                                                    "init": {
                                                      "type": "Literal",
                                                      "value": 0
                                                    }
                                                  }
                                                ],
                                                "kind": "var"
                                              },
                                              "test": {
                                                "type": "BinaryExpression",
                                                "operator": "<",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "i"
                                                },
                                                "right": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "storeProperties"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "rows"
                                                    }
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "length"
                                                  }
                                                }
                                              },
                                              "update": {
                                                "type": "UpdateExpression",
                                                "operator": "++",
                                                "argument": {
                                                  "type": "Identifier",
                                                  "name": "i"
                                                },
                                                "prefix": false
                                              },
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "ThisExpression"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "objectStoreNames"
                                                          }
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "push"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "storeProperties"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "rows"
                                                                }
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "item"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "Identifier",
                                                                "name": "i"
                                                              }
                                                            ]
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "name"
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "ThisExpression"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "name"
                                                  }
                                                },
                                                "right": {
                                                  "type": "Identifier",
                                                  "name": "name"
                                                }
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "ThisExpression"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "onabort"
                                                  }
                                                },
                                                "right": {
                                                  "type": "AssignmentExpression",
                                                  "operator": "=",
                                                  "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "onerror"
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "ThisExpression"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "onversionchange"
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": null
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                      }
                                    }
                                  ],
                                  "kind": "var"
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "IDBDatabase"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "prototype"
                                        }
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "createObjectStore"
                                      }
                                    },
                                    "right": {
                                      "type": "FunctionExpression",
                                      "id": null,
                                      "params": [
                                        {
                                          "type": "Identifier",
                                          "name": "storeName"
                                        },
                                        {
                                          "type": "Identifier",
                                          "name": "createOptions"
                                        }
                                      ],
                                      "defaults": [],
                                      "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                              {
                                                "type": "VariableDeclarator",
                                                "id": {
                                                  "type": "Identifier",
                                                  "name": "me"
                                                },
                                                "init": {
                                                  "type": "ThisExpression"
                                                }
                                              }
                                            ],
                                            "kind": "var"
                                          },
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "AssignmentExpression",
                                              "operator": "=",
                                              "left": {
                                                "type": "Identifier",
                                                "name": "createOptions"
                                              },
                                              "right": {
                                                "type": "LogicalExpression",
                                                "operator": "||",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "createOptions"
                                                },
                                                "right": {
                                                  "type": "ObjectExpression",
                                                  "properties": []
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "AssignmentExpression",
                                              "operator": "=",
                                              "left": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "createOptions"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "keyPath"
                                                }
                                              },
                                              "right": {
                                                "type": "LogicalExpression",
                                                "operator": "||",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "createOptions"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "keyPath"
                                                  }
                                                },
                                                "right": {
                                                  "type": "Literal",
                                                  "value": null
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                              {
                                                "type": "VariableDeclarator",
                                                "id": {
                                                  "type": "Identifier",
                                                  "name": "result"
                                                },
                                                "init": {
                                                  "type": "NewExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "idbModules"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "IDBObjectStore"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "storeName"
                                                    },
                                                    {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "me"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "__versionTransaction"
                                                      }
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": false
                                                    }
                                                  ]
                                                }
                                              }
                                            ],
                                            "kind": "var"
                                          },
                                          {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                              {
                                                "type": "VariableDeclarator",
                                                "id": {
                                                  "type": "Identifier",
                                                  "name": "transaction"
                                                },
                                                "init": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "me"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "__versionTransaction"
                                                  }
                                                }
                                              }
                                            ],
                                            "kind": "var"
                                          },
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "transaction"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "__addToTransactionQueue"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "FunctionExpression",
                                                  "id": null,
                                                  "params": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "tx"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "args"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "success"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "failure"
                                                    }
                                                  ],
                                                  "defaults": [],
                                                  "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "FunctionDeclaration",
                                                        "id": {
                                                          "type": "Identifier",
                                                          "name": "error"
                                                        },
                                                        "params": [],
                                                        "defaults": [],
                                                        "body": {
                                                          "type": "BlockStatement",
                                                          "body": [
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "idbModules"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "util"
                                                                    }
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "throwDOMException"
                                                                  }
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "Literal",
                                                                    "value": 0
                                                                  },
                                                                  {
                                                                    "type": "Literal",
                                                                    "value": "Could not create new object store"
                                                                  },
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "arguments"
                                                                  }
                                                                ]
                                                              }
                                                            }
                                                          ]
                                                        },
                                                        "rest": null,
                                                        "generator": false,
                                                        "expression": false
                                                      },
                                                      {
                                                        "type": "IfStatement",
                                                        "test": {
                                                          "type": "UnaryExpression",
                                                          "operator": "!",
                                                          "argument": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "me"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "__versionTransaction"
                                                            }
                                                          },
                                                          "prefix": true
                                                        },
                                                        "consequent": {
                                                          "type": "BlockStatement",
                                                          "body": [
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "idbModules"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "util"
                                                                    }
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "throwDOMException"
                                                                  }
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "Literal",
                                                                    "value": 0
                                                                  },
                                                                  {
                                                                    "type": "Literal",
                                                                    "value": "Invalid State error"
                                                                  },
                                                                  {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "me"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "transaction"
                                                                    }
                                                                  }
                                                                ]
                                                              }
                                                            }
                                                          ]
                                                        },
                                                        "alternate": null
                                                      },
                                                      {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                          {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                              "type": "Identifier",
                                                              "name": "sql"
                                                            },
                                                            "init": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "ArrayExpression",
                                                                  "elements": [
                                                                    {
                                                                      "type": "Literal",
                                                                      "value": "CREATE TABLE"
                                                                    },
                                                                    {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "idbModules"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "util"
                                                                          }
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "quote"
                                                                        }
                                                                      },
                                                                      "arguments": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "name": "storeName"
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "Literal",
                                                                      "value": "(key BLOB"
                                                                    },
                                                                    {
                                                                      "type": "ConditionalExpression",
                                                                      "test": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "createOptions"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "autoIncrement"
                                                                        }
                                                                      },
                                                                      "consequent": {
                                                                        "type": "Literal",
                                                                        "value": ", inc INTEGER PRIMARY KEY AUTOINCREMENT"
                                                                      },
                                                                      "alternate": {
                                                                        "type": "Literal",
                                                                        "value": "PRIMARY KEY"
                                                                      }
                                                                    },
                                                                    {
                                                                      "type": "Literal",
                                                                      "value": ", value BLOB)"
                                                                    }
                                                                  ]
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "join"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Literal",
                                                                  "value": " "
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        ],
                                                        "kind": "var"
                                                      },
                                                      {
                                                        "type": "IfStatement",
                                                        "test": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "idbModules"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "DEBUG"
                                                          }
                                                        },
                                                        "consequent": {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "console"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "log"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "Identifier",
                                                                "name": "sql"
                                                              }
                                                            ]
                                                          }
                                                        },
                                                        "alternate": null
                                                      },
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "tx"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "executeSql"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "Identifier",
                                                              "name": "sql"
                                                            },
                                                            {
                                                              "type": "ArrayExpression",
                                                              "elements": []
                                                            },
                                                            {
                                                              "type": "FunctionExpression",
                                                              "id": null,
                                                              "params": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "tx"
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "data"
                                                                }
                                                              ],
                                                              "defaults": [],
                                                              "body": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                  {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "tx"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "executeSql"
                                                                        }
                                                                      },
                                                                      "arguments": [
                                                                        {
                                                                          "type": "Literal",
                                                                          "value": "INSERT INTO __sys__ VALUES (?,?,?,?)"
                                                                        },
                                                                        {
                                                                          "type": "ArrayExpression",
                                                                          "elements": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "name": "storeName"
                                                                            },
                                                                            {
                                                                              "type": "MemberExpression",
                                                                              "computed": false,
                                                                              "object": {
                                                                                "type": "Identifier",
                                                                                "name": "createOptions"
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "keyPath"
                                                                              }
                                                                            },
                                                                            {
                                                                              "type": "ConditionalExpression",
                                                                              "test": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "createOptions"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "autoIncrement"
                                                                                }
                                                                              },
                                                                              "consequent": {
                                                                                "type": "Literal",
                                                                                "value": true
                                                                              },
                                                                              "alternate": {
                                                                                "type": "Literal",
                                                                                "value": false
                                                                              }
                                                                            },
                                                                            {
                                                                              "type": "Literal",
                                                                              "value": "{}"
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "FunctionExpression",
                                                                          "id": null,
                                                                          "params": [],
                                                                          "defaults": [],
                                                                          "body": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                              {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                  "type": "CallExpression",
                                                                                  "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "result"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "__setReadyState"
                                                                                    }
                                                                                  },
                                                                                  "arguments": [
                                                                                    {
                                                                                      "type": "Literal",
                                                                                      "value": "createObjectStore"
                                                                                    },
                                                                                    {
                                                                                      "type": "Literal",
                                                                                      "value": true
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              },
                                                                              {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                  "type": "CallExpression",
                                                                                  "callee": {
                                                                                    "type": "Identifier",
                                                                                    "name": "success"
                                                                                  },
                                                                                  "arguments": [
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "name": "result"
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              }
                                                                            ]
                                                                          },
                                                                          "rest": null,
                                                                          "generator": false,
                                                                          "expression": false
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "name": "error"
                                                                        }
                                                                      ]
                                                                    }
                                                                  }
                                                                ]
                                                              },
                                                              "rest": null,
                                                              "generator": false,
                                                              "expression": false
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "name": "error"
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "rest": null,
                                                  "generator": false,
                                                  "expression": false
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "me"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "objectStoreNames"
                                                  }
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "push"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "storeName"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "ReturnStatement",
                                            "argument": {
                                              "type": "Identifier",
                                              "name": "result"
                                            }
                                          }
                                        ]
                                      },
                                      "rest": null,
                                      "generator": false,
                                      "expression": false
                                    }
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "IDBDatabase"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "prototype"
                                        }
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "deleteObjectStore"
                                      }
                                    },
                                    "right": {
                                      "type": "FunctionExpression",
                                      "id": null,
                                      "params": [
                                        {
                                          "type": "Identifier",
                                          "name": "storeName"
                                        }
                                      ],
                                      "defaults": [],
                                      "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                              {
                                                "type": "VariableDeclarator",
                                                "id": {
                                                  "type": "Identifier",
                                                  "name": "error"
                                                },
                                                "init": {
                                                  "type": "FunctionExpression",
                                                  "id": null,
                                                  "params": [],
                                                  "defaults": [],
                                                  "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "idbModules"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "util"
                                                              }
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "throwDOMException"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "Literal",
                                                              "value": 0
                                                            },
                                                            {
                                                              "type": "Literal",
                                                              "value": "Could not delete ObjectStore"
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "name": "arguments"
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "rest": null,
                                                  "generator": false,
                                                  "expression": false
                                                }
                                              }
                                            ],
                                            "kind": "var"
                                          },
                                          {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                              {
                                                "type": "VariableDeclarator",
                                                "id": {
                                                  "type": "Identifier",
                                                  "name": "me"
                                                },
                                                "init": {
                                                  "type": "ThisExpression"
                                                }
                                              }
                                            ],
                                            "kind": "var"
                                          },
                                          {
                                            "type": "IfStatement",
                                            "test": {
                                              "type": "UnaryExpression",
                                              "operator": "!",
                                              "argument": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "me"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "objectStoreNames"
                                                    }
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "contains"
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "storeName"
                                                  }
                                                ]
                                              },
                                              "prefix": true
                                            },
                                            "consequent": {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "Identifier",
                                                  "name": "error"
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "Literal",
                                                    "value": "Object Store does not exist"
                                                  }
                                                ]
                                              }
                                            },
                                            "alternate": null
                                          },
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "me"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "objectStoreNames"
                                                  }
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "splice"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "me"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "objectStoreNames"
                                                      }
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "indexOf"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "storeName"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 1
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                              {
                                                "type": "VariableDeclarator",
                                                "id": {
                                                  "type": "Identifier",
                                                  "name": "transaction"
                                                },
                                                "init": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "me"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "__versionTransaction"
                                                  }
                                                }
                                              }
                                            ],
                                            "kind": "var"
                                          },
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "transaction"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "__addToTransactionQueue"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "FunctionExpression",
                                                  "id": null,
                                                  "params": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "tx"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "args"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "success"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "failure"
                                                    }
                                                  ],
                                                  "defaults": [],
                                                  "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "IfStatement",
                                                        "test": {
                                                          "type": "UnaryExpression",
                                                          "operator": "!",
                                                          "argument": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "me"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "__versionTransaction"
                                                            }
                                                          },
                                                          "prefix": true
                                                        },
                                                        "consequent": {
                                                          "type": "BlockStatement",
                                                          "body": [
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "idbModules"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "util"
                                                                    }
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "throwDOMException"
                                                                  }
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "Literal",
                                                                    "value": 0
                                                                  },
                                                                  {
                                                                    "type": "Literal",
                                                                    "value": "Invalid State error"
                                                                  },
                                                                  {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "me"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "transaction"
                                                                    }
                                                                  }
                                                                ]
                                                              }
                                                            }
                                                          ]
                                                        },
                                                        "alternate": null
                                                      },
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "me"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "__db"
                                                              }
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "transaction"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "FunctionExpression",
                                                              "id": null,
                                                              "params": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "tx"
                                                                }
                                                              ],
                                                              "defaults": [],
                                                              "body": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                  {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "tx"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "executeSql"
                                                                        }
                                                                      },
                                                                      "arguments": [
                                                                        {
                                                                          "type": "Literal",
                                                                          "value": "SELECT * FROM __sys__ where name = ?"
                                                                        },
                                                                        {
                                                                          "type": "ArrayExpression",
                                                                          "elements": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "name": "storeName"
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "FunctionExpression",
                                                                          "id": null,
                                                                          "params": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "name": "tx"
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "name": "data"
                                                                            }
                                                                          ],
                                                                          "defaults": [],
                                                                          "body": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                              {
                                                                                "type": "IfStatement",
                                                                                "test": {
                                                                                  "type": "BinaryExpression",
                                                                                  "operator": ">",
                                                                                  "left": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "MemberExpression",
                                                                                      "computed": false,
                                                                                      "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "data"
                                                                                      },
                                                                                      "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "rows"
                                                                                      }
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "length"
                                                                                    }
                                                                                  },
                                                                                  "right": {
                                                                                    "type": "Literal",
                                                                                    "value": 0
                                                                                  }
                                                                                },
                                                                                "consequent": {
                                                                                  "type": "BlockStatement",
                                                                                  "body": [
                                                                                    {
                                                                                      "type": "ExpressionStatement",
                                                                                      "expression": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                          "type": "MemberExpression",
                                                                                          "computed": false,
                                                                                          "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "tx"
                                                                                          },
                                                                                          "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "executeSql"
                                                                                          }
                                                                                        },
                                                                                        "arguments": [
                                                                                          {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "+",
                                                                                            "left": {
                                                                                              "type": "Literal",
                                                                                              "value": "DROP TABLE "
                                                                                            },
                                                                                            "right": {
                                                                                              "type": "CallExpression",
                                                                                              "callee": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": false,
                                                                                                "object": {
                                                                                                  "type": "MemberExpression",
                                                                                                  "computed": false,
                                                                                                  "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "idbModules"
                                                                                                  },
                                                                                                  "property": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "util"
                                                                                                  }
                                                                                                },
                                                                                                "property": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "quote"
                                                                                                }
                                                                                              },
                                                                                              "arguments": [
                                                                                                {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "storeName"
                                                                                                }
                                                                                              ]
                                                                                            }
                                                                                          },
                                                                                          {
                                                                                            "type": "ArrayExpression",
                                                                                            "elements": []
                                                                                          },
                                                                                          {
                                                                                            "type": "FunctionExpression",
                                                                                            "id": null,
                                                                                            "params": [],
                                                                                            "defaults": [],
                                                                                            "body": {
                                                                                              "type": "BlockStatement",
                                                                                              "body": [
                                                                                                {
                                                                                                  "type": "ExpressionStatement",
                                                                                                  "expression": {
                                                                                                    "type": "CallExpression",
                                                                                                    "callee": {
                                                                                                      "type": "MemberExpression",
                                                                                                      "computed": false,
                                                                                                      "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "tx"
                                                                                                      },
                                                                                                      "property": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "executeSql"
                                                                                                      }
                                                                                                    },
                                                                                                    "arguments": [
                                                                                                      {
                                                                                                        "type": "Literal",
                                                                                                        "value": "DELETE FROM __sys__ WHERE name = ?"
                                                                                                      },
                                                                                                      {
                                                                                                        "type": "ArrayExpression",
                                                                                                        "elements": [
                                                                                                          {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "storeName"
                                                                                                          }
                                                                                                        ]
                                                                                                      },
                                                                                                      {
                                                                                                        "type": "FunctionExpression",
                                                                                                        "id": null,
                                                                                                        "params": [],
                                                                                                        "defaults": [],
                                                                                                        "body": {
                                                                                                          "type": "BlockStatement",
                                                                                                          "body": []
                                                                                                        },
                                                                                                        "rest": null,
                                                                                                        "generator": false,
                                                                                                        "expression": false
                                                                                                      },
                                                                                                      {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "error"
                                                                                                      }
                                                                                                    ]
                                                                                                  }
                                                                                                }
                                                                                              ]
                                                                                            },
                                                                                            "rest": null,
                                                                                            "generator": false,
                                                                                            "expression": false
                                                                                          },
                                                                                          {
                                                                                            "type": "Identifier",
                                                                                            "name": "error"
                                                                                          }
                                                                                        ]
                                                                                      }
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                "alternate": null
                                                                              }
                                                                            ]
                                                                          },
                                                                          "rest": null,
                                                                          "generator": false,
                                                                          "expression": false
                                                                        }
                                                                      ]
                                                                    }
                                                                  }
                                                                ]
                                                              },
                                                              "rest": null,
                                                              "generator": false,
                                                              "expression": false
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "rest": null,
                                                  "generator": false,
                                                  "expression": false
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      },
                                      "rest": null,
                                      "generator": false,
                                      "expression": false
                                    }
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "IDBDatabase"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "prototype"
                                        }
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "close"
                                      }
                                    },
                                    "right": {
                                      "type": "FunctionExpression",
                                      "id": null,
                                      "params": [],
                                      "defaults": [],
                                      "body": {
                                        "type": "BlockStatement",
                                        "body": []
                                      },
                                      "rest": null,
                                      "generator": false,
                                      "expression": false
                                    }
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "IDBDatabase"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "prototype"
                                        }
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "transaction"
                                      }
                                    },
                                    "right": {
                                      "type": "FunctionExpression",
                                      "id": null,
                                      "params": [
                                        {
                                          "type": "Identifier",
                                          "name": "storeNames"
                                        },
                                        {
                                          "type": "Identifier",
                                          "name": "mode"
                                        }
                                      ],
                                      "defaults": [],
                                      "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                              {
                                                "type": "VariableDeclarator",
                                                "id": {
                                                  "type": "Identifier",
                                                  "name": "transaction"
                                                },
                                                "init": {
                                                  "type": "NewExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "idbModules"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "IDBTransaction"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "storeNames"
                                                    },
                                                    {
                                                      "type": "LogicalExpression",
                                                      "operator": "||",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "mode"
                                                      },
                                                      "right": {
                                                        "type": "Literal",
                                                        "value": 1
                                                      }
                                                    },
                                                    {
                                                      "type": "ThisExpression"
                                                    }
                                                  ]
                                                }
                                              }
                                            ],
                                            "kind": "var"
                                          },
                                          {
                                            "type": "ReturnStatement",
                                            "argument": {
                                              "type": "Identifier",
                                              "name": "transaction"
                                            }
                                          }
                                        ]
                                      },
                                      "rest": null,
                                      "generator": false,
                                      "expression": false
                                    }
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "idbModules"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "IDBDatabase"
                                      }
                                    },
                                    "right": {
                                      "type": "Identifier",
                                      "name": "IDBDatabase"
                                    }
                                  }
                                }
                              ]
                            },
                            "rest": null,
                            "generator": false,
                            "expression": false
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "idbModules"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [
                              {
                                "type": "Identifier",
                                "name": "idbModules"
                              }
                            ],
                            "defaults": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "VariableDeclaration",
                                  "declarations": [
                                    {
                                      "type": "VariableDeclarator",
                                      "id": {
                                        "type": "Identifier",
                                        "name": "DEFAULT_DB_SIZE"
                                      },
                                      "init": {
                                        "type": "BinaryExpression",
                                        "operator": "*",
                                        "left": {
                                          "type": "BinaryExpression",
                                          "operator": "*",
                                          "left": {
                                            "type": "Literal",
                                            "value": 4
                                          },
                                          "right": {
                                            "type": "Literal",
                                            "value": 1024
                                          }
                                        },
                                        "right": {
                                          "type": "Literal",
                                          "value": 1024
                                        }
                                      }
                                    }
                                  ],
                                  "kind": "var"
                                },
                                {
                                  "type": "IfStatement",
                                  "test": {
                                    "type": "UnaryExpression",
                                    "operator": "!",
                                    "argument": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "window"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "openDatabase"
                                      }
                                    },
                                    "prefix": true
                                  },
                                  "consequent": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": null
                                      }
                                    ]
                                  },
                                  "alternate": null
                                },
                                {
                                  "type": "VariableDeclaration",
                                  "declarations": [
                                    {
                                      "type": "VariableDeclarator",
                                      "id": {
                                        "type": "Identifier",
                                        "name": "sysdb"
                                      },
                                      "init": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "window"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "openDatabase"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "Literal",
                                            "value": "__sysdb__"
                                          },
                                          {
                                            "type": "Literal",
                                            "value": 1
                                          },
                                          {
                                            "type": "Literal",
                                            "value": "System Database"
                                          },
                                          {
                                            "type": "Identifier",
                                            "name": "DEFAULT_DB_SIZE"
                                          }
                                        ]
                                      }
                                    }
                                  ],
                                  "kind": "var"
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "sysdb"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "transaction"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                          {
                                            "type": "Identifier",
                                            "name": "tx"
                                          }
                                        ],
                                        "defaults": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "tx"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "executeSql"
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "Literal",
                                                    "value": "SELECT * FROM dbVersions"
                                                  },
                                                  {
                                                    "type": "ArrayExpression",
                                                    "elements": []
                                                  },
                                                  {
                                                    "type": "FunctionExpression",
                                                    "id": null,
                                                    "params": [
                                                      {
                                                        "type": "Identifier",
                                                        "name": "t"
                                                      },
                                                      {
                                                        "type": "Identifier",
                                                        "name": "data"
                                                      }
                                                    ],
                                                    "defaults": [],
                                                    "body": {
                                                      "type": "BlockStatement",
                                                      "body": []
                                                    },
                                                    "rest": null,
                                                    "generator": false,
                                                    "expression": false
                                                  },
                                                  {
                                                    "type": "FunctionExpression",
                                                    "id": null,
                                                    "params": [],
                                                    "defaults": [],
                                                    "body": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "sysdb"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "transaction"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "FunctionExpression",
                                                                "id": null,
                                                                "params": [
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "tx"
                                                                  }
                                                                ],
                                                                "defaults": [],
                                                                "body": {
                                                                  "type": "BlockStatement",
                                                                  "body": [
                                                                    {
                                                                      "type": "ExpressionStatement",
                                                                      "expression": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "tx"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "executeSql"
                                                                          }
                                                                        },
                                                                        "arguments": [
                                                                          {
                                                                            "type": "Literal",
                                                                            "value": "CREATE TABLE IF NOT EXISTS dbVersions (name VARCHAR(255), version INT);"
                                                                          },
                                                                          {
                                                                            "type": "ArrayExpression",
                                                                            "elements": []
                                                                          },
                                                                          {
                                                                            "type": "FunctionExpression",
                                                                            "id": null,
                                                                            "params": [],
                                                                            "defaults": [],
                                                                            "body": {
                                                                              "type": "BlockStatement",
                                                                              "body": []
                                                                            },
                                                                            "rest": null,
                                                                            "generator": false,
                                                                            "expression": false
                                                                          },
                                                                          {
                                                                            "type": "FunctionExpression",
                                                                            "id": null,
                                                                            "params": [],
                                                                            "defaults": [],
                                                                            "body": {
                                                                              "type": "BlockStatement",
                                                                              "body": [
                                                                                {
                                                                                  "type": "ExpressionStatement",
                                                                                  "expression": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                      "type": "MemberExpression",
                                                                                      "computed": false,
                                                                                      "object": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                          "type": "Identifier",
                                                                                          "name": "idbModules"
                                                                                        },
                                                                                        "property": {
                                                                                          "type": "Identifier",
                                                                                          "name": "util"
                                                                                        }
                                                                                      },
                                                                                      "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "throwDOMException"
                                                                                      }
                                                                                    },
                                                                                    "arguments": [
                                                                                      {
                                                                                        "type": "Literal",
                                                                                        "value": "Could not create table __sysdb__ to save DB versions"
                                                                                      }
                                                                                    ]
                                                                                  }
                                                                                }
                                                                              ]
                                                                            },
                                                                            "rest": null,
                                                                            "generator": false,
                                                                            "expression": false
                                                                          }
                                                                        ]
                                                                      }
                                                                    }
                                                                  ]
                                                                },
                                                                "rest": null,
                                                                "generator": false,
                                                                "expression": false
                                                              }
                                                            ]
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "rest": null,
                                                    "generator": false,
                                                    "expression": false
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                      },
                                      {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [],
                                        "defaults": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "IfStatement",
                                              "test": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "idbModules"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "DEBUG"
                                                }
                                              },
                                              "consequent": {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "console"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "log"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Literal",
                                                      "value": "Error in sysdb transaction - when selecting from dbVersions"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "arguments"
                                                    }
                                                  ]
                                                }
                                              },
                                              "alternate": null
                                            }
                                          ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "VariableDeclaration",
                                  "declarations": [
                                    {
                                      "type": "VariableDeclarator",
                                      "id": {
                                        "type": "Identifier",
                                        "name": "shimIndexedDB"
                                      },
                                      "init": {
                                        "type": "ObjectExpression",
                                        "properties": [
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "open"
                                            },
                                            "value": {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "name"
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "name": "version"
                                                }
                                              ],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                      {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                          "type": "Identifier",
                                                          "name": "req"
                                                        },
                                                        "init": {
                                                          "type": "NewExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "idbModules"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "IDBOpenRequest"
                                                            }
                                                          },
                                                          "arguments": []
                                                        }
                                                      }
                                                    ],
                                                    "kind": "var"
                                                  },
                                                  {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                      {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                          "type": "Identifier",
                                                          "name": "calledDbCreateError"
                                                        },
                                                        "init": {
                                                          "type": "Literal",
                                                          "value": false
                                                        }
                                                      }
                                                    ],
                                                    "kind": "var"
                                                  },
                                                  {
                                                    "type": "FunctionDeclaration",
                                                    "id": {
                                                      "type": "Identifier",
                                                      "name": "dbCreateError"
                                                    },
                                                    "params": [],
                                                    "defaults": [],
                                                    "body": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "IfStatement",
                                                          "test": {
                                                            "type": "Identifier",
                                                            "name": "calledDbCreateError"
                                                          },
                                                          "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                              {
                                                                "type": "ReturnStatement",
                                                                "argument": null
                                                              }
                                                            ]
                                                          },
                                                          "alternate": null
                                                        },
                                                        {
                                                          "type": "VariableDeclaration",
                                                          "declarations": [
                                                            {
                                                              "type": "VariableDeclarator",
                                                              "id": {
                                                                "type": "Identifier",
                                                                "name": "e"
                                                              },
                                                              "init": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "idbModules"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "Event"
                                                                  }
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "Literal",
                                                                    "value": "error"
                                                                  },
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "arguments"
                                                                  }
                                                                ]
                                                              }
                                                            }
                                                          ],
                                                          "kind": "var"
                                                        },
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "req"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "readyState"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "Literal",
                                                              "value": "done"
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "req"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "error"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "Literal",
                                                              "value": "DOMError"
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "idbModules"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "util"
                                                                }
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "callback"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "Literal",
                                                                "value": "onerror"
                                                              },
                                                              {
                                                                "type": "Identifier",
                                                                "name": "req"
                                                              },
                                                              {
                                                                "type": "Identifier",
                                                                "name": "e"
                                                              }
                                                            ]
                                                          }
                                                        },
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "calledDbCreateError"
                                                            },
                                                            "right": {
                                                              "type": "Literal",
                                                              "value": true
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "rest": null,
                                                    "generator": false,
                                                    "expression": false
                                                  },
                                                  {
                                                    "type": "FunctionDeclaration",
                                                    "id": {
                                                      "type": "Identifier",
                                                      "name": "openDB"
                                                    },
                                                    "params": [
                                                      {
                                                        "type": "Identifier",
                                                        "name": "oldVersion"
                                                      }
                                                    ],
                                                    "defaults": [],
                                                    "body": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "VariableDeclaration",
                                                          "declarations": [
                                                            {
                                                              "type": "VariableDeclarator",
                                                              "id": {
                                                                "type": "Identifier",
                                                                "name": "db"
                                                              },
                                                              "init": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "window"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "openDatabase"
                                                                  }
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "name"
                                                                  },
                                                                  {
                                                                    "type": "Literal",
                                                                    "value": 1
                                                                  },
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "name"
                                                                  },
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "DEFAULT_DB_SIZE"
                                                                  }
                                                                ]
                                                              }
                                                            }
                                                          ],
                                                          "kind": "var"
                                                        },
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "req"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "readyState"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "Literal",
                                                              "value": "done"
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "IfStatement",
                                                          "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "===",
                                                            "left": {
                                                              "type": "UnaryExpression",
                                                              "operator": "typeof",
                                                              "argument": {
                                                                "type": "Identifier",
                                                                "name": "version"
                                                              },
                                                              "prefix": true
                                                            },
                                                            "right": {
                                                              "type": "Literal",
                                                              "value": "undefined"
                                                            }
                                                          },
                                                          "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                              {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                  "type": "AssignmentExpression",
                                                                  "operator": "=",
                                                                  "left": {
                                                                    "type": "Identifier",
                                                                    "name": "version"
                                                                  },
                                                                  "right": {
                                                                    "type": "LogicalExpression",
                                                                    "operator": "||",
                                                                    "left": {
                                                                      "type": "Identifier",
                                                                      "name": "oldVersion"
                                                                    },
                                                                    "right": {
                                                                      "type": "Literal",
                                                                      "value": 1
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            ]
                                                          },
                                                          "alternate": null
                                                        },
                                                        {
                                                          "type": "IfStatement",
                                                          "test": {
                                                            "type": "LogicalExpression",
                                                            "operator": "||",
                                                            "left": {
                                                              "type": "BinaryExpression",
                                                              "operator": "<=",
                                                              "left": {
                                                                "type": "Identifier",
                                                                "name": "version"
                                                              },
                                                              "right": {
                                                                "type": "Literal",
                                                                "value": 0
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "BinaryExpression",
                                                              "operator": ">",
                                                              "left": {
                                                                "type": "Identifier",
                                                                "name": "oldVersion"
                                                              },
                                                              "right": {
                                                                "type": "Identifier",
                                                                "name": "version"
                                                              }
                                                            }
                                                          },
                                                          "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                              {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "idbModules"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "util"
                                                                      }
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "throwDOMException"
                                                                    }
                                                                  },
                                                                  "arguments": [
                                                                    {
                                                                      "type": "Literal",
                                                                      "value": 0
                                                                    },
                                                                    {
                                                                      "type": "Literal",
                                                                      "value": "An attempt was made to open a database using a lower version than the existing version."
                                                                    },
                                                                    {
                                                                      "type": "Identifier",
                                                                      "name": "version"
                                                                    }
                                                                  ]
                                                                }
                                                              }
                                                            ]
                                                          },
                                                          "alternate": null
                                                        },
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "db"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "transaction"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "FunctionExpression",
                                                                "id": null,
                                                                "params": [
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "tx"
                                                                  }
                                                                ],
                                                                "defaults": [],
                                                                "body": {
                                                                  "type": "BlockStatement",
                                                                  "body": [
                                                                    {
                                                                      "type": "ExpressionStatement",
                                                                      "expression": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "tx"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "executeSql"
                                                                          }
                                                                        },
                                                                        "arguments": [
                                                                          {
                                                                            "type": "Literal",
                                                                            "value": "CREATE TABLE IF NOT EXISTS __sys__ (name VARCHAR(255), keyPath VARCHAR(255), autoInc BOOLEAN, indexList BLOB)"
                                                                          },
                                                                          {
                                                                            "type": "ArrayExpression",
                                                                            "elements": []
                                                                          },
                                                                          {
                                                                            "type": "FunctionExpression",
                                                                            "id": null,
                                                                            "params": [],
                                                                            "defaults": [],
                                                                            "body": {
                                                                              "type": "BlockStatement",
                                                                              "body": [
                                                                                {
                                                                                  "type": "ExpressionStatement",
                                                                                  "expression": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                      "type": "MemberExpression",
                                                                                      "computed": false,
                                                                                      "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "tx"
                                                                                      },
                                                                                      "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "executeSql"
                                                                                      }
                                                                                    },
                                                                                    "arguments": [
                                                                                      {
                                                                                        "type": "Literal",
                                                                                        "value": "SELECT * FROM __sys__"
                                                                                      },
                                                                                      {
                                                                                        "type": "ArrayExpression",
                                                                                        "elements": []
                                                                                      },
                                                                                      {
                                                                                        "type": "FunctionExpression",
                                                                                        "id": null,
                                                                                        "params": [
                                                                                          {
                                                                                            "type": "Identifier",
                                                                                            "name": "tx"
                                                                                          },
                                                                                          {
                                                                                            "type": "Identifier",
                                                                                            "name": "data"
                                                                                          }
                                                                                        ],
                                                                                        "defaults": [],
                                                                                        "body": {
                                                                                          "type": "BlockStatement",
                                                                                          "body": [
                                                                                            {
                                                                                              "type": "VariableDeclaration",
                                                                                              "declarations": [
                                                                                                {
                                                                                                  "type": "VariableDeclarator",
                                                                                                  "id": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "e"
                                                                                                  },
                                                                                                  "init": {
                                                                                                    "type": "CallExpression",
                                                                                                    "callee": {
                                                                                                      "type": "MemberExpression",
                                                                                                      "computed": false,
                                                                                                      "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "idbModules"
                                                                                                      },
                                                                                                      "property": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "Event"
                                                                                                      }
                                                                                                    },
                                                                                                    "arguments": [
                                                                                                      {
                                                                                                        "type": "Literal",
                                                                                                        "value": "success"
                                                                                                      }
                                                                                                    ]
                                                                                                  }
                                                                                                }
                                                                                              ],
                                                                                              "kind": "var"
                                                                                            },
                                                                                            {
                                                                                              "type": "ExpressionStatement",
                                                                                              "expression": {
                                                                                                "type": "AssignmentExpression",
                                                                                                "operator": "=",
                                                                                                "left": {
                                                                                                  "type": "MemberExpression",
                                                                                                  "computed": false,
                                                                                                  "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "req"
                                                                                                  },
                                                                                                  "property": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "source"
                                                                                                  }
                                                                                                },
                                                                                                "right": {
                                                                                                  "type": "AssignmentExpression",
                                                                                                  "operator": "=",
                                                                                                  "left": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": false,
                                                                                                    "object": {
                                                                                                      "type": "Identifier",
                                                                                                      "name": "req"
                                                                                                    },
                                                                                                    "property": {
                                                                                                      "type": "Identifier",
                                                                                                      "name": "result"
                                                                                                    }
                                                                                                  },
                                                                                                  "right": {
                                                                                                    "type": "NewExpression",
                                                                                                    "callee": {
                                                                                                      "type": "MemberExpression",
                                                                                                      "computed": false,
                                                                                                      "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "idbModules"
                                                                                                      },
                                                                                                      "property": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "IDBDatabase"
                                                                                                      }
                                                                                                    },
                                                                                                    "arguments": [
                                                                                                      {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "db"
                                                                                                      },
                                                                                                      {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "name"
                                                                                                      },
                                                                                                      {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "version"
                                                                                                      },
                                                                                                      {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "data"
                                                                                                      }
                                                                                                    ]
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            },
                                                                                            {
                                                                                              "type": "IfStatement",
                                                                                              "test": {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "<",
                                                                                                "left": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "oldVersion"
                                                                                                },
                                                                                                "right": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "version"
                                                                                                }
                                                                                              },
                                                                                              "consequent": {
                                                                                                "type": "BlockStatement",
                                                                                                "body": [
                                                                                                  {
                                                                                                    "type": "ExpressionStatement",
                                                                                                    "expression": {
                                                                                                      "type": "CallExpression",
                                                                                                      "callee": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": false,
                                                                                                        "object": {
                                                                                                          "type": "Identifier",
                                                                                                          "name": "sysdb"
                                                                                                        },
                                                                                                        "property": {
                                                                                                          "type": "Identifier",
                                                                                                          "name": "transaction"
                                                                                                        }
                                                                                                      },
                                                                                                      "arguments": [
                                                                                                        {
                                                                                                          "type": "FunctionExpression",
                                                                                                          "id": null,
                                                                                                          "params": [
                                                                                                            {
                                                                                                              "type": "Identifier",
                                                                                                              "name": "systx"
                                                                                                            }
                                                                                                          ],
                                                                                                          "defaults": [],
                                                                                                          "body": {
                                                                                                            "type": "BlockStatement",
                                                                                                            "body": [
                                                                                                              {
                                                                                                                "type": "ExpressionStatement",
                                                                                                                "expression": {
                                                                                                                  "type": "CallExpression",
                                                                                                                  "callee": {
                                                                                                                    "type": "MemberExpression",
                                                                                                                    "computed": false,
                                                                                                                    "object": {
                                                                                                                      "type": "Identifier",
                                                                                                                      "name": "systx"
                                                                                                                    },
                                                                                                                    "property": {
                                                                                                                      "type": "Identifier",
                                                                                                                      "name": "executeSql"
                                                                                                                    }
                                                                                                                  },
                                                                                                                  "arguments": [
                                                                                                                    {
                                                                                                                      "type": "Literal",
                                                                                                                      "value": "UPDATE dbVersions set version = ? where name = ?"
                                                                                                                    },
                                                                                                                    {
                                                                                                                      "type": "ArrayExpression",
                                                                                                                      "elements": [
                                                                                                                        {
                                                                                                                          "type": "Identifier",
                                                                                                                          "name": "version"
                                                                                                                        },
                                                                                                                        {
                                                                                                                          "type": "Identifier",
                                                                                                                          "name": "name"
                                                                                                                        }
                                                                                                                      ]
                                                                                                                    },
                                                                                                                    {
                                                                                                                      "type": "FunctionExpression",
                                                                                                                      "id": null,
                                                                                                                      "params": [],
                                                                                                                      "defaults": [],
                                                                                                                      "body": {
                                                                                                                        "type": "BlockStatement",
                                                                                                                        "body": [
                                                                                                                          {
                                                                                                                            "type": "VariableDeclaration",
                                                                                                                            "declarations": [
                                                                                                                              {
                                                                                                                                "type": "VariableDeclarator",
                                                                                                                                "id": {
                                                                                                                                  "type": "Identifier",
                                                                                                                                  "name": "e"
                                                                                                                                },
                                                                                                                                "init": {
                                                                                                                                  "type": "CallExpression",
                                                                                                                                  "callee": {
                                                                                                                                    "type": "MemberExpression",
                                                                                                                                    "computed": false,
                                                                                                                                    "object": {
                                                                                                                                      "type": "Identifier",
                                                                                                                                      "name": "idbModules"
                                                                                                                                    },
                                                                                                                                    "property": {
                                                                                                                                      "type": "Identifier",
                                                                                                                                      "name": "Event"
                                                                                                                                    }
                                                                                                                                  },
                                                                                                                                  "arguments": [
                                                                                                                                    {
                                                                                                                                      "type": "Literal",
                                                                                                                                      "value": "upgradeneeded"
                                                                                                                                    }
                                                                                                                                  ]
                                                                                                                                }
                                                                                                                              }
                                                                                                                            ],
                                                                                                                            "kind": "var"
                                                                                                                          },
                                                                                                                          {
                                                                                                                            "type": "ExpressionStatement",
                                                                                                                            "expression": {
                                                                                                                              "type": "AssignmentExpression",
                                                                                                                              "operator": "=",
                                                                                                                              "left": {
                                                                                                                                "type": "MemberExpression",
                                                                                                                                "computed": false,
                                                                                                                                "object": {
                                                                                                                                  "type": "Identifier",
                                                                                                                                  "name": "e"
                                                                                                                                },
                                                                                                                                "property": {
                                                                                                                                  "type": "Identifier",
                                                                                                                                  "name": "oldVersion"
                                                                                                                                }
                                                                                                                              },
                                                                                                                              "right": {
                                                                                                                                "type": "Identifier",
                                                                                                                                "name": "oldVersion"
                                                                                                                              }
                                                                                                                            }
                                                                                                                          },
                                                                                                                          {
                                                                                                                            "type": "ExpressionStatement",
                                                                                                                            "expression": {
                                                                                                                              "type": "AssignmentExpression",
                                                                                                                              "operator": "=",
                                                                                                                              "left": {
                                                                                                                                "type": "MemberExpression",
                                                                                                                                "computed": false,
                                                                                                                                "object": {
                                                                                                                                  "type": "Identifier",
                                                                                                                                  "name": "e"
                                                                                                                                },
                                                                                                                                "property": {
                                                                                                                                  "type": "Identifier",
                                                                                                                                  "name": "newVersion"
                                                                                                                                }
                                                                                                                              },
                                                                                                                              "right": {
                                                                                                                                "type": "Identifier",
                                                                                                                                "name": "version"
                                                                                                                              }
                                                                                                                            }
                                                                                                                          },
                                                                                                                          {
                                                                                                                            "type": "ExpressionStatement",
                                                                                                                            "expression": {
                                                                                                                              "type": "AssignmentExpression",
                                                                                                                              "operator": "=",
                                                                                                                              "left": {
                                                                                                                                "type": "MemberExpression",
                                                                                                                                "computed": false,
                                                                                                                                "object": {
                                                                                                                                  "type": "Identifier",
                                                                                                                                  "name": "req"
                                                                                                                                },
                                                                                                                                "property": {
                                                                                                                                  "type": "Identifier",
                                                                                                                                  "name": "transaction"
                                                                                                                                }
                                                                                                                              },
                                                                                                                              "right": {
                                                                                                                                "type": "AssignmentExpression",
                                                                                                                                "operator": "=",
                                                                                                                                "left": {
                                                                                                                                  "type": "MemberExpression",
                                                                                                                                  "computed": false,
                                                                                                                                  "object": {
                                                                                                                                    "type": "MemberExpression",
                                                                                                                                    "computed": false,
                                                                                                                                    "object": {
                                                                                                                                      "type": "Identifier",
                                                                                                                                      "name": "req"
                                                                                                                                    },
                                                                                                                                    "property": {
                                                                                                                                      "type": "Identifier",
                                                                                                                                      "name": "result"
                                                                                                                                    }
                                                                                                                                  },
                                                                                                                                  "property": {
                                                                                                                                    "type": "Identifier",
                                                                                                                                    "name": "__versionTransaction"
                                                                                                                                  }
                                                                                                                                },
                                                                                                                                "right": {
                                                                                                                                  "type": "NewExpression",
                                                                                                                                  "callee": {
                                                                                                                                    "type": "MemberExpression",
                                                                                                                                    "computed": false,
                                                                                                                                    "object": {
                                                                                                                                      "type": "Identifier",
                                                                                                                                      "name": "idbModules"
                                                                                                                                    },
                                                                                                                                    "property": {
                                                                                                                                      "type": "Identifier",
                                                                                                                                      "name": "IDBTransaction"
                                                                                                                                    }
                                                                                                                                  },
                                                                                                                                  "arguments": [
                                                                                                                                    {
                                                                                                                                      "type": "ArrayExpression",
                                                                                                                                      "elements": []
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                      "type": "Literal",
                                                                                                                                      "value": 2
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                      "type": "MemberExpression",
                                                                                                                                      "computed": false,
                                                                                                                                      "object": {
                                                                                                                                        "type": "Identifier",
                                                                                                                                        "name": "req"
                                                                                                                                      },
                                                                                                                                      "property": {
                                                                                                                                        "type": "Identifier",
                                                                                                                                        "name": "source"
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                  ]
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }
                                                                                                                          },
                                                                                                                          {
                                                                                                                            "type": "ExpressionStatement",
                                                                                                                            "expression": {
                                                                                                                              "type": "CallExpression",
                                                                                                                              "callee": {
                                                                                                                                "type": "MemberExpression",
                                                                                                                                "computed": false,
                                                                                                                                "object": {
                                                                                                                                  "type": "MemberExpression",
                                                                                                                                  "computed": false,
                                                                                                                                  "object": {
                                                                                                                                    "type": "Identifier",
                                                                                                                                    "name": "idbModules"
                                                                                                                                  },
                                                                                                                                  "property": {
                                                                                                                                    "type": "Identifier",
                                                                                                                                    "name": "util"
                                                                                                                                  }
                                                                                                                                },
                                                                                                                                "property": {
                                                                                                                                  "type": "Identifier",
                                                                                                                                  "name": "callback"
                                                                                                                                }
                                                                                                                              },
                                                                                                                              "arguments": [
                                                                                                                                {
                                                                                                                                  "type": "Literal",
                                                                                                                                  "value": "onupgradeneeded"
                                                                                                                                },
                                                                                                                                {
                                                                                                                                  "type": "Identifier",
                                                                                                                                  "name": "req"
                                                                                                                                },
                                                                                                                                {
                                                                                                                                  "type": "Identifier",
                                                                                                                                  "name": "e"
                                                                                                                                },
                                                                                                                                {
                                                                                                                                  "type": "FunctionExpression",
                                                                                                                                  "id": null,
                                                                                                                                  "params": [],
                                                                                                                                  "defaults": [],
                                                                                                                                  "body": {
                                                                                                                                    "type": "BlockStatement",
                                                                                                                                    "body": [
                                                                                                                                      {
                                                                                                                                        "type": "VariableDeclaration",
                                                                                                                                        "declarations": [
                                                                                                                                          {
                                                                                                                                            "type": "VariableDeclarator",
                                                                                                                                            "id": {
                                                                                                                                              "type": "Identifier",
                                                                                                                                              "name": "e"
                                                                                                                                            },
                                                                                                                                            "init": {
                                                                                                                                              "type": "CallExpression",
                                                                                                                                              "callee": {
                                                                                                                                                "type": "MemberExpression",
                                                                                                                                                "computed": false,
                                                                                                                                                "object": {
                                                                                                                                                  "type": "Identifier",
                                                                                                                                                  "name": "idbModules"
                                                                                                                                                },
                                                                                                                                                "property": {
                                                                                                                                                  "type": "Identifier",
                                                                                                                                                  "name": "Event"
                                                                                                                                                }
                                                                                                                                              },
                                                                                                                                              "arguments": [
                                                                                                                                                {
                                                                                                                                                  "type": "Literal",
                                                                                                                                                  "value": "success"
                                                                                                                                                }
                                                                                                                                              ]
                                                                                                                                            }
                                                                                                                                          }
                                                                                                                                        ],
                                                                                                                                        "kind": "var"
                                                                                                                                      },
                                                                                                                                      {
                                                                                                                                        "type": "ExpressionStatement",
                                                                                                                                        "expression": {
                                                                                                                                          "type": "CallExpression",
                                                                                                                                          "callee": {
                                                                                                                                            "type": "MemberExpression",
                                                                                                                                            "computed": false,
                                                                                                                                            "object": {
                                                                                                                                              "type": "MemberExpression",
                                                                                                                                              "computed": false,
                                                                                                                                              "object": {
                                                                                                                                                "type": "Identifier",
                                                                                                                                                "name": "idbModules"
                                                                                                                                              },
                                                                                                                                              "property": {
                                                                                                                                                "type": "Identifier",
                                                                                                                                                "name": "util"
                                                                                                                                              }
                                                                                                                                            },
                                                                                                                                            "property": {
                                                                                                                                              "type": "Identifier",
                                                                                                                                              "name": "callback"
                                                                                                                                            }
                                                                                                                                          },
                                                                                                                                          "arguments": [
                                                                                                                                            {
                                                                                                                                              "type": "Literal",
                                                                                                                                              "value": "onsuccess"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                              "type": "Identifier",
                                                                                                                                              "name": "req"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                              "type": "Identifier",
                                                                                                                                              "name": "e"
                                                                                                                                            }
                                                                                                                                          ]
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    ]
                                                                                                                                  },
                                                                                                                                  "rest": null,
                                                                                                                                  "generator": false,
                                                                                                                                  "expression": false
                                                                                                                                }
                                                                                                                              ]
                                                                                                                            }
                                                                                                                          }
                                                                                                                        ]
                                                                                                                      },
                                                                                                                      "rest": null,
                                                                                                                      "generator": false,
                                                                                                                      "expression": false
                                                                                                                    },
                                                                                                                    {
                                                                                                                      "type": "Identifier",
                                                                                                                      "name": "dbCreateError"
                                                                                                                    }
                                                                                                                  ]
                                                                                                                }
                                                                                                              }
                                                                                                            ]
                                                                                                          },
                                                                                                          "rest": null,
                                                                                                          "generator": false,
                                                                                                          "expression": false
                                                                                                        },
                                                                                                        {
                                                                                                          "type": "Identifier",
                                                                                                          "name": "dbCreateError"
                                                                                                        }
                                                                                                      ]
                                                                                                    }
                                                                                                  }
                                                                                                ]
                                                                                              },
                                                                                              "alternate": {
                                                                                                "type": "BlockStatement",
                                                                                                "body": [
                                                                                                  {
                                                                                                    "type": "ExpressionStatement",
                                                                                                    "expression": {
                                                                                                      "type": "CallExpression",
                                                                                                      "callee": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": false,
                                                                                                        "object": {
                                                                                                          "type": "MemberExpression",
                                                                                                          "computed": false,
                                                                                                          "object": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "idbModules"
                                                                                                          },
                                                                                                          "property": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "util"
                                                                                                          }
                                                                                                        },
                                                                                                        "property": {
                                                                                                          "type": "Identifier",
                                                                                                          "name": "callback"
                                                                                                        }
                                                                                                      },
                                                                                                      "arguments": [
                                                                                                        {
                                                                                                          "type": "Literal",
                                                                                                          "value": "onsuccess"
                                                                                                        },
                                                                                                        {
                                                                                                          "type": "Identifier",
                                                                                                          "name": "req"
                                                                                                        },
                                                                                                        {
                                                                                                          "type": "Identifier",
                                                                                                          "name": "e"
                                                                                                        }
                                                                                                      ]
                                                                                                    }
                                                                                                  }
                                                                                                ]
                                                                                              }
                                                                                            }
                                                                                          ]
                                                                                        },
                                                                                        "rest": null,
                                                                                        "generator": false,
                                                                                        "expression": false
                                                                                      },
                                                                                      {
                                                                                        "type": "Identifier",
                                                                                        "name": "dbCreateError"
                                                                                      }
                                                                                    ]
                                                                                  }
                                                                                }
                                                                              ]
                                                                            },
                                                                            "rest": null,
                                                                            "generator": false,
                                                                            "expression": false
                                                                          },
                                                                          {
                                                                            "type": "Identifier",
                                                                            "name": "dbCreateError"
                                                                          }
                                                                        ]
                                                                      }
                                                                    }
                                                                  ]
                                                                },
                                                                "rest": null,
                                                                "generator": false,
                                                                "expression": false
                                                              },
                                                              {
                                                                "type": "Identifier",
                                                                "name": "dbCreateError"
                                                              }
                                                            ]
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "rest": null,
                                                    "generator": false,
                                                    "expression": false
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "sysdb"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "transaction"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "FunctionExpression",
                                                          "id": null,
                                                          "params": [
                                                            {
                                                              "type": "Identifier",
                                                              "name": "tx"
                                                            }
                                                          ],
                                                          "defaults": [],
                                                          "body": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                              {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "tx"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "executeSql"
                                                                    }
                                                                  },
                                                                  "arguments": [
                                                                    {
                                                                      "type": "Literal",
                                                                      "value": "SELECT * FROM dbVersions where name = ?"
                                                                    },
                                                                    {
                                                                      "type": "ArrayExpression",
                                                                      "elements": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "name": "name"
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "FunctionExpression",
                                                                      "id": null,
                                                                      "params": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "name": "tx"
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "name": "data"
                                                                        }
                                                                      ],
                                                                      "defaults": [],
                                                                      "body": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                          {
                                                                            "type": "IfStatement",
                                                                            "test": {
                                                                              "type": "BinaryExpression",
                                                                              "operator": "===",
                                                                              "left": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "MemberExpression",
                                                                                  "computed": false,
                                                                                  "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "data"
                                                                                  },
                                                                                  "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "rows"
                                                                                  }
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "length"
                                                                                }
                                                                              },
                                                                              "right": {
                                                                                "type": "Literal",
                                                                                "value": 0
                                                                              }
                                                                            },
                                                                            "consequent": {
                                                                              "type": "BlockStatement",
                                                                              "body": [
                                                                                {
                                                                                  "type": "ExpressionStatement",
                                                                                  "expression": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                      "type": "MemberExpression",
                                                                                      "computed": false,
                                                                                      "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "tx"
                                                                                      },
                                                                                      "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "executeSql"
                                                                                      }
                                                                                    },
                                                                                    "arguments": [
                                                                                      {
                                                                                        "type": "Literal",
                                                                                        "value": "INSERT INTO dbVersions VALUES (?,?)"
                                                                                      },
                                                                                      {
                                                                                        "type": "ArrayExpression",
                                                                                        "elements": [
                                                                                          {
                                                                                            "type": "Identifier",
                                                                                            "name": "name"
                                                                                          },
                                                                                          {
                                                                                            "type": "LogicalExpression",
                                                                                            "operator": "||",
                                                                                            "left": {
                                                                                              "type": "Identifier",
                                                                                              "name": "version"
                                                                                            },
                                                                                            "right": {
                                                                                              "type": "Literal",
                                                                                              "value": 1
                                                                                            }
                                                                                          }
                                                                                        ]
                                                                                      },
                                                                                      {
                                                                                        "type": "FunctionExpression",
                                                                                        "id": null,
                                                                                        "params": [],
                                                                                        "defaults": [],
                                                                                        "body": {
                                                                                          "type": "BlockStatement",
                                                                                          "body": [
                                                                                            {
                                                                                              "type": "ExpressionStatement",
                                                                                              "expression": {
                                                                                                "type": "CallExpression",
                                                                                                "callee": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "openDB"
                                                                                                },
                                                                                                "arguments": [
                                                                                                  {
                                                                                                    "type": "Literal",
                                                                                                    "value": 0
                                                                                                  }
                                                                                                ]
                                                                                              }
                                                                                            }
                                                                                          ]
                                                                                        },
                                                                                        "rest": null,
                                                                                        "generator": false,
                                                                                        "expression": false
                                                                                      },
                                                                                      {
                                                                                        "type": "Identifier",
                                                                                        "name": "dbCreateError"
                                                                                      }
                                                                                    ]
                                                                                  }
                                                                                }
                                                                              ]
                                                                            },
                                                                            "alternate": {
                                                                              "type": "BlockStatement",
                                                                              "body": [
                                                                                {
                                                                                  "type": "ExpressionStatement",
                                                                                  "expression": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                      "type": "Identifier",
                                                                                      "name": "openDB"
                                                                                    },
                                                                                    "arguments": [
                                                                                      {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                          "type": "CallExpression",
                                                                                          "callee": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                              "type": "MemberExpression",
                                                                                              "computed": false,
                                                                                              "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "data"
                                                                                              },
                                                                                              "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "rows"
                                                                                              }
                                                                                            },
                                                                                            "property": {
                                                                                              "type": "Identifier",
                                                                                              "name": "item"
                                                                                            }
                                                                                          },
                                                                                          "arguments": [
                                                                                            {
                                                                                              "type": "Literal",
                                                                                              "value": 0
                                                                                            }
                                                                                          ]
                                                                                        },
                                                                                        "property": {
                                                                                          "type": "Identifier",
                                                                                          "name": "version"
                                                                                        }
                                                                                      }
                                                                                    ]
                                                                                  }
                                                                                }
                                                                              ]
                                                                            }
                                                                          }
                                                                        ]
                                                                      },
                                                                      "rest": null,
                                                                      "generator": false,
                                                                      "expression": false
                                                                    },
                                                                    {
                                                                      "type": "Identifier",
                                                                      "name": "dbCreateError"
                                                                    }
                                                                  ]
                                                                }
                                                              }
                                                            ]
                                                          },
                                                          "rest": null,
                                                          "generator": false,
                                                          "expression": false
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "name": "dbCreateError"
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                      "type": "Identifier",
                                                      "name": "req"
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Literal",
                                              "value": "deleteDatabase"
                                            },
                                            "value": {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "name"
                                                }
                                              ],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                      {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                          "type": "Identifier",
                                                          "name": "req"
                                                        },
                                                        "init": {
                                                          "type": "NewExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "idbModules"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "IDBOpenRequest"
                                                            }
                                                          },
                                                          "arguments": []
                                                        }
                                                      }
                                                    ],
                                                    "kind": "var"
                                                  },
                                                  {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                      {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                          "type": "Identifier",
                                                          "name": "calledDBError"
                                                        },
                                                        "init": {
                                                          "type": "Literal",
                                                          "value": false
                                                        }
                                                      }
                                                    ],
                                                    "kind": "var"
                                                  },
                                                  {
                                                    "type": "FunctionDeclaration",
                                                    "id": {
                                                      "type": "Identifier",
                                                      "name": "dbError"
                                                    },
                                                    "params": [
                                                      {
                                                        "type": "Identifier",
                                                        "name": "msg"
                                                      }
                                                    ],
                                                    "defaults": [],
                                                    "body": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "IfStatement",
                                                          "test": {
                                                            "type": "Identifier",
                                                            "name": "calledDBError"
                                                          },
                                                          "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                              {
                                                                "type": "ReturnStatement",
                                                                "argument": null
                                                              }
                                                            ]
                                                          },
                                                          "alternate": null
                                                        },
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "req"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "readyState"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "Literal",
                                                              "value": "done"
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "req"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "error"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "Literal",
                                                              "value": "DOMError"
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "VariableDeclaration",
                                                          "declarations": [
                                                            {
                                                              "type": "VariableDeclarator",
                                                              "id": {
                                                                "type": "Identifier",
                                                                "name": "e"
                                                              },
                                                              "init": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "idbModules"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "Event"
                                                                  }
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "Literal",
                                                                    "value": "error"
                                                                  }
                                                                ]
                                                              }
                                                            }
                                                          ],
                                                          "kind": "var"
                                                        },
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "e"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "message"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "msg"
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "e"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "debug"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "arguments"
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "idbModules"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "util"
                                                                }
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "callback"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "Literal",
                                                                "value": "onerror"
                                                              },
                                                              {
                                                                "type": "Identifier",
                                                                "name": "req"
                                                              },
                                                              {
                                                                "type": "Identifier",
                                                                "name": "e"
                                                              }
                                                            ]
                                                          }
                                                        },
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "calledDBError"
                                                            },
                                                            "right": {
                                                              "type": "Literal",
                                                              "value": true
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "rest": null,
                                                    "generator": false,
                                                    "expression": false
                                                  },
                                                  {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                      {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                          "type": "Identifier",
                                                          "name": "version"
                                                        },
                                                        "init": {
                                                          "type": "Literal",
                                                          "value": null
                                                        }
                                                      }
                                                    ],
                                                    "kind": "var"
                                                  },
                                                  {
                                                    "type": "FunctionDeclaration",
                                                    "id": {
                                                      "type": "Identifier",
                                                      "name": "deleteFromDbVersions"
                                                    },
                                                    "params": [],
                                                    "defaults": [],
                                                    "body": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "sysdb"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "transaction"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "FunctionExpression",
                                                                "id": null,
                                                                "params": [
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "systx"
                                                                  }
                                                                ],
                                                                "defaults": [],
                                                                "body": {
                                                                  "type": "BlockStatement",
                                                                  "body": [
                                                                    {
                                                                      "type": "ExpressionStatement",
                                                                      "expression": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "systx"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "executeSql"
                                                                          }
                                                                        },
                                                                        "arguments": [
                                                                          {
                                                                            "type": "Literal",
                                                                            "value": "DELETE FROM dbVersions where name = ? "
                                                                          },
                                                                          {
                                                                            "type": "ArrayExpression",
                                                                            "elements": [
                                                                              {
                                                                                "type": "Identifier",
                                                                                "name": "name"
                                                                              }
                                                                            ]
                                                                          },
                                                                          {
                                                                            "type": "FunctionExpression",
                                                                            "id": null,
                                                                            "params": [],
                                                                            "defaults": [],
                                                                            "body": {
                                                                              "type": "BlockStatement",
                                                                              "body": [
                                                                                {
                                                                                  "type": "ExpressionStatement",
                                                                                  "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                      "type": "MemberExpression",
                                                                                      "computed": false,
                                                                                      "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "req"
                                                                                      },
                                                                                      "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "result"
                                                                                      }
                                                                                    },
                                                                                    "right": {
                                                                                      "type": "Identifier",
                                                                                      "name": "undefined"
                                                                                    }
                                                                                  }
                                                                                },
                                                                                {
                                                                                  "type": "VariableDeclaration",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "type": "VariableDeclarator",
                                                                                      "id": {
                                                                                        "type": "Identifier",
                                                                                        "name": "e"
                                                                                      },
                                                                                      "init": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                          "type": "MemberExpression",
                                                                                          "computed": false,
                                                                                          "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "idbModules"
                                                                                          },
                                                                                          "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "Event"
                                                                                          }
                                                                                        },
                                                                                        "arguments": [
                                                                                          {
                                                                                            "type": "Literal",
                                                                                            "value": "success"
                                                                                          }
                                                                                        ]
                                                                                      }
                                                                                    }
                                                                                  ],
                                                                                  "kind": "var"
                                                                                },
                                                                                {
                                                                                  "type": "ExpressionStatement",
                                                                                  "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                      "type": "MemberExpression",
                                                                                      "computed": false,
                                                                                      "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "e"
                                                                                      },
                                                                                      "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "newVersion"
                                                                                      }
                                                                                    },
                                                                                    "right": {
                                                                                      "type": "Literal",
                                                                                      "value": null
                                                                                    }
                                                                                  }
                                                                                },
                                                                                {
                                                                                  "type": "ExpressionStatement",
                                                                                  "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                      "type": "MemberExpression",
                                                                                      "computed": false,
                                                                                      "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "e"
                                                                                      },
                                                                                      "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "oldVersion"
                                                                                      }
                                                                                    },
                                                                                    "right": {
                                                                                      "type": "Identifier",
                                                                                      "name": "version"
                                                                                    }
                                                                                  }
                                                                                },
                                                                                {
                                                                                  "type": "ExpressionStatement",
                                                                                  "expression": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                      "type": "MemberExpression",
                                                                                      "computed": false,
                                                                                      "object": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                          "type": "Identifier",
                                                                                          "name": "idbModules"
                                                                                        },
                                                                                        "property": {
                                                                                          "type": "Identifier",
                                                                                          "name": "util"
                                                                                        }
                                                                                      },
                                                                                      "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "callback"
                                                                                      }
                                                                                    },
                                                                                    "arguments": [
                                                                                      {
                                                                                        "type": "Literal",
                                                                                        "value": "onsuccess"
                                                                                      },
                                                                                      {
                                                                                        "type": "Identifier",
                                                                                        "name": "req"
                                                                                      },
                                                                                      {
                                                                                        "type": "Identifier",
                                                                                        "name": "e"
                                                                                      }
                                                                                    ]
                                                                                  }
                                                                                }
                                                                              ]
                                                                            },
                                                                            "rest": null,
                                                                            "generator": false,
                                                                            "expression": false
                                                                          },
                                                                          {
                                                                            "type": "Identifier",
                                                                            "name": "dbError"
                                                                          }
                                                                        ]
                                                                      }
                                                                    }
                                                                  ]
                                                                },
                                                                "rest": null,
                                                                "generator": false,
                                                                "expression": false
                                                              },
                                                              {
                                                                "type": "Identifier",
                                                                "name": "dbError"
                                                              }
                                                            ]
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "rest": null,
                                                    "generator": false,
                                                    "expression": false
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "sysdb"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "transaction"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "FunctionExpression",
                                                          "id": null,
                                                          "params": [
                                                            {
                                                              "type": "Identifier",
                                                              "name": "systx"
                                                            }
                                                          ],
                                                          "defaults": [],
                                                          "body": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                              {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "systx"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "executeSql"
                                                                    }
                                                                  },
                                                                  "arguments": [
                                                                    {
                                                                      "type": "Literal",
                                                                      "value": "SELECT * FROM dbVersions where name = ?"
                                                                    },
                                                                    {
                                                                      "type": "ArrayExpression",
                                                                      "elements": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "name": "name"
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "FunctionExpression",
                                                                      "id": null,
                                                                      "params": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "name": "tx"
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "name": "data"
                                                                        }
                                                                      ],
                                                                      "defaults": [],
                                                                      "body": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                          {
                                                                            "type": "IfStatement",
                                                                            "test": {
                                                                              "type": "BinaryExpression",
                                                                              "operator": "===",
                                                                              "left": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "MemberExpression",
                                                                                  "computed": false,
                                                                                  "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "data"
                                                                                  },
                                                                                  "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "rows"
                                                                                  }
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "length"
                                                                                }
                                                                              },
                                                                              "right": {
                                                                                "type": "Literal",
                                                                                "value": 0
                                                                              }
                                                                            },
                                                                            "consequent": {
                                                                              "type": "BlockStatement",
                                                                              "body": [
                                                                                {
                                                                                  "type": "ExpressionStatement",
                                                                                  "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                      "type": "MemberExpression",
                                                                                      "computed": false,
                                                                                      "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "req"
                                                                                      },
                                                                                      "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "result"
                                                                                      }
                                                                                    },
                                                                                    "right": {
                                                                                      "type": "Identifier",
                                                                                      "name": "undefined"
                                                                                    }
                                                                                  }
                                                                                },
                                                                                {
                                                                                  "type": "VariableDeclaration",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "type": "VariableDeclarator",
                                                                                      "id": {
                                                                                        "type": "Identifier",
                                                                                        "name": "e"
                                                                                      },
                                                                                      "init": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                          "type": "MemberExpression",
                                                                                          "computed": false,
                                                                                          "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "idbModules"
                                                                                          },
                                                                                          "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "Event"
                                                                                          }
                                                                                        },
                                                                                        "arguments": [
                                                                                          {
                                                                                            "type": "Literal",
                                                                                            "value": "success"
                                                                                          }
                                                                                        ]
                                                                                      }
                                                                                    }
                                                                                  ],
                                                                                  "kind": "var"
                                                                                },
                                                                                {
                                                                                  "type": "ExpressionStatement",
                                                                                  "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                      "type": "MemberExpression",
                                                                                      "computed": false,
                                                                                      "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "e"
                                                                                      },
                                                                                      "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "newVersion"
                                                                                      }
                                                                                    },
                                                                                    "right": {
                                                                                      "type": "Literal",
                                                                                      "value": null
                                                                                    }
                                                                                  }
                                                                                },
                                                                                {
                                                                                  "type": "ExpressionStatement",
                                                                                  "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                      "type": "MemberExpression",
                                                                                      "computed": false,
                                                                                      "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "e"
                                                                                      },
                                                                                      "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "oldVersion"
                                                                                      }
                                                                                    },
                                                                                    "right": {
                                                                                      "type": "Identifier",
                                                                                      "name": "version"
                                                                                    }
                                                                                  }
                                                                                },
                                                                                {
                                                                                  "type": "ExpressionStatement",
                                                                                  "expression": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                      "type": "MemberExpression",
                                                                                      "computed": false,
                                                                                      "object": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                          "type": "Identifier",
                                                                                          "name": "idbModules"
                                                                                        },
                                                                                        "property": {
                                                                                          "type": "Identifier",
                                                                                          "name": "util"
                                                                                        }
                                                                                      },
                                                                                      "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "callback"
                                                                                      }
                                                                                    },
                                                                                    "arguments": [
                                                                                      {
                                                                                        "type": "Literal",
                                                                                        "value": "onsuccess"
                                                                                      },
                                                                                      {
                                                                                        "type": "Identifier",
                                                                                        "name": "req"
                                                                                      },
                                                                                      {
                                                                                        "type": "Identifier",
                                                                                        "name": "e"
                                                                                      }
                                                                                    ]
                                                                                  }
                                                                                },
                                                                                {
                                                                                  "type": "ReturnStatement",
                                                                                  "argument": null
                                                                                }
                                                                              ]
                                                                            },
                                                                            "alternate": null
                                                                          },
                                                                          {
                                                                            "type": "ExpressionStatement",
                                                                            "expression": {
                                                                              "type": "AssignmentExpression",
                                                                              "operator": "=",
                                                                              "left": {
                                                                                "type": "Identifier",
                                                                                "name": "version"
                                                                              },
                                                                              "right": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "CallExpression",
                                                                                  "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "MemberExpression",
                                                                                      "computed": false,
                                                                                      "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "data"
                                                                                      },
                                                                                      "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "rows"
                                                                                      }
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "item"
                                                                                    }
                                                                                  },
                                                                                  "arguments": [
                                                                                    {
                                                                                      "type": "Literal",
                                                                                      "value": 0
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "version"
                                                                                }
                                                                              }
                                                                            }
                                                                          },
                                                                          {
                                                                            "type": "VariableDeclaration",
                                                                            "declarations": [
                                                                              {
                                                                                "type": "VariableDeclarator",
                                                                                "id": {
                                                                                  "type": "Identifier",
                                                                                  "name": "db"
                                                                                },
                                                                                "init": {
                                                                                  "type": "CallExpression",
                                                                                  "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "window"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "openDatabase"
                                                                                    }
                                                                                  },
                                                                                  "arguments": [
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "name": "name"
                                                                                    },
                                                                                    {
                                                                                      "type": "Literal",
                                                                                      "value": 1
                                                                                    },
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "name": "name"
                                                                                    },
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "name": "DEFAULT_DB_SIZE"
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              }
                                                                            ],
                                                                            "kind": "var"
                                                                          },
                                                                          {
                                                                            "type": "ExpressionStatement",
                                                                            "expression": {
                                                                              "type": "CallExpression",
                                                                              "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "db"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "transaction"
                                                                                }
                                                                              },
                                                                              "arguments": [
                                                                                {
                                                                                  "type": "FunctionExpression",
                                                                                  "id": null,
                                                                                  "params": [
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "name": "tx"
                                                                                    }
                                                                                  ],
                                                                                  "defaults": [],
                                                                                  "body": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                      {
                                                                                        "type": "ExpressionStatement",
                                                                                        "expression": {
                                                                                          "type": "CallExpression",
                                                                                          "callee": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                              "type": "Identifier",
                                                                                              "name": "tx"
                                                                                            },
                                                                                            "property": {
                                                                                              "type": "Identifier",
                                                                                              "name": "executeSql"
                                                                                            }
                                                                                          },
                                                                                          "arguments": [
                                                                                            {
                                                                                              "type": "Literal",
                                                                                              "value": "SELECT * FROM __sys__"
                                                                                            },
                                                                                            {
                                                                                              "type": "ArrayExpression",
                                                                                              "elements": []
                                                                                            },
                                                                                            {
                                                                                              "type": "FunctionExpression",
                                                                                              "id": null,
                                                                                              "params": [
                                                                                                {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "tx"
                                                                                                },
                                                                                                {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "data"
                                                                                                }
                                                                                              ],
                                                                                              "defaults": [],
                                                                                              "body": {
                                                                                                "type": "BlockStatement",
                                                                                                "body": [
                                                                                                  {
                                                                                                    "type": "VariableDeclaration",
                                                                                                    "declarations": [
                                                                                                      {
                                                                                                        "type": "VariableDeclarator",
                                                                                                        "id": {
                                                                                                          "type": "Identifier",
                                                                                                          "name": "tables"
                                                                                                        },
                                                                                                        "init": {
                                                                                                          "type": "MemberExpression",
                                                                                                          "computed": false,
                                                                                                          "object": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "data"
                                                                                                          },
                                                                                                          "property": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "rows"
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    ],
                                                                                                    "kind": "var"
                                                                                                  },
                                                                                                  {
                                                                                                    "type": "ExpressionStatement",
                                                                                                    "expression": {
                                                                                                      "type": "CallExpression",
                                                                                                      "callee": {
                                                                                                        "type": "FunctionExpression",
                                                                                                        "id": {
                                                                                                          "type": "Identifier",
                                                                                                          "name": "deleteTables"
                                                                                                        },
                                                                                                        "params": [
                                                                                                          {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "i"
                                                                                                          }
                                                                                                        ],
                                                                                                        "defaults": [],
                                                                                                        "body": {
                                                                                                          "type": "BlockStatement",
                                                                                                          "body": [
                                                                                                            {
                                                                                                              "type": "IfStatement",
                                                                                                              "test": {
                                                                                                                "type": "BinaryExpression",
                                                                                                                "operator": ">=",
                                                                                                                "left": {
                                                                                                                  "type": "Identifier",
                                                                                                                  "name": "i"
                                                                                                                },
                                                                                                                "right": {
                                                                                                                  "type": "MemberExpression",
                                                                                                                  "computed": false,
                                                                                                                  "object": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "tables"
                                                                                                                  },
                                                                                                                  "property": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "length"
                                                                                                                  }
                                                                                                                }
                                                                                                              },
                                                                                                              "consequent": {
                                                                                                                "type": "BlockStatement",
                                                                                                                "body": [
                                                                                                                  {
                                                                                                                    "type": "ExpressionStatement",
                                                                                                                    "expression": {
                                                                                                                      "type": "CallExpression",
                                                                                                                      "callee": {
                                                                                                                        "type": "MemberExpression",
                                                                                                                        "computed": false,
                                                                                                                        "object": {
                                                                                                                          "type": "Identifier",
                                                                                                                          "name": "tx"
                                                                                                                        },
                                                                                                                        "property": {
                                                                                                                          "type": "Identifier",
                                                                                                                          "name": "executeSql"
                                                                                                                        }
                                                                                                                      },
                                                                                                                      "arguments": [
                                                                                                                        {
                                                                                                                          "type": "Literal",
                                                                                                                          "value": "DROP TABLE __sys__"
                                                                                                                        },
                                                                                                                        {
                                                                                                                          "type": "ArrayExpression",
                                                                                                                          "elements": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                          "type": "FunctionExpression",
                                                                                                                          "id": null,
                                                                                                                          "params": [],
                                                                                                                          "defaults": [],
                                                                                                                          "body": {
                                                                                                                            "type": "BlockStatement",
                                                                                                                            "body": [
                                                                                                                              {
                                                                                                                                "type": "ExpressionStatement",
                                                                                                                                "expression": {
                                                                                                                                  "type": "CallExpression",
                                                                                                                                  "callee": {
                                                                                                                                    "type": "Identifier",
                                                                                                                                    "name": "deleteFromDbVersions"
                                                                                                                                  },
                                                                                                                                  "arguments": []
                                                                                                                                }
                                                                                                                              }
                                                                                                                            ]
                                                                                                                          },
                                                                                                                          "rest": null,
                                                                                                                          "generator": false,
                                                                                                                          "expression": false
                                                                                                                        },
                                                                                                                        {
                                                                                                                          "type": "Identifier",
                                                                                                                          "name": "dbError"
                                                                                                                        }
                                                                                                                      ]
                                                                                                                    }
                                                                                                                  }
                                                                                                                ]
                                                                                                              },
                                                                                                              "alternate": {
                                                                                                                "type": "BlockStatement",
                                                                                                                "body": [
                                                                                                                  {
                                                                                                                    "type": "ExpressionStatement",
                                                                                                                    "expression": {
                                                                                                                      "type": "CallExpression",
                                                                                                                      "callee": {
                                                                                                                        "type": "MemberExpression",
                                                                                                                        "computed": false,
                                                                                                                        "object": {
                                                                                                                          "type": "Identifier",
                                                                                                                          "name": "tx"
                                                                                                                        },
                                                                                                                        "property": {
                                                                                                                          "type": "Identifier",
                                                                                                                          "name": "executeSql"
                                                                                                                        }
                                                                                                                      },
                                                                                                                      "arguments": [
                                                                                                                        {
                                                                                                                          "type": "BinaryExpression",
                                                                                                                          "operator": "+",
                                                                                                                          "left": {
                                                                                                                            "type": "Literal",
                                                                                                                            "value": "DROP TABLE "
                                                                                                                          },
                                                                                                                          "right": {
                                                                                                                            "type": "CallExpression",
                                                                                                                            "callee": {
                                                                                                                              "type": "MemberExpression",
                                                                                                                              "computed": false,
                                                                                                                              "object": {
                                                                                                                                "type": "MemberExpression",
                                                                                                                                "computed": false,
                                                                                                                                "object": {
                                                                                                                                  "type": "Identifier",
                                                                                                                                  "name": "idbModules"
                                                                                                                                },
                                                                                                                                "property": {
                                                                                                                                  "type": "Identifier",
                                                                                                                                  "name": "util"
                                                                                                                                }
                                                                                                                              },
                                                                                                                              "property": {
                                                                                                                                "type": "Identifier",
                                                                                                                                "name": "quote"
                                                                                                                              }
                                                                                                                            },
                                                                                                                            "arguments": [
                                                                                                                              {
                                                                                                                                "type": "MemberExpression",
                                                                                                                                "computed": false,
                                                                                                                                "object": {
                                                                                                                                  "type": "CallExpression",
                                                                                                                                  "callee": {
                                                                                                                                    "type": "MemberExpression",
                                                                                                                                    "computed": false,
                                                                                                                                    "object": {
                                                                                                                                      "type": "Identifier",
                                                                                                                                      "name": "tables"
                                                                                                                                    },
                                                                                                                                    "property": {
                                                                                                                                      "type": "Identifier",
                                                                                                                                      "name": "item"
                                                                                                                                    }
                                                                                                                                  },
                                                                                                                                  "arguments": [
                                                                                                                                    {
                                                                                                                                      "type": "Identifier",
                                                                                                                                      "name": "i"
                                                                                                                                    }
                                                                                                                                  ]
                                                                                                                                },
                                                                                                                                "property": {
                                                                                                                                  "type": "Identifier",
                                                                                                                                  "name": "name"
                                                                                                                                }
                                                                                                                              }
                                                                                                                            ]
                                                                                                                          }
                                                                                                                        },
                                                                                                                        {
                                                                                                                          "type": "ArrayExpression",
                                                                                                                          "elements": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                          "type": "FunctionExpression",
                                                                                                                          "id": null,
                                                                                                                          "params": [],
                                                                                                                          "defaults": [],
                                                                                                                          "body": {
                                                                                                                            "type": "BlockStatement",
                                                                                                                            "body": [
                                                                                                                              {
                                                                                                                                "type": "ExpressionStatement",
                                                                                                                                "expression": {
                                                                                                                                  "type": "CallExpression",
                                                                                                                                  "callee": {
                                                                                                                                    "type": "Identifier",
                                                                                                                                    "name": "deleteTables"
                                                                                                                                  },
                                                                                                                                  "arguments": [
                                                                                                                                    {
                                                                                                                                      "type": "BinaryExpression",
                                                                                                                                      "operator": "+",
                                                                                                                                      "left": {
                                                                                                                                        "type": "Identifier",
                                                                                                                                        "name": "i"
                                                                                                                                      },
                                                                                                                                      "right": {
                                                                                                                                        "type": "Literal",
                                                                                                                                        "value": 1
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                  ]
                                                                                                                                }
                                                                                                                              }
                                                                                                                            ]
                                                                                                                          },
                                                                                                                          "rest": null,
                                                                                                                          "generator": false,
                                                                                                                          "expression": false
                                                                                                                        },
                                                                                                                        {
                                                                                                                          "type": "FunctionExpression",
                                                                                                                          "id": null,
                                                                                                                          "params": [],
                                                                                                                          "defaults": [],
                                                                                                                          "body": {
                                                                                                                            "type": "BlockStatement",
                                                                                                                            "body": [
                                                                                                                              {
                                                                                                                                "type": "ExpressionStatement",
                                                                                                                                "expression": {
                                                                                                                                  "type": "CallExpression",
                                                                                                                                  "callee": {
                                                                                                                                    "type": "Identifier",
                                                                                                                                    "name": "deleteTables"
                                                                                                                                  },
                                                                                                                                  "arguments": [
                                                                                                                                    {
                                                                                                                                      "type": "BinaryExpression",
                                                                                                                                      "operator": "+",
                                                                                                                                      "left": {
                                                                                                                                        "type": "Identifier",
                                                                                                                                        "name": "i"
                                                                                                                                      },
                                                                                                                                      "right": {
                                                                                                                                        "type": "Literal",
                                                                                                                                        "value": 1
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                  ]
                                                                                                                                }
                                                                                                                              }
                                                                                                                            ]
                                                                                                                          },
                                                                                                                          "rest": null,
                                                                                                                          "generator": false,
                                                                                                                          "expression": false
                                                                                                                        }
                                                                                                                      ]
                                                                                                                    }
                                                                                                                  }
                                                                                                                ]
                                                                                                              }
                                                                                                            }
                                                                                                          ]
                                                                                                        },
                                                                                                        "rest": null,
                                                                                                        "generator": false,
                                                                                                        "expression": false
                                                                                                      },
                                                                                                      "arguments": [
                                                                                                        {
                                                                                                          "type": "Literal",
                                                                                                          "value": 0
                                                                                                        }
                                                                                                      ]
                                                                                                    }
                                                                                                  }
                                                                                                ]
                                                                                              },
                                                                                              "rest": null,
                                                                                              "generator": false,
                                                                                              "expression": false
                                                                                            },
                                                                                            {
                                                                                              "type": "FunctionExpression",
                                                                                              "id": null,
                                                                                              "params": [
                                                                                                {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "e"
                                                                                                }
                                                                                              ],
                                                                                              "defaults": [],
                                                                                              "body": {
                                                                                                "type": "BlockStatement",
                                                                                                "body": [
                                                                                                  {
                                                                                                    "type": "ExpressionStatement",
                                                                                                    "expression": {
                                                                                                      "type": "CallExpression",
                                                                                                      "callee": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "deleteFromDbVersions"
                                                                                                      },
                                                                                                      "arguments": []
                                                                                                    }
                                                                                                  }
                                                                                                ]
                                                                                              },
                                                                                              "rest": null,
                                                                                              "generator": false,
                                                                                              "expression": false
                                                                                            }
                                                                                          ]
                                                                                        }
                                                                                      }
                                                                                    ]
                                                                                  },
                                                                                  "rest": null,
                                                                                  "generator": false,
                                                                                  "expression": false
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "name": "dbError"
                                                                                }
                                                                              ]
                                                                            }
                                                                          }
                                                                        ]
                                                                      },
                                                                      "rest": null,
                                                                      "generator": false,
                                                                      "expression": false
                                                                    }
                                                                  ]
                                                                }
                                                              }
                                                            ]
                                                          },
                                                          "rest": null,
                                                          "generator": false,
                                                          "expression": false
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "name": "dbError"
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                      "type": "Identifier",
                                                      "name": "req"
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Literal",
                                              "value": "cmp"
                                            },
                                            "value": {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "key1"
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "name": "key2"
                                                }
                                              ],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                      "type": "ConditionalExpression",
                                                      "test": {
                                                        "type": "BinaryExpression",
                                                        "operator": ">",
                                                        "left": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "idbModules"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "Key"
                                                              }
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "encode"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "Identifier",
                                                              "name": "key1"
                                                            }
                                                          ]
                                                        },
                                                        "right": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "idbModules"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "Key"
                                                              }
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "encode"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "Identifier",
                                                              "name": "key2"
                                                            }
                                                          ]
                                                        }
                                                      },
                                                      "consequent": {
                                                        "type": "Literal",
                                                        "value": 1
                                                      },
                                                      "alternate": {
                                                        "type": "ConditionalExpression",
                                                        "test": {
                                                          "type": "BinaryExpression",
                                                          "operator": "===",
                                                          "left": {
                                                            "type": "Identifier",
                                                            "name": "key1"
                                                          },
                                                          "right": {
                                                            "type": "Identifier",
                                                            "name": "key2"
                                                          }
                                                        },
                                                        "consequent": {
                                                          "type": "Literal",
                                                          "value": 0
                                                        },
                                                        "alternate": {
                                                          "type": "UnaryExpression",
                                                          "operator": "-",
                                                          "argument": {
                                                            "type": "Literal",
                                                            "value": 1
                                                          },
                                                          "prefix": true
                                                        }
                                                      }
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            },
                                            "kind": "init"
                                          }
                                        ]
                                      }
                                    }
                                  ],
                                  "kind": "var"
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "idbModules"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "shimIndexedDB"
                                      }
                                    },
                                    "right": {
                                      "type": "Identifier",
                                      "name": "shimIndexedDB"
                                    }
                                  }
                                }
                              ]
                            },
                            "rest": null,
                            "generator": false,
                            "expression": false
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "idbModules"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [
                              {
                                "type": "Identifier",
                                "name": "window"
                              },
                              {
                                "type": "Identifier",
                                "name": "idbModules"
                              }
                            ],
                            "defaults": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "IfStatement",
                                  "test": {
                                    "type": "BinaryExpression",
                                    "operator": "!==",
                                    "left": {
                                      "type": "UnaryExpression",
                                      "operator": "typeof",
                                      "argument": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "window"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "openDatabase"
                                        }
                                      },
                                      "prefix": true
                                    },
                                    "right": {
                                      "type": "Literal",
                                      "value": "undefined"
                                    }
                                  },
                                  "consequent": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "window"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "shimIndexedDB"
                                            }
                                          },
                                          "right": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "idbModules"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "shimIndexedDB"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "IfStatement",
                                        "test": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "window"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "shimIndexedDB"
                                          }
                                        },
                                        "consequent": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "window"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "shimIndexedDB"
                                                    }
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "__useShim"
                                                  }
                                                },
                                                "right": {
                                                  "type": "FunctionExpression",
                                                  "id": null,
                                                  "params": [],
                                                  "defaults": [],
                                                  "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "AssignmentExpression",
                                                          "operator": "=",
                                                          "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "window"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "indexedDB"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "idbModules"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "shimIndexedDB"
                                                            }
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "AssignmentExpression",
                                                          "operator": "=",
                                                          "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "window"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "IDBDatabase"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "idbModules"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "IDBDatabase"
                                                            }
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "AssignmentExpression",
                                                          "operator": "=",
                                                          "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "window"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "IDBTransaction"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "idbModules"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "IDBTransaction"
                                                            }
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "AssignmentExpression",
                                                          "operator": "=",
                                                          "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "window"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "IDBCursor"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "idbModules"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "IDBCursor"
                                                            }
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "AssignmentExpression",
                                                          "operator": "=",
                                                          "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "window"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "IDBKeyRange"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "idbModules"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "IDBKeyRange"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "rest": null,
                                                  "generator": false,
                                                  "expression": false
                                                }
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "window"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "shimIndexedDB"
                                                    }
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "__debug"
                                                  }
                                                },
                                                "right": {
                                                  "type": "FunctionExpression",
                                                  "id": null,
                                                  "params": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "val"
                                                    }
                                                  ],
                                                  "defaults": [],
                                                  "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "AssignmentExpression",
                                                          "operator": "=",
                                                          "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "idbModules"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "DEBUG"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Identifier",
                                                            "name": "val"
                                                          }
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "rest": null,
                                                  "generator": false,
                                                  "expression": false
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "alternate": null
                                      }
                                    ]
                                  },
                                  "alternate": null
                                },
                                {
                                  "type": "IfStatement",
                                  "test": {
                                    "type": "UnaryExpression",
                                    "operator": "!",
                                    "argument": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "window"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "indexedDB"
                                      }
                                    },
                                    "prefix": true
                                  },
                                  "consequent": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "window"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "indexedDB"
                                            }
                                          },
                                          "right": {
                                            "type": "LogicalExpression",
                                            "operator": "||",
                                            "left": {
                                              "type": "LogicalExpression",
                                              "operator": "||",
                                              "left": {
                                                "type": "LogicalExpression",
                                                "operator": "||",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "window"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "webkitIndexedDB"
                                                  }
                                                },
                                                "right": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "window"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "mozIndexedDB"
                                                  }
                                                }
                                              },
                                              "right": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "window"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "oIndexedDB"
                                                }
                                              }
                                            },
                                            "right": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "window"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "msIndexedDB"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "alternate": null
                                },
                                {
                                  "type": "IfStatement",
                                  "test": {
                                    "type": "LogicalExpression",
                                    "operator": "&&",
                                    "left": {
                                      "type": "BinaryExpression",
                                      "operator": "===",
                                      "left": {
                                        "type": "UnaryExpression",
                                        "operator": "typeof",
                                        "argument": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "window"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "indexedDB"
                                          }
                                        },
                                        "prefix": true
                                      },
                                      "right": {
                                        "type": "Literal",
                                        "value": "undefined"
                                      }
                                    },
                                    "right": {
                                      "type": "BinaryExpression",
                                      "operator": "!==",
                                      "left": {
                                        "type": "UnaryExpression",
                                        "operator": "typeof",
                                        "argument": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "window"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "openDatabase"
                                          }
                                        },
                                        "prefix": true
                                      },
                                      "right": {
                                        "type": "Literal",
                                        "value": "undefined"
                                      }
                                    }
                                  },
                                  "consequent": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "window"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "shimIndexedDB"
                                              }
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "__useShim"
                                            }
                                          },
                                          "arguments": []
                                        }
                                      }
                                    ]
                                  },
                                  "alternate": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "window"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "IDBDatabase"
                                            }
                                          },
                                          "right": {
                                            "type": "LogicalExpression",
                                            "operator": "||",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "window"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "IDBDatabase"
                                              }
                                            },
                                            "right": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "window"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "webkitIDBDatabase"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "window"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "IDBTransaction"
                                            }
                                          },
                                          "right": {
                                            "type": "LogicalExpression",
                                            "operator": "||",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "window"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "IDBTransaction"
                                              }
                                            },
                                            "right": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "window"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "webkitIDBTransaction"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "window"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "IDBCursor"
                                            }
                                          },
                                          "right": {
                                            "type": "LogicalExpression",
                                            "operator": "||",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "window"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "IDBCursor"
                                              }
                                            },
                                            "right": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "window"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "webkitIDBCursor"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "window"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "IDBKeyRange"
                                            }
                                          },
                                          "right": {
                                            "type": "LogicalExpression",
                                            "operator": "||",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "window"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "IDBKeyRange"
                                              }
                                            },
                                            "right": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "window"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "webkitIDBKeyRange"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "IfStatement",
                                        "test": {
                                          "type": "UnaryExpression",
                                          "operator": "!",
                                          "argument": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "window"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "IDBTransaction"
                                            }
                                          },
                                          "prefix": true
                                        },
                                        "consequent": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "window"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "IDBTransaction"
                                                  }
                                                },
                                                "right": {
                                                  "type": "ObjectExpression",
                                                  "properties": []
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "alternate": null
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "window"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "IDBTransaction"
                                              }
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "READ_ONLY"
                                            }
                                          },
                                          "right": {
                                            "type": "LogicalExpression",
                                            "operator": "||",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "window"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "IDBTransaction"
                                                }
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "READ_ONLY"
                                              }
                                            },
                                            "right": {
                                              "type": "Literal",
                                              "value": "readonly"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "window"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "IDBTransaction"
                                              }
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "READ_WRITE"
                                            }
                                          },
                                          "right": {
                                            "type": "LogicalExpression",
                                            "operator": "||",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "window"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "IDBTransaction"
                                                }
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "READ_WRITE"
                                              }
                                            },
                                            "right": {
                                              "type": "Literal",
                                              "value": "readwrite"
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "rest": null,
                            "generator": false,
                            "expression": false
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "window"
                            },
                            {
                              "type": "Identifier",
                              "name": "idbModules"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "rest": null,
                  "generator": false,
                  "expression": false
                },
                {
                  "type": "FunctionDeclaration",
                  "id": {
                    "type": "Identifier",
                    "name": "init"
                  },
                  "params": [
                    {
                      "type": "Identifier",
                      "name": "$"
                    }
                  ],
                  "defaults": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "IfStatement",
                        "test": {
                          "type": "BinaryExpression",
                          "operator": "!==",
                          "left": {
                            "type": "UnaryExpression",
                            "operator": "typeof",
                            "argument": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "$"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "indexedDB"
                              }
                            },
                            "prefix": true
                          },
                          "right": {
                            "type": "Literal",
                            "value": "undefined"
                          }
                        },
                        "consequent": {
                          "type": "ReturnStatement",
                          "argument": null
                        },
                        "alternate": null
                      },
                      {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "indexedDB"
                            },
                            "init": {
                              "type": "LogicalExpression",
                              "operator": "||",
                              "left": {
                                "type": "LogicalExpression",
                                "operator": "||",
                                "left": {
                                  "type": "LogicalExpression",
                                  "operator": "||",
                                  "left": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "window"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "indexedDB"
                                    }
                                  },
                                  "right": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "window"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "mozIndexedDB"
                                    }
                                  }
                                },
                                "right": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "window"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "webkitIndexedDB"
                                  }
                                }
                              },
                              "right": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "window"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "msIndexedDB"
                                }
                              }
                            }
                          }
                        ],
                        "kind": "var"
                      },
                      {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "IDBKeyRange"
                            },
                            "init": {
                              "type": "LogicalExpression",
                              "operator": "||",
                              "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "window"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "IDBKeyRange"
                                }
                              },
                              "right": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "window"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "webkitIDBKeyRange"
                                }
                              }
                            }
                          }
                        ],
                        "kind": "var"
                      },
                      {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "IDBCursor"
                            },
                            "init": {
                              "type": "LogicalExpression",
                              "operator": "||",
                              "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "window"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "IDBCursor"
                                }
                              },
                              "right": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "window"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "webkitIDBCursor"
                                }
                              }
                            }
                          }
                        ],
                        "kind": "var"
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "IDBCursor"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "PREV"
                            }
                          },
                          "right": {
                            "type": "LogicalExpression",
                            "operator": "||",
                            "left": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "IDBCursor"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "PREV"
                              }
                            },
                            "right": {
                              "type": "Literal",
                              "value": "prev"
                            }
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "IDBCursor"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "NEXT"
                            }
                          },
                          "right": {
                            "type": "LogicalExpression",
                            "operator": "||",
                            "left": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "IDBCursor"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "NEXT"
                              }
                            },
                            "right": {
                              "type": "Literal",
                              "value": "next"
                            }
                          }
                        }
                      },
                      {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "IDBTransaction"
                            },
                            "init": {
                              "type": "LogicalExpression",
                              "operator": "||",
                              "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "window"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "IDBTransaction"
                                }
                              },
                              "right": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "window"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "webkitIDBTransaction"
                                }
                              }
                            }
                          }
                        ],
                        "kind": "var"
                      },
                      {
                        "type": "FunctionDeclaration",
                        "id": {
                          "type": "Identifier",
                          "name": "getDefaultTransaction"
                        },
                        "params": [
                          {
                            "type": "Identifier",
                            "name": "mode"
                          }
                        ],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "VariableDeclaration",
                              "declarations": [
                                {
                                  "type": "VariableDeclarator",
                                  "id": {
                                    "type": "Identifier",
                                    "name": "result"
                                  },
                                  "init": {
                                    "type": "Literal",
                                    "value": null
                                  }
                                }
                              ],
                              "kind": "var"
                            },
                            {
                              "type": "SwitchStatement",
                              "discriminant": {
                                "type": "Identifier",
                                "name": "mode"
                              },
                              "cases": [
                                {
                                  "type": "SwitchCase",
                                  "test": {
                                    "type": "Literal",
                                    "value": 0
                                  },
                                  "consequent": []
                                },
                                {
                                  "type": "SwitchCase",
                                  "test": {
                                    "type": "Literal",
                                    "value": 1
                                  },
                                  "consequent": []
                                },
                                {
                                  "type": "SwitchCase",
                                  "test": {
                                    "type": "Literal",
                                    "value": "readwrite"
                                  },
                                  "consequent": []
                                },
                                {
                                  "type": "SwitchCase",
                                  "test": {
                                    "type": "Literal",
                                    "value": "readonly"
                                  },
                                  "consequent": [
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                          "type": "Identifier",
                                          "name": "result"
                                        },
                                        "right": {
                                          "type": "Identifier",
                                          "name": "mode"
                                        }
                                      }
                                    },
                                    {
                                      "type": "BreakStatement",
                                      "label": null
                                    }
                                  ]
                                },
                                {
                                  "type": "SwitchCase",
                                  "test": null,
                                  "consequent": [
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                          "type": "Identifier",
                                          "name": "result"
                                        },
                                        "right": {
                                          "type": "LogicalExpression",
                                          "operator": "||",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "IDBTransaction"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "READ_WRITE"
                                            }
                                          },
                                          "right": {
                                            "type": "Literal",
                                            "value": "readwrite"
                                          }
                                        }
                                      }
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "ReturnStatement",
                              "argument": {
                                "type": "Identifier",
                                "name": "result"
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "$"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "extend"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "$"
                            },
                            {
                              "type": "ObjectExpression",
                              "properties": [
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Literal",
                                    "value": "indexedDB"
                                  },
                                  "value": {
                                    "type": "FunctionExpression",
                                    "id": null,
                                    "params": [
                                      {
                                        "type": "Identifier",
                                        "name": "dbName"
                                      },
                                      {
                                        "type": "Identifier",
                                        "name": "config"
                                      }
                                    ],
                                    "defaults": [],
                                    "body": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "IfStatement",
                                          "test": {
                                            "type": "Identifier",
                                            "name": "config"
                                          },
                                          "consequent": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "IfStatement",
                                                "test": {
                                                  "type": "BinaryExpression",
                                                  "operator": "===",
                                                  "left": {
                                                    "type": "UnaryExpression",
                                                    "operator": "typeof",
                                                    "argument": {
                                                      "type": "Identifier",
                                                      "name": "config"
                                                    },
                                                    "prefix": true
                                                  },
                                                  "right": {
                                                    "type": "Literal",
                                                    "value": "number"
                                                  }
                                                },
                                                "consequent": {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "config"
                                                    },
                                                    "right": {
                                                      "type": "ObjectExpression",
                                                      "properties": [
                                                        {
                                                          "type": "Property",
                                                          "key": {
                                                            "type": "Literal",
                                                            "value": "version"
                                                          },
                                                          "value": {
                                                            "type": "Identifier",
                                                            "name": "config"
                                                          },
                                                          "kind": "init"
                                                        }
                                                      ]
                                                    }
                                                  }
                                                },
                                                "alternate": null
                                              },
                                              {
                                                "type": "VariableDeclaration",
                                                "declarations": [
                                                  {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                      "type": "Identifier",
                                                      "name": "version"
                                                    },
                                                    "init": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "config"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "version"
                                                      }
                                                    }
                                                  }
                                                ],
                                                "kind": "var"
                                              },
                                              {
                                                "type": "IfStatement",
                                                "test": {
                                                  "type": "LogicalExpression",
                                                  "operator": "&&",
                                                  "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "config"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "schema"
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "UnaryExpression",
                                                    "operator": "!",
                                                    "argument": {
                                                      "type": "Identifier",
                                                      "name": "version"
                                                    },
                                                    "prefix": true
                                                  }
                                                },
                                                "consequent": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "VariableDeclaration",
                                                      "declarations": [
                                                        {
                                                          "type": "VariableDeclarator",
                                                          "id": {
                                                            "type": "Identifier",
                                                            "name": "max"
                                                          },
                                                          "init": {
                                                            "type": "UnaryExpression",
                                                            "operator": "-",
                                                            "argument": {
                                                              "type": "Literal",
                                                              "value": 1
                                                            },
                                                            "prefix": true
                                                          }
                                                        }
                                                      ],
                                                      "kind": "var"
                                                    },
                                                    {
                                                      "type": "ForInStatement",
                                                      "left": {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                          {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                              "type": "Identifier",
                                                              "name": "key"
                                                            },
                                                            "init": null
                                                          }
                                                        ],
                                                        "kind": "var"
                                                      },
                                                      "right": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "config"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "schema"
                                                        }
                                                      },
                                                      "body": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "AssignmentExpression",
                                                              "operator": "=",
                                                              "left": {
                                                                "type": "Identifier",
                                                                "name": "max"
                                                              },
                                                              "right": {
                                                                "type": "ConditionalExpression",
                                                                "test": {
                                                                  "type": "BinaryExpression",
                                                                  "operator": ">",
                                                                  "left": {
                                                                    "type": "Identifier",
                                                                    "name": "max"
                                                                  },
                                                                  "right": {
                                                                    "type": "Identifier",
                                                                    "name": "key"
                                                                  }
                                                                },
                                                                "consequent": {
                                                                  "type": "Identifier",
                                                                  "name": "max"
                                                                },
                                                                "alternate": {
                                                                  "type": "Identifier",
                                                                  "name": "key"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      "each": false
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                          "type": "Identifier",
                                                          "name": "version"
                                                        },
                                                        "right": {
                                                          "type": "LogicalExpression",
                                                          "operator": "||",
                                                          "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "config"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "version"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Identifier",
                                                            "name": "max"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  ]
                                                },
                                                "alternate": null
                                              }
                                            ]
                                          },
                                          "alternate": null
                                        },
                                        {
                                          "type": "VariableDeclaration",
                                          "declarations": [
                                            {
                                              "type": "VariableDeclarator",
                                              "id": {
                                                "type": "Identifier",
                                                "name": "wrap"
                                              },
                                              "init": {
                                                "type": "ObjectExpression",
                                                "properties": [
                                                  {
                                                    "type": "Property",
                                                    "key": {
                                                      "type": "Literal",
                                                      "value": "request"
                                                    },
                                                    "value": {
                                                      "type": "FunctionExpression",
                                                      "id": null,
                                                      "params": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "req"
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "name": "args"
                                                        }
                                                      ],
                                                      "defaults": [],
                                                      "body": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "ReturnStatement",
                                                            "argument": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "$"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "Deferred"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "FunctionExpression",
                                                                  "id": null,
                                                                  "params": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "name": "dfd"
                                                                    }
                                                                  ],
                                                                  "defaults": [],
                                                                  "body": {
                                                                    "type": "BlockStatement",
                                                                    "body": [
                                                                      {
                                                                        "type": "TryStatement",
                                                                        "block": {
                                                                          "type": "BlockStatement",
                                                                          "body": [
                                                                            {
                                                                              "type": "VariableDeclaration",
                                                                              "declarations": [
                                                                                {
                                                                                  "type": "VariableDeclarator",
                                                                                  "id": {
                                                                                    "type": "Identifier",
                                                                                    "name": "idbRequest"
                                                                                  },
                                                                                  "init": {
                                                                                    "type": "ConditionalExpression",
                                                                                    "test": {
                                                                                      "type": "BinaryExpression",
                                                                                      "operator": "===",
                                                                                      "left": {
                                                                                        "type": "UnaryExpression",
                                                                                        "operator": "typeof",
                                                                                        "argument": {
                                                                                          "type": "Identifier",
                                                                                          "name": "req"
                                                                                        },
                                                                                        "prefix": true
                                                                                      },
                                                                                      "right": {
                                                                                        "type": "Literal",
                                                                                        "value": "function"
                                                                                      }
                                                                                    },
                                                                                    "consequent": {
                                                                                      "type": "CallExpression",
                                                                                      "callee": {
                                                                                        "type": "Identifier",
                                                                                        "name": "req"
                                                                                      },
                                                                                      "arguments": [
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "name": "args"
                                                                                        }
                                                                                      ]
                                                                                    },
                                                                                    "alternate": {
                                                                                      "type": "Identifier",
                                                                                      "name": "req"
                                                                                    }
                                                                                  }
                                                                                }
                                                                              ],
                                                                              "kind": "var"
                                                                            },
                                                                            {
                                                                              "type": "ExpressionStatement",
                                                                              "expression": {
                                                                                "type": "AssignmentExpression",
                                                                                "operator": "=",
                                                                                "left": {
                                                                                  "type": "MemberExpression",
                                                                                  "computed": false,
                                                                                  "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "idbRequest"
                                                                                  },
                                                                                  "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "onsuccess"
                                                                                  }
                                                                                },
                                                                                "right": {
                                                                                  "type": "FunctionExpression",
                                                                                  "id": null,
                                                                                  "params": [
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "name": "e"
                                                                                    }
                                                                                  ],
                                                                                  "defaults": [],
                                                                                  "body": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                      {
                                                                                        "type": "ExpressionStatement",
                                                                                        "expression": {
                                                                                          "type": "CallExpression",
                                                                                          "callee": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                              "type": "Identifier",
                                                                                              "name": "dfd"
                                                                                            },
                                                                                            "property": {
                                                                                              "type": "Identifier",
                                                                                              "name": "resolveWith"
                                                                                            }
                                                                                          },
                                                                                          "arguments": [
                                                                                            {
                                                                                              "type": "Identifier",
                                                                                              "name": "idbRequest"
                                                                                            },
                                                                                            {
                                                                                              "type": "ArrayExpression",
                                                                                              "elements": [
                                                                                                {
                                                                                                  "type": "MemberExpression",
                                                                                                  "computed": false,
                                                                                                  "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "idbRequest"
                                                                                                  },
                                                                                                  "property": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "result"
                                                                                                  }
                                                                                                },
                                                                                                {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "e"
                                                                                                }
                                                                                              ]
                                                                                            }
                                                                                          ]
                                                                                        }
                                                                                      }
                                                                                    ]
                                                                                  },
                                                                                  "rest": null,
                                                                                  "generator": false,
                                                                                  "expression": false
                                                                                }
                                                                              }
                                                                            },
                                                                            {
                                                                              "type": "ExpressionStatement",
                                                                              "expression": {
                                                                                "type": "AssignmentExpression",
                                                                                "operator": "=",
                                                                                "left": {
                                                                                  "type": "MemberExpression",
                                                                                  "computed": false,
                                                                                  "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "idbRequest"
                                                                                  },
                                                                                  "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "onerror"
                                                                                  }
                                                                                },
                                                                                "right": {
                                                                                  "type": "FunctionExpression",
                                                                                  "id": null,
                                                                                  "params": [
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "name": "e"
                                                                                    }
                                                                                  ],
                                                                                  "defaults": [],
                                                                                  "body": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                      {
                                                                                        "type": "ExpressionStatement",
                                                                                        "expression": {
                                                                                          "type": "CallExpression",
                                                                                          "callee": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                              "type": "Identifier",
                                                                                              "name": "dfd"
                                                                                            },
                                                                                            "property": {
                                                                                              "type": "Identifier",
                                                                                              "name": "rejectWith"
                                                                                            }
                                                                                          },
                                                                                          "arguments": [
                                                                                            {
                                                                                              "type": "Identifier",
                                                                                              "name": "idbRequest"
                                                                                            },
                                                                                            {
                                                                                              "type": "ArrayExpression",
                                                                                              "elements": [
                                                                                                {
                                                                                                  "type": "MemberExpression",
                                                                                                  "computed": false,
                                                                                                  "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "idbRequest"
                                                                                                  },
                                                                                                  "property": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "error"
                                                                                                  }
                                                                                                },
                                                                                                {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "e"
                                                                                                }
                                                                                              ]
                                                                                            }
                                                                                          ]
                                                                                        }
                                                                                      }
                                                                                    ]
                                                                                  },
                                                                                  "rest": null,
                                                                                  "generator": false,
                                                                                  "expression": false
                                                                                }
                                                                              }
                                                                            },
                                                                            {
                                                                              "type": "IfStatement",
                                                                              "test": {
                                                                                "type": "LogicalExpression",
                                                                                "operator": "&&",
                                                                                "left": {
                                                                                  "type": "BinaryExpression",
                                                                                  "operator": "!==",
                                                                                  "left": {
                                                                                    "type": "UnaryExpression",
                                                                                    "operator": "typeof",
                                                                                    "argument": {
                                                                                      "type": "MemberExpression",
                                                                                      "computed": false,
                                                                                      "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "idbRequest"
                                                                                      },
                                                                                      "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "onblocked"
                                                                                      }
                                                                                    },
                                                                                    "prefix": true
                                                                                  },
                                                                                  "right": {
                                                                                    "type": "Literal",
                                                                                    "value": "undefined"
                                                                                  }
                                                                                },
                                                                                "right": {
                                                                                  "type": "BinaryExpression",
                                                                                  "operator": "===",
                                                                                  "left": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "idbRequest"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "onblocked"
                                                                                    }
                                                                                  },
                                                                                  "right": {
                                                                                    "type": "Literal",
                                                                                    "value": null
                                                                                  }
                                                                                }
                                                                              },
                                                                              "consequent": {
                                                                                "type": "BlockStatement",
                                                                                "body": [
                                                                                  {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                      "type": "AssignmentExpression",
                                                                                      "operator": "=",
                                                                                      "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                          "type": "Identifier",
                                                                                          "name": "idbRequest"
                                                                                        },
                                                                                        "property": {
                                                                                          "type": "Identifier",
                                                                                          "name": "onblocked"
                                                                                        }
                                                                                      },
                                                                                      "right": {
                                                                                        "type": "FunctionExpression",
                                                                                        "id": null,
                                                                                        "params": [
                                                                                          {
                                                                                            "type": "Identifier",
                                                                                            "name": "e"
                                                                                          }
                                                                                        ],
                                                                                        "defaults": [],
                                                                                        "body": {
                                                                                          "type": "BlockStatement",
                                                                                          "body": [
                                                                                            {
                                                                                              "type": "VariableDeclaration",
                                                                                              "declarations": [
                                                                                                {
                                                                                                  "type": "VariableDeclarator",
                                                                                                  "id": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "res"
                                                                                                  },
                                                                                                  "init": null
                                                                                                }
                                                                                              ],
                                                                                              "kind": "var"
                                                                                            },
                                                                                            {
                                                                                              "type": "TryStatement",
                                                                                              "block": {
                                                                                                "type": "BlockStatement",
                                                                                                "body": [
                                                                                                  {
                                                                                                    "type": "ExpressionStatement",
                                                                                                    "expression": {
                                                                                                      "type": "AssignmentExpression",
                                                                                                      "operator": "=",
                                                                                                      "left": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "res"
                                                                                                      },
                                                                                                      "right": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": false,
                                                                                                        "object": {
                                                                                                          "type": "Identifier",
                                                                                                          "name": "idbRequest"
                                                                                                        },
                                                                                                        "property": {
                                                                                                          "type": "Identifier",
                                                                                                          "name": "result"
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                ]
                                                                                              },
                                                                                              "guardedHandlers": [],
                                                                                              "handlers": [
                                                                                                {
                                                                                                  "type": "CatchClause",
                                                                                                  "param": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "e"
                                                                                                  },
                                                                                                  "body": {
                                                                                                    "type": "BlockStatement",
                                                                                                    "body": [
                                                                                                      {
                                                                                                        "type": "ExpressionStatement",
                                                                                                        "expression": {
                                                                                                          "type": "AssignmentExpression",
                                                                                                          "operator": "=",
                                                                                                          "left": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "res"
                                                                                                          },
                                                                                                          "right": {
                                                                                                            "type": "Literal",
                                                                                                            "value": null
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    ]
                                                                                                  }
                                                                                                }
                                                                                              ],
                                                                                              "finalizer": null
                                                                                            },
                                                                                            {
                                                                                              "type": "ExpressionStatement",
                                                                                              "expression": {
                                                                                                "type": "CallExpression",
                                                                                                "callee": {
                                                                                                  "type": "MemberExpression",
                                                                                                  "computed": false,
                                                                                                  "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "dfd"
                                                                                                  },
                                                                                                  "property": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "notifyWith"
                                                                                                  }
                                                                                                },
                                                                                                "arguments": [
                                                                                                  {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "idbRequest"
                                                                                                  },
                                                                                                  {
                                                                                                    "type": "ArrayExpression",
                                                                                                    "elements": [
                                                                                                      {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "res"
                                                                                                      },
                                                                                                      {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "e"
                                                                                                      }
                                                                                                    ]
                                                                                                  }
                                                                                                ]
                                                                                              }
                                                                                            }
                                                                                          ]
                                                                                        },
                                                                                        "rest": null,
                                                                                        "generator": false,
                                                                                        "expression": false
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                ]
                                                                              },
                                                                              "alternate": null
                                                                            },
                                                                            {
                                                                              "type": "IfStatement",
                                                                              "test": {
                                                                                "type": "LogicalExpression",
                                                                                "operator": "&&",
                                                                                "left": {
                                                                                  "type": "BinaryExpression",
                                                                                  "operator": "!==",
                                                                                  "left": {
                                                                                    "type": "UnaryExpression",
                                                                                    "operator": "typeof",
                                                                                    "argument": {
                                                                                      "type": "MemberExpression",
                                                                                      "computed": false,
                                                                                      "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "idbRequest"
                                                                                      },
                                                                                      "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "onupgradeneeded"
                                                                                      }
                                                                                    },
                                                                                    "prefix": true
                                                                                  },
                                                                                  "right": {
                                                                                    "type": "Literal",
                                                                                    "value": "undefined"
                                                                                  }
                                                                                },
                                                                                "right": {
                                                                                  "type": "BinaryExpression",
                                                                                  "operator": "===",
                                                                                  "left": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "idbRequest"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "onupgradeneeded"
                                                                                    }
                                                                                  },
                                                                                  "right": {
                                                                                    "type": "Literal",
                                                                                    "value": null
                                                                                  }
                                                                                }
                                                                              },
                                                                              "consequent": {
                                                                                "type": "BlockStatement",
                                                                                "body": [
                                                                                  {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                      "type": "AssignmentExpression",
                                                                                      "operator": "=",
                                                                                      "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                          "type": "Identifier",
                                                                                          "name": "idbRequest"
                                                                                        },
                                                                                        "property": {
                                                                                          "type": "Identifier",
                                                                                          "name": "onupgradeneeded"
                                                                                        }
                                                                                      },
                                                                                      "right": {
                                                                                        "type": "FunctionExpression",
                                                                                        "id": null,
                                                                                        "params": [
                                                                                          {
                                                                                            "type": "Identifier",
                                                                                            "name": "e"
                                                                                          }
                                                                                        ],
                                                                                        "defaults": [],
                                                                                        "body": {
                                                                                          "type": "BlockStatement",
                                                                                          "body": [
                                                                                            {
                                                                                              "type": "ExpressionStatement",
                                                                                              "expression": {
                                                                                                "type": "CallExpression",
                                                                                                "callee": {
                                                                                                  "type": "MemberExpression",
                                                                                                  "computed": false,
                                                                                                  "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "dfd"
                                                                                                  },
                                                                                                  "property": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "notifyWith"
                                                                                                  }
                                                                                                },
                                                                                                "arguments": [
                                                                                                  {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "idbRequest"
                                                                                                  },
                                                                                                  {
                                                                                                    "type": "ArrayExpression",
                                                                                                    "elements": [
                                                                                                      {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": false,
                                                                                                        "object": {
                                                                                                          "type": "Identifier",
                                                                                                          "name": "idbRequest"
                                                                                                        },
                                                                                                        "property": {
                                                                                                          "type": "Identifier",
                                                                                                          "name": "result"
                                                                                                        }
                                                                                                      },
                                                                                                      {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "e"
                                                                                                      }
                                                                                                    ]
                                                                                                  }
                                                                                                ]
                                                                                              }
                                                                                            }
                                                                                          ]
                                                                                        },
                                                                                        "rest": null,
                                                                                        "generator": false,
                                                                                        "expression": false
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                ]
                                                                              },
                                                                              "alternate": null
                                                                            }
                                                                          ]
                                                                        },
                                                                        "guardedHandlers": [],
                                                                        "handlers": [
                                                                          {
                                                                            "type": "CatchClause",
                                                                            "param": {
                                                                              "type": "Identifier",
                                                                              "name": "e"
                                                                            },
                                                                            "body": {
                                                                              "type": "BlockStatement",
                                                                              "body": [
                                                                                {
                                                                                  "type": "ExpressionStatement",
                                                                                  "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                      "type": "MemberExpression",
                                                                                      "computed": false,
                                                                                      "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "e"
                                                                                      },
                                                                                      "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "name"
                                                                                      }
                                                                                    },
                                                                                    "right": {
                                                                                      "type": "Literal",
                                                                                      "value": "exception"
                                                                                    }
                                                                                  }
                                                                                },
                                                                                {
                                                                                  "type": "ExpressionStatement",
                                                                                  "expression": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                      "type": "MemberExpression",
                                                                                      "computed": false,
                                                                                      "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "dfd"
                                                                                      },
                                                                                      "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "rejectWith"
                                                                                      }
                                                                                    },
                                                                                    "arguments": [
                                                                                      {
                                                                                        "type": "Identifier",
                                                                                        "name": "idbRequest"
                                                                                      },
                                                                                      {
                                                                                        "type": "ArrayExpression",
                                                                                        "elements": [
                                                                                          {
                                                                                            "type": "Literal",
                                                                                            "value": "exception"
                                                                                          },
                                                                                          {
                                                                                            "type": "Identifier",
                                                                                            "name": "e"
                                                                                          }
                                                                                        ]
                                                                                      }
                                                                                    ]
                                                                                  }
                                                                                }
                                                                              ]
                                                                            }
                                                                          }
                                                                        ],
                                                                        "finalizer": null
                                                                      }
                                                                    ]
                                                                  },
                                                                  "rest": null,
                                                                  "generator": false,
                                                                  "expression": false
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      "rest": null,
                                                      "generator": false,
                                                      "expression": false
                                                    },
                                                    "kind": "init"
                                                  },
                                                  {
                                                    "type": "Property",
                                                    "key": {
                                                      "type": "Literal",
                                                      "value": "transaction"
                                                    },
                                                    "value": {
                                                      "type": "FunctionExpression",
                                                      "id": null,
                                                      "params": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "idbTransaction"
                                                        }
                                                      ],
                                                      "defaults": [],
                                                      "body": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "ReturnStatement",
                                                            "argument": {
                                                              "type": "ObjectExpression",
                                                              "properties": [
                                                                {
                                                                  "type": "Property",
                                                                  "key": {
                                                                    "type": "Literal",
                                                                    "value": "objectStore"
                                                                  },
                                                                  "value": {
                                                                    "type": "FunctionExpression",
                                                                    "id": null,
                                                                    "params": [
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "storeName"
                                                                      }
                                                                    ],
                                                                    "defaults": [],
                                                                    "body": {
                                                                      "type": "BlockStatement",
                                                                      "body": [
                                                                        {
                                                                          "type": "TryStatement",
                                                                          "block": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                              {
                                                                                "type": "ReturnStatement",
                                                                                "argument": {
                                                                                  "type": "CallExpression",
                                                                                  "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "wrap"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "objectStore"
                                                                                    }
                                                                                  },
                                                                                  "arguments": [
                                                                                    {
                                                                                      "type": "CallExpression",
                                                                                      "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                          "type": "Identifier",
                                                                                          "name": "idbTransaction"
                                                                                        },
                                                                                        "property": {
                                                                                          "type": "Identifier",
                                                                                          "name": "objectStore"
                                                                                        }
                                                                                      },
                                                                                      "arguments": [
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "name": "storeName"
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              }
                                                                            ]
                                                                          },
                                                                          "guardedHandlers": [],
                                                                          "handlers": [
                                                                            {
                                                                              "type": "CatchClause",
                                                                              "param": {
                                                                                "type": "Identifier",
                                                                                "name": "e"
                                                                              },
                                                                              "body": {
                                                                                "type": "BlockStatement",
                                                                                "body": [
                                                                                  {
                                                                                    "type": "IfStatement",
                                                                                    "test": {
                                                                                      "type": "BinaryExpression",
                                                                                      "operator": "!==",
                                                                                      "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                          "type": "Identifier",
                                                                                          "name": "idbTransaction"
                                                                                        },
                                                                                        "property": {
                                                                                          "type": "Identifier",
                                                                                          "name": "readyState"
                                                                                        }
                                                                                      },
                                                                                      "right": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                          "type": "Identifier",
                                                                                          "name": "idbTransaction"
                                                                                        },
                                                                                        "property": {
                                                                                          "type": "Identifier",
                                                                                          "name": "DONE"
                                                                                        }
                                                                                      }
                                                                                    },
                                                                                    "consequent": {
                                                                                      "type": "ExpressionStatement",
                                                                                      "expression": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                          "type": "MemberExpression",
                                                                                          "computed": false,
                                                                                          "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "idbTransaction"
                                                                                          },
                                                                                          "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "abort"
                                                                                          }
                                                                                        },
                                                                                        "arguments": []
                                                                                      }
                                                                                    },
                                                                                    "alternate": null
                                                                                  },
                                                                                  {
                                                                                    "type": "ReturnStatement",
                                                                                    "argument": {
                                                                                      "type": "CallExpression",
                                                                                      "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                          "type": "Identifier",
                                                                                          "name": "wrap"
                                                                                        },
                                                                                        "property": {
                                                                                          "type": "Identifier",
                                                                                          "name": "objectStore"
                                                                                        }
                                                                                      },
                                                                                      "arguments": [
                                                                                        {
                                                                                          "type": "Literal",
                                                                                          "value": null
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  }
                                                                                ]
                                                                              }
                                                                            }
                                                                          ],
                                                                          "finalizer": null
                                                                        }
                                                                      ]
                                                                    },
                                                                    "rest": null,
                                                                    "generator": false,
                                                                    "expression": false
                                                                  },
                                                                  "kind": "init"
                                                                },
                                                                {
                                                                  "type": "Property",
                                                                  "key": {
                                                                    "type": "Literal",
                                                                    "value": "createObjectStore"
                                                                  },
                                                                  "value": {
                                                                    "type": "FunctionExpression",
                                                                    "id": null,
                                                                    "params": [
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "storeName"
                                                                      },
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "storeParams"
                                                                      }
                                                                    ],
                                                                    "defaults": [],
                                                                    "body": {
                                                                      "type": "BlockStatement",
                                                                      "body": [
                                                                        {
                                                                          "type": "TryStatement",
                                                                          "block": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                              {
                                                                                "type": "ReturnStatement",
                                                                                "argument": {
                                                                                  "type": "CallExpression",
                                                                                  "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "wrap"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "objectStore"
                                                                                    }
                                                                                  },
                                                                                  "arguments": [
                                                                                    {
                                                                                      "type": "CallExpression",
                                                                                      "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                          "type": "MemberExpression",
                                                                                          "computed": false,
                                                                                          "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "idbTransaction"
                                                                                          },
                                                                                          "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "db"
                                                                                          }
                                                                                        },
                                                                                        "property": {
                                                                                          "type": "Identifier",
                                                                                          "name": "createObjectStore"
                                                                                        }
                                                                                      },
                                                                                      "arguments": [
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "name": "storeName"
                                                                                        },
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "name": "storeParams"
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              }
                                                                            ]
                                                                          },
                                                                          "guardedHandlers": [],
                                                                          "handlers": [
                                                                            {
                                                                              "type": "CatchClause",
                                                                              "param": {
                                                                                "type": "Identifier",
                                                                                "name": "e"
                                                                              },
                                                                              "body": {
                                                                                "type": "BlockStatement",
                                                                                "body": [
                                                                                  {
                                                                                    "type": "IfStatement",
                                                                                    "test": {
                                                                                      "type": "BinaryExpression",
                                                                                      "operator": "!==",
                                                                                      "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                          "type": "Identifier",
                                                                                          "name": "idbTransaction"
                                                                                        },
                                                                                        "property": {
                                                                                          "type": "Identifier",
                                                                                          "name": "readyState"
                                                                                        }
                                                                                      },
                                                                                      "right": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                          "type": "Identifier",
                                                                                          "name": "idbTransaction"
                                                                                        },
                                                                                        "property": {
                                                                                          "type": "Identifier",
                                                                                          "name": "DONE"
                                                                                        }
                                                                                      }
                                                                                    },
                                                                                    "consequent": {
                                                                                      "type": "ExpressionStatement",
                                                                                      "expression": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                          "type": "MemberExpression",
                                                                                          "computed": false,
                                                                                          "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "idbTransaction"
                                                                                          },
                                                                                          "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "abort"
                                                                                          }
                                                                                        },
                                                                                        "arguments": []
                                                                                      }
                                                                                    },
                                                                                    "alternate": null
                                                                                  }
                                                                                ]
                                                                              }
                                                                            }
                                                                          ],
                                                                          "finalizer": null
                                                                        }
                                                                      ]
                                                                    },
                                                                    "rest": null,
                                                                    "generator": false,
                                                                    "expression": false
                                                                  },
                                                                  "kind": "init"
                                                                },
                                                                {
                                                                  "type": "Property",
                                                                  "key": {
                                                                    "type": "Literal",
                                                                    "value": "deleteObjectStore"
                                                                  },
                                                                  "value": {
                                                                    "type": "FunctionExpression",
                                                                    "id": null,
                                                                    "params": [
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "storeName"
                                                                      }
                                                                    ],
                                                                    "defaults": [],
                                                                    "body": {
                                                                      "type": "BlockStatement",
                                                                      "body": [
                                                                        {
                                                                          "type": "TryStatement",
                                                                          "block": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                              {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                  "type": "CallExpression",
                                                                                  "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "MemberExpression",
                                                                                      "computed": false,
                                                                                      "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "idbTransaction"
                                                                                      },
                                                                                      "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "db"
                                                                                      }
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "deleteObjectStore"
                                                                                    }
                                                                                  },
                                                                                  "arguments": [
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "name": "storeName"
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              }
                                                                            ]
                                                                          },
                                                                          "guardedHandlers": [],
                                                                          "handlers": [
                                                                            {
                                                                              "type": "CatchClause",
                                                                              "param": {
                                                                                "type": "Identifier",
                                                                                "name": "e"
                                                                              },
                                                                              "body": {
                                                                                "type": "BlockStatement",
                                                                                "body": [
                                                                                  {
                                                                                    "type": "IfStatement",
                                                                                    "test": {
                                                                                      "type": "BinaryExpression",
                                                                                      "operator": "!==",
                                                                                      "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                          "type": "Identifier",
                                                                                          "name": "idbTransaction"
                                                                                        },
                                                                                        "property": {
                                                                                          "type": "Identifier",
                                                                                          "name": "readyState"
                                                                                        }
                                                                                      },
                                                                                      "right": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                          "type": "Identifier",
                                                                                          "name": "idbTransaction"
                                                                                        },
                                                                                        "property": {
                                                                                          "type": "Identifier",
                                                                                          "name": "DONE"
                                                                                        }
                                                                                      }
                                                                                    },
                                                                                    "consequent": {
                                                                                      "type": "ExpressionStatement",
                                                                                      "expression": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                          "type": "MemberExpression",
                                                                                          "computed": false,
                                                                                          "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "idbTransaction"
                                                                                          },
                                                                                          "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "abort"
                                                                                          }
                                                                                        },
                                                                                        "arguments": []
                                                                                      }
                                                                                    },
                                                                                    "alternate": null
                                                                                  }
                                                                                ]
                                                                              }
                                                                            }
                                                                          ],
                                                                          "finalizer": null
                                                                        }
                                                                      ]
                                                                    },
                                                                    "rest": null,
                                                                    "generator": false,
                                                                    "expression": false
                                                                  },
                                                                  "kind": "init"
                                                                },
                                                                {
                                                                  "type": "Property",
                                                                  "key": {
                                                                    "type": "Literal",
                                                                    "value": "abort"
                                                                  },
                                                                  "value": {
                                                                    "type": "FunctionExpression",
                                                                    "id": null,
                                                                    "params": [],
                                                                    "defaults": [],
                                                                    "body": {
                                                                      "type": "BlockStatement",
                                                                      "body": [
                                                                        {
                                                                          "type": "ExpressionStatement",
                                                                          "expression": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                              "type": "MemberExpression",
                                                                              "computed": false,
                                                                              "object": {
                                                                                "type": "Identifier",
                                                                                "name": "idbTransaction"
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "abort"
                                                                              }
                                                                            },
                                                                            "arguments": []
                                                                          }
                                                                        }
                                                                      ]
                                                                    },
                                                                    "rest": null,
                                                                    "generator": false,
                                                                    "expression": false
                                                                  },
                                                                  "kind": "init"
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      "rest": null,
                                                      "generator": false,
                                                      "expression": false
                                                    },
                                                    "kind": "init"
                                                  },
                                                  {
                                                    "type": "Property",
                                                    "key": {
                                                      "type": "Literal",
                                                      "value": "objectStore"
                                                    },
                                                    "value": {
                                                      "type": "FunctionExpression",
                                                      "id": null,
                                                      "params": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "idbObjectStore"
                                                        }
                                                      ],
                                                      "defaults": [],
                                                      "body": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "VariableDeclaration",
                                                            "declarations": [
                                                              {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                  "type": "Identifier",
                                                                  "name": "result"
                                                                },
                                                                "init": {
                                                                  "type": "ObjectExpression",
                                                                  "properties": []
                                                                }
                                                              }
                                                            ],
                                                            "kind": "var"
                                                          },
                                                          {
                                                            "type": "VariableDeclaration",
                                                            "declarations": [
                                                              {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                  "type": "Identifier",
                                                                  "name": "crudOps"
                                                                },
                                                                "init": {
                                                                  "type": "ArrayExpression",
                                                                  "elements": [
                                                                    {
                                                                      "type": "Literal",
                                                                      "value": "add"
                                                                    },
                                                                    {
                                                                      "type": "Literal",
                                                                      "value": "put"
                                                                    },
                                                                    {
                                                                      "type": "Literal",
                                                                      "value": "get"
                                                                    },
                                                                    {
                                                                      "type": "Literal",
                                                                      "value": "delete"
                                                                    },
                                                                    {
                                                                      "type": "Literal",
                                                                      "value": "clear"
                                                                    },
                                                                    {
                                                                      "type": "Literal",
                                                                      "value": "count"
                                                                    }
                                                                  ]
                                                                }
                                                              }
                                                            ],
                                                            "kind": "var"
                                                          },
                                                          {
                                                            "type": "ForStatement",
                                                            "init": {
                                                              "type": "VariableDeclaration",
                                                              "declarations": [
                                                                {
                                                                  "type": "VariableDeclarator",
                                                                  "id": {
                                                                    "type": "Identifier",
                                                                    "name": "i"
                                                                  },
                                                                  "init": {
                                                                    "type": "Literal",
                                                                    "value": 0
                                                                  }
                                                                }
                                                              ],
                                                              "kind": "var"
                                                            },
                                                            "test": {
                                                              "type": "BinaryExpression",
                                                              "operator": "<",
                                                              "left": {
                                                                "type": "Identifier",
                                                                "name": "i"
                                                              },
                                                              "right": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "crudOps"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "length"
                                                                }
                                                              }
                                                            },
                                                            "update": {
                                                              "type": "UpdateExpression",
                                                              "operator": "++",
                                                              "argument": {
                                                                "type": "Identifier",
                                                                "name": "i"
                                                              },
                                                              "prefix": false
                                                            },
                                                            "body": {
                                                              "type": "BlockStatement",
                                                              "body": [
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                      "type": "MemberExpression",
                                                                      "computed": true,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "result"
                                                                      },
                                                                      "property": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "crudOps"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "i"
                                                                        }
                                                                      }
                                                                    },
                                                                    "right": {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "FunctionExpression",
                                                                        "id": null,
                                                                        "params": [
                                                                          {
                                                                            "type": "Identifier",
                                                                            "name": "op"
                                                                          }
                                                                        ],
                                                                        "defaults": [],
                                                                        "body": {
                                                                          "type": "BlockStatement",
                                                                          "body": [
                                                                            {
                                                                              "type": "ReturnStatement",
                                                                              "argument": {
                                                                                "type": "FunctionExpression",
                                                                                "id": null,
                                                                                "params": [],
                                                                                "defaults": [],
                                                                                "body": {
                                                                                  "type": "BlockStatement",
                                                                                  "body": [
                                                                                    {
                                                                                      "type": "ReturnStatement",
                                                                                      "argument": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                          "type": "MemberExpression",
                                                                                          "computed": false,
                                                                                          "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "wrap"
                                                                                          },
                                                                                          "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "request"
                                                                                          }
                                                                                        },
                                                                                        "arguments": [
                                                                                          {
                                                                                            "type": "FunctionExpression",
                                                                                            "id": null,
                                                                                            "params": [
                                                                                              {
                                                                                                "type": "Identifier",
                                                                                                "name": "args"
                                                                                              }
                                                                                            ],
                                                                                            "defaults": [],
                                                                                            "body": {
                                                                                              "type": "BlockStatement",
                                                                                              "body": [
                                                                                                {
                                                                                                  "type": "ReturnStatement",
                                                                                                  "argument": {
                                                                                                    "type": "CallExpression",
                                                                                                    "callee": {
                                                                                                      "type": "MemberExpression",
                                                                                                      "computed": false,
                                                                                                      "object": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                          "type": "Identifier",
                                                                                                          "name": "idbObjectStore"
                                                                                                        },
                                                                                                        "property": {
                                                                                                          "type": "Identifier",
                                                                                                          "name": "op"
                                                                                                        }
                                                                                                      },
                                                                                                      "property": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "apply"
                                                                                                      }
                                                                                                    },
                                                                                                    "arguments": [
                                                                                                      {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "idbObjectStore"
                                                                                                      },
                                                                                                      {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "args"
                                                                                                      }
                                                                                                    ]
                                                                                                  }
                                                                                                }
                                                                                              ]
                                                                                            },
                                                                                            "rest": null,
                                                                                            "generator": false,
                                                                                            "expression": false
                                                                                          },
                                                                                          {
                                                                                            "type": "Identifier",
                                                                                            "name": "arguments"
                                                                                          }
                                                                                        ]
                                                                                      }
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                "rest": null,
                                                                                "generator": false,
                                                                                "expression": false
                                                                              }
                                                                            }
                                                                          ]
                                                                        },
                                                                        "rest": null,
                                                                        "generator": false,
                                                                        "expression": false
                                                                      },
                                                                      "arguments": [
                                                                        {
                                                                          "type": "MemberExpression",
                                                                          "computed": true,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "crudOps"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "i"
                                                                          }
                                                                        }
                                                                      ]
                                                                    }
                                                                  }
                                                                }
                                                              ]
                                                            }
                                                          },
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "AssignmentExpression",
                                                              "operator": "=",
                                                              "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "result"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "each"
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "FunctionExpression",
                                                                "id": null,
                                                                "params": [
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "callback"
                                                                  },
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "range"
                                                                  },
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "direction"
                                                                  }
                                                                ],
                                                                "defaults": [],
                                                                "body": {
                                                                  "type": "BlockStatement",
                                                                  "body": [
                                                                    {
                                                                      "type": "ReturnStatement",
                                                                      "argument": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "wrap"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "cursor"
                                                                          }
                                                                        },
                                                                        "arguments": [
                                                                          {
                                                                            "type": "FunctionExpression",
                                                                            "id": null,
                                                                            "params": [],
                                                                            "defaults": [],
                                                                            "body": {
                                                                              "type": "BlockStatement",
                                                                              "body": [
                                                                                {
                                                                                  "type": "IfStatement",
                                                                                  "test": {
                                                                                    "type": "Identifier",
                                                                                    "name": "direction"
                                                                                  },
                                                                                  "consequent": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                      {
                                                                                        "type": "ReturnStatement",
                                                                                        "argument": {
                                                                                          "type": "CallExpression",
                                                                                          "callee": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                              "type": "Identifier",
                                                                                              "name": "idbObjectStore"
                                                                                            },
                                                                                            "property": {
                                                                                              "type": "Identifier",
                                                                                              "name": "openCursor"
                                                                                            }
                                                                                          },
                                                                                          "arguments": [
                                                                                            {
                                                                                              "type": "CallExpression",
                                                                                              "callee": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": false,
                                                                                                "object": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "wrap"
                                                                                                },
                                                                                                "property": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "range"
                                                                                                }
                                                                                              },
                                                                                              "arguments": [
                                                                                                {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "range"
                                                                                                }
                                                                                              ]
                                                                                            },
                                                                                            {
                                                                                              "type": "Identifier",
                                                                                              "name": "direction"
                                                                                            }
                                                                                          ]
                                                                                        }
                                                                                      }
                                                                                    ]
                                                                                  },
                                                                                  "alternate": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                      {
                                                                                        "type": "ReturnStatement",
                                                                                        "argument": {
                                                                                          "type": "CallExpression",
                                                                                          "callee": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                              "type": "Identifier",
                                                                                              "name": "idbObjectStore"
                                                                                            },
                                                                                            "property": {
                                                                                              "type": "Identifier",
                                                                                              "name": "openCursor"
                                                                                            }
                                                                                          },
                                                                                          "arguments": [
                                                                                            {
                                                                                              "type": "CallExpression",
                                                                                              "callee": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": false,
                                                                                                "object": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "wrap"
                                                                                                },
                                                                                                "property": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "range"
                                                                                                }
                                                                                              },
                                                                                              "arguments": [
                                                                                                {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "range"
                                                                                                }
                                                                                              ]
                                                                                            }
                                                                                          ]
                                                                                        }
                                                                                      }
                                                                                    ]
                                                                                  }
                                                                                }
                                                                              ]
                                                                            },
                                                                            "rest": null,
                                                                            "generator": false,
                                                                            "expression": false
                                                                          },
                                                                          {
                                                                            "type": "Identifier",
                                                                            "name": "callback"
                                                                          }
                                                                        ]
                                                                      }
                                                                    }
                                                                  ]
                                                                },
                                                                "rest": null,
                                                                "generator": false,
                                                                "expression": false
                                                              }
                                                            }
                                                          },
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "AssignmentExpression",
                                                              "operator": "=",
                                                              "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "result"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "index"
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "FunctionExpression",
                                                                "id": null,
                                                                "params": [
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "name"
                                                                  }
                                                                ],
                                                                "defaults": [],
                                                                "body": {
                                                                  "type": "BlockStatement",
                                                                  "body": [
                                                                    {
                                                                      "type": "ReturnStatement",
                                                                      "argument": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "wrap"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "index"
                                                                          }
                                                                        },
                                                                        "arguments": [
                                                                          {
                                                                            "type": "FunctionExpression",
                                                                            "id": null,
                                                                            "params": [],
                                                                            "defaults": [],
                                                                            "body": {
                                                                              "type": "BlockStatement",
                                                                              "body": [
                                                                                {
                                                                                  "type": "ReturnStatement",
                                                                                  "argument": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                      "type": "MemberExpression",
                                                                                      "computed": false,
                                                                                      "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "idbObjectStore"
                                                                                      },
                                                                                      "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "index"
                                                                                      }
                                                                                    },
                                                                                    "arguments": [
                                                                                      {
                                                                                        "type": "Identifier",
                                                                                        "name": "name"
                                                                                      }
                                                                                    ]
                                                                                  }
                                                                                }
                                                                              ]
                                                                            },
                                                                            "rest": null,
                                                                            "generator": false,
                                                                            "expression": false
                                                                          }
                                                                        ]
                                                                      }
                                                                    }
                                                                  ]
                                                                },
                                                                "rest": null,
                                                                "generator": false,
                                                                "expression": false
                                                              }
                                                            }
                                                          },
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "AssignmentExpression",
                                                              "operator": "=",
                                                              "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "result"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "createIndex"
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "FunctionExpression",
                                                                "id": null,
                                                                "params": [
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "prop"
                                                                  },
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "options"
                                                                  },
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "indexName"
                                                                  }
                                                                ],
                                                                "defaults": [],
                                                                "body": {
                                                                  "type": "BlockStatement",
                                                                  "body": [
                                                                    {
                                                                      "type": "IfStatement",
                                                                      "test": {
                                                                        "type": "LogicalExpression",
                                                                        "operator": "&&",
                                                                        "left": {
                                                                          "type": "BinaryExpression",
                                                                          "operator": "===",
                                                                          "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "Identifier",
                                                                              "name": "arguments"
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "length"
                                                                            }
                                                                          },
                                                                          "right": {
                                                                            "type": "Literal",
                                                                            "value": 2
                                                                          }
                                                                        },
                                                                        "right": {
                                                                          "type": "BinaryExpression",
                                                                          "operator": "===",
                                                                          "left": {
                                                                            "type": "UnaryExpression",
                                                                            "operator": "typeof",
                                                                            "argument": {
                                                                              "type": "Identifier",
                                                                              "name": "options"
                                                                            },
                                                                            "prefix": true
                                                                          },
                                                                          "right": {
                                                                            "type": "Literal",
                                                                            "value": "string"
                                                                          }
                                                                        }
                                                                      },
                                                                      "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                          {
                                                                            "type": "ExpressionStatement",
                                                                            "expression": {
                                                                              "type": "AssignmentExpression",
                                                                              "operator": "=",
                                                                              "left": {
                                                                                "type": "Identifier",
                                                                                "name": "indexName"
                                                                              },
                                                                              "right": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "arguments"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Literal",
                                                                                  "value": 1
                                                                                }
                                                                              }
                                                                            }
                                                                          },
                                                                          {
                                                                            "type": "ExpressionStatement",
                                                                            "expression": {
                                                                              "type": "AssignmentExpression",
                                                                              "operator": "=",
                                                                              "left": {
                                                                                "type": "Identifier",
                                                                                "name": "options"
                                                                              },
                                                                              "right": {
                                                                                "type": "Literal",
                                                                                "value": null
                                                                              }
                                                                            }
                                                                          }
                                                                        ]
                                                                      },
                                                                      "alternate": null
                                                                    },
                                                                    {
                                                                      "type": "IfStatement",
                                                                      "test": {
                                                                        "type": "UnaryExpression",
                                                                        "operator": "!",
                                                                        "argument": {
                                                                          "type": "Identifier",
                                                                          "name": "indexName"
                                                                        },
                                                                        "prefix": true
                                                                      },
                                                                      "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                          {
                                                                            "type": "ExpressionStatement",
                                                                            "expression": {
                                                                              "type": "AssignmentExpression",
                                                                              "operator": "=",
                                                                              "left": {
                                                                                "type": "Identifier",
                                                                                "name": "indexName"
                                                                              },
                                                                              "right": {
                                                                                "type": "Identifier",
                                                                                "name": "prop"
                                                                              }
                                                                            }
                                                                          }
                                                                        ]
                                                                      },
                                                                      "alternate": null
                                                                    },
                                                                    {
                                                                      "type": "ReturnStatement",
                                                                      "argument": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "wrap"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "index"
                                                                          }
                                                                        },
                                                                        "arguments": [
                                                                          {
                                                                            "type": "FunctionExpression",
                                                                            "id": null,
                                                                            "params": [],
                                                                            "defaults": [],
                                                                            "body": {
                                                                              "type": "BlockStatement",
                                                                              "body": [
                                                                                {
                                                                                  "type": "ReturnStatement",
                                                                                  "argument": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                      "type": "MemberExpression",
                                                                                      "computed": false,
                                                                                      "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "idbObjectStore"
                                                                                      },
                                                                                      "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "createIndex"
                                                                                      }
                                                                                    },
                                                                                    "arguments": [
                                                                                      {
                                                                                        "type": "Identifier",
                                                                                        "name": "indexName"
                                                                                      },
                                                                                      {
                                                                                        "type": "Identifier",
                                                                                        "name": "prop"
                                                                                      },
                                                                                      {
                                                                                        "type": "Identifier",
                                                                                        "name": "options"
                                                                                      }
                                                                                    ]
                                                                                  }
                                                                                }
                                                                              ]
                                                                            },
                                                                            "rest": null,
                                                                            "generator": false,
                                                                            "expression": false
                                                                          }
                                                                        ]
                                                                      }
                                                                    }
                                                                  ]
                                                                },
                                                                "rest": null,
                                                                "generator": false,
                                                                "expression": false
                                                              }
                                                            }
                                                          },
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "AssignmentExpression",
                                                              "operator": "=",
                                                              "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "result"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "deleteIndex"
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "FunctionExpression",
                                                                "id": null,
                                                                "params": [
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "indexName"
                                                                  }
                                                                ],
                                                                "defaults": [],
                                                                "body": {
                                                                  "type": "BlockStatement",
                                                                  "body": [
                                                                    {
                                                                      "type": "ReturnStatement",
                                                                      "argument": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "idbObjectStore"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "deleteIndex"
                                                                          }
                                                                        },
                                                                        "arguments": [
                                                                          {
                                                                            "type": "Identifier",
                                                                            "name": "indexName"
                                                                          }
                                                                        ]
                                                                      }
                                                                    }
                                                                  ]
                                                                },
                                                                "rest": null,
                                                                "generator": false,
                                                                "expression": false
                                                              }
                                                            }
                                                          },
                                                          {
                                                            "type": "ReturnStatement",
                                                            "argument": {
                                                              "type": "Identifier",
                                                              "name": "result"
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      "rest": null,
                                                      "generator": false,
                                                      "expression": false
                                                    },
                                                    "kind": "init"
                                                  },
                                                  {
                                                    "type": "Property",
                                                    "key": {
                                                      "type": "Literal",
                                                      "value": "range"
                                                    },
                                                    "value": {
                                                      "type": "FunctionExpression",
                                                      "id": null,
                                                      "params": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "r"
                                                        }
                                                      ],
                                                      "defaults": [],
                                                      "body": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "IfStatement",
                                                            "test": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "$"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "isArray"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "r"
                                                                }
                                                              ]
                                                            },
                                                            "consequent": {
                                                              "type": "BlockStatement",
                                                              "body": [
                                                                {
                                                                  "type": "IfStatement",
                                                                  "test": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "===",
                                                                    "left": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "r"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "length"
                                                                      }
                                                                    },
                                                                    "right": {
                                                                      "type": "Literal",
                                                                      "value": 1
                                                                    }
                                                                  },
                                                                  "consequent": {
                                                                    "type": "BlockStatement",
                                                                    "body": [
                                                                      {
                                                                        "type": "ReturnStatement",
                                                                        "argument": {
                                                                          "type": "CallExpression",
                                                                          "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "Identifier",
                                                                              "name": "IDBKeyRange"
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "only"
                                                                            }
                                                                          },
                                                                          "arguments": [
                                                                            {
                                                                              "type": "MemberExpression",
                                                                              "computed": true,
                                                                              "object": {
                                                                                "type": "Identifier",
                                                                                "name": "r"
                                                                              },
                                                                              "property": {
                                                                                "type": "Literal",
                                                                                "value": 0
                                                                              }
                                                                            }
                                                                          ]
                                                                        }
                                                                      }
                                                                    ]
                                                                  },
                                                                  "alternate": {
                                                                    "type": "BlockStatement",
                                                                    "body": [
                                                                      {
                                                                        "type": "ReturnStatement",
                                                                        "argument": {
                                                                          "type": "CallExpression",
                                                                          "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "Identifier",
                                                                              "name": "IDBKeyRange"
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "bound"
                                                                            }
                                                                          },
                                                                          "arguments": [
                                                                            {
                                                                              "type": "MemberExpression",
                                                                              "computed": true,
                                                                              "object": {
                                                                                "type": "Identifier",
                                                                                "name": "r"
                                                                              },
                                                                              "property": {
                                                                                "type": "Literal",
                                                                                "value": 0
                                                                              }
                                                                            },
                                                                            {
                                                                              "type": "MemberExpression",
                                                                              "computed": true,
                                                                              "object": {
                                                                                "type": "Identifier",
                                                                                "name": "r"
                                                                              },
                                                                              "property": {
                                                                                "type": "Literal",
                                                                                "value": 1
                                                                              }
                                                                            },
                                                                            {
                                                                              "type": "ConditionalExpression",
                                                                              "test": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "===",
                                                                                "left": {
                                                                                  "type": "UnaryExpression",
                                                                                  "operator": "typeof",
                                                                                  "argument": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "r"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Literal",
                                                                                      "value": 2
                                                                                    }
                                                                                  },
                                                                                  "prefix": true
                                                                                },
                                                                                "right": {
                                                                                  "type": "Literal",
                                                                                  "value": "undefined"
                                                                                }
                                                                              },
                                                                              "consequent": {
                                                                                "type": "Literal",
                                                                                "value": false
                                                                              },
                                                                              "alternate": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "r"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Literal",
                                                                                  "value": 2
                                                                                }
                                                                              }
                                                                            },
                                                                            {
                                                                              "type": "ConditionalExpression",
                                                                              "test": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "===",
                                                                                "left": {
                                                                                  "type": "UnaryExpression",
                                                                                  "operator": "typeof",
                                                                                  "argument": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "r"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Literal",
                                                                                      "value": 3
                                                                                    }
                                                                                  },
                                                                                  "prefix": true
                                                                                },
                                                                                "right": {
                                                                                  "type": "Literal",
                                                                                  "value": "undefined"
                                                                                }
                                                                              },
                                                                              "consequent": {
                                                                                "type": "Literal",
                                                                                "value": false
                                                                              },
                                                                              "alternate": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "r"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Literal",
                                                                                  "value": 3
                                                                                }
                                                                              }
                                                                            }
                                                                          ]
                                                                        }
                                                                      }
                                                                    ]
                                                                  }
                                                                }
                                                              ]
                                                            },
                                                            "alternate": {
                                                              "type": "IfStatement",
                                                              "test": {
                                                                "type": "BinaryExpression",
                                                                "operator": "===",
                                                                "left": {
                                                                  "type": "UnaryExpression",
                                                                  "operator": "typeof",
                                                                  "argument": {
                                                                    "type": "Identifier",
                                                                    "name": "r"
                                                                  },
                                                                  "prefix": true
                                                                },
                                                                "right": {
                                                                  "type": "Literal",
                                                                  "value": "undefined"
                                                                }
                                                              },
                                                              "consequent": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                  {
                                                                    "type": "ReturnStatement",
                                                                    "argument": {
                                                                      "type": "Literal",
                                                                      "value": null
                                                                    }
                                                                  }
                                                                ]
                                                              },
                                                              "alternate": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                  {
                                                                    "type": "ReturnStatement",
                                                                    "argument": {
                                                                      "type": "Identifier",
                                                                      "name": "r"
                                                                    }
                                                                  }
                                                                ]
                                                              }
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      "rest": null,
                                                      "generator": false,
                                                      "expression": false
                                                    },
                                                    "kind": "init"
                                                  },
                                                  {
                                                    "type": "Property",
                                                    "key": {
                                                      "type": "Literal",
                                                      "value": "cursor"
                                                    },
                                                    "value": {
                                                      "type": "FunctionExpression",
                                                      "id": null,
                                                      "params": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "idbCursor"
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "name": "callback"
                                                        }
                                                      ],
                                                      "defaults": [],
                                                      "body": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "ReturnStatement",
                                                            "argument": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "$"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "Deferred"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "FunctionExpression",
                                                                  "id": null,
                                                                  "params": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "name": "dfd"
                                                                    }
                                                                  ],
                                                                  "defaults": [],
                                                                  "body": {
                                                                    "type": "BlockStatement",
                                                                    "body": [
                                                                      {
                                                                        "type": "TryStatement",
                                                                        "block": {
                                                                          "type": "BlockStatement",
                                                                          "body": [
                                                                            {
                                                                              "type": "VariableDeclaration",
                                                                              "declarations": [
                                                                                {
                                                                                  "type": "VariableDeclarator",
                                                                                  "id": {
                                                                                    "type": "Identifier",
                                                                                    "name": "cursorReq"
                                                                                  },
                                                                                  "init": {
                                                                                    "type": "ConditionalExpression",
                                                                                    "test": {
                                                                                      "type": "BinaryExpression",
                                                                                      "operator": "===",
                                                                                      "left": {
                                                                                        "type": "UnaryExpression",
                                                                                        "operator": "typeof",
                                                                                        "argument": {
                                                                                          "type": "Identifier",
                                                                                          "name": "idbCursor"
                                                                                        },
                                                                                        "prefix": true
                                                                                      },
                                                                                      "right": {
                                                                                        "type": "Literal",
                                                                                        "value": "function"
                                                                                      }
                                                                                    },
                                                                                    "consequent": {
                                                                                      "type": "CallExpression",
                                                                                      "callee": {
                                                                                        "type": "Identifier",
                                                                                        "name": "idbCursor"
                                                                                      },
                                                                                      "arguments": []
                                                                                    },
                                                                                    "alternate": {
                                                                                      "type": "Identifier",
                                                                                      "name": "idbCursor"
                                                                                    }
                                                                                  }
                                                                                }
                                                                              ],
                                                                              "kind": "var"
                                                                            },
                                                                            {
                                                                              "type": "ExpressionStatement",
                                                                              "expression": {
                                                                                "type": "AssignmentExpression",
                                                                                "operator": "=",
                                                                                "left": {
                                                                                  "type": "MemberExpression",
                                                                                  "computed": false,
                                                                                  "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "cursorReq"
                                                                                  },
                                                                                  "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "onsuccess"
                                                                                  }
                                                                                },
                                                                                "right": {
                                                                                  "type": "FunctionExpression",
                                                                                  "id": null,
                                                                                  "params": [
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "name": "e"
                                                                                    }
                                                                                  ],
                                                                                  "defaults": [],
                                                                                  "body": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                      {
                                                                                        "type": "IfStatement",
                                                                                        "test": {
                                                                                          "type": "UnaryExpression",
                                                                                          "operator": "!",
                                                                                          "argument": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                              "type": "Identifier",
                                                                                              "name": "cursorReq"
                                                                                            },
                                                                                            "property": {
                                                                                              "type": "Identifier",
                                                                                              "name": "result"
                                                                                            }
                                                                                          },
                                                                                          "prefix": true
                                                                                        },
                                                                                        "consequent": {
                                                                                          "type": "BlockStatement",
                                                                                          "body": [
                                                                                            {
                                                                                              "type": "ExpressionStatement",
                                                                                              "expression": {
                                                                                                "type": "CallExpression",
                                                                                                "callee": {
                                                                                                  "type": "MemberExpression",
                                                                                                  "computed": false,
                                                                                                  "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "dfd"
                                                                                                  },
                                                                                                  "property": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "resolveWith"
                                                                                                  }
                                                                                                },
                                                                                                "arguments": [
                                                                                                  {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "cursorReq"
                                                                                                  },
                                                                                                  {
                                                                                                    "type": "ArrayExpression",
                                                                                                    "elements": [
                                                                                                      {
                                                                                                        "type": "Literal",
                                                                                                        "value": null
                                                                                                      },
                                                                                                      {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "e"
                                                                                                      }
                                                                                                    ]
                                                                                                  }
                                                                                                ]
                                                                                              }
                                                                                            },
                                                                                            {
                                                                                              "type": "ReturnStatement",
                                                                                              "argument": null
                                                                                            }
                                                                                          ]
                                                                                        },
                                                                                        "alternate": null
                                                                                      },
                                                                                      {
                                                                                        "type": "VariableDeclaration",
                                                                                        "declarations": [
                                                                                          {
                                                                                            "type": "VariableDeclarator",
                                                                                            "id": {
                                                                                              "type": "Identifier",
                                                                                              "name": "elem"
                                                                                            },
                                                                                            "init": {
                                                                                              "type": "ObjectExpression",
                                                                                              "properties": [
                                                                                                {
                                                                                                  "type": "Property",
                                                                                                  "key": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "delete"
                                                                                                  },
                                                                                                  "value": {
                                                                                                    "type": "FunctionExpression",
                                                                                                    "id": null,
                                                                                                    "params": [],
                                                                                                    "defaults": [],
                                                                                                    "body": {
                                                                                                      "type": "BlockStatement",
                                                                                                      "body": [
                                                                                                        {
                                                                                                          "type": "ReturnStatement",
                                                                                                          "argument": {
                                                                                                            "type": "CallExpression",
                                                                                                            "callee": {
                                                                                                              "type": "MemberExpression",
                                                                                                              "computed": false,
                                                                                                              "object": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "wrap"
                                                                                                              },
                                                                                                              "property": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "request"
                                                                                                              }
                                                                                                            },
                                                                                                            "arguments": [
                                                                                                              {
                                                                                                                "type": "FunctionExpression",
                                                                                                                "id": null,
                                                                                                                "params": [],
                                                                                                                "defaults": [],
                                                                                                                "body": {
                                                                                                                  "type": "BlockStatement",
                                                                                                                  "body": [
                                                                                                                    {
                                                                                                                      "type": "ReturnStatement",
                                                                                                                      "argument": {
                                                                                                                        "type": "CallExpression",
                                                                                                                        "callee": {
                                                                                                                          "type": "MemberExpression",
                                                                                                                          "computed": true,
                                                                                                                          "object": {
                                                                                                                            "type": "MemberExpression",
                                                                                                                            "computed": false,
                                                                                                                            "object": {
                                                                                                                              "type": "Identifier",
                                                                                                                              "name": "cursorReq"
                                                                                                                            },
                                                                                                                            "property": {
                                                                                                                              "type": "Identifier",
                                                                                                                              "name": "result"
                                                                                                                            }
                                                                                                                          },
                                                                                                                          "property": {
                                                                                                                            "type": "Literal",
                                                                                                                            "value": "delete"
                                                                                                                          }
                                                                                                                        },
                                                                                                                        "arguments": []
                                                                                                                      }
                                                                                                                    }
                                                                                                                  ]
                                                                                                                },
                                                                                                                "rest": null,
                                                                                                                "generator": false,
                                                                                                                "expression": false
                                                                                                              }
                                                                                                            ]
                                                                                                          }
                                                                                                        }
                                                                                                      ]
                                                                                                    },
                                                                                                    "rest": null,
                                                                                                    "generator": false,
                                                                                                    "expression": false
                                                                                                  },
                                                                                                  "kind": "init"
                                                                                                },
                                                                                                {
                                                                                                  "type": "Property",
                                                                                                  "key": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "update"
                                                                                                  },
                                                                                                  "value": {
                                                                                                    "type": "FunctionExpression",
                                                                                                    "id": null,
                                                                                                    "params": [
                                                                                                      {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "data"
                                                                                                      }
                                                                                                    ],
                                                                                                    "defaults": [],
                                                                                                    "body": {
                                                                                                      "type": "BlockStatement",
                                                                                                      "body": [
                                                                                                        {
                                                                                                          "type": "ReturnStatement",
                                                                                                          "argument": {
                                                                                                            "type": "CallExpression",
                                                                                                            "callee": {
                                                                                                              "type": "MemberExpression",
                                                                                                              "computed": false,
                                                                                                              "object": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "wrap"
                                                                                                              },
                                                                                                              "property": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "request"
                                                                                                              }
                                                                                                            },
                                                                                                            "arguments": [
                                                                                                              {
                                                                                                                "type": "FunctionExpression",
                                                                                                                "id": null,
                                                                                                                "params": [],
                                                                                                                "defaults": [],
                                                                                                                "body": {
                                                                                                                  "type": "BlockStatement",
                                                                                                                  "body": [
                                                                                                                    {
                                                                                                                      "type": "ReturnStatement",
                                                                                                                      "argument": {
                                                                                                                        "type": "CallExpression",
                                                                                                                        "callee": {
                                                                                                                          "type": "MemberExpression",
                                                                                                                          "computed": true,
                                                                                                                          "object": {
                                                                                                                            "type": "MemberExpression",
                                                                                                                            "computed": false,
                                                                                                                            "object": {
                                                                                                                              "type": "Identifier",
                                                                                                                              "name": "cursorReq"
                                                                                                                            },
                                                                                                                            "property": {
                                                                                                                              "type": "Identifier",
                                                                                                                              "name": "result"
                                                                                                                            }
                                                                                                                          },
                                                                                                                          "property": {
                                                                                                                            "type": "Literal",
                                                                                                                            "value": "update"
                                                                                                                          }
                                                                                                                        },
                                                                                                                        "arguments": [
                                                                                                                          {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "data"
                                                                                                                          }
                                                                                                                        ]
                                                                                                                      }
                                                                                                                    }
                                                                                                                  ]
                                                                                                                },
                                                                                                                "rest": null,
                                                                                                                "generator": false,
                                                                                                                "expression": false
                                                                                                              }
                                                                                                            ]
                                                                                                          }
                                                                                                        }
                                                                                                      ]
                                                                                                    },
                                                                                                    "rest": null,
                                                                                                    "generator": false,
                                                                                                    "expression": false
                                                                                                  },
                                                                                                  "kind": "init"
                                                                                                },
                                                                                                {
                                                                                                  "type": "Property",
                                                                                                  "key": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "next"
                                                                                                  },
                                                                                                  "value": {
                                                                                                    "type": "FunctionExpression",
                                                                                                    "id": null,
                                                                                                    "params": [
                                                                                                      {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "key"
                                                                                                      }
                                                                                                    ],
                                                                                                    "defaults": [],
                                                                                                    "body": {
                                                                                                      "type": "BlockStatement",
                                                                                                      "body": [
                                                                                                        {
                                                                                                          "type": "ExpressionStatement",
                                                                                                          "expression": {
                                                                                                            "type": "AssignmentExpression",
                                                                                                            "operator": "=",
                                                                                                            "left": {
                                                                                                              "type": "MemberExpression",
                                                                                                              "computed": false,
                                                                                                              "object": {
                                                                                                                "type": "ThisExpression"
                                                                                                              },
                                                                                                              "property": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "data"
                                                                                                              }
                                                                                                            },
                                                                                                            "right": {
                                                                                                              "type": "Identifier",
                                                                                                              "name": "key"
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      ]
                                                                                                    },
                                                                                                    "rest": null,
                                                                                                    "generator": false,
                                                                                                    "expression": false
                                                                                                  },
                                                                                                  "kind": "init"
                                                                                                },
                                                                                                {
                                                                                                  "type": "Property",
                                                                                                  "key": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "key"
                                                                                                  },
                                                                                                  "value": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": false,
                                                                                                    "object": {
                                                                                                      "type": "MemberExpression",
                                                                                                      "computed": false,
                                                                                                      "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "cursorReq"
                                                                                                      },
                                                                                                      "property": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "result"
                                                                                                      }
                                                                                                    },
                                                                                                    "property": {
                                                                                                      "type": "Identifier",
                                                                                                      "name": "key"
                                                                                                    }
                                                                                                  },
                                                                                                  "kind": "init"
                                                                                                },
                                                                                                {
                                                                                                  "type": "Property",
                                                                                                  "key": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "value"
                                                                                                  },
                                                                                                  "value": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": false,
                                                                                                    "object": {
                                                                                                      "type": "MemberExpression",
                                                                                                      "computed": false,
                                                                                                      "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "cursorReq"
                                                                                                      },
                                                                                                      "property": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "result"
                                                                                                      }
                                                                                                    },
                                                                                                    "property": {
                                                                                                      "type": "Identifier",
                                                                                                      "name": "value"
                                                                                                    }
                                                                                                  },
                                                                                                  "kind": "init"
                                                                                                }
                                                                                              ]
                                                                                            }
                                                                                          }
                                                                                        ],
                                                                                        "kind": "var"
                                                                                      },
                                                                                      {
                                                                                        "type": "ExpressionStatement",
                                                                                        "expression": {
                                                                                          "type": "CallExpression",
                                                                                          "callee": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                              "type": "Identifier",
                                                                                              "name": "dfd"
                                                                                            },
                                                                                            "property": {
                                                                                              "type": "Identifier",
                                                                                              "name": "notifyWith"
                                                                                            }
                                                                                          },
                                                                                          "arguments": [
                                                                                            {
                                                                                              "type": "Identifier",
                                                                                              "name": "cursorReq"
                                                                                            },
                                                                                            {
                                                                                              "type": "ArrayExpression",
                                                                                              "elements": [
                                                                                                {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "elem"
                                                                                                },
                                                                                                {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "e"
                                                                                                }
                                                                                              ]
                                                                                            }
                                                                                          ]
                                                                                        }
                                                                                      },
                                                                                      {
                                                                                        "type": "VariableDeclaration",
                                                                                        "declarations": [
                                                                                          {
                                                                                            "type": "VariableDeclarator",
                                                                                            "id": {
                                                                                              "type": "Identifier",
                                                                                              "name": "result"
                                                                                            },
                                                                                            "init": {
                                                                                              "type": "CallExpression",
                                                                                              "callee": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": false,
                                                                                                "object": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "callback"
                                                                                                },
                                                                                                "property": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "apply"
                                                                                                }
                                                                                              },
                                                                                              "arguments": [
                                                                                                {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "cursorReq"
                                                                                                },
                                                                                                {
                                                                                                  "type": "ArrayExpression",
                                                                                                  "elements": [
                                                                                                    {
                                                                                                      "type": "Identifier",
                                                                                                      "name": "elem"
                                                                                                    }
                                                                                                  ]
                                                                                                }
                                                                                              ]
                                                                                            }
                                                                                          }
                                                                                        ],
                                                                                        "kind": "var"
                                                                                      },
                                                                                      {
                                                                                        "type": "TryStatement",
                                                                                        "block": {
                                                                                          "type": "BlockStatement",
                                                                                          "body": [
                                                                                            {
                                                                                              "type": "IfStatement",
                                                                                              "test": {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "===",
                                                                                                "left": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "result"
                                                                                                },
                                                                                                "right": {
                                                                                                  "type": "Literal",
                                                                                                  "value": false
                                                                                                }
                                                                                              },
                                                                                              "consequent": {
                                                                                                "type": "BlockStatement",
                                                                                                "body": [
                                                                                                  {
                                                                                                    "type": "ExpressionStatement",
                                                                                                    "expression": {
                                                                                                      "type": "CallExpression",
                                                                                                      "callee": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": false,
                                                                                                        "object": {
                                                                                                          "type": "Identifier",
                                                                                                          "name": "dfd"
                                                                                                        },
                                                                                                        "property": {
                                                                                                          "type": "Identifier",
                                                                                                          "name": "resolveWith"
                                                                                                        }
                                                                                                      },
                                                                                                      "arguments": [
                                                                                                        {
                                                                                                          "type": "Identifier",
                                                                                                          "name": "cursorReq"
                                                                                                        },
                                                                                                        {
                                                                                                          "type": "ArrayExpression",
                                                                                                          "elements": [
                                                                                                            {
                                                                                                              "type": "Literal",
                                                                                                              "value": null
                                                                                                            },
                                                                                                            {
                                                                                                              "type": "Identifier",
                                                                                                              "name": "e"
                                                                                                            }
                                                                                                          ]
                                                                                                        }
                                                                                                      ]
                                                                                                    }
                                                                                                  }
                                                                                                ]
                                                                                              },
                                                                                              "alternate": {
                                                                                                "type": "IfStatement",
                                                                                                "test": {
                                                                                                  "type": "BinaryExpression",
                                                                                                  "operator": "===",
                                                                                                  "left": {
                                                                                                    "type": "UnaryExpression",
                                                                                                    "operator": "typeof",
                                                                                                    "argument": {
                                                                                                      "type": "Identifier",
                                                                                                      "name": "result"
                                                                                                    },
                                                                                                    "prefix": true
                                                                                                  },
                                                                                                  "right": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "number"
                                                                                                  }
                                                                                                },
                                                                                                "consequent": {
                                                                                                  "type": "BlockStatement",
                                                                                                  "body": [
                                                                                                    {
                                                                                                      "type": "ExpressionStatement",
                                                                                                      "expression": {
                                                                                                        "type": "CallExpression",
                                                                                                        "callee": {
                                                                                                          "type": "MemberExpression",
                                                                                                          "computed": false,
                                                                                                          "object": {
                                                                                                            "type": "MemberExpression",
                                                                                                            "computed": true,
                                                                                                            "object": {
                                                                                                              "type": "MemberExpression",
                                                                                                              "computed": false,
                                                                                                              "object": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "cursorReq"
                                                                                                              },
                                                                                                              "property": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "result"
                                                                                                              }
                                                                                                            },
                                                                                                            "property": {
                                                                                                              "type": "Literal",
                                                                                                              "value": "advance"
                                                                                                            }
                                                                                                          },
                                                                                                          "property": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "apply"
                                                                                                          }
                                                                                                        },
                                                                                                        "arguments": [
                                                                                                          {
                                                                                                            "type": "MemberExpression",
                                                                                                            "computed": false,
                                                                                                            "object": {
                                                                                                              "type": "Identifier",
                                                                                                              "name": "cursorReq"
                                                                                                            },
                                                                                                            "property": {
                                                                                                              "type": "Identifier",
                                                                                                              "name": "result"
                                                                                                            }
                                                                                                          },
                                                                                                          {
                                                                                                            "type": "ArrayExpression",
                                                                                                            "elements": [
                                                                                                              {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "result"
                                                                                                              }
                                                                                                            ]
                                                                                                          }
                                                                                                        ]
                                                                                                      }
                                                                                                    }
                                                                                                  ]
                                                                                                },
                                                                                                "alternate": {
                                                                                                  "type": "BlockStatement",
                                                                                                  "body": [
                                                                                                    {
                                                                                                      "type": "IfStatement",
                                                                                                      "test": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": false,
                                                                                                        "object": {
                                                                                                          "type": "Identifier",
                                                                                                          "name": "elem"
                                                                                                        },
                                                                                                        "property": {
                                                                                                          "type": "Identifier",
                                                                                                          "name": "data"
                                                                                                        }
                                                                                                      },
                                                                                                      "consequent": {
                                                                                                        "type": "ExpressionStatement",
                                                                                                        "expression": {
                                                                                                          "type": "CallExpression",
                                                                                                          "callee": {
                                                                                                            "type": "MemberExpression",
                                                                                                            "computed": false,
                                                                                                            "object": {
                                                                                                              "type": "MemberExpression",
                                                                                                              "computed": true,
                                                                                                              "object": {
                                                                                                                "type": "MemberExpression",
                                                                                                                "computed": false,
                                                                                                                "object": {
                                                                                                                  "type": "Identifier",
                                                                                                                  "name": "cursorReq"
                                                                                                                },
                                                                                                                "property": {
                                                                                                                  "type": "Identifier",
                                                                                                                  "name": "result"
                                                                                                                }
                                                                                                              },
                                                                                                              "property": {
                                                                                                                "type": "Literal",
                                                                                                                "value": "continue"
                                                                                                              }
                                                                                                            },
                                                                                                            "property": {
                                                                                                              "type": "Identifier",
                                                                                                              "name": "apply"
                                                                                                            }
                                                                                                          },
                                                                                                          "arguments": [
                                                                                                            {
                                                                                                              "type": "MemberExpression",
                                                                                                              "computed": false,
                                                                                                              "object": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "cursorReq"
                                                                                                              },
                                                                                                              "property": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "result"
                                                                                                              }
                                                                                                            },
                                                                                                            {
                                                                                                              "type": "ArrayExpression",
                                                                                                              "elements": [
                                                                                                                {
                                                                                                                  "type": "MemberExpression",
                                                                                                                  "computed": false,
                                                                                                                  "object": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "elem"
                                                                                                                  },
                                                                                                                  "property": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "data"
                                                                                                                  }
                                                                                                                }
                                                                                                              ]
                                                                                                            }
                                                                                                          ]
                                                                                                        }
                                                                                                      },
                                                                                                      "alternate": {
                                                                                                        "type": "ExpressionStatement",
                                                                                                        "expression": {
                                                                                                          "type": "CallExpression",
                                                                                                          "callee": {
                                                                                                            "type": "MemberExpression",
                                                                                                            "computed": true,
                                                                                                            "object": {
                                                                                                              "type": "MemberExpression",
                                                                                                              "computed": false,
                                                                                                              "object": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "cursorReq"
                                                                                                              },
                                                                                                              "property": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "result"
                                                                                                              }
                                                                                                            },
                                                                                                            "property": {
                                                                                                              "type": "Literal",
                                                                                                              "value": "continue"
                                                                                                            }
                                                                                                          },
                                                                                                          "arguments": []
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  ]
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          ]
                                                                                        },
                                                                                        "guardedHandlers": [],
                                                                                        "handlers": [
                                                                                          {
                                                                                            "type": "CatchClause",
                                                                                            "param": {
                                                                                              "type": "Identifier",
                                                                                              "name": "e"
                                                                                            },
                                                                                            "body": {
                                                                                              "type": "BlockStatement",
                                                                                              "body": [
                                                                                                {
                                                                                                  "type": "ExpressionStatement",
                                                                                                  "expression": {
                                                                                                    "type": "CallExpression",
                                                                                                    "callee": {
                                                                                                      "type": "MemberExpression",
                                                                                                      "computed": false,
                                                                                                      "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "dfd"
                                                                                                      },
                                                                                                      "property": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "rejectWith"
                                                                                                      }
                                                                                                    },
                                                                                                    "arguments": [
                                                                                                      {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "cursorReq"
                                                                                                      },
                                                                                                      {
                                                                                                        "type": "ArrayExpression",
                                                                                                        "elements": [
                                                                                                          {
                                                                                                            "type": "MemberExpression",
                                                                                                            "computed": false,
                                                                                                            "object": {
                                                                                                              "type": "Identifier",
                                                                                                              "name": "cursorReq"
                                                                                                            },
                                                                                                            "property": {
                                                                                                              "type": "Identifier",
                                                                                                              "name": "result"
                                                                                                            }
                                                                                                          },
                                                                                                          {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "e"
                                                                                                          }
                                                                                                        ]
                                                                                                      }
                                                                                                    ]
                                                                                                  }
                                                                                                }
                                                                                              ]
                                                                                            }
                                                                                          }
                                                                                        ],
                                                                                        "finalizer": null
                                                                                      }
                                                                                    ]
                                                                                  },
                                                                                  "rest": null,
                                                                                  "generator": false,
                                                                                  "expression": false
                                                                                }
                                                                              }
                                                                            },
                                                                            {
                                                                              "type": "ExpressionStatement",
                                                                              "expression": {
                                                                                "type": "AssignmentExpression",
                                                                                "operator": "=",
                                                                                "left": {
                                                                                  "type": "MemberExpression",
                                                                                  "computed": false,
                                                                                  "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "cursorReq"
                                                                                  },
                                                                                  "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "onerror"
                                                                                  }
                                                                                },
                                                                                "right": {
                                                                                  "type": "FunctionExpression",
                                                                                  "id": null,
                                                                                  "params": [
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "name": "e"
                                                                                    }
                                                                                  ],
                                                                                  "defaults": [],
                                                                                  "body": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                      {
                                                                                        "type": "ExpressionStatement",
                                                                                        "expression": {
                                                                                          "type": "CallExpression",
                                                                                          "callee": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                              "type": "Identifier",
                                                                                              "name": "dfd"
                                                                                            },
                                                                                            "property": {
                                                                                              "type": "Identifier",
                                                                                              "name": "rejectWith"
                                                                                            }
                                                                                          },
                                                                                          "arguments": [
                                                                                            {
                                                                                              "type": "Identifier",
                                                                                              "name": "cursorReq"
                                                                                            },
                                                                                            {
                                                                                              "type": "ArrayExpression",
                                                                                              "elements": [
                                                                                                {
                                                                                                  "type": "MemberExpression",
                                                                                                  "computed": false,
                                                                                                  "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "cursorReq"
                                                                                                  },
                                                                                                  "property": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "result"
                                                                                                  }
                                                                                                },
                                                                                                {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "e"
                                                                                                }
                                                                                              ]
                                                                                            }
                                                                                          ]
                                                                                        }
                                                                                      }
                                                                                    ]
                                                                                  },
                                                                                  "rest": null,
                                                                                  "generator": false,
                                                                                  "expression": false
                                                                                }
                                                                              }
                                                                            }
                                                                          ]
                                                                        },
                                                                        "guardedHandlers": [],
                                                                        "handlers": [
                                                                          {
                                                                            "type": "CatchClause",
                                                                            "param": {
                                                                              "type": "Identifier",
                                                                              "name": "e"
                                                                            },
                                                                            "body": {
                                                                              "type": "BlockStatement",
                                                                              "body": [
                                                                                {
                                                                                  "type": "ExpressionStatement",
                                                                                  "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                      "type": "MemberExpression",
                                                                                      "computed": false,
                                                                                      "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "e"
                                                                                      },
                                                                                      "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "type"
                                                                                      }
                                                                                    },
                                                                                    "right": {
                                                                                      "type": "Literal",
                                                                                      "value": "exception"
                                                                                    }
                                                                                  }
                                                                                },
                                                                                {
                                                                                  "type": "ExpressionStatement",
                                                                                  "expression": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                      "type": "MemberExpression",
                                                                                      "computed": false,
                                                                                      "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "dfd"
                                                                                      },
                                                                                      "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "rejectWith"
                                                                                      }
                                                                                    },
                                                                                    "arguments": [
                                                                                      {
                                                                                        "type": "Identifier",
                                                                                        "name": "cursorReq"
                                                                                      },
                                                                                      {
                                                                                        "type": "ArrayExpression",
                                                                                        "elements": [
                                                                                          {
                                                                                            "type": "Literal",
                                                                                            "value": null
                                                                                          },
                                                                                          {
                                                                                            "type": "Identifier",
                                                                                            "name": "e"
                                                                                          }
                                                                                        ]
                                                                                      }
                                                                                    ]
                                                                                  }
                                                                                }
                                                                              ]
                                                                            }
                                                                          }
                                                                        ],
                                                                        "finalizer": null
                                                                      }
                                                                    ]
                                                                  },
                                                                  "rest": null,
                                                                  "generator": false,
                                                                  "expression": false
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      "rest": null,
                                                      "generator": false,
                                                      "expression": false
                                                    },
                                                    "kind": "init"
                                                  },
                                                  {
                                                    "type": "Property",
                                                    "key": {
                                                      "type": "Literal",
                                                      "value": "index"
                                                    },
                                                    "value": {
                                                      "type": "FunctionExpression",
                                                      "id": null,
                                                      "params": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "index"
                                                        }
                                                      ],
                                                      "defaults": [],
                                                      "body": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "TryStatement",
                                                            "block": {
                                                              "type": "BlockStatement",
                                                              "body": [
                                                                {
                                                                  "type": "VariableDeclaration",
                                                                  "declarations": [
                                                                    {
                                                                      "type": "VariableDeclarator",
                                                                      "id": {
                                                                        "type": "Identifier",
                                                                        "name": "idbIndex"
                                                                      },
                                                                      "init": {
                                                                        "type": "ConditionalExpression",
                                                                        "test": {
                                                                          "type": "BinaryExpression",
                                                                          "operator": "===",
                                                                          "left": {
                                                                            "type": "UnaryExpression",
                                                                            "operator": "typeof",
                                                                            "argument": {
                                                                              "type": "Identifier",
                                                                              "name": "index"
                                                                            },
                                                                            "prefix": true
                                                                          },
                                                                          "right": {
                                                                            "type": "Literal",
                                                                            "value": "function"
                                                                          }
                                                                        },
                                                                        "consequent": {
                                                                          "type": "CallExpression",
                                                                          "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "index"
                                                                          },
                                                                          "arguments": []
                                                                        },
                                                                        "alternate": {
                                                                          "type": "Identifier",
                                                                          "name": "index"
                                                                        }
                                                                      }
                                                                    }
                                                                  ],
                                                                  "kind": "var"
                                                                }
                                                              ]
                                                            },
                                                            "guardedHandlers": [],
                                                            "handlers": [
                                                              {
                                                                "type": "CatchClause",
                                                                "param": {
                                                                  "type": "Identifier",
                                                                  "name": "e"
                                                                },
                                                                "body": {
                                                                  "type": "BlockStatement",
                                                                  "body": [
                                                                    {
                                                                      "type": "ExpressionStatement",
                                                                      "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                          "type": "Identifier",
                                                                          "name": "idbIndex"
                                                                        },
                                                                        "right": {
                                                                          "type": "Literal",
                                                                          "value": null
                                                                        }
                                                                      }
                                                                    }
                                                                  ]
                                                                }
                                                              }
                                                            ],
                                                            "finalizer": null
                                                          },
                                                          {
                                                            "type": "ReturnStatement",
                                                            "argument": {
                                                              "type": "ObjectExpression",
                                                              "properties": [
                                                                {
                                                                  "type": "Property",
                                                                  "key": {
                                                                    "type": "Literal",
                                                                    "value": "each"
                                                                  },
                                                                  "value": {
                                                                    "type": "FunctionExpression",
                                                                    "id": null,
                                                                    "params": [
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "callback"
                                                                      },
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "range"
                                                                      },
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "direction"
                                                                      }
                                                                    ],
                                                                    "defaults": [],
                                                                    "body": {
                                                                      "type": "BlockStatement",
                                                                      "body": [
                                                                        {
                                                                          "type": "ReturnStatement",
                                                                          "argument": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                              "type": "MemberExpression",
                                                                              "computed": false,
                                                                              "object": {
                                                                                "type": "Identifier",
                                                                                "name": "wrap"
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "cursor"
                                                                              }
                                                                            },
                                                                            "arguments": [
                                                                              {
                                                                                "type": "FunctionExpression",
                                                                                "id": null,
                                                                                "params": [],
                                                                                "defaults": [],
                                                                                "body": {
                                                                                  "type": "BlockStatement",
                                                                                  "body": [
                                                                                    {
                                                                                      "type": "IfStatement",
                                                                                      "test": {
                                                                                        "type": "Identifier",
                                                                                        "name": "direction"
                                                                                      },
                                                                                      "consequent": {
                                                                                        "type": "BlockStatement",
                                                                                        "body": [
                                                                                          {
                                                                                            "type": "ReturnStatement",
                                                                                            "argument": {
                                                                                              "type": "CallExpression",
                                                                                              "callee": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": false,
                                                                                                "object": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "idbIndex"
                                                                                                },
                                                                                                "property": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "openCursor"
                                                                                                }
                                                                                              },
                                                                                              "arguments": [
                                                                                                {
                                                                                                  "type": "CallExpression",
                                                                                                  "callee": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": false,
                                                                                                    "object": {
                                                                                                      "type": "Identifier",
                                                                                                      "name": "wrap"
                                                                                                    },
                                                                                                    "property": {
                                                                                                      "type": "Identifier",
                                                                                                      "name": "range"
                                                                                                    }
                                                                                                  },
                                                                                                  "arguments": [
                                                                                                    {
                                                                                                      "type": "Identifier",
                                                                                                      "name": "range"
                                                                                                    }
                                                                                                  ]
                                                                                                },
                                                                                                {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "direction"
                                                                                                }
                                                                                              ]
                                                                                            }
                                                                                          }
                                                                                        ]
                                                                                      },
                                                                                      "alternate": {
                                                                                        "type": "BlockStatement",
                                                                                        "body": [
                                                                                          {
                                                                                            "type": "ReturnStatement",
                                                                                            "argument": {
                                                                                              "type": "CallExpression",
                                                                                              "callee": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": false,
                                                                                                "object": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "idbIndex"
                                                                                                },
                                                                                                "property": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "openCursor"
                                                                                                }
                                                                                              },
                                                                                              "arguments": [
                                                                                                {
                                                                                                  "type": "CallExpression",
                                                                                                  "callee": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": false,
                                                                                                    "object": {
                                                                                                      "type": "Identifier",
                                                                                                      "name": "wrap"
                                                                                                    },
                                                                                                    "property": {
                                                                                                      "type": "Identifier",
                                                                                                      "name": "range"
                                                                                                    }
                                                                                                  },
                                                                                                  "arguments": [
                                                                                                    {
                                                                                                      "type": "Identifier",
                                                                                                      "name": "range"
                                                                                                    }
                                                                                                  ]
                                                                                                }
                                                                                              ]
                                                                                            }
                                                                                          }
                                                                                        ]
                                                                                      }
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                "rest": null,
                                                                                "generator": false,
                                                                                "expression": false
                                                                              },
                                                                              {
                                                                                "type": "Identifier",
                                                                                "name": "callback"
                                                                              }
                                                                            ]
                                                                          }
                                                                        }
                                                                      ]
                                                                    },
                                                                    "rest": null,
                                                                    "generator": false,
                                                                    "expression": false
                                                                  },
                                                                  "kind": "init"
                                                                },
                                                                {
                                                                  "type": "Property",
                                                                  "key": {
                                                                    "type": "Literal",
                                                                    "value": "eachKey"
                                                                  },
                                                                  "value": {
                                                                    "type": "FunctionExpression",
                                                                    "id": null,
                                                                    "params": [
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "callback"
                                                                      },
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "range"
                                                                      },
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "direction"
                                                                      }
                                                                    ],
                                                                    "defaults": [],
                                                                    "body": {
                                                                      "type": "BlockStatement",
                                                                      "body": [
                                                                        {
                                                                          "type": "ReturnStatement",
                                                                          "argument": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                              "type": "MemberExpression",
                                                                              "computed": false,
                                                                              "object": {
                                                                                "type": "Identifier",
                                                                                "name": "wrap"
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "cursor"
                                                                              }
                                                                            },
                                                                            "arguments": [
                                                                              {
                                                                                "type": "FunctionExpression",
                                                                                "id": null,
                                                                                "params": [],
                                                                                "defaults": [],
                                                                                "body": {
                                                                                  "type": "BlockStatement",
                                                                                  "body": [
                                                                                    {
                                                                                      "type": "IfStatement",
                                                                                      "test": {
                                                                                        "type": "Identifier",
                                                                                        "name": "direction"
                                                                                      },
                                                                                      "consequent": {
                                                                                        "type": "BlockStatement",
                                                                                        "body": [
                                                                                          {
                                                                                            "type": "ReturnStatement",
                                                                                            "argument": {
                                                                                              "type": "CallExpression",
                                                                                              "callee": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": false,
                                                                                                "object": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "idbIndex"
                                                                                                },
                                                                                                "property": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "openKeyCursor"
                                                                                                }
                                                                                              },
                                                                                              "arguments": [
                                                                                                {
                                                                                                  "type": "CallExpression",
                                                                                                  "callee": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": false,
                                                                                                    "object": {
                                                                                                      "type": "Identifier",
                                                                                                      "name": "wrap"
                                                                                                    },
                                                                                                    "property": {
                                                                                                      "type": "Identifier",
                                                                                                      "name": "range"
                                                                                                    }
                                                                                                  },
                                                                                                  "arguments": [
                                                                                                    {
                                                                                                      "type": "Identifier",
                                                                                                      "name": "range"
                                                                                                    }
                                                                                                  ]
                                                                                                },
                                                                                                {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "direction"
                                                                                                }
                                                                                              ]
                                                                                            }
                                                                                          }
                                                                                        ]
                                                                                      },
                                                                                      "alternate": {
                                                                                        "type": "BlockStatement",
                                                                                        "body": [
                                                                                          {
                                                                                            "type": "ReturnStatement",
                                                                                            "argument": {
                                                                                              "type": "CallExpression",
                                                                                              "callee": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": false,
                                                                                                "object": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "idbIndex"
                                                                                                },
                                                                                                "property": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "openKeyCursor"
                                                                                                }
                                                                                              },
                                                                                              "arguments": [
                                                                                                {
                                                                                                  "type": "CallExpression",
                                                                                                  "callee": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": false,
                                                                                                    "object": {
                                                                                                      "type": "Identifier",
                                                                                                      "name": "wrap"
                                                                                                    },
                                                                                                    "property": {
                                                                                                      "type": "Identifier",
                                                                                                      "name": "range"
                                                                                                    }
                                                                                                  },
                                                                                                  "arguments": [
                                                                                                    {
                                                                                                      "type": "Identifier",
                                                                                                      "name": "range"
                                                                                                    }
                                                                                                  ]
                                                                                                }
                                                                                              ]
                                                                                            }
                                                                                          }
                                                                                        ]
                                                                                      }
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                "rest": null,
                                                                                "generator": false,
                                                                                "expression": false
                                                                              },
                                                                              {
                                                                                "type": "Identifier",
                                                                                "name": "callback"
                                                                              }
                                                                            ]
                                                                          }
                                                                        }
                                                                      ]
                                                                    },
                                                                    "rest": null,
                                                                    "generator": false,
                                                                    "expression": false
                                                                  },
                                                                  "kind": "init"
                                                                },
                                                                {
                                                                  "type": "Property",
                                                                  "key": {
                                                                    "type": "Literal",
                                                                    "value": "get"
                                                                  },
                                                                  "value": {
                                                                    "type": "FunctionExpression",
                                                                    "id": null,
                                                                    "params": [
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "key"
                                                                      }
                                                                    ],
                                                                    "defaults": [],
                                                                    "body": {
                                                                      "type": "BlockStatement",
                                                                      "body": [
                                                                        {
                                                                          "type": "IfStatement",
                                                                          "test": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "===",
                                                                            "left": {
                                                                              "type": "UnaryExpression",
                                                                              "operator": "typeof",
                                                                              "argument": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "idbIndex"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "get"
                                                                                }
                                                                              },
                                                                              "prefix": true
                                                                            },
                                                                            "right": {
                                                                              "type": "Literal",
                                                                              "value": "function"
                                                                            }
                                                                          },
                                                                          "consequent": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                              {
                                                                                "type": "ReturnStatement",
                                                                                "argument": {
                                                                                  "type": "CallExpression",
                                                                                  "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "wrap"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "request"
                                                                                    }
                                                                                  },
                                                                                  "arguments": [
                                                                                    {
                                                                                      "type": "CallExpression",
                                                                                      "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                          "type": "Identifier",
                                                                                          "name": "idbIndex"
                                                                                        },
                                                                                        "property": {
                                                                                          "type": "Identifier",
                                                                                          "name": "get"
                                                                                        }
                                                                                      },
                                                                                      "arguments": [
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "name": "key"
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              }
                                                                            ]
                                                                          },
                                                                          "alternate": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                              {
                                                                                "type": "ReturnStatement",
                                                                                "argument": {
                                                                                  "type": "CallExpression",
                                                                                  "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "idbIndex"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "openCursor"
                                                                                    }
                                                                                  },
                                                                                  "arguments": [
                                                                                    {
                                                                                      "type": "CallExpression",
                                                                                      "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                          "type": "Identifier",
                                                                                          "name": "wrap"
                                                                                        },
                                                                                        "property": {
                                                                                          "type": "Identifier",
                                                                                          "name": "range"
                                                                                        }
                                                                                      },
                                                                                      "arguments": [
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "name": "key"
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              }
                                                                            ]
                                                                          }
                                                                        }
                                                                      ]
                                                                    },
                                                                    "rest": null,
                                                                    "generator": false,
                                                                    "expression": false
                                                                  },
                                                                  "kind": "init"
                                                                },
                                                                {
                                                                  "type": "Property",
                                                                  "key": {
                                                                    "type": "Literal",
                                                                    "value": "count"
                                                                  },
                                                                  "value": {
                                                                    "type": "FunctionExpression",
                                                                    "id": null,
                                                                    "params": [],
                                                                    "defaults": [],
                                                                    "body": {
                                                                      "type": "BlockStatement",
                                                                      "body": [
                                                                        {
                                                                          "type": "IfStatement",
                                                                          "test": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "===",
                                                                            "left": {
                                                                              "type": "UnaryExpression",
                                                                              "operator": "typeof",
                                                                              "argument": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "idbIndex"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "count"
                                                                                }
                                                                              },
                                                                              "prefix": true
                                                                            },
                                                                            "right": {
                                                                              "type": "Literal",
                                                                              "value": "function"
                                                                            }
                                                                          },
                                                                          "consequent": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                              {
                                                                                "type": "ReturnStatement",
                                                                                "argument": {
                                                                                  "type": "CallExpression",
                                                                                  "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "wrap"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "request"
                                                                                    }
                                                                                  },
                                                                                  "arguments": [
                                                                                    {
                                                                                      "type": "CallExpression",
                                                                                      "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                          "type": "Identifier",
                                                                                          "name": "idbIndex"
                                                                                        },
                                                                                        "property": {
                                                                                          "type": "Identifier",
                                                                                          "name": "count"
                                                                                        }
                                                                                      },
                                                                                      "arguments": []
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              }
                                                                            ]
                                                                          },
                                                                          "alternate": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                              {
                                                                                "type": "ThrowStatement",
                                                                                "argument": {
                                                                                  "type": "Literal",
                                                                                  "value": "Count not implemented for cursors"
                                                                                }
                                                                              }
                                                                            ]
                                                                          }
                                                                        }
                                                                      ]
                                                                    },
                                                                    "rest": null,
                                                                    "generator": false,
                                                                    "expression": false
                                                                  },
                                                                  "kind": "init"
                                                                },
                                                                {
                                                                  "type": "Property",
                                                                  "key": {
                                                                    "type": "Literal",
                                                                    "value": "getKey"
                                                                  },
                                                                  "value": {
                                                                    "type": "FunctionExpression",
                                                                    "id": null,
                                                                    "params": [
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "key"
                                                                      }
                                                                    ],
                                                                    "defaults": [],
                                                                    "body": {
                                                                      "type": "BlockStatement",
                                                                      "body": [
                                                                        {
                                                                          "type": "IfStatement",
                                                                          "test": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "===",
                                                                            "left": {
                                                                              "type": "UnaryExpression",
                                                                              "operator": "typeof",
                                                                              "argument": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "idbIndex"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "getKey"
                                                                                }
                                                                              },
                                                                              "prefix": true
                                                                            },
                                                                            "right": {
                                                                              "type": "Literal",
                                                                              "value": "function"
                                                                            }
                                                                          },
                                                                          "consequent": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                              {
                                                                                "type": "ReturnStatement",
                                                                                "argument": {
                                                                                  "type": "CallExpression",
                                                                                  "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "wrap"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "request"
                                                                                    }
                                                                                  },
                                                                                  "arguments": [
                                                                                    {
                                                                                      "type": "CallExpression",
                                                                                      "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                          "type": "Identifier",
                                                                                          "name": "idbIndex"
                                                                                        },
                                                                                        "property": {
                                                                                          "type": "Identifier",
                                                                                          "name": "getKey"
                                                                                        }
                                                                                      },
                                                                                      "arguments": [
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "name": "key"
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              }
                                                                            ]
                                                                          },
                                                                          "alternate": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                              {
                                                                                "type": "ReturnStatement",
                                                                                "argument": {
                                                                                  "type": "CallExpression",
                                                                                  "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "idbIndex"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "openKeyCursor"
                                                                                    }
                                                                                  },
                                                                                  "arguments": [
                                                                                    {
                                                                                      "type": "CallExpression",
                                                                                      "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                          "type": "Identifier",
                                                                                          "name": "wrap"
                                                                                        },
                                                                                        "property": {
                                                                                          "type": "Identifier",
                                                                                          "name": "range"
                                                                                        }
                                                                                      },
                                                                                      "arguments": [
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "name": "key"
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              }
                                                                            ]
                                                                          }
                                                                        }
                                                                      ]
                                                                    },
                                                                    "rest": null,
                                                                    "generator": false,
                                                                    "expression": false
                                                                  },
                                                                  "kind": "init"
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      "rest": null,
                                                      "generator": false,
                                                      "expression": false
                                                    },
                                                    "kind": "init"
                                                  }
                                                ]
                                              }
                                            }
                                          ],
                                          "kind": "var"
                                        },
                                        {
                                          "type": "VariableDeclaration",
                                          "declarations": [
                                            {
                                              "type": "VariableDeclarator",
                                              "id": {
                                                "type": "Identifier",
                                                "name": "dbPromise"
                                              },
                                              "init": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "wrap"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "request"
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "FunctionExpression",
                                                    "id": null,
                                                    "params": [],
                                                    "defaults": [],
                                                    "body": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ReturnStatement",
                                                          "argument": {
                                                            "type": "ConditionalExpression",
                                                            "test": {
                                                              "type": "Identifier",
                                                              "name": "version"
                                                            },
                                                            "consequent": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "indexedDB"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "open"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "dbName"
                                                                },
                                                                {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "parseInt"
                                                                  },
                                                                  "arguments": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "name": "version"
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            "alternate": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "indexedDB"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "open"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "dbName"
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "rest": null,
                                                    "generator": false,
                                                    "expression": false
                                                  }
                                                ]
                                              }
                                            }
                                          ],
                                          "kind": "var"
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "dbPromise"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "then"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "FunctionExpression",
                                                "id": null,
                                                "params": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "db"
                                                  },
                                                  {
                                                    "type": "Identifier",
                                                    "name": "e"
                                                  }
                                                ],
                                                "defaults": [],
                                                "body": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "db"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "onversionchange"
                                                          }
                                                        },
                                                        "right": {
                                                          "type": "FunctionExpression",
                                                          "id": null,
                                                          "params": [],
                                                          "defaults": [],
                                                          "body": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                              {
                                                                "type": "IfStatement",
                                                                "test": {
                                                                  "type": "UnaryExpression",
                                                                  "operator": "!",
                                                                  "argument": {
                                                                    "type": "LogicalExpression",
                                                                    "operator": "&&",
                                                                    "left": {
                                                                      "type": "LogicalExpression",
                                                                      "operator": "&&",
                                                                      "left": {
                                                                        "type": "Identifier",
                                                                        "name": "config"
                                                                      },
                                                                      "right": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "config"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "onversionchange"
                                                                        }
                                                                      }
                                                                    },
                                                                    "right": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "!==",
                                                                      "left": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "config"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "onversionchange"
                                                                          }
                                                                        },
                                                                        "arguments": []
                                                                      },
                                                                      "right": {
                                                                        "type": "Literal",
                                                                        "value": false
                                                                      }
                                                                    }
                                                                  },
                                                                  "prefix": true
                                                                },
                                                                "consequent": {
                                                                  "type": "BlockStatement",
                                                                  "body": [
                                                                    {
                                                                      "type": "ExpressionStatement",
                                                                      "expression": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "db"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "close"
                                                                          }
                                                                        },
                                                                        "arguments": []
                                                                      }
                                                                    }
                                                                  ]
                                                                },
                                                                "alternate": null
                                                              }
                                                            ]
                                                          },
                                                          "rest": null,
                                                          "generator": false,
                                                          "expression": false
                                                        }
                                                      }
                                                    }
                                                  ]
                                                },
                                                "rest": null,
                                                "generator": false,
                                                "expression": false
                                              },
                                              {
                                                "type": "FunctionExpression",
                                                "id": null,
                                                "params": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "error"
                                                  },
                                                  {
                                                    "type": "Identifier",
                                                    "name": "e"
                                                  }
                                                ],
                                                "defaults": [],
                                                "body": {
                                                  "type": "BlockStatement",
                                                  "body": []
                                                },
                                                "rest": null,
                                                "generator": false,
                                                "expression": false
                                              },
                                              {
                                                "type": "FunctionExpression",
                                                "id": null,
                                                "params": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "db"
                                                  },
                                                  {
                                                    "type": "Identifier",
                                                    "name": "e"
                                                  }
                                                ],
                                                "defaults": [],
                                                "body": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "IfStatement",
                                                      "test": {
                                                        "type": "LogicalExpression",
                                                        "operator": "&&",
                                                        "left": {
                                                          "type": "Identifier",
                                                          "name": "e"
                                                        },
                                                        "right": {
                                                          "type": "BinaryExpression",
                                                          "operator": "===",
                                                          "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "e"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "type"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "upgradeneeded"
                                                          }
                                                        }
                                                      },
                                                      "consequent": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "IfStatement",
                                                            "test": {
                                                              "type": "LogicalExpression",
                                                              "operator": "&&",
                                                              "left": {
                                                                "type": "Identifier",
                                                                "name": "config"
                                                              },
                                                              "right": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "config"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "schema"
                                                                }
                                                              }
                                                            },
                                                            "consequent": {
                                                              "type": "BlockStatement",
                                                              "body": [
                                                                {
                                                                  "type": "ForStatement",
                                                                  "init": {
                                                                    "type": "VariableDeclaration",
                                                                    "declarations": [
                                                                      {
                                                                        "type": "VariableDeclarator",
                                                                        "id": {
                                                                          "type": "Identifier",
                                                                          "name": "i"
                                                                        },
                                                                        "init": {
                                                                          "type": "BinaryExpression",
                                                                          "operator": "+",
                                                                          "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "Identifier",
                                                                              "name": "e"
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "oldVersion"
                                                                            }
                                                                          },
                                                                          "right": {
                                                                            "type": "Literal",
                                                                            "value": 1
                                                                          }
                                                                        }
                                                                      }
                                                                    ],
                                                                    "kind": "var"
                                                                  },
                                                                  "test": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "<=",
                                                                    "left": {
                                                                      "type": "Identifier",
                                                                      "name": "i"
                                                                    },
                                                                    "right": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "e"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "newVersion"
                                                                      }
                                                                    }
                                                                  },
                                                                  "update": {
                                                                    "type": "UpdateExpression",
                                                                    "operator": "++",
                                                                    "argument": {
                                                                      "type": "Identifier",
                                                                      "name": "i"
                                                                    },
                                                                    "prefix": false
                                                                  },
                                                                  "body": {
                                                                    "type": "BlockStatement",
                                                                    "body": [
                                                                      {
                                                                        "type": "IfStatement",
                                                                        "test": {
                                                                          "type": "BinaryExpression",
                                                                          "operator": "===",
                                                                          "left": {
                                                                            "type": "UnaryExpression",
                                                                            "operator": "typeof",
                                                                            "argument": {
                                                                              "type": "MemberExpression",
                                                                              "computed": true,
                                                                              "object": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "config"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "schema"
                                                                                }
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "i"
                                                                              }
                                                                            },
                                                                            "prefix": true
                                                                          },
                                                                          "right": {
                                                                            "type": "Literal",
                                                                            "value": "function"
                                                                          }
                                                                        },
                                                                        "consequent": {
                                                                          "type": "ExpressionStatement",
                                                                          "expression": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                              "type": "MemberExpression",
                                                                              "computed": false,
                                                                              "object": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                  "type": "MemberExpression",
                                                                                  "computed": false,
                                                                                  "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "config"
                                                                                  },
                                                                                  "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "schema"
                                                                                  }
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "i"
                                                                                }
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "call"
                                                                              }
                                                                            },
                                                                            "arguments": [
                                                                              {
                                                                                "type": "ThisExpression"
                                                                              },
                                                                              {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                  "type": "MemberExpression",
                                                                                  "computed": false,
                                                                                  "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "wrap"
                                                                                  },
                                                                                  "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "transaction"
                                                                                  }
                                                                                },
                                                                                "arguments": [
                                                                                  {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "ThisExpression"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "transaction"
                                                                                    }
                                                                                  }
                                                                                ]
                                                                              }
                                                                            ]
                                                                          }
                                                                        },
                                                                        "alternate": null
                                                                      }
                                                                    ]
                                                                  }
                                                                }
                                                              ]
                                                            },
                                                            "alternate": null
                                                          },
                                                          {
                                                            "type": "IfStatement",
                                                            "test": {
                                                              "type": "LogicalExpression",
                                                              "operator": "&&",
                                                              "left": {
                                                                "type": "Identifier",
                                                                "name": "config"
                                                              },
                                                              "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "===",
                                                                "left": {
                                                                  "type": "UnaryExpression",
                                                                  "operator": "typeof",
                                                                  "argument": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "config"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "upgrade"
                                                                    }
                                                                  },
                                                                  "prefix": true
                                                                },
                                                                "right": {
                                                                  "type": "Literal",
                                                                  "value": "function"
                                                                }
                                                              }
                                                            },
                                                            "consequent": {
                                                              "type": "BlockStatement",
                                                              "body": [
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "expression": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "config"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "upgrade"
                                                                        }
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "call"
                                                                      }
                                                                    },
                                                                    "arguments": [
                                                                      {
                                                                        "type": "ThisExpression"
                                                                      },
                                                                      {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "wrap"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "transaction"
                                                                          }
                                                                        },
                                                                        "arguments": [
                                                                          {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "ThisExpression"
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "transaction"
                                                                            }
                                                                          }
                                                                        ]
                                                                      }
                                                                    ]
                                                                  }
                                                                }
                                                              ]
                                                            },
                                                            "alternate": null
                                                          }
                                                        ]
                                                      },
                                                      "alternate": null
                                                    }
                                                  ]
                                                },
                                                "rest": null,
                                                "generator": false,
                                                "expression": false
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "ReturnStatement",
                                          "argument": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "$"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "extend"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "Identifier",
                                                "name": "dbPromise"
                                              },
                                              {
                                                "type": "ObjectExpression",
                                                "properties": [
                                                  {
                                                    "type": "Property",
                                                    "key": {
                                                      "type": "Literal",
                                                      "value": "cmp"
                                                    },
                                                    "value": {
                                                      "type": "FunctionExpression",
                                                      "id": null,
                                                      "params": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "key1"
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "name": "key2"
                                                        }
                                                      ],
                                                      "defaults": [],
                                                      "body": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "ReturnStatement",
                                                            "argument": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "indexedDB"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "cmp"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "key1"
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "key2"
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      "rest": null,
                                                      "generator": false,
                                                      "expression": false
                                                    },
                                                    "kind": "init"
                                                  },
                                                  {
                                                    "type": "Property",
                                                    "key": {
                                                      "type": "Literal",
                                                      "value": "deleteDatabase"
                                                    },
                                                    "value": {
                                                      "type": "FunctionExpression",
                                                      "id": null,
                                                      "params": [],
                                                      "defaults": [],
                                                      "body": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "ReturnStatement",
                                                            "argument": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "$"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "Deferred"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "FunctionExpression",
                                                                  "id": null,
                                                                  "params": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "name": "dfd"
                                                                    }
                                                                  ],
                                                                  "defaults": [],
                                                                  "body": {
                                                                    "type": "BlockStatement",
                                                                    "body": [
                                                                      {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                          "type": "CallExpression",
                                                                          "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "Identifier",
                                                                              "name": "dbPromise"
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "then"
                                                                            }
                                                                          },
                                                                          "arguments": [
                                                                            {
                                                                              "type": "FunctionExpression",
                                                                              "id": null,
                                                                              "params": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "name": "db"
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "name": "e"
                                                                                }
                                                                              ],
                                                                              "defaults": [],
                                                                              "body": {
                                                                                "type": "BlockStatement",
                                                                                "body": [
                                                                                  {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                      "type": "CallExpression",
                                                                                      "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                          "type": "Identifier",
                                                                                          "name": "db"
                                                                                        },
                                                                                        "property": {
                                                                                          "type": "Identifier",
                                                                                          "name": "close"
                                                                                        }
                                                                                      },
                                                                                      "arguments": []
                                                                                    }
                                                                                  },
                                                                                  {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                      "type": "CallExpression",
                                                                                      "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                          "type": "CallExpression",
                                                                                          "callee": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                              "type": "Identifier",
                                                                                              "name": "wrap"
                                                                                            },
                                                                                            "property": {
                                                                                              "type": "Identifier",
                                                                                              "name": "request"
                                                                                            }
                                                                                          },
                                                                                          "arguments": [
                                                                                            {
                                                                                              "type": "FunctionExpression",
                                                                                              "id": null,
                                                                                              "params": [],
                                                                                              "defaults": [],
                                                                                              "body": {
                                                                                                "type": "BlockStatement",
                                                                                                "body": [
                                                                                                  {
                                                                                                    "type": "ReturnStatement",
                                                                                                    "argument": {
                                                                                                      "type": "CallExpression",
                                                                                                      "callee": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": false,
                                                                                                        "object": {
                                                                                                          "type": "Identifier",
                                                                                                          "name": "indexedDB"
                                                                                                        },
                                                                                                        "property": {
                                                                                                          "type": "Identifier",
                                                                                                          "name": "deleteDatabase"
                                                                                                        }
                                                                                                      },
                                                                                                      "arguments": [
                                                                                                        {
                                                                                                          "type": "Identifier",
                                                                                                          "name": "dbName"
                                                                                                        }
                                                                                                      ]
                                                                                                    }
                                                                                                  }
                                                                                                ]
                                                                                              },
                                                                                              "rest": null,
                                                                                              "generator": false,
                                                                                              "expression": false
                                                                                            }
                                                                                          ]
                                                                                        },
                                                                                        "property": {
                                                                                          "type": "Identifier",
                                                                                          "name": "then"
                                                                                        }
                                                                                      },
                                                                                      "arguments": [
                                                                                        {
                                                                                          "type": "FunctionExpression",
                                                                                          "id": null,
                                                                                          "params": [
                                                                                            {
                                                                                              "type": "Identifier",
                                                                                              "name": "result"
                                                                                            },
                                                                                            {
                                                                                              "type": "Identifier",
                                                                                              "name": "e"
                                                                                            }
                                                                                          ],
                                                                                          "defaults": [],
                                                                                          "body": {
                                                                                            "type": "BlockStatement",
                                                                                            "body": [
                                                                                              {
                                                                                                "type": "ExpressionStatement",
                                                                                                "expression": {
                                                                                                  "type": "CallExpression",
                                                                                                  "callee": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": false,
                                                                                                    "object": {
                                                                                                      "type": "Identifier",
                                                                                                      "name": "dfd"
                                                                                                    },
                                                                                                    "property": {
                                                                                                      "type": "Identifier",
                                                                                                      "name": "resolveWith"
                                                                                                    }
                                                                                                  },
                                                                                                  "arguments": [
                                                                                                    {
                                                                                                      "type": "ThisExpression"
                                                                                                    },
                                                                                                    {
                                                                                                      "type": "ArrayExpression",
                                                                                                      "elements": [
                                                                                                        {
                                                                                                          "type": "Identifier",
                                                                                                          "name": "result"
                                                                                                        },
                                                                                                        {
                                                                                                          "type": "Identifier",
                                                                                                          "name": "e"
                                                                                                        }
                                                                                                      ]
                                                                                                    }
                                                                                                  ]
                                                                                                }
                                                                                              }
                                                                                            ]
                                                                                          },
                                                                                          "rest": null,
                                                                                          "generator": false,
                                                                                          "expression": false
                                                                                        },
                                                                                        {
                                                                                          "type": "FunctionExpression",
                                                                                          "id": null,
                                                                                          "params": [
                                                                                            {
                                                                                              "type": "Identifier",
                                                                                              "name": "error"
                                                                                            },
                                                                                            {
                                                                                              "type": "Identifier",
                                                                                              "name": "e"
                                                                                            }
                                                                                          ],
                                                                                          "defaults": [],
                                                                                          "body": {
                                                                                            "type": "BlockStatement",
                                                                                            "body": [
                                                                                              {
                                                                                                "type": "ExpressionStatement",
                                                                                                "expression": {
                                                                                                  "type": "CallExpression",
                                                                                                  "callee": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": false,
                                                                                                    "object": {
                                                                                                      "type": "Identifier",
                                                                                                      "name": "dfd"
                                                                                                    },
                                                                                                    "property": {
                                                                                                      "type": "Identifier",
                                                                                                      "name": "rejectWith"
                                                                                                    }
                                                                                                  },
                                                                                                  "arguments": [
                                                                                                    {
                                                                                                      "type": "ThisExpression"
                                                                                                    },
                                                                                                    {
                                                                                                      "type": "ArrayExpression",
                                                                                                      "elements": [
                                                                                                        {
                                                                                                          "type": "Identifier",
                                                                                                          "name": "error"
                                                                                                        },
                                                                                                        {
                                                                                                          "type": "Identifier",
                                                                                                          "name": "e"
                                                                                                        }
                                                                                                      ]
                                                                                                    }
                                                                                                  ]
                                                                                                }
                                                                                              }
                                                                                            ]
                                                                                          },
                                                                                          "rest": null,
                                                                                          "generator": false,
                                                                                          "expression": false
                                                                                        },
                                                                                        {
                                                                                          "type": "FunctionExpression",
                                                                                          "id": null,
                                                                                          "params": [
                                                                                            {
                                                                                              "type": "Identifier",
                                                                                              "name": "db"
                                                                                            },
                                                                                            {
                                                                                              "type": "Identifier",
                                                                                              "name": "e"
                                                                                            }
                                                                                          ],
                                                                                          "defaults": [],
                                                                                          "body": {
                                                                                            "type": "BlockStatement",
                                                                                            "body": [
                                                                                              {
                                                                                                "type": "ExpressionStatement",
                                                                                                "expression": {
                                                                                                  "type": "CallExpression",
                                                                                                  "callee": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": false,
                                                                                                    "object": {
                                                                                                      "type": "Identifier",
                                                                                                      "name": "dfd"
                                                                                                    },
                                                                                                    "property": {
                                                                                                      "type": "Identifier",
                                                                                                      "name": "notifyWith"
                                                                                                    }
                                                                                                  },
                                                                                                  "arguments": [
                                                                                                    {
                                                                                                      "type": "ThisExpression"
                                                                                                    },
                                                                                                    {
                                                                                                      "type": "ArrayExpression",
                                                                                                      "elements": [
                                                                                                        {
                                                                                                          "type": "Identifier",
                                                                                                          "name": "db"
                                                                                                        },
                                                                                                        {
                                                                                                          "type": "Identifier",
                                                                                                          "name": "e"
                                                                                                        }
                                                                                                      ]
                                                                                                    }
                                                                                                  ]
                                                                                                }
                                                                                              }
                                                                                            ]
                                                                                          },
                                                                                          "rest": null,
                                                                                          "generator": false,
                                                                                          "expression": false
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  }
                                                                                ]
                                                                              },
                                                                              "rest": null,
                                                                              "generator": false,
                                                                              "expression": false
                                                                            },
                                                                            {
                                                                              "type": "FunctionExpression",
                                                                              "id": null,
                                                                              "params": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "name": "error"
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "name": "e"
                                                                                }
                                                                              ],
                                                                              "defaults": [],
                                                                              "body": {
                                                                                "type": "BlockStatement",
                                                                                "body": [
                                                                                  {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                      "type": "CallExpression",
                                                                                      "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                          "type": "Identifier",
                                                                                          "name": "dfd"
                                                                                        },
                                                                                        "property": {
                                                                                          "type": "Identifier",
                                                                                          "name": "rejectWith"
                                                                                        }
                                                                                      },
                                                                                      "arguments": [
                                                                                        {
                                                                                          "type": "ThisExpression"
                                                                                        },
                                                                                        {
                                                                                          "type": "ArrayExpression",
                                                                                          "elements": [
                                                                                            {
                                                                                              "type": "Identifier",
                                                                                              "name": "error"
                                                                                            },
                                                                                            {
                                                                                              "type": "Identifier",
                                                                                              "name": "e"
                                                                                            }
                                                                                          ]
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  }
                                                                                ]
                                                                              },
                                                                              "rest": null,
                                                                              "generator": false,
                                                                              "expression": false
                                                                            },
                                                                            {
                                                                              "type": "FunctionExpression",
                                                                              "id": null,
                                                                              "params": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "name": "db"
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "name": "e"
                                                                                }
                                                                              ],
                                                                              "defaults": [],
                                                                              "body": {
                                                                                "type": "BlockStatement",
                                                                                "body": [
                                                                                  {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                      "type": "CallExpression",
                                                                                      "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                          "type": "Identifier",
                                                                                          "name": "dfd"
                                                                                        },
                                                                                        "property": {
                                                                                          "type": "Identifier",
                                                                                          "name": "notifyWith"
                                                                                        }
                                                                                      },
                                                                                      "arguments": [
                                                                                        {
                                                                                          "type": "ThisExpression"
                                                                                        },
                                                                                        {
                                                                                          "type": "ArrayExpression",
                                                                                          "elements": [
                                                                                            {
                                                                                              "type": "Identifier",
                                                                                              "name": "db"
                                                                                            },
                                                                                            {
                                                                                              "type": "Identifier",
                                                                                              "name": "e"
                                                                                            }
                                                                                          ]
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  }
                                                                                ]
                                                                              },
                                                                              "rest": null,
                                                                              "generator": false,
                                                                              "expression": false
                                                                            }
                                                                          ]
                                                                        }
                                                                      }
                                                                    ]
                                                                  },
                                                                  "rest": null,
                                                                  "generator": false,
                                                                  "expression": false
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      "rest": null,
                                                      "generator": false,
                                                      "expression": false
                                                    },
                                                    "kind": "init"
                                                  },
                                                  {
                                                    "type": "Property",
                                                    "key": {
                                                      "type": "Literal",
                                                      "value": "transaction"
                                                    },
                                                    "value": {
                                                      "type": "FunctionExpression",
                                                      "id": null,
                                                      "params": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "storeNames"
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "name": "mode"
                                                        }
                                                      ],
                                                      "defaults": [],
                                                      "body": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "IfStatement",
                                                            "test": {
                                                              "type": "UnaryExpression",
                                                              "operator": "!",
                                                              "argument": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "$"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "isArray"
                                                                  }
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "storeNames"
                                                                  }
                                                                ]
                                                              },
                                                              "prefix": true
                                                            },
                                                            "consequent": {
                                                              "type": "ExpressionStatement",
                                                              "expression": {
                                                                "type": "AssignmentExpression",
                                                                "operator": "=",
                                                                "left": {
                                                                  "type": "Identifier",
                                                                  "name": "storeNames"
                                                                },
                                                                "right": {
                                                                  "type": "ArrayExpression",
                                                                  "elements": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "name": "storeNames"
                                                                    }
                                                                  ]
                                                                }
                                                              }
                                                            },
                                                            "alternate": null
                                                          },
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "AssignmentExpression",
                                                              "operator": "=",
                                                              "left": {
                                                                "type": "Identifier",
                                                                "name": "mode"
                                                              },
                                                              "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "Identifier",
                                                                  "name": "getDefaultTransaction"
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "mode"
                                                                  }
                                                                ]
                                                              }
                                                            }
                                                          },
                                                          {
                                                            "type": "ReturnStatement",
                                                            "argument": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "$"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "Deferred"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "FunctionExpression",
                                                                  "id": null,
                                                                  "params": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "name": "dfd"
                                                                    }
                                                                  ],
                                                                  "defaults": [],
                                                                  "body": {
                                                                    "type": "BlockStatement",
                                                                    "body": [
                                                                      {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                          "type": "CallExpression",
                                                                          "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "Identifier",
                                                                              "name": "dbPromise"
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "then"
                                                                            }
                                                                          },
                                                                          "arguments": [
                                                                            {
                                                                              "type": "FunctionExpression",
                                                                              "id": null,
                                                                              "params": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "name": "db"
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "name": "e"
                                                                                }
                                                                              ],
                                                                              "defaults": [],
                                                                              "body": {
                                                                                "type": "BlockStatement",
                                                                                "body": [
                                                                                  {
                                                                                    "type": "VariableDeclaration",
                                                                                    "declarations": [
                                                                                      {
                                                                                        "type": "VariableDeclarator",
                                                                                        "id": {
                                                                                          "type": "Identifier",
                                                                                          "name": "idbTransaction"
                                                                                        },
                                                                                        "init": null
                                                                                      }
                                                                                    ],
                                                                                    "kind": "var"
                                                                                  },
                                                                                  {
                                                                                    "type": "TryStatement",
                                                                                    "block": {
                                                                                      "type": "BlockStatement",
                                                                                      "body": [
                                                                                        {
                                                                                          "type": "ExpressionStatement",
                                                                                          "expression": {
                                                                                            "type": "AssignmentExpression",
                                                                                            "operator": "=",
                                                                                            "left": {
                                                                                              "type": "Identifier",
                                                                                              "name": "idbTransaction"
                                                                                            },
                                                                                            "right": {
                                                                                              "type": "CallExpression",
                                                                                              "callee": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": false,
                                                                                                "object": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "db"
                                                                                                },
                                                                                                "property": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "transaction"
                                                                                                }
                                                                                              },
                                                                                              "arguments": [
                                                                                                {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "storeNames"
                                                                                                },
                                                                                                {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "mode"
                                                                                                }
                                                                                              ]
                                                                                            }
                                                                                          }
                                                                                        },
                                                                                        {
                                                                                          "type": "ExpressionStatement",
                                                                                          "expression": {
                                                                                            "type": "AssignmentExpression",
                                                                                            "operator": "=",
                                                                                            "left": {
                                                                                              "type": "MemberExpression",
                                                                                              "computed": false,
                                                                                              "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "idbTransaction"
                                                                                              },
                                                                                              "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "onabort"
                                                                                              }
                                                                                            },
                                                                                            "right": {
                                                                                              "type": "AssignmentExpression",
                                                                                              "operator": "=",
                                                                                              "left": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": false,
                                                                                                "object": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "idbTransaction"
                                                                                                },
                                                                                                "property": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "onerror"
                                                                                                }
                                                                                              },
                                                                                              "right": {
                                                                                                "type": "FunctionExpression",
                                                                                                "id": null,
                                                                                                "params": [
                                                                                                  {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "e"
                                                                                                  }
                                                                                                ],
                                                                                                "defaults": [],
                                                                                                "body": {
                                                                                                  "type": "BlockStatement",
                                                                                                  "body": [
                                                                                                    {
                                                                                                      "type": "ExpressionStatement",
                                                                                                      "expression": {
                                                                                                        "type": "CallExpression",
                                                                                                        "callee": {
                                                                                                          "type": "MemberExpression",
                                                                                                          "computed": false,
                                                                                                          "object": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "dfd"
                                                                                                          },
                                                                                                          "property": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "rejectWith"
                                                                                                          }
                                                                                                        },
                                                                                                        "arguments": [
                                                                                                          {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "idbTransaction"
                                                                                                          },
                                                                                                          {
                                                                                                            "type": "ArrayExpression",
                                                                                                            "elements": [
                                                                                                              {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "e"
                                                                                                              }
                                                                                                            ]
                                                                                                          }
                                                                                                        ]
                                                                                                      }
                                                                                                    }
                                                                                                  ]
                                                                                                },
                                                                                                "rest": null,
                                                                                                "generator": false,
                                                                                                "expression": false
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        },
                                                                                        {
                                                                                          "type": "ExpressionStatement",
                                                                                          "expression": {
                                                                                            "type": "AssignmentExpression",
                                                                                            "operator": "=",
                                                                                            "left": {
                                                                                              "type": "MemberExpression",
                                                                                              "computed": false,
                                                                                              "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "idbTransaction"
                                                                                              },
                                                                                              "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "oncomplete"
                                                                                              }
                                                                                            },
                                                                                            "right": {
                                                                                              "type": "FunctionExpression",
                                                                                              "id": null,
                                                                                              "params": [
                                                                                                {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "e"
                                                                                                }
                                                                                              ],
                                                                                              "defaults": [],
                                                                                              "body": {
                                                                                                "type": "BlockStatement",
                                                                                                "body": [
                                                                                                  {
                                                                                                    "type": "ExpressionStatement",
                                                                                                    "expression": {
                                                                                                      "type": "CallExpression",
                                                                                                      "callee": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": false,
                                                                                                        "object": {
                                                                                                          "type": "Identifier",
                                                                                                          "name": "dfd"
                                                                                                        },
                                                                                                        "property": {
                                                                                                          "type": "Identifier",
                                                                                                          "name": "resolveWith"
                                                                                                        }
                                                                                                      },
                                                                                                      "arguments": [
                                                                                                        {
                                                                                                          "type": "Identifier",
                                                                                                          "name": "idbTransaction"
                                                                                                        },
                                                                                                        {
                                                                                                          "type": "ArrayExpression",
                                                                                                          "elements": [
                                                                                                            {
                                                                                                              "type": "Identifier",
                                                                                                              "name": "e"
                                                                                                            }
                                                                                                          ]
                                                                                                        }
                                                                                                      ]
                                                                                                    }
                                                                                                  }
                                                                                                ]
                                                                                              },
                                                                                              "rest": null,
                                                                                              "generator": false,
                                                                                              "expression": false
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      ]
                                                                                    },
                                                                                    "guardedHandlers": [],
                                                                                    "handlers": [
                                                                                      {
                                                                                        "type": "CatchClause",
                                                                                        "param": {
                                                                                          "type": "Identifier",
                                                                                          "name": "e"
                                                                                        },
                                                                                        "body": {
                                                                                          "type": "BlockStatement",
                                                                                          "body": [
                                                                                            {
                                                                                              "type": "ExpressionStatement",
                                                                                              "expression": {
                                                                                                "type": "AssignmentExpression",
                                                                                                "operator": "=",
                                                                                                "left": {
                                                                                                  "type": "MemberExpression",
                                                                                                  "computed": false,
                                                                                                  "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "e"
                                                                                                  },
                                                                                                  "property": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "type"
                                                                                                  }
                                                                                                },
                                                                                                "right": {
                                                                                                  "type": "Literal",
                                                                                                  "value": "exception"
                                                                                                }
                                                                                              }
                                                                                            },
                                                                                            {
                                                                                              "type": "ExpressionStatement",
                                                                                              "expression": {
                                                                                                "type": "CallExpression",
                                                                                                "callee": {
                                                                                                  "type": "MemberExpression",
                                                                                                  "computed": false,
                                                                                                  "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "dfd"
                                                                                                  },
                                                                                                  "property": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "rejectWith"
                                                                                                  }
                                                                                                },
                                                                                                "arguments": [
                                                                                                  {
                                                                                                    "type": "ThisExpression"
                                                                                                  },
                                                                                                  {
                                                                                                    "type": "ArrayExpression",
                                                                                                    "elements": [
                                                                                                      {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "e"
                                                                                                      }
                                                                                                    ]
                                                                                                  }
                                                                                                ]
                                                                                              }
                                                                                            },
                                                                                            {
                                                                                              "type": "ReturnStatement",
                                                                                              "argument": null
                                                                                            }
                                                                                          ]
                                                                                        }
                                                                                      }
                                                                                    ],
                                                                                    "finalizer": null
                                                                                  },
                                                                                  {
                                                                                    "type": "TryStatement",
                                                                                    "block": {
                                                                                      "type": "BlockStatement",
                                                                                      "body": [
                                                                                        {
                                                                                          "type": "ExpressionStatement",
                                                                                          "expression": {
                                                                                            "type": "CallExpression",
                                                                                            "callee": {
                                                                                              "type": "MemberExpression",
                                                                                              "computed": false,
                                                                                              "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "dfd"
                                                                                              },
                                                                                              "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "notifyWith"
                                                                                              }
                                                                                            },
                                                                                            "arguments": [
                                                                                              {
                                                                                                "type": "Identifier",
                                                                                                "name": "idbTransaction"
                                                                                              },
                                                                                              {
                                                                                                "type": "ArrayExpression",
                                                                                                "elements": [
                                                                                                  {
                                                                                                    "type": "CallExpression",
                                                                                                    "callee": {
                                                                                                      "type": "MemberExpression",
                                                                                                      "computed": false,
                                                                                                      "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "wrap"
                                                                                                      },
                                                                                                      "property": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "transaction"
                                                                                                      }
                                                                                                    },
                                                                                                    "arguments": [
                                                                                                      {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "idbTransaction"
                                                                                                      }
                                                                                                    ]
                                                                                                  }
                                                                                                ]
                                                                                              }
                                                                                            ]
                                                                                          }
                                                                                        }
                                                                                      ]
                                                                                    },
                                                                                    "guardedHandlers": [],
                                                                                    "handlers": [
                                                                                      {
                                                                                        "type": "CatchClause",
                                                                                        "param": {
                                                                                          "type": "Identifier",
                                                                                          "name": "e"
                                                                                        },
                                                                                        "body": {
                                                                                          "type": "BlockStatement",
                                                                                          "body": [
                                                                                            {
                                                                                              "type": "ExpressionStatement",
                                                                                              "expression": {
                                                                                                "type": "AssignmentExpression",
                                                                                                "operator": "=",
                                                                                                "left": {
                                                                                                  "type": "MemberExpression",
                                                                                                  "computed": false,
                                                                                                  "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "e"
                                                                                                  },
                                                                                                  "property": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "type"
                                                                                                  }
                                                                                                },
                                                                                                "right": {
                                                                                                  "type": "Literal",
                                                                                                  "value": "exception"
                                                                                                }
                                                                                              }
                                                                                            },
                                                                                            {
                                                                                              "type": "ExpressionStatement",
                                                                                              "expression": {
                                                                                                "type": "CallExpression",
                                                                                                "callee": {
                                                                                                  "type": "MemberExpression",
                                                                                                  "computed": false,
                                                                                                  "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "dfd"
                                                                                                  },
                                                                                                  "property": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "rejectWith"
                                                                                                  }
                                                                                                },
                                                                                                "arguments": [
                                                                                                  {
                                                                                                    "type": "ThisExpression"
                                                                                                  },
                                                                                                  {
                                                                                                    "type": "ArrayExpression",
                                                                                                    "elements": [
                                                                                                      {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "e"
                                                                                                      }
                                                                                                    ]
                                                                                                  }
                                                                                                ]
                                                                                              }
                                                                                            }
                                                                                          ]
                                                                                        }
                                                                                      }
                                                                                    ],
                                                                                    "finalizer": null
                                                                                  }
                                                                                ]
                                                                              },
                                                                              "rest": null,
                                                                              "generator": false,
                                                                              "expression": false
                                                                            },
                                                                            {
                                                                              "type": "FunctionExpression",
                                                                              "id": null,
                                                                              "params": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "name": "err"
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "name": "e"
                                                                                }
                                                                              ],
                                                                              "defaults": [],
                                                                              "body": {
                                                                                "type": "BlockStatement",
                                                                                "body": [
                                                                                  {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                      "type": "CallExpression",
                                                                                      "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                          "type": "Identifier",
                                                                                          "name": "dfd"
                                                                                        },
                                                                                        "property": {
                                                                                          "type": "Identifier",
                                                                                          "name": "rejectWith"
                                                                                        }
                                                                                      },
                                                                                      "arguments": [
                                                                                        {
                                                                                          "type": "ThisExpression"
                                                                                        },
                                                                                        {
                                                                                          "type": "ArrayExpression",
                                                                                          "elements": [
                                                                                            {
                                                                                              "type": "Identifier",
                                                                                              "name": "e"
                                                                                            },
                                                                                            {
                                                                                              "type": "Identifier",
                                                                                              "name": "err"
                                                                                            }
                                                                                          ]
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  }
                                                                                ]
                                                                              },
                                                                              "rest": null,
                                                                              "generator": false,
                                                                              "expression": false
                                                                            },
                                                                            {
                                                                              "type": "FunctionExpression",
                                                                              "id": null,
                                                                              "params": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "name": "res"
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "name": "e"
                                                                                }
                                                                              ],
                                                                              "defaults": [],
                                                                              "body": {
                                                                                "type": "BlockStatement",
                                                                                "body": []
                                                                              },
                                                                              "rest": null,
                                                                              "generator": false,
                                                                              "expression": false
                                                                            }
                                                                          ]
                                                                        }
                                                                      }
                                                                    ]
                                                                  },
                                                                  "rest": null,
                                                                  "generator": false,
                                                                  "expression": false
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      "rest": null,
                                                      "generator": false,
                                                      "expression": false
                                                    },
                                                    "kind": "init"
                                                  },
                                                  {
                                                    "type": "Property",
                                                    "key": {
                                                      "type": "Literal",
                                                      "value": "objectStore"
                                                    },
                                                    "value": {
                                                      "type": "FunctionExpression",
                                                      "id": null,
                                                      "params": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "storeName"
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "name": "mode"
                                                        }
                                                      ],
                                                      "defaults": [],
                                                      "body": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "VariableDeclaration",
                                                            "declarations": [
                                                              {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                  "type": "Identifier",
                                                                  "name": "me"
                                                                },
                                                                "init": {
                                                                  "type": "ThisExpression"
                                                                }
                                                              },
                                                              {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                  "type": "Identifier",
                                                                  "name": "result"
                                                                },
                                                                "init": {
                                                                  "type": "ObjectExpression",
                                                                  "properties": []
                                                                }
                                                              }
                                                            ],
                                                            "kind": "var"
                                                          },
                                                          {
                                                            "type": "FunctionDeclaration",
                                                            "id": {
                                                              "type": "Identifier",
                                                              "name": "op"
                                                            },
                                                            "params": [
                                                              {
                                                                "type": "Identifier",
                                                                "name": "callback"
                                                              }
                                                            ],
                                                            "defaults": [],
                                                            "body": {
                                                              "type": "BlockStatement",
                                                              "body": [
                                                                {
                                                                  "type": "ReturnStatement",
                                                                  "argument": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "$"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "Deferred"
                                                                      }
                                                                    },
                                                                    "arguments": [
                                                                      {
                                                                        "type": "FunctionExpression",
                                                                        "id": null,
                                                                        "params": [
                                                                          {
                                                                            "type": "Identifier",
                                                                            "name": "dfd"
                                                                          }
                                                                        ],
                                                                        "defaults": [],
                                                                        "body": {
                                                                          "type": "BlockStatement",
                                                                          "body": [
                                                                            {
                                                                              "type": "FunctionDeclaration",
                                                                              "id": {
                                                                                "type": "Identifier",
                                                                                "name": "onTransactionProgress"
                                                                              },
                                                                              "params": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "name": "trans"
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "name": "callback"
                                                                                }
                                                                              ],
                                                                              "defaults": [],
                                                                              "body": {
                                                                                "type": "BlockStatement",
                                                                                "body": [
                                                                                  {
                                                                                    "type": "TryStatement",
                                                                                    "block": {
                                                                                      "type": "BlockStatement",
                                                                                      "body": [
                                                                                        {
                                                                                          "type": "ExpressionStatement",
                                                                                          "expression": {
                                                                                            "type": "CallExpression",
                                                                                            "callee": {
                                                                                              "type": "MemberExpression",
                                                                                              "computed": false,
                                                                                              "object": {
                                                                                                "type": "CallExpression",
                                                                                                "callee": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "callback"
                                                                                                },
                                                                                                "arguments": [
                                                                                                  {
                                                                                                    "type": "CallExpression",
                                                                                                    "callee": {
                                                                                                      "type": "MemberExpression",
                                                                                                      "computed": false,
                                                                                                      "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "trans"
                                                                                                      },
                                                                                                      "property": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "objectStore"
                                                                                                      }
                                                                                                    },
                                                                                                    "arguments": [
                                                                                                      {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "storeName"
                                                                                                      }
                                                                                                    ]
                                                                                                  }
                                                                                                ]
                                                                                              },
                                                                                              "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "then"
                                                                                              }
                                                                                            },
                                                                                            "arguments": [
                                                                                              {
                                                                                                "type": "FunctionExpression",
                                                                                                "id": null,
                                                                                                "params": [
                                                                                                  {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "result"
                                                                                                  },
                                                                                                  {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "e"
                                                                                                  }
                                                                                                ],
                                                                                                "defaults": [],
                                                                                                "body": {
                                                                                                  "type": "BlockStatement",
                                                                                                  "body": [
                                                                                                    {
                                                                                                      "type": "ExpressionStatement",
                                                                                                      "expression": {
                                                                                                        "type": "CallExpression",
                                                                                                        "callee": {
                                                                                                          "type": "MemberExpression",
                                                                                                          "computed": false,
                                                                                                          "object": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "dfd"
                                                                                                          },
                                                                                                          "property": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "resolveWith"
                                                                                                          }
                                                                                                        },
                                                                                                        "arguments": [
                                                                                                          {
                                                                                                            "type": "ThisExpression"
                                                                                                          },
                                                                                                          {
                                                                                                            "type": "ArrayExpression",
                                                                                                            "elements": [
                                                                                                              {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "result"
                                                                                                              },
                                                                                                              {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "e"
                                                                                                              }
                                                                                                            ]
                                                                                                          }
                                                                                                        ]
                                                                                                      }
                                                                                                    }
                                                                                                  ]
                                                                                                },
                                                                                                "rest": null,
                                                                                                "generator": false,
                                                                                                "expression": false
                                                                                              },
                                                                                              {
                                                                                                "type": "FunctionExpression",
                                                                                                "id": null,
                                                                                                "params": [
                                                                                                  {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "err"
                                                                                                  },
                                                                                                  {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "e"
                                                                                                  }
                                                                                                ],
                                                                                                "defaults": [],
                                                                                                "body": {
                                                                                                  "type": "BlockStatement",
                                                                                                  "body": [
                                                                                                    {
                                                                                                      "type": "ExpressionStatement",
                                                                                                      "expression": {
                                                                                                        "type": "CallExpression",
                                                                                                        "callee": {
                                                                                                          "type": "MemberExpression",
                                                                                                          "computed": false,
                                                                                                          "object": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "dfd"
                                                                                                          },
                                                                                                          "property": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "rejectWith"
                                                                                                          }
                                                                                                        },
                                                                                                        "arguments": [
                                                                                                          {
                                                                                                            "type": "ThisExpression"
                                                                                                          },
                                                                                                          {
                                                                                                            "type": "ArrayExpression",
                                                                                                            "elements": [
                                                                                                              {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "err"
                                                                                                              },
                                                                                                              {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "e"
                                                                                                              }
                                                                                                            ]
                                                                                                          }
                                                                                                        ]
                                                                                                      }
                                                                                                    }
                                                                                                  ]
                                                                                                },
                                                                                                "rest": null,
                                                                                                "generator": false,
                                                                                                "expression": false
                                                                                              }
                                                                                            ]
                                                                                          }
                                                                                        }
                                                                                      ]
                                                                                    },
                                                                                    "guardedHandlers": [],
                                                                                    "handlers": [
                                                                                      {
                                                                                        "type": "CatchClause",
                                                                                        "param": {
                                                                                          "type": "Identifier",
                                                                                          "name": "e"
                                                                                        },
                                                                                        "body": {
                                                                                          "type": "BlockStatement",
                                                                                          "body": [
                                                                                            {
                                                                                              "type": "ExpressionStatement",
                                                                                              "expression": {
                                                                                                "type": "AssignmentExpression",
                                                                                                "operator": "=",
                                                                                                "left": {
                                                                                                  "type": "MemberExpression",
                                                                                                  "computed": false,
                                                                                                  "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "e"
                                                                                                  },
                                                                                                  "property": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "name"
                                                                                                  }
                                                                                                },
                                                                                                "right": {
                                                                                                  "type": "Literal",
                                                                                                  "value": "exception"
                                                                                                }
                                                                                              }
                                                                                            },
                                                                                            {
                                                                                              "type": "ExpressionStatement",
                                                                                              "expression": {
                                                                                                "type": "CallExpression",
                                                                                                "callee": {
                                                                                                  "type": "MemberExpression",
                                                                                                  "computed": false,
                                                                                                  "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "dfd"
                                                                                                  },
                                                                                                  "property": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "rejectWith"
                                                                                                  }
                                                                                                },
                                                                                                "arguments": [
                                                                                                  {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "trans"
                                                                                                  },
                                                                                                  {
                                                                                                    "type": "ArrayExpression",
                                                                                                    "elements": [
                                                                                                      {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "e"
                                                                                                      },
                                                                                                      {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "e"
                                                                                                      }
                                                                                                    ]
                                                                                                  }
                                                                                                ]
                                                                                              }
                                                                                            }
                                                                                          ]
                                                                                        }
                                                                                      }
                                                                                    ],
                                                                                    "finalizer": null
                                                                                  }
                                                                                ]
                                                                              },
                                                                              "rest": null,
                                                                              "generator": false,
                                                                              "expression": false
                                                                            },
                                                                            {
                                                                              "type": "ExpressionStatement",
                                                                              "expression": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                  "type": "MemberExpression",
                                                                                  "computed": false,
                                                                                  "object": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                      "type": "MemberExpression",
                                                                                      "computed": false,
                                                                                      "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "me"
                                                                                      },
                                                                                      "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "transaction"
                                                                                      }
                                                                                    },
                                                                                    "arguments": [
                                                                                      {
                                                                                        "type": "Identifier",
                                                                                        "name": "storeName"
                                                                                      },
                                                                                      {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                          "type": "Identifier",
                                                                                          "name": "getDefaultTransaction"
                                                                                        },
                                                                                        "arguments": [
                                                                                          {
                                                                                            "type": "Identifier",
                                                                                            "name": "mode"
                                                                                          }
                                                                                        ]
                                                                                      }
                                                                                    ]
                                                                                  },
                                                                                  "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "then"
                                                                                  }
                                                                                },
                                                                                "arguments": [
                                                                                  {
                                                                                    "type": "FunctionExpression",
                                                                                    "id": null,
                                                                                    "params": [],
                                                                                    "defaults": [],
                                                                                    "body": {
                                                                                      "type": "BlockStatement",
                                                                                      "body": []
                                                                                    },
                                                                                    "rest": null,
                                                                                    "generator": false,
                                                                                    "expression": false
                                                                                  },
                                                                                  {
                                                                                    "type": "FunctionExpression",
                                                                                    "id": null,
                                                                                    "params": [
                                                                                      {
                                                                                        "type": "Identifier",
                                                                                        "name": "err"
                                                                                      },
                                                                                      {
                                                                                        "type": "Identifier",
                                                                                        "name": "e"
                                                                                      }
                                                                                    ],
                                                                                    "defaults": [],
                                                                                    "body": {
                                                                                      "type": "BlockStatement",
                                                                                      "body": [
                                                                                        {
                                                                                          "type": "IfStatement",
                                                                                          "test": {
                                                                                            "type": "LogicalExpression",
                                                                                            "operator": "&&",
                                                                                            "left": {
                                                                                              "type": "BinaryExpression",
                                                                                              "operator": "===",
                                                                                              "left": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": false,
                                                                                                "object": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "err"
                                                                                                },
                                                                                                "property": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "code"
                                                                                                }
                                                                                              },
                                                                                              "right": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": false,
                                                                                                "object": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "err"
                                                                                                },
                                                                                                "property": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "NOT_FOUND_ERR"
                                                                                                }
                                                                                              }
                                                                                            },
                                                                                            "right": {
                                                                                              "type": "LogicalExpression",
                                                                                              "operator": "||",
                                                                                              "left": {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "===",
                                                                                                "left": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "mode"
                                                                                                },
                                                                                                "right": {
                                                                                                  "type": "Literal",
                                                                                                  "value": true
                                                                                                }
                                                                                              },
                                                                                              "right": {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "===",
                                                                                                "left": {
                                                                                                  "type": "UnaryExpression",
                                                                                                  "operator": "typeof",
                                                                                                  "argument": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "mode"
                                                                                                  },
                                                                                                  "prefix": true
                                                                                                },
                                                                                                "right": {
                                                                                                  "type": "Literal",
                                                                                                  "value": "object"
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          },
                                                                                          "consequent": {
                                                                                            "type": "BlockStatement",
                                                                                            "body": [
                                                                                              {
                                                                                                "type": "VariableDeclaration",
                                                                                                "declarations": [
                                                                                                  {
                                                                                                    "type": "VariableDeclarator",
                                                                                                    "id": {
                                                                                                      "type": "Identifier",
                                                                                                      "name": "db"
                                                                                                    },
                                                                                                    "init": {
                                                                                                      "type": "MemberExpression",
                                                                                                      "computed": false,
                                                                                                      "object": {
                                                                                                        "type": "ThisExpression"
                                                                                                      },
                                                                                                      "property": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "result"
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                ],
                                                                                                "kind": "var"
                                                                                              },
                                                                                              {
                                                                                                "type": "ExpressionStatement",
                                                                                                "expression": {
                                                                                                  "type": "CallExpression",
                                                                                                  "callee": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": false,
                                                                                                    "object": {
                                                                                                      "type": "Identifier",
                                                                                                      "name": "db"
                                                                                                    },
                                                                                                    "property": {
                                                                                                      "type": "Identifier",
                                                                                                      "name": "close"
                                                                                                    }
                                                                                                  },
                                                                                                  "arguments": []
                                                                                                }
                                                                                              },
                                                                                              {
                                                                                                "type": "ExpressionStatement",
                                                                                                "expression": {
                                                                                                  "type": "AssignmentExpression",
                                                                                                  "operator": "=",
                                                                                                  "left": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "dbPromise"
                                                                                                  },
                                                                                                  "right": {
                                                                                                    "type": "CallExpression",
                                                                                                    "callee": {
                                                                                                      "type": "MemberExpression",
                                                                                                      "computed": false,
                                                                                                      "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "wrap"
                                                                                                      },
                                                                                                      "property": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "request"
                                                                                                      }
                                                                                                    },
                                                                                                    "arguments": [
                                                                                                      {
                                                                                                        "type": "FunctionExpression",
                                                                                                        "id": null,
                                                                                                        "params": [],
                                                                                                        "defaults": [],
                                                                                                        "body": {
                                                                                                          "type": "BlockStatement",
                                                                                                          "body": [
                                                                                                            {
                                                                                                              "type": "ReturnStatement",
                                                                                                              "argument": {
                                                                                                                "type": "CallExpression",
                                                                                                                "callee": {
                                                                                                                  "type": "MemberExpression",
                                                                                                                  "computed": false,
                                                                                                                  "object": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "indexedDB"
                                                                                                                  },
                                                                                                                  "property": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "open"
                                                                                                                  }
                                                                                                                },
                                                                                                                "arguments": [
                                                                                                                  {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "dbName"
                                                                                                                  },
                                                                                                                  {
                                                                                                                    "type": "BinaryExpression",
                                                                                                                    "operator": "+",
                                                                                                                    "left": {
                                                                                                                      "type": "LogicalExpression",
                                                                                                                      "operator": "||",
                                                                                                                      "left": {
                                                                                                                        "type": "CallExpression",
                                                                                                                        "callee": {
                                                                                                                          "type": "Identifier",
                                                                                                                          "name": "parseInt"
                                                                                                                        },
                                                                                                                        "arguments": [
                                                                                                                          {
                                                                                                                            "type": "MemberExpression",
                                                                                                                            "computed": false,
                                                                                                                            "object": {
                                                                                                                              "type": "Identifier",
                                                                                                                              "name": "db"
                                                                                                                            },
                                                                                                                            "property": {
                                                                                                                              "type": "Identifier",
                                                                                                                              "name": "version"
                                                                                                                            }
                                                                                                                          },
                                                                                                                          {
                                                                                                                            "type": "Literal",
                                                                                                                            "value": 10
                                                                                                                          }
                                                                                                                        ]
                                                                                                                      },
                                                                                                                      "right": {
                                                                                                                        "type": "Literal",
                                                                                                                        "value": 1
                                                                                                                      }
                                                                                                                    },
                                                                                                                    "right": {
                                                                                                                      "type": "Literal",
                                                                                                                      "value": 1
                                                                                                                    }
                                                                                                                  }
                                                                                                                ]
                                                                                                              }
                                                                                                            }
                                                                                                          ]
                                                                                                        },
                                                                                                        "rest": null,
                                                                                                        "generator": false,
                                                                                                        "expression": false
                                                                                                      }
                                                                                                    ]
                                                                                                  }
                                                                                                }
                                                                                              },
                                                                                              {
                                                                                                "type": "ExpressionStatement",
                                                                                                "expression": {
                                                                                                  "type": "CallExpression",
                                                                                                  "callee": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": false,
                                                                                                    "object": {
                                                                                                      "type": "Identifier",
                                                                                                      "name": "dbPromise"
                                                                                                    },
                                                                                                    "property": {
                                                                                                      "type": "Identifier",
                                                                                                      "name": "then"
                                                                                                    }
                                                                                                  },
                                                                                                  "arguments": [
                                                                                                    {
                                                                                                      "type": "FunctionExpression",
                                                                                                      "id": null,
                                                                                                      "params": [
                                                                                                        {
                                                                                                          "type": "Identifier",
                                                                                                          "name": "db"
                                                                                                        },
                                                                                                        {
                                                                                                          "type": "Identifier",
                                                                                                          "name": "e"
                                                                                                        }
                                                                                                      ],
                                                                                                      "defaults": [],
                                                                                                      "body": {
                                                                                                        "type": "BlockStatement",
                                                                                                        "body": [
                                                                                                          {
                                                                                                            "type": "ExpressionStatement",
                                                                                                            "expression": {
                                                                                                              "type": "AssignmentExpression",
                                                                                                              "operator": "=",
                                                                                                              "left": {
                                                                                                                "type": "MemberExpression",
                                                                                                                "computed": false,
                                                                                                                "object": {
                                                                                                                  "type": "Identifier",
                                                                                                                  "name": "db"
                                                                                                                },
                                                                                                                "property": {
                                                                                                                  "type": "Identifier",
                                                                                                                  "name": "onversionchange"
                                                                                                                }
                                                                                                              },
                                                                                                              "right": {
                                                                                                                "type": "FunctionExpression",
                                                                                                                "id": null,
                                                                                                                "params": [],
                                                                                                                "defaults": [],
                                                                                                                "body": {
                                                                                                                  "type": "BlockStatement",
                                                                                                                  "body": [
                                                                                                                    {
                                                                                                                      "type": "IfStatement",
                                                                                                                      "test": {
                                                                                                                        "type": "UnaryExpression",
                                                                                                                        "operator": "!",
                                                                                                                        "argument": {
                                                                                                                          "type": "LogicalExpression",
                                                                                                                          "operator": "&&",
                                                                                                                          "left": {
                                                                                                                            "type": "LogicalExpression",
                                                                                                                            "operator": "&&",
                                                                                                                            "left": {
                                                                                                                              "type": "Identifier",
                                                                                                                              "name": "config"
                                                                                                                            },
                                                                                                                            "right": {
                                                                                                                              "type": "MemberExpression",
                                                                                                                              "computed": false,
                                                                                                                              "object": {
                                                                                                                                "type": "Identifier",
                                                                                                                                "name": "config"
                                                                                                                              },
                                                                                                                              "property": {
                                                                                                                                "type": "Identifier",
                                                                                                                                "name": "onversionchange"
                                                                                                                              }
                                                                                                                            }
                                                                                                                          },
                                                                                                                          "right": {
                                                                                                                            "type": "BinaryExpression",
                                                                                                                            "operator": "!==",
                                                                                                                            "left": {
                                                                                                                              "type": "CallExpression",
                                                                                                                              "callee": {
                                                                                                                                "type": "MemberExpression",
                                                                                                                                "computed": false,
                                                                                                                                "object": {
                                                                                                                                  "type": "Identifier",
                                                                                                                                  "name": "config"
                                                                                                                                },
                                                                                                                                "property": {
                                                                                                                                  "type": "Identifier",
                                                                                                                                  "name": "onversionchange"
                                                                                                                                }
                                                                                                                              },
                                                                                                                              "arguments": []
                                                                                                                            },
                                                                                                                            "right": {
                                                                                                                              "type": "Literal",
                                                                                                                              "value": false
                                                                                                                            }
                                                                                                                          }
                                                                                                                        },
                                                                                                                        "prefix": true
                                                                                                                      },
                                                                                                                      "consequent": {
                                                                                                                        "type": "BlockStatement",
                                                                                                                        "body": [
                                                                                                                          {
                                                                                                                            "type": "ExpressionStatement",
                                                                                                                            "expression": {
                                                                                                                              "type": "CallExpression",
                                                                                                                              "callee": {
                                                                                                                                "type": "MemberExpression",
                                                                                                                                "computed": false,
                                                                                                                                "object": {
                                                                                                                                  "type": "Identifier",
                                                                                                                                  "name": "db"
                                                                                                                                },
                                                                                                                                "property": {
                                                                                                                                  "type": "Identifier",
                                                                                                                                  "name": "close"
                                                                                                                                }
                                                                                                                              },
                                                                                                                              "arguments": []
                                                                                                                            }
                                                                                                                          }
                                                                                                                        ]
                                                                                                                      },
                                                                                                                      "alternate": null
                                                                                                                    }
                                                                                                                  ]
                                                                                                                },
                                                                                                                "rest": null,
                                                                                                                "generator": false,
                                                                                                                "expression": false
                                                                                                              }
                                                                                                            }
                                                                                                          },
                                                                                                          {
                                                                                                            "type": "ExpressionStatement",
                                                                                                            "expression": {
                                                                                                              "type": "CallExpression",
                                                                                                              "callee": {
                                                                                                                "type": "MemberExpression",
                                                                                                                "computed": false,
                                                                                                                "object": {
                                                                                                                  "type": "CallExpression",
                                                                                                                  "callee": {
                                                                                                                    "type": "MemberExpression",
                                                                                                                    "computed": false,
                                                                                                                    "object": {
                                                                                                                      "type": "Identifier",
                                                                                                                      "name": "me"
                                                                                                                    },
                                                                                                                    "property": {
                                                                                                                      "type": "Identifier",
                                                                                                                      "name": "transaction"
                                                                                                                    }
                                                                                                                  },
                                                                                                                  "arguments": [
                                                                                                                    {
                                                                                                                      "type": "Identifier",
                                                                                                                      "name": "storeName"
                                                                                                                    },
                                                                                                                    {
                                                                                                                      "type": "CallExpression",
                                                                                                                      "callee": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "getDefaultTransaction"
                                                                                                                      },
                                                                                                                      "arguments": [
                                                                                                                        {
                                                                                                                          "type": "Identifier",
                                                                                                                          "name": "mode"
                                                                                                                        }
                                                                                                                      ]
                                                                                                                    }
                                                                                                                  ]
                                                                                                                },
                                                                                                                "property": {
                                                                                                                  "type": "Identifier",
                                                                                                                  "name": "then"
                                                                                                                }
                                                                                                              },
                                                                                                              "arguments": [
                                                                                                                {
                                                                                                                  "type": "FunctionExpression",
                                                                                                                  "id": null,
                                                                                                                  "params": [],
                                                                                                                  "defaults": [],
                                                                                                                  "body": {
                                                                                                                    "type": "BlockStatement",
                                                                                                                    "body": []
                                                                                                                  },
                                                                                                                  "rest": null,
                                                                                                                  "generator": false,
                                                                                                                  "expression": false
                                                                                                                },
                                                                                                                {
                                                                                                                  "type": "FunctionExpression",
                                                                                                                  "id": null,
                                                                                                                  "params": [
                                                                                                                    {
                                                                                                                      "type": "Identifier",
                                                                                                                      "name": "err"
                                                                                                                    },
                                                                                                                    {
                                                                                                                      "type": "Identifier",
                                                                                                                      "name": "e"
                                                                                                                    }
                                                                                                                  ],
                                                                                                                  "defaults": [],
                                                                                                                  "body": {
                                                                                                                    "type": "BlockStatement",
                                                                                                                    "body": [
                                                                                                                      {
                                                                                                                        "type": "ExpressionStatement",
                                                                                                                        "expression": {
                                                                                                                          "type": "CallExpression",
                                                                                                                          "callee": {
                                                                                                                            "type": "MemberExpression",
                                                                                                                            "computed": false,
                                                                                                                            "object": {
                                                                                                                              "type": "Identifier",
                                                                                                                              "name": "dfd"
                                                                                                                            },
                                                                                                                            "property": {
                                                                                                                              "type": "Identifier",
                                                                                                                              "name": "rejectWith"
                                                                                                                            }
                                                                                                                          },
                                                                                                                          "arguments": [
                                                                                                                            {
                                                                                                                              "type": "ThisExpression"
                                                                                                                            },
                                                                                                                            {
                                                                                                                              "type": "ArrayExpression",
                                                                                                                              "elements": [
                                                                                                                                {
                                                                                                                                  "type": "Identifier",
                                                                                                                                  "name": "err"
                                                                                                                                },
                                                                                                                                {
                                                                                                                                  "type": "Identifier",
                                                                                                                                  "name": "e"
                                                                                                                                }
                                                                                                                              ]
                                                                                                                            }
                                                                                                                          ]
                                                                                                                        }
                                                                                                                      }
                                                                                                                    ]
                                                                                                                  },
                                                                                                                  "rest": null,
                                                                                                                  "generator": false,
                                                                                                                  "expression": false
                                                                                                                },
                                                                                                                {
                                                                                                                  "type": "FunctionExpression",
                                                                                                                  "id": null,
                                                                                                                  "params": [
                                                                                                                    {
                                                                                                                      "type": "Identifier",
                                                                                                                      "name": "trans"
                                                                                                                    },
                                                                                                                    {
                                                                                                                      "type": "Identifier",
                                                                                                                      "name": "e"
                                                                                                                    }
                                                                                                                  ],
                                                                                                                  "defaults": [],
                                                                                                                  "body": {
                                                                                                                    "type": "BlockStatement",
                                                                                                                    "body": [
                                                                                                                      {
                                                                                                                        "type": "ExpressionStatement",
                                                                                                                        "expression": {
                                                                                                                          "type": "CallExpression",
                                                                                                                          "callee": {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "onTransactionProgress"
                                                                                                                          },
                                                                                                                          "arguments": [
                                                                                                                            {
                                                                                                                              "type": "Identifier",
                                                                                                                              "name": "trans"
                                                                                                                            },
                                                                                                                            {
                                                                                                                              "type": "Identifier",
                                                                                                                              "name": "callback"
                                                                                                                            }
                                                                                                                          ]
                                                                                                                        }
                                                                                                                      }
                                                                                                                    ]
                                                                                                                  },
                                                                                                                  "rest": null,
                                                                                                                  "generator": false,
                                                                                                                  "expression": false
                                                                                                                }
                                                                                                              ]
                                                                                                            }
                                                                                                          }
                                                                                                        ]
                                                                                                      },
                                                                                                      "rest": null,
                                                                                                      "generator": false,
                                                                                                      "expression": false
                                                                                                    },
                                                                                                    {
                                                                                                      "type": "FunctionExpression",
                                                                                                      "id": null,
                                                                                                      "params": [
                                                                                                        {
                                                                                                          "type": "Identifier",
                                                                                                          "name": "err"
                                                                                                        },
                                                                                                        {
                                                                                                          "type": "Identifier",
                                                                                                          "name": "e"
                                                                                                        }
                                                                                                      ],
                                                                                                      "defaults": [],
                                                                                                      "body": {
                                                                                                        "type": "BlockStatement",
                                                                                                        "body": [
                                                                                                          {
                                                                                                            "type": "ExpressionStatement",
                                                                                                            "expression": {
                                                                                                              "type": "CallExpression",
                                                                                                              "callee": {
                                                                                                                "type": "MemberExpression",
                                                                                                                "computed": false,
                                                                                                                "object": {
                                                                                                                  "type": "Identifier",
                                                                                                                  "name": "dfd"
                                                                                                                },
                                                                                                                "property": {
                                                                                                                  "type": "Identifier",
                                                                                                                  "name": "rejectWith"
                                                                                                                }
                                                                                                              },
                                                                                                              "arguments": [
                                                                                                                {
                                                                                                                  "type": "ThisExpression"
                                                                                                                },
                                                                                                                {
                                                                                                                  "type": "ArrayExpression",
                                                                                                                  "elements": [
                                                                                                                    {
                                                                                                                      "type": "Identifier",
                                                                                                                      "name": "err"
                                                                                                                    },
                                                                                                                    {
                                                                                                                      "type": "Identifier",
                                                                                                                      "name": "e"
                                                                                                                    }
                                                                                                                  ]
                                                                                                                }
                                                                                                              ]
                                                                                                            }
                                                                                                          }
                                                                                                        ]
                                                                                                      },
                                                                                                      "rest": null,
                                                                                                      "generator": false,
                                                                                                      "expression": false
                                                                                                    },
                                                                                                    {
                                                                                                      "type": "FunctionExpression",
                                                                                                      "id": null,
                                                                                                      "params": [
                                                                                                        {
                                                                                                          "type": "Identifier",
                                                                                                          "name": "db"
                                                                                                        },
                                                                                                        {
                                                                                                          "type": "Identifier",
                                                                                                          "name": "e"
                                                                                                        }
                                                                                                      ],
                                                                                                      "defaults": [],
                                                                                                      "body": {
                                                                                                        "type": "BlockStatement",
                                                                                                        "body": [
                                                                                                          {
                                                                                                            "type": "IfStatement",
                                                                                                            "test": {
                                                                                                              "type": "BinaryExpression",
                                                                                                              "operator": "===",
                                                                                                              "left": {
                                                                                                                "type": "MemberExpression",
                                                                                                                "computed": false,
                                                                                                                "object": {
                                                                                                                  "type": "Identifier",
                                                                                                                  "name": "e"
                                                                                                                },
                                                                                                                "property": {
                                                                                                                  "type": "Identifier",
                                                                                                                  "name": "type"
                                                                                                                }
                                                                                                              },
                                                                                                              "right": {
                                                                                                                "type": "Literal",
                                                                                                                "value": "upgradeneeded"
                                                                                                              }
                                                                                                            },
                                                                                                            "consequent": {
                                                                                                              "type": "BlockStatement",
                                                                                                              "body": [
                                                                                                                {
                                                                                                                  "type": "TryStatement",
                                                                                                                  "block": {
                                                                                                                    "type": "BlockStatement",
                                                                                                                    "body": [
                                                                                                                      {
                                                                                                                        "type": "ExpressionStatement",
                                                                                                                        "expression": {
                                                                                                                          "type": "CallExpression",
                                                                                                                          "callee": {
                                                                                                                            "type": "MemberExpression",
                                                                                                                            "computed": false,
                                                                                                                            "object": {
                                                                                                                              "type": "Identifier",
                                                                                                                              "name": "db"
                                                                                                                            },
                                                                                                                            "property": {
                                                                                                                              "type": "Identifier",
                                                                                                                              "name": "createObjectStore"
                                                                                                                            }
                                                                                                                          },
                                                                                                                          "arguments": [
                                                                                                                            {
                                                                                                                              "type": "Identifier",
                                                                                                                              "name": "storeName"
                                                                                                                            },
                                                                                                                            {
                                                                                                                              "type": "ConditionalExpression",
                                                                                                                              "test": {
                                                                                                                                "type": "BinaryExpression",
                                                                                                                                "operator": "===",
                                                                                                                                "left": {
                                                                                                                                  "type": "Identifier",
                                                                                                                                  "name": "mode"
                                                                                                                                },
                                                                                                                                "right": {
                                                                                                                                  "type": "Literal",
                                                                                                                                  "value": true
                                                                                                                                }
                                                                                                                              },
                                                                                                                              "consequent": {
                                                                                                                                "type": "ObjectExpression",
                                                                                                                                "properties": [
                                                                                                                                  {
                                                                                                                                    "type": "Property",
                                                                                                                                    "key": {
                                                                                                                                      "type": "Literal",
                                                                                                                                      "value": "autoIncrement"
                                                                                                                                    },
                                                                                                                                    "value": {
                                                                                                                                      "type": "Literal",
                                                                                                                                      "value": true
                                                                                                                                    },
                                                                                                                                    "kind": "init"
                                                                                                                                  }
                                                                                                                                ]
                                                                                                                              },
                                                                                                                              "alternate": {
                                                                                                                                "type": "Identifier",
                                                                                                                                "name": "mode"
                                                                                                                              }
                                                                                                                            }
                                                                                                                          ]
                                                                                                                        }
                                                                                                                      }
                                                                                                                    ]
                                                                                                                  },
                                                                                                                  "guardedHandlers": [],
                                                                                                                  "handlers": [
                                                                                                                    {
                                                                                                                      "type": "CatchClause",
                                                                                                                      "param": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "ex"
                                                                                                                      },
                                                                                                                      "body": {
                                                                                                                        "type": "BlockStatement",
                                                                                                                        "body": [
                                                                                                                          {
                                                                                                                            "type": "ExpressionStatement",
                                                                                                                            "expression": {
                                                                                                                              "type": "CallExpression",
                                                                                                                              "callee": {
                                                                                                                                "type": "MemberExpression",
                                                                                                                                "computed": false,
                                                                                                                                "object": {
                                                                                                                                  "type": "Identifier",
                                                                                                                                  "name": "dfd"
                                                                                                                                },
                                                                                                                                "property": {
                                                                                                                                  "type": "Identifier",
                                                                                                                                  "name": "rejectWith"
                                                                                                                                }
                                                                                                                              },
                                                                                                                              "arguments": [
                                                                                                                                {
                                                                                                                                  "type": "ThisExpression"
                                                                                                                                },
                                                                                                                                {
                                                                                                                                  "type": "ArrayExpression",
                                                                                                                                  "elements": [
                                                                                                                                    {
                                                                                                                                      "type": "Identifier",
                                                                                                                                      "name": "ex"
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                      "type": "Identifier",
                                                                                                                                      "name": "e"
                                                                                                                                    }
                                                                                                                                  ]
                                                                                                                                }
                                                                                                                              ]
                                                                                                                            }
                                                                                                                          }
                                                                                                                        ]
                                                                                                                      }
                                                                                                                    }
                                                                                                                  ],
                                                                                                                  "finalizer": null
                                                                                                                }
                                                                                                              ]
                                                                                                            },
                                                                                                            "alternate": null
                                                                                                          }
                                                                                                        ]
                                                                                                      },
                                                                                                      "rest": null,
                                                                                                      "generator": false,
                                                                                                      "expression": false
                                                                                                    }
                                                                                                  ]
                                                                                                }
                                                                                              }
                                                                                            ]
                                                                                          },
                                                                                          "alternate": {
                                                                                            "type": "BlockStatement",
                                                                                            "body": [
                                                                                              {
                                                                                                "type": "ExpressionStatement",
                                                                                                "expression": {
                                                                                                  "type": "CallExpression",
                                                                                                  "callee": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": false,
                                                                                                    "object": {
                                                                                                      "type": "Identifier",
                                                                                                      "name": "dfd"
                                                                                                    },
                                                                                                    "property": {
                                                                                                      "type": "Identifier",
                                                                                                      "name": "rejectWith"
                                                                                                    }
                                                                                                  },
                                                                                                  "arguments": [
                                                                                                    {
                                                                                                      "type": "ThisExpression"
                                                                                                    },
                                                                                                    {
                                                                                                      "type": "ArrayExpression",
                                                                                                      "elements": [
                                                                                                        {
                                                                                                          "type": "Identifier",
                                                                                                          "name": "err"
                                                                                                        },
                                                                                                        {
                                                                                                          "type": "Identifier",
                                                                                                          "name": "e"
                                                                                                        }
                                                                                                      ]
                                                                                                    }
                                                                                                  ]
                                                                                                }
                                                                                              }
                                                                                            ]
                                                                                          }
                                                                                        }
                                                                                      ]
                                                                                    },
                                                                                    "rest": null,
                                                                                    "generator": false,
                                                                                    "expression": false
                                                                                  },
                                                                                  {
                                                                                    "type": "FunctionExpression",
                                                                                    "id": null,
                                                                                    "params": [
                                                                                      {
                                                                                        "type": "Identifier",
                                                                                        "name": "trans"
                                                                                      }
                                                                                    ],
                                                                                    "defaults": [],
                                                                                    "body": {
                                                                                      "type": "BlockStatement",
                                                                                      "body": [
                                                                                        {
                                                                                          "type": "ExpressionStatement",
                                                                                          "expression": {
                                                                                            "type": "CallExpression",
                                                                                            "callee": {
                                                                                              "type": "Identifier",
                                                                                              "name": "onTransactionProgress"
                                                                                            },
                                                                                            "arguments": [
                                                                                              {
                                                                                                "type": "Identifier",
                                                                                                "name": "trans"
                                                                                              },
                                                                                              {
                                                                                                "type": "Identifier",
                                                                                                "name": "callback"
                                                                                              }
                                                                                            ]
                                                                                          }
                                                                                        }
                                                                                      ]
                                                                                    },
                                                                                    "rest": null,
                                                                                    "generator": false,
                                                                                    "expression": false
                                                                                  }
                                                                                ]
                                                                              }
                                                                            }
                                                                          ]
                                                                        },
                                                                        "rest": null,
                                                                        "generator": false,
                                                                        "expression": false
                                                                      }
                                                                    ]
                                                                  }
                                                                }
                                                              ]
                                                            },
                                                            "rest": null,
                                                            "generator": false,
                                                            "expression": false
                                                          },
                                                          {
                                                            "type": "FunctionDeclaration",
                                                            "id": {
                                                              "type": "Identifier",
                                                              "name": "crudOp"
                                                            },
                                                            "params": [
                                                              {
                                                                "type": "Identifier",
                                                                "name": "opName"
                                                              },
                                                              {
                                                                "type": "Identifier",
                                                                "name": "args"
                                                              }
                                                            ],
                                                            "defaults": [],
                                                            "body": {
                                                              "type": "BlockStatement",
                                                              "body": [
                                                                {
                                                                  "type": "ReturnStatement",
                                                                  "argument": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "Identifier",
                                                                      "name": "op"
                                                                    },
                                                                    "arguments": [
                                                                      {
                                                                        "type": "FunctionExpression",
                                                                        "id": null,
                                                                        "params": [
                                                                          {
                                                                            "type": "Identifier",
                                                                            "name": "wrappedObjectStore"
                                                                          }
                                                                        ],
                                                                        "defaults": [],
                                                                        "body": {
                                                                          "type": "BlockStatement",
                                                                          "body": [
                                                                            {
                                                                              "type": "ReturnStatement",
                                                                              "argument": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                  "type": "MemberExpression",
                                                                                  "computed": false,
                                                                                  "object": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "wrappedObjectStore"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "opName"
                                                                                    }
                                                                                  },
                                                                                  "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "apply"
                                                                                  }
                                                                                },
                                                                                "arguments": [
                                                                                  {
                                                                                    "type": "Identifier",
                                                                                    "name": "wrappedObjectStore"
                                                                                  },
                                                                                  {
                                                                                    "type": "Identifier",
                                                                                    "name": "args"
                                                                                  }
                                                                                ]
                                                                              }
                                                                            }
                                                                          ]
                                                                        },
                                                                        "rest": null,
                                                                        "generator": false,
                                                                        "expression": false
                                                                      }
                                                                    ]
                                                                  }
                                                                }
                                                              ]
                                                            },
                                                            "rest": null,
                                                            "generator": false,
                                                            "expression": false
                                                          },
                                                          {
                                                            "type": "FunctionDeclaration",
                                                            "id": {
                                                              "type": "Identifier",
                                                              "name": "indexOp"
                                                            },
                                                            "params": [
                                                              {
                                                                "type": "Identifier",
                                                                "name": "opName"
                                                              },
                                                              {
                                                                "type": "Identifier",
                                                                "name": "indexName"
                                                              },
                                                              {
                                                                "type": "Identifier",
                                                                "name": "args"
                                                              }
                                                            ],
                                                            "defaults": [],
                                                            "body": {
                                                              "type": "BlockStatement",
                                                              "body": [
                                                                {
                                                                  "type": "ReturnStatement",
                                                                  "argument": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "Identifier",
                                                                      "name": "op"
                                                                    },
                                                                    "arguments": [
                                                                      {
                                                                        "type": "FunctionExpression",
                                                                        "id": null,
                                                                        "params": [
                                                                          {
                                                                            "type": "Identifier",
                                                                            "name": "wrappedObjectStore"
                                                                          }
                                                                        ],
                                                                        "defaults": [],
                                                                        "body": {
                                                                          "type": "BlockStatement",
                                                                          "body": [
                                                                            {
                                                                              "type": "VariableDeclaration",
                                                                              "declarations": [
                                                                                {
                                                                                  "type": "VariableDeclarator",
                                                                                  "id": {
                                                                                    "type": "Identifier",
                                                                                    "name": "index"
                                                                                  },
                                                                                  "init": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                      "type": "MemberExpression",
                                                                                      "computed": false,
                                                                                      "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "wrappedObjectStore"
                                                                                      },
                                                                                      "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "index"
                                                                                      }
                                                                                    },
                                                                                    "arguments": [
                                                                                      {
                                                                                        "type": "Identifier",
                                                                                        "name": "indexName"
                                                                                      }
                                                                                    ]
                                                                                  }
                                                                                }
                                                                              ],
                                                                              "kind": "var"
                                                                            },
                                                                            {
                                                                              "type": "ReturnStatement",
                                                                              "argument": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                  "type": "MemberExpression",
                                                                                  "computed": false,
                                                                                  "object": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "index"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "opName"
                                                                                    }
                                                                                  },
                                                                                  "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "apply"
                                                                                  }
                                                                                },
                                                                                "arguments": [
                                                                                  {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "index"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "opName"
                                                                                    }
                                                                                  },
                                                                                  {
                                                                                    "type": "Identifier",
                                                                                    "name": "args"
                                                                                  }
                                                                                ]
                                                                              }
                                                                            }
                                                                          ]
                                                                        },
                                                                        "rest": null,
                                                                        "generator": false,
                                                                        "expression": false
                                                                      }
                                                                    ]
                                                                  }
                                                                }
                                                              ]
                                                            },
                                                            "rest": null,
                                                            "generator": false,
                                                            "expression": false
                                                          },
                                                          {
                                                            "type": "VariableDeclaration",
                                                            "declarations": [
                                                              {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                  "type": "Identifier",
                                                                  "name": "crud"
                                                                },
                                                                "init": {
                                                                  "type": "ArrayExpression",
                                                                  "elements": [
                                                                    {
                                                                      "type": "Literal",
                                                                      "value": "add"
                                                                    },
                                                                    {
                                                                      "type": "Literal",
                                                                      "value": "delete"
                                                                    },
                                                                    {
                                                                      "type": "Literal",
                                                                      "value": "get"
                                                                    },
                                                                    {
                                                                      "type": "Literal",
                                                                      "value": "put"
                                                                    },
                                                                    {
                                                                      "type": "Literal",
                                                                      "value": "clear"
                                                                    },
                                                                    {
                                                                      "type": "Literal",
                                                                      "value": "count"
                                                                    },
                                                                    {
                                                                      "type": "Literal",
                                                                      "value": "each"
                                                                    }
                                                                  ]
                                                                }
                                                              }
                                                            ],
                                                            "kind": "var"
                                                          },
                                                          {
                                                            "type": "ForStatement",
                                                            "init": {
                                                              "type": "VariableDeclaration",
                                                              "declarations": [
                                                                {
                                                                  "type": "VariableDeclarator",
                                                                  "id": {
                                                                    "type": "Identifier",
                                                                    "name": "i"
                                                                  },
                                                                  "init": {
                                                                    "type": "Literal",
                                                                    "value": 0
                                                                  }
                                                                }
                                                              ],
                                                              "kind": "var"
                                                            },
                                                            "test": {
                                                              "type": "BinaryExpression",
                                                              "operator": "<",
                                                              "left": {
                                                                "type": "Identifier",
                                                                "name": "i"
                                                              },
                                                              "right": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "crud"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "length"
                                                                }
                                                              }
                                                            },
                                                            "update": {
                                                              "type": "UpdateExpression",
                                                              "operator": "++",
                                                              "argument": {
                                                                "type": "Identifier",
                                                                "name": "i"
                                                              },
                                                              "prefix": false
                                                            },
                                                            "body": {
                                                              "type": "BlockStatement",
                                                              "body": [
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                      "type": "MemberExpression",
                                                                      "computed": true,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "result"
                                                                      },
                                                                      "property": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "crud"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "i"
                                                                        }
                                                                      }
                                                                    },
                                                                    "right": {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "FunctionExpression",
                                                                        "id": null,
                                                                        "params": [
                                                                          {
                                                                            "type": "Identifier",
                                                                            "name": "op"
                                                                          }
                                                                        ],
                                                                        "defaults": [],
                                                                        "body": {
                                                                          "type": "BlockStatement",
                                                                          "body": [
                                                                            {
                                                                              "type": "ReturnStatement",
                                                                              "argument": {
                                                                                "type": "FunctionExpression",
                                                                                "id": null,
                                                                                "params": [],
                                                                                "defaults": [],
                                                                                "body": {
                                                                                  "type": "BlockStatement",
                                                                                  "body": [
                                                                                    {
                                                                                      "type": "ReturnStatement",
                                                                                      "argument": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                          "type": "Identifier",
                                                                                          "name": "crudOp"
                                                                                        },
                                                                                        "arguments": [
                                                                                          {
                                                                                            "type": "Identifier",
                                                                                            "name": "op"
                                                                                          },
                                                                                          {
                                                                                            "type": "Identifier",
                                                                                            "name": "arguments"
                                                                                          }
                                                                                        ]
                                                                                      }
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                "rest": null,
                                                                                "generator": false,
                                                                                "expression": false
                                                                              }
                                                                            }
                                                                          ]
                                                                        },
                                                                        "rest": null,
                                                                        "generator": false,
                                                                        "expression": false
                                                                      },
                                                                      "arguments": [
                                                                        {
                                                                          "type": "MemberExpression",
                                                                          "computed": true,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "crud"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "i"
                                                                          }
                                                                        }
                                                                      ]
                                                                    }
                                                                  }
                                                                }
                                                              ]
                                                            }
                                                          },
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "AssignmentExpression",
                                                              "operator": "=",
                                                              "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "result"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "index"
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "FunctionExpression",
                                                                "id": null,
                                                                "params": [
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "indexName"
                                                                  }
                                                                ],
                                                                "defaults": [],
                                                                "body": {
                                                                  "type": "BlockStatement",
                                                                  "body": [
                                                                    {
                                                                      "type": "ReturnStatement",
                                                                      "argument": {
                                                                        "type": "ObjectExpression",
                                                                        "properties": [
                                                                          {
                                                                            "type": "Property",
                                                                            "key": {
                                                                              "type": "Literal",
                                                                              "value": "each"
                                                                            },
                                                                            "value": {
                                                                              "type": "FunctionExpression",
                                                                              "id": null,
                                                                              "params": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "name": "callback"
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "name": "range"
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "name": "direction"
                                                                                }
                                                                              ],
                                                                              "defaults": [],
                                                                              "body": {
                                                                                "type": "BlockStatement",
                                                                                "body": [
                                                                                  {
                                                                                    "type": "ReturnStatement",
                                                                                    "argument": {
                                                                                      "type": "CallExpression",
                                                                                      "callee": {
                                                                                        "type": "Identifier",
                                                                                        "name": "indexOp"
                                                                                      },
                                                                                      "arguments": [
                                                                                        {
                                                                                          "type": "Literal",
                                                                                          "value": "each"
                                                                                        },
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "name": "indexName"
                                                                                        },
                                                                                        {
                                                                                          "type": "ArrayExpression",
                                                                                          "elements": [
                                                                                            {
                                                                                              "type": "Identifier",
                                                                                              "name": "callback"
                                                                                            },
                                                                                            {
                                                                                              "type": "Identifier",
                                                                                              "name": "range"
                                                                                            },
                                                                                            {
                                                                                              "type": "Identifier",
                                                                                              "name": "direction"
                                                                                            }
                                                                                          ]
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  }
                                                                                ]
                                                                              },
                                                                              "rest": null,
                                                                              "generator": false,
                                                                              "expression": false
                                                                            },
                                                                            "kind": "init"
                                                                          },
                                                                          {
                                                                            "type": "Property",
                                                                            "key": {
                                                                              "type": "Literal",
                                                                              "value": "eachKey"
                                                                            },
                                                                            "value": {
                                                                              "type": "FunctionExpression",
                                                                              "id": null,
                                                                              "params": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "name": "callback"
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "name": "range"
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "name": "direction"
                                                                                }
                                                                              ],
                                                                              "defaults": [],
                                                                              "body": {
                                                                                "type": "BlockStatement",
                                                                                "body": [
                                                                                  {
                                                                                    "type": "ReturnStatement",
                                                                                    "argument": {
                                                                                      "type": "CallExpression",
                                                                                      "callee": {
                                                                                        "type": "Identifier",
                                                                                        "name": "indexOp"
                                                                                      },
                                                                                      "arguments": [
                                                                                        {
                                                                                          "type": "Literal",
                                                                                          "value": "eachKey"
                                                                                        },
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "name": "indexName"
                                                                                        },
                                                                                        {
                                                                                          "type": "ArrayExpression",
                                                                                          "elements": [
                                                                                            {
                                                                                              "type": "Identifier",
                                                                                              "name": "callback"
                                                                                            },
                                                                                            {
                                                                                              "type": "Identifier",
                                                                                              "name": "range"
                                                                                            },
                                                                                            {
                                                                                              "type": "Identifier",
                                                                                              "name": "direction"
                                                                                            }
                                                                                          ]
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  }
                                                                                ]
                                                                              },
                                                                              "rest": null,
                                                                              "generator": false,
                                                                              "expression": false
                                                                            },
                                                                            "kind": "init"
                                                                          },
                                                                          {
                                                                            "type": "Property",
                                                                            "key": {
                                                                              "type": "Literal",
                                                                              "value": "get"
                                                                            },
                                                                            "value": {
                                                                              "type": "FunctionExpression",
                                                                              "id": null,
                                                                              "params": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "name": "key"
                                                                                }
                                                                              ],
                                                                              "defaults": [],
                                                                              "body": {
                                                                                "type": "BlockStatement",
                                                                                "body": [
                                                                                  {
                                                                                    "type": "ReturnStatement",
                                                                                    "argument": {
                                                                                      "type": "CallExpression",
                                                                                      "callee": {
                                                                                        "type": "Identifier",
                                                                                        "name": "indexOp"
                                                                                      },
                                                                                      "arguments": [
                                                                                        {
                                                                                          "type": "Literal",
                                                                                          "value": "get"
                                                                                        },
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "name": "indexName"
                                                                                        },
                                                                                        {
                                                                                          "type": "ArrayExpression",
                                                                                          "elements": [
                                                                                            {
                                                                                              "type": "Identifier",
                                                                                              "name": "key"
                                                                                            }
                                                                                          ]
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  }
                                                                                ]
                                                                              },
                                                                              "rest": null,
                                                                              "generator": false,
                                                                              "expression": false
                                                                            },
                                                                            "kind": "init"
                                                                          },
                                                                          {
                                                                            "type": "Property",
                                                                            "key": {
                                                                              "type": "Literal",
                                                                              "value": "count"
                                                                            },
                                                                            "value": {
                                                                              "type": "FunctionExpression",
                                                                              "id": null,
                                                                              "params": [],
                                                                              "defaults": [],
                                                                              "body": {
                                                                                "type": "BlockStatement",
                                                                                "body": [
                                                                                  {
                                                                                    "type": "ReturnStatement",
                                                                                    "argument": {
                                                                                      "type": "CallExpression",
                                                                                      "callee": {
                                                                                        "type": "Identifier",
                                                                                        "name": "indexOp"
                                                                                      },
                                                                                      "arguments": [
                                                                                        {
                                                                                          "type": "Literal",
                                                                                          "value": "count"
                                                                                        },
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "name": "indexName"
                                                                                        },
                                                                                        {
                                                                                          "type": "ArrayExpression",
                                                                                          "elements": []
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  }
                                                                                ]
                                                                              },
                                                                              "rest": null,
                                                                              "generator": false,
                                                                              "expression": false
                                                                            },
                                                                            "kind": "init"
                                                                          },
                                                                          {
                                                                            "type": "Property",
                                                                            "key": {
                                                                              "type": "Literal",
                                                                              "value": "getKey"
                                                                            },
                                                                            "value": {
                                                                              "type": "FunctionExpression",
                                                                              "id": null,
                                                                              "params": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "name": "key"
                                                                                }
                                                                              ],
                                                                              "defaults": [],
                                                                              "body": {
                                                                                "type": "BlockStatement",
                                                                                "body": [
                                                                                  {
                                                                                    "type": "ReturnStatement",
                                                                                    "argument": {
                                                                                      "type": "CallExpression",
                                                                                      "callee": {
                                                                                        "type": "Identifier",
                                                                                        "name": "indexOp"
                                                                                      },
                                                                                      "arguments": [
                                                                                        {
                                                                                          "type": "Literal",
                                                                                          "value": "getKey"
                                                                                        },
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "name": "indexName"
                                                                                        },
                                                                                        {
                                                                                          "type": "ArrayExpression",
                                                                                          "elements": [
                                                                                            {
                                                                                              "type": "Identifier",
                                                                                              "name": "key"
                                                                                            }
                                                                                          ]
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  }
                                                                                ]
                                                                              },
                                                                              "rest": null,
                                                                              "generator": false,
                                                                              "expression": false
                                                                            },
                                                                            "kind": "init"
                                                                          }
                                                                        ]
                                                                      }
                                                                    }
                                                                  ]
                                                                },
                                                                "rest": null,
                                                                "generator": false,
                                                                "expression": false
                                                              }
                                                            }
                                                          },
                                                          {
                                                            "type": "ReturnStatement",
                                                            "argument": {
                                                              "type": "Identifier",
                                                              "name": "result"
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      "rest": null,
                                                      "generator": false,
                                                      "expression": false
                                                    },
                                                    "kind": "init"
                                                  }
                                                ]
                                              }
                                            ]
                                          }
                                        }
                                      ]
                                    },
                                    "rest": null,
                                    "generator": false,
                                    "expression": false
                                  },
                                  "kind": "init"
                                }
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "$"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "indexedDB"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "IDBCursor"
                            }
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "IDBCursor"
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "$"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "indexedDB"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "IDBTransaction"
                            }
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "IDBTransaction"
                          }
                        }
                      }
                    ]
                  },
                  "rest": null,
                  "generator": false,
                  "expression": false
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "initShim"
                    },
                    "arguments": []
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "init"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "$"
                      }
                    ]
                  }
                },
                {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "$"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "indexedDB"
                    }
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    }
  ]
}
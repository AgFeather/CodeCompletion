{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "define"
        },
        "arguments": [
          {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": "intern"
              },
              {
                "type": "Literal",
                "value": "intern!object"
              },
              {
                "type": "Literal",
                "value": "intern/chai!assert"
              },
              {
                "type": "Literal",
                "value": "require"
              }
            ]
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "params": [
              {
                "type": "Identifier",
                "name": "intern"
              },
              {
                "type": "Identifier",
                "name": "registerSuite"
              },
              {
                "type": "Identifier",
                "name": "assert"
              },
              {
                "type": "Identifier",
                "name": "require"
              }
            ],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "Literal",
                    "value": "use strict"
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "url"
                      },
                      "init": {
                        "type": "BinaryExpression",
                        "operator": "+",
                        "left": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "intern"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "config"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "siteRoot"
                          }
                        },
                        "right": {
                          "type": "Literal",
                          "value": "/contributors"
                        }
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "registerSuite"
                    },
                    "arguments": [
                      {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "name"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "contributors"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": "page loads"
                            },
                            "value": {
                              "type": "FunctionExpression",
                              "id": null,
                              "params": [],
                              "defaults": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ReturnStatement",
                                    "argument": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "ThisExpression"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "remote"
                                                          }
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "get"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "require"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "toUrl"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "Identifier",
                                                              "name": "url"
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "findByCssSelector"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Literal",
                                                      "value": ".wc-Hero-title"
                                                    }
                                                  ]
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "getVisibleText"
                                                }
                                              },
                                              "arguments": []
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "then"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "text"
                                                }
                                              ],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "assert"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "include"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "text"
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": "Welcome aboard!"
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            }
                                          ]
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "end"
                                        }
                                      },
                                      "arguments": []
                                    }
                                  }
                                ]
                              },
                              "rest": null,
                              "generator": false,
                              "expression": false
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": "clicking first section closes it"
                            },
                            "value": {
                              "type": "FunctionExpression",
                              "id": null,
                              "params": [],
                              "defaults": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ReturnStatement",
                                    "argument": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "CallExpression",
                                                                          "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "CallExpression",
                                                                              "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "CallExpression",
                                                                                  "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "CallExpression",
                                                                                      "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                          "type": "MemberExpression",
                                                                                          "computed": false,
                                                                                          "object": {
                                                                                            "type": "ThisExpression"
                                                                                          },
                                                                                          "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "remote"
                                                                                          }
                                                                                        },
                                                                                        "property": {
                                                                                          "type": "Identifier",
                                                                                          "name": "setFindTimeout"
                                                                                        }
                                                                                      },
                                                                                      "arguments": [
                                                                                        {
                                                                                          "type": "MemberExpression",
                                                                                          "computed": false,
                                                                                          "object": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                              "type": "MemberExpression",
                                                                                              "computed": false,
                                                                                              "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "intern"
                                                                                              },
                                                                                              "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "config"
                                                                                              }
                                                                                            },
                                                                                            "property": {
                                                                                              "type": "Identifier",
                                                                                              "name": "wc"
                                                                                            }
                                                                                          },
                                                                                          "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "pageLoadTimeout"
                                                                                          }
                                                                                        }
                                                                                      ]
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "get"
                                                                                    }
                                                                                  },
                                                                                  "arguments": [
                                                                                    {
                                                                                      "type": "CallExpression",
                                                                                      "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                          "type": "Identifier",
                                                                                          "name": "require"
                                                                                        },
                                                                                        "property": {
                                                                                          "type": "Identifier",
                                                                                          "name": "toUrl"
                                                                                        }
                                                                                      },
                                                                                      "arguments": [
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "name": "url"
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "findByCssSelector"
                                                                                }
                                                                              },
                                                                              "arguments": [
                                                                                {
                                                                                  "type": "Literal",
                                                                                  "value": ".contributors__item__title"
                                                                                }
                                                                              ]
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "click"
                                                                            }
                                                                          },
                                                                          "arguments": []
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "end"
                                                                        }
                                                                      },
                                                                      "arguments": []
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "findByCssSelector"
                                                                    }
                                                                  },
                                                                  "arguments": [
                                                                    {
                                                                      "type": "Literal",
                                                                      "value": ".contributors__item__content"
                                                                    }
                                                                  ]
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "getAttribute"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Literal",
                                                                  "value": "class"
                                                                }
                                                              ]
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "then"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "FunctionExpression",
                                                              "id": null,
                                                              "params": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "className"
                                                                }
                                                              ],
                                                              "defaults": [],
                                                              "body": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                  {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "assert"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "notInclude"
                                                                        }
                                                                      },
                                                                      "arguments": [
                                                                        {
                                                                          "type": "Literal",
                                                                          "value": "is-open"
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "name": "className"
                                                                        }
                                                                      ]
                                                                    }
                                                                  }
                                                                ]
                                                              },
                                                              "rest": null,
                                                              "generator": false,
                                                              "expression": false
                                                            }
                                                          ]
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "end"
                                                        }
                                                      },
                                                      "arguments": []
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "findByCssSelector"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Literal",
                                                      "value": ".wc-Hero-img"
                                                    }
                                                  ]
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "getAttribute"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Literal",
                                                  "value": "class"
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "then"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "className"
                                                }
                                              ],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "assert"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "notEqual"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Literal",
                                                          "value": "is-active"
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "name": "className"
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            }
                                          ]
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "end"
                                        }
                                      },
                                      "arguments": []
                                    }
                                  }
                                ]
                              },
                              "rest": null,
                              "generator": false,
                              "expression": false
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": "clicking section toggles it"
                            },
                            "value": {
                              "type": "FunctionExpression",
                              "id": null,
                              "params": [],
                              "defaults": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ReturnStatement",
                                    "argument": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "CallExpression",
                                                                          "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "CallExpression",
                                                                              "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "CallExpression",
                                                                                  "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "CallExpression",
                                                                                      "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                          "type": "CallExpression",
                                                                                          "callee": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                              "type": "CallExpression",
                                                                                              "callee": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": false,
                                                                                                "object": {
                                                                                                  "type": "CallExpression",
                                                                                                  "callee": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": false,
                                                                                                    "object": {
                                                                                                      "type": "CallExpression",
                                                                                                      "callee": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": false,
                                                                                                        "object": {
                                                                                                          "type": "CallExpression",
                                                                                                          "callee": {
                                                                                                            "type": "MemberExpression",
                                                                                                            "computed": false,
                                                                                                            "object": {
                                                                                                              "type": "CallExpression",
                                                                                                              "callee": {
                                                                                                                "type": "MemberExpression",
                                                                                                                "computed": false,
                                                                                                                "object": {
                                                                                                                  "type": "CallExpression",
                                                                                                                  "callee": {
                                                                                                                    "type": "MemberExpression",
                                                                                                                    "computed": false,
                                                                                                                    "object": {
                                                                                                                      "type": "MemberExpression",
                                                                                                                      "computed": false,
                                                                                                                      "object": {
                                                                                                                        "type": "ThisExpression"
                                                                                                                      },
                                                                                                                      "property": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "remote"
                                                                                                                      }
                                                                                                                    },
                                                                                                                    "property": {
                                                                                                                      "type": "Identifier",
                                                                                                                      "name": "setFindTimeout"
                                                                                                                    }
                                                                                                                  },
                                                                                                                  "arguments": [
                                                                                                                    {
                                                                                                                      "type": "MemberExpression",
                                                                                                                      "computed": false,
                                                                                                                      "object": {
                                                                                                                        "type": "MemberExpression",
                                                                                                                        "computed": false,
                                                                                                                        "object": {
                                                                                                                          "type": "MemberExpression",
                                                                                                                          "computed": false,
                                                                                                                          "object": {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "intern"
                                                                                                                          },
                                                                                                                          "property": {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "config"
                                                                                                                          }
                                                                                                                        },
                                                                                                                        "property": {
                                                                                                                          "type": "Identifier",
                                                                                                                          "name": "wc"
                                                                                                                        }
                                                                                                                      },
                                                                                                                      "property": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "pageLoadTimeout"
                                                                                                                      }
                                                                                                                    }
                                                                                                                  ]
                                                                                                                },
                                                                                                                "property": {
                                                                                                                  "type": "Identifier",
                                                                                                                  "name": "get"
                                                                                                                }
                                                                                                              },
                                                                                                              "arguments": [
                                                                                                                {
                                                                                                                  "type": "CallExpression",
                                                                                                                  "callee": {
                                                                                                                    "type": "MemberExpression",
                                                                                                                    "computed": false,
                                                                                                                    "object": {
                                                                                                                      "type": "Identifier",
                                                                                                                      "name": "require"
                                                                                                                    },
                                                                                                                    "property": {
                                                                                                                      "type": "Identifier",
                                                                                                                      "name": "toUrl"
                                                                                                                    }
                                                                                                                  },
                                                                                                                  "arguments": [
                                                                                                                    {
                                                                                                                      "type": "Identifier",
                                                                                                                      "name": "url"
                                                                                                                    }
                                                                                                                  ]
                                                                                                                }
                                                                                                              ]
                                                                                                            },
                                                                                                            "property": {
                                                                                                              "type": "Identifier",
                                                                                                              "name": "findByCssSelector"
                                                                                                            }
                                                                                                          },
                                                                                                          "arguments": [
                                                                                                            {
                                                                                                              "type": "Literal",
                                                                                                              "value": ".contributors__item__content.is-open"
                                                                                                            }
                                                                                                          ]
                                                                                                        },
                                                                                                        "property": {
                                                                                                          "type": "Identifier",
                                                                                                          "name": "isDisplayed"
                                                                                                        }
                                                                                                      },
                                                                                                      "arguments": []
                                                                                                    },
                                                                                                    "property": {
                                                                                                      "type": "Identifier",
                                                                                                      "name": "then"
                                                                                                    }
                                                                                                  },
                                                                                                  "arguments": [
                                                                                                    {
                                                                                                      "type": "FunctionExpression",
                                                                                                      "id": null,
                                                                                                      "params": [
                                                                                                        {
                                                                                                          "type": "Identifier",
                                                                                                          "name": "isDisplayed"
                                                                                                        }
                                                                                                      ],
                                                                                                      "defaults": [],
                                                                                                      "body": {
                                                                                                        "type": "BlockStatement",
                                                                                                        "body": [
                                                                                                          {
                                                                                                            "type": "ExpressionStatement",
                                                                                                            "expression": {
                                                                                                              "type": "CallExpression",
                                                                                                              "callee": {
                                                                                                                "type": "MemberExpression",
                                                                                                                "computed": false,
                                                                                                                "object": {
                                                                                                                  "type": "Identifier",
                                                                                                                  "name": "assert"
                                                                                                                },
                                                                                                                "property": {
                                                                                                                  "type": "Identifier",
                                                                                                                  "name": "equal"
                                                                                                                }
                                                                                                              },
                                                                                                              "arguments": [
                                                                                                                {
                                                                                                                  "type": "Identifier",
                                                                                                                  "name": "isDisplayed"
                                                                                                                },
                                                                                                                {
                                                                                                                  "type": "Literal",
                                                                                                                  "value": true
                                                                                                                }
                                                                                                              ]
                                                                                                            }
                                                                                                          }
                                                                                                        ]
                                                                                                      },
                                                                                                      "rest": null,
                                                                                                      "generator": false,
                                                                                                      "expression": false
                                                                                                    }
                                                                                                  ]
                                                                                                },
                                                                                                "property": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "end"
                                                                                                }
                                                                                              },
                                                                                              "arguments": []
                                                                                            },
                                                                                            "property": {
                                                                                              "type": "Identifier",
                                                                                              "name": "findByCssSelector"
                                                                                            }
                                                                                          },
                                                                                          "arguments": [
                                                                                            {
                                                                                              "type": "Literal",
                                                                                              "value": ".wc-Hero-img.is-active"
                                                                                            }
                                                                                          ]
                                                                                        },
                                                                                        "property": {
                                                                                          "type": "Identifier",
                                                                                          "name": "isDisplayed"
                                                                                        }
                                                                                      },
                                                                                      "arguments": []
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "then"
                                                                                    }
                                                                                  },
                                                                                  "arguments": [
                                                                                    {
                                                                                      "type": "FunctionExpression",
                                                                                      "id": null,
                                                                                      "params": [
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "name": "isDisplayed"
                                                                                        }
                                                                                      ],
                                                                                      "defaults": [],
                                                                                      "body": {
                                                                                        "type": "BlockStatement",
                                                                                        "body": [
                                                                                          {
                                                                                            "type": "ExpressionStatement",
                                                                                            "expression": {
                                                                                              "type": "CallExpression",
                                                                                              "callee": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": false,
                                                                                                "object": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "assert"
                                                                                                },
                                                                                                "property": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "equal"
                                                                                                }
                                                                                              },
                                                                                              "arguments": [
                                                                                                {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "isDisplayed"
                                                                                                },
                                                                                                {
                                                                                                  "type": "Literal",
                                                                                                  "value": true
                                                                                                }
                                                                                              ]
                                                                                            }
                                                                                          }
                                                                                        ]
                                                                                      },
                                                                                      "rest": null,
                                                                                      "generator": false,
                                                                                      "expression": false
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "end"
                                                                                }
                                                                              },
                                                                              "arguments": []
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "findByCssSelector"
                                                                            }
                                                                          },
                                                                          "arguments": [
                                                                            {
                                                                              "type": "Literal",
                                                                              "value": ".contributors__item__title"
                                                                            }
                                                                          ]
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "click"
                                                                        }
                                                                      },
                                                                      "arguments": []
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "end"
                                                                    }
                                                                  },
                                                                  "arguments": []
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "findByCssSelector"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Literal",
                                                                  "value": ".contributors__item__content"
                                                                }
                                                              ]
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "getAttribute"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "Literal",
                                                              "value": "class"
                                                            }
                                                          ]
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "then"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "FunctionExpression",
                                                          "id": null,
                                                          "params": [
                                                            {
                                                              "type": "Identifier",
                                                              "name": "className"
                                                            }
                                                          ],
                                                          "defaults": [],
                                                          "body": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                              {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "assert"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "notInclude"
                                                                    }
                                                                  },
                                                                  "arguments": [
                                                                    {
                                                                      "type": "Literal",
                                                                      "value": "is-open"
                                                                    },
                                                                    {
                                                                      "type": "Identifier",
                                                                      "name": "className"
                                                                    }
                                                                  ]
                                                                }
                                                              }
                                                            ]
                                                          },
                                                          "rest": null,
                                                          "generator": false,
                                                          "expression": false
                                                        }
                                                      ]
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "end"
                                                    }
                                                  },
                                                  "arguments": []
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "findByCssSelector"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Literal",
                                                  "value": ".wc-Hero-img"
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "getAttribute"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Literal",
                                              "value": "class"
                                            }
                                          ]
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "then"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "FunctionExpression",
                                          "id": null,
                                          "params": [
                                            {
                                              "type": "Identifier",
                                              "name": "className"
                                            }
                                          ],
                                          "defaults": [],
                                          "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "assert"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "notInclude"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Literal",
                                                      "value": "is-active"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "className"
                                                    }
                                                  ]
                                                }
                                              }
                                            ]
                                          },
                                          "rest": null,
                                          "generator": false,
                                          "expression": false
                                        }
                                      ]
                                    }
                                  }
                                ]
                              },
                              "rest": null,
                              "generator": false,
                              "expression": false
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": "toggling section toggles lightbulb"
                            },
                            "value": {
                              "type": "FunctionExpression",
                              "id": null,
                              "params": [],
                              "defaults": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ReturnStatement",
                                    "argument": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "CallExpression",
                                                                          "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "CallExpression",
                                                                              "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "CallExpression",
                                                                                  "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "MemberExpression",
                                                                                      "computed": false,
                                                                                      "object": {
                                                                                        "type": "ThisExpression"
                                                                                      },
                                                                                      "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "remote"
                                                                                      }
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "setFindTimeout"
                                                                                    }
                                                                                  },
                                                                                  "arguments": [
                                                                                    {
                                                                                      "type": "MemberExpression",
                                                                                      "computed": false,
                                                                                      "object": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                          "type": "MemberExpression",
                                                                                          "computed": false,
                                                                                          "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "intern"
                                                                                          },
                                                                                          "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "config"
                                                                                          }
                                                                                        },
                                                                                        "property": {
                                                                                          "type": "Identifier",
                                                                                          "name": "wc"
                                                                                        }
                                                                                      },
                                                                                      "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "pageLoadTimeout"
                                                                                      }
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "get"
                                                                                }
                                                                              },
                                                                              "arguments": [
                                                                                {
                                                                                  "type": "CallExpression",
                                                                                  "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "require"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "toUrl"
                                                                                    }
                                                                                  },
                                                                                  "arguments": [
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "name": "url"
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              ]
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "findByCssSelector"
                                                                            }
                                                                          },
                                                                          "arguments": [
                                                                            {
                                                                              "type": "Literal",
                                                                              "value": ".wc-Hero-img.is-active"
                                                                            }
                                                                          ]
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "isDisplayed"
                                                                        }
                                                                      },
                                                                      "arguments": []
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "then"
                                                                    }
                                                                  },
                                                                  "arguments": [
                                                                    {
                                                                      "type": "FunctionExpression",
                                                                      "id": null,
                                                                      "params": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "name": "isDisplayed"
                                                                        }
                                                                      ],
                                                                      "defaults": [],
                                                                      "body": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                          {
                                                                            "type": "ExpressionStatement",
                                                                            "expression": {
                                                                              "type": "CallExpression",
                                                                              "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "assert"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "equal"
                                                                                }
                                                                              },
                                                                              "arguments": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "name": "isDisplayed"
                                                                                },
                                                                                {
                                                                                  "type": "Literal",
                                                                                  "value": true
                                                                                }
                                                                              ]
                                                                            }
                                                                          }
                                                                        ]
                                                                      },
                                                                      "rest": null,
                                                                      "generator": false,
                                                                      "expression": false
                                                                    }
                                                                  ]
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "end"
                                                                }
                                                              },
                                                              "arguments": []
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "findByCssSelector"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "Literal",
                                                              "value": ".contributors__item__title"
                                                            }
                                                          ]
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "click"
                                                        }
                                                      },
                                                      "arguments": []
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "end"
                                                    }
                                                  },
                                                  "arguments": []
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "findByCssSelector"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Literal",
                                                  "value": ".wc-Hero-img"
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "getAttribute"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Literal",
                                              "value": "class"
                                            }
                                          ]
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "then"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "FunctionExpression",
                                          "id": null,
                                          "params": [
                                            {
                                              "type": "Identifier",
                                              "name": "className"
                                            }
                                          ],
                                          "defaults": [],
                                          "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "assert"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "notInclude"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Literal",
                                                      "value": "is-active"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "className"
                                                    }
                                                  ]
                                                }
                                              }
                                            ]
                                          },
                                          "rest": null,
                                          "generator": false,
                                          "expression": false
                                        }
                                      ]
                                    }
                                  }
                                ]
                              },
                              "rest": null,
                              "generator": false,
                              "expression": false
                            },
                            "kind": "init"
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    }
  ]
}
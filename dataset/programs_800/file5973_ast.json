{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "label"
          },
          "init": {
            "type": "Literal",
            "value": "Ludwig Wittgenstein Doll"
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "version"
          },
          "init": {
            "type": "Literal",
            "value": "1354304084"
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "name_single"
          },
          "init": {
            "type": "Literal",
            "value": "Ludwig Wittgenstein Doll"
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "name_plural"
          },
          "init": {
            "type": "Literal",
            "value": "Ludwig Wittgenstein Dolls"
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "article"
          },
          "init": {
            "type": "Literal",
            "value": "a"
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "description"
          },
          "init": {
            "type": "Literal",
            "value": "A depressed, closeted, singularly-focused Anglicized Austrian: student, schoolteacher, professor, maniac ... genius?"
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "is_hidden"
          },
          "init": {
            "type": "Literal",
            "value": false
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "has_info"
          },
          "init": {
            "type": "Literal",
            "value": true
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "has_infopage"
          },
          "init": {
            "type": "Literal",
            "value": true
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "proxy_item"
          },
          "init": {
            "type": "Literal",
            "value": null
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "is_routable"
          },
          "init": {
            "type": "Literal",
            "value": false
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "adjusted_scale"
          },
          "init": {
            "type": "Literal",
            "value": 1
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "stackmax"
          },
          "init": {
            "type": "Literal",
            "value": 1
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "base_cost"
          },
          "init": {
            "type": "Literal",
            "value": 1009
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "input_for"
          },
          "init": {
            "type": "ArrayExpression",
            "elements": []
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "parent_classes"
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": "doll_wittgenstein"
              },
              {
                "type": "Literal",
                "value": "doll"
              },
              {
                "type": "Literal",
                "value": "takeable"
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "has_instance_props"
          },
          "init": {
            "type": "Literal",
            "value": false
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "classProps"
          },
          "init": {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Literal",
                  "value": "collection_id"
                },
                "value": {
                  "type": "Literal",
                  "value": ""
                },
                "kind": "init"
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "instancePropsDef"
          },
          "init": {
            "type": "ObjectExpression",
            "properties": []
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "verbs"
          },
          "init": {
            "type": "ObjectExpression",
            "properties": []
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "verbs"
          },
          "property": {
            "type": "Identifier",
            "name": "pickup"
          }
        },
        "right": {
          "type": "ObjectExpression",
          "properties": [
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "name"
              },
              "value": {
                "type": "Literal",
                "value": "pick up"
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "ok_states"
              },
              "value": {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": "in_location"
                  }
                ]
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "requires_target_pc"
              },
              "value": {
                "type": "Literal",
                "value": false
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "requires_target_item"
              },
              "value": {
                "type": "Literal",
                "value": false
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "include_target_items_from_location"
              },
              "value": {
                "type": "Literal",
                "value": false
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "is_default"
              },
              "value": {
                "type": "Literal",
                "value": false
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "is_emote"
              },
              "value": {
                "type": "Literal",
                "value": false
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "sort_on"
              },
              "value": {
                "type": "Literal",
                "value": 50
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "tooltip"
              },
              "value": {
                "type": "Literal",
                "value": "Put it in your pack"
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "is_drop_target"
              },
              "value": {
                "type": "Literal",
                "value": false
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "proximity_override"
              },
              "value": {
                "type": "Literal",
                "value": 800
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "conditions"
              },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "pc"
                  },
                  {
                    "type": "Identifier",
                    "name": "drop_stack"
                  }
                ],
                "defaults": [],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ReturnStatement",
                      "argument": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "ThisExpression"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "takeable_pickup_conditions"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "pc"
                          },
                          {
                            "type": "Identifier",
                            "name": "drop_stack"
                          }
                        ]
                      }
                    }
                  ]
                },
                "rest": null,
                "generator": false,
                "expression": false
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "handler"
              },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "pc"
                  },
                  {
                    "type": "Identifier",
                    "name": "msg"
                  },
                  {
                    "type": "Identifier",
                    "name": "suppress_activity"
                  }
                ],
                "defaults": [],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ReturnStatement",
                      "argument": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "ThisExpression"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "takeable_pickup"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "pc"
                          },
                          {
                            "type": "Identifier",
                            "name": "msg"
                          }
                        ]
                      }
                    }
                  ]
                },
                "rest": null,
                "generator": false,
                "expression": false
              },
              "kind": "init"
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "verbs"
          },
          "property": {
            "type": "Identifier",
            "name": "give"
          }
        },
        "right": {
          "type": "ObjectExpression",
          "properties": [
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "name"
              },
              "value": {
                "type": "Literal",
                "value": "give"
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "ok_states"
              },
              "value": {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": "in_pack"
                  }
                ]
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "requires_target_pc"
              },
              "value": {
                "type": "Literal",
                "value": true
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "requires_target_item"
              },
              "value": {
                "type": "Literal",
                "value": false
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "include_target_items_from_location"
              },
              "value": {
                "type": "Literal",
                "value": false
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "is_default"
              },
              "value": {
                "type": "Literal",
                "value": false
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "is_emote"
              },
              "value": {
                "type": "Literal",
                "value": false
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "sort_on"
              },
              "value": {
                "type": "Literal",
                "value": 51
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "tooltip"
              },
              "value": {
                "type": "Literal",
                "value": "Or, drag item to player"
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "is_drop_target"
              },
              "value": {
                "type": "Literal",
                "value": false
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "conditions"
              },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "pc"
                  },
                  {
                    "type": "Identifier",
                    "name": "drop_stack"
                  }
                ],
                "defaults": [],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ReturnStatement",
                      "argument": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "ThisExpression"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "takeable_give_conditions"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "pc"
                          },
                          {
                            "type": "Identifier",
                            "name": "drop_stack"
                          }
                        ]
                      }
                    }
                  ]
                },
                "rest": null,
                "generator": false,
                "expression": false
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "handler"
              },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "pc"
                  },
                  {
                    "type": "Identifier",
                    "name": "msg"
                  },
                  {
                    "type": "Identifier",
                    "name": "suppress_activity"
                  }
                ],
                "defaults": [],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ReturnStatement",
                      "argument": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "ThisExpression"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "takeable_give"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "pc"
                          },
                          {
                            "type": "Identifier",
                            "name": "msg"
                          }
                        ]
                      }
                    }
                  ]
                },
                "rest": null,
                "generator": false,
                "expression": false
              },
              "kind": "init"
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "verbs"
          },
          "property": {
            "type": "Identifier",
            "name": "drop"
          }
        },
        "right": {
          "type": "ObjectExpression",
          "properties": [
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "name"
              },
              "value": {
                "type": "Literal",
                "value": "drop"
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "ok_states"
              },
              "value": {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": "in_pack"
                  }
                ]
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "requires_target_pc"
              },
              "value": {
                "type": "Literal",
                "value": false
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "requires_target_item"
              },
              "value": {
                "type": "Literal",
                "value": false
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "include_target_items_from_location"
              },
              "value": {
                "type": "Literal",
                "value": false
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "is_default"
              },
              "value": {
                "type": "Literal",
                "value": false
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "is_emote"
              },
              "value": {
                "type": "Literal",
                "value": false
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "sort_on"
              },
              "value": {
                "type": "Literal",
                "value": 52
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "tooltip"
              },
              "value": {
                "type": "Literal",
                "value": "Drop it on the ground"
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "is_drop_target"
              },
              "value": {
                "type": "Literal",
                "value": false
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "conditions"
              },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "pc"
                  },
                  {
                    "type": "Identifier",
                    "name": "drop_stack"
                  }
                ],
                "defaults": [],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ReturnStatement",
                      "argument": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "ThisExpression"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "takeable_drop_conditions"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "pc"
                          },
                          {
                            "type": "Identifier",
                            "name": "drop_stack"
                          }
                        ]
                      }
                    }
                  ]
                },
                "rest": null,
                "generator": false,
                "expression": false
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "handler"
              },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "pc"
                  },
                  {
                    "type": "Identifier",
                    "name": "msg"
                  },
                  {
                    "type": "Identifier",
                    "name": "suppress_activity"
                  }
                ],
                "defaults": [],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ReturnStatement",
                      "argument": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "ThisExpression"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "takeable_drop"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "pc"
                          },
                          {
                            "type": "Identifier",
                            "name": "msg"
                          }
                        ]
                      }
                    }
                  ]
                },
                "rest": null,
                "generator": false,
                "expression": false
              },
              "kind": "init"
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "verbs"
          },
          "property": {
            "type": "Identifier",
            "name": "pull_string"
          }
        },
        "right": {
          "type": "ObjectExpression",
          "properties": [
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "name"
              },
              "value": {
                "type": "Literal",
                "value": "pull string"
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "ok_states"
              },
              "value": {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": "in_location"
                  },
                  {
                    "type": "Literal",
                    "value": "in_pack"
                  }
                ]
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "requires_target_pc"
              },
              "value": {
                "type": "Literal",
                "value": false
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "requires_target_item"
              },
              "value": {
                "type": "Literal",
                "value": false
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "include_target_items_from_location"
              },
              "value": {
                "type": "Literal",
                "value": false
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "is_default"
              },
              "value": {
                "type": "Literal",
                "value": false
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "is_emote"
              },
              "value": {
                "type": "Literal",
                "value": false
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "sort_on"
              },
              "value": {
                "type": "Literal",
                "value": 53
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "tooltip"
              },
              "value": {
                "type": "Literal",
                "value": "You suspect the doll might say something"
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "is_drop_target"
              },
              "value": {
                "type": "Literal",
                "value": false
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "handler"
              },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "pc"
                  },
                  {
                    "type": "Identifier",
                    "name": "msg"
                  },
                  {
                    "type": "Identifier",
                    "name": "suppress_activity"
                  }
                ],
                "defaults": [],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "VariableDeclaration",
                      "declarations": [
                        {
                          "type": "VariableDeclarator",
                          "id": {
                            "type": "Identifier",
                            "name": "quote"
                          },
                          "init": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "utils"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "shuffle"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "ThisExpression"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "getQuotes"
                                      }
                                    },
                                    "arguments": []
                                  }
                                ]
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "pop"
                              }
                            },
                            "arguments": []
                          }
                        }
                      ],
                      "kind": "var"
                    },
                    {
                      "type": "IfStatement",
                      "test": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "ThisExpression"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "isOnGround"
                          }
                        },
                        "arguments": []
                      },
                      "consequent": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "pc"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "location"
                                  }
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "announce_itemstack_bubble_to_all"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "ThisExpression"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "quote"
                                },
                                {
                                  "type": "BinaryExpression",
                                  "operator": "*",
                                  "left": {
                                    "type": "Literal",
                                    "value": 10
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": 1000
                                  }
                                },
                                {
                                  "type": "Literal",
                                  "value": true
                                },
                                {
                                  "type": "ObjectExpression",
                                  "properties": [
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Identifier",
                                        "name": "offset_y"
                                      },
                                      "value": {
                                        "type": "UnaryExpression",
                                        "operator": "-",
                                        "argument": {
                                          "type": "Literal",
                                          "value": 110
                                        },
                                        "prefix": true
                                      },
                                      "kind": "init"
                                    }
                                  ]
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "alternate": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "pc"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "announce_itemstack_bubble"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "ThisExpression"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "quote"
                                },
                                {
                                  "type": "BinaryExpression",
                                  "operator": "*",
                                  "left": {
                                    "type": "Literal",
                                    "value": 10
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": 1000
                                  }
                                },
                                {
                                  "type": "Literal",
                                  "value": true
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "pc"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "sendActivity"
                          }
                        },
                        "arguments": [
                          {
                            "type": "BinaryExpression",
                            "operator": "+",
                            "left": {
                              "type": "BinaryExpression",
                              "operator": "+",
                              "left": {
                                "type": "BinaryExpression",
                                "operator": "+",
                                "left": {
                                  "type": "Literal",
                                  "value": "The doll starts to speak: "
                                },
                                "right": {
                                  "type": "Literal",
                                  "value": "\""
                                }
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "quote"
                              }
                            },
                            "right": {
                              "type": "Literal",
                              "value": "\""
                            }
                          }
                        ]
                      }
                    },
                    {
                      "type": "ReturnStatement",
                      "argument": {
                        "type": "Literal",
                        "value": true
                      }
                    }
                  ]
                },
                "rest": null,
                "generator": false,
                "expression": false
              },
              "kind": "init"
            }
          ]
        }
      }
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "getQuotes"
      },
      "params": [],
      "defaults": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "ArrayExpression",
              "elements": [
                {
                  "type": "Literal",
                  "value": "Uttering a word is like striking a note on the keyboard of the imagination."
                },
                {
                  "type": "Literal",
                  "value": "Philosophy is a battle against the bewitchment of our intelligence by means of our language."
                },
                {
                  "type": "Literal",
                  "value": "Like everything metaphysical the harmony between thought and reality is to be found in the grammar of the language."
                },
                {
                  "type": "Literal",
                  "value": "The aspects of things that are most important for us are hidden because of their simplicity and familiarity."
                },
                {
                  "type": "Literal",
                  "value": "If I have exhausted the justifications, I have reached bedrock and my spade is turned. Then I am inclined to say: 'This is simply what I do.'"
                },
                {
                  "type": "Literal",
                  "value": "Does man think because he has found that thinking pays? Does he bring his children up because he has found it pays?"
                },
                {
                  "type": "Literal",
                  "value": "If a lion could talk, we could not understand him."
                },
                {
                  "type": "Literal",
                  "value": "I am sitting with a philosopher in the garden; he says again and again 'I know that that's a tree', pointing to a tree that is near us. Someone else arrives and hears this, and I tell them: 'This fellow isn't insane. We are only doing philosophy."
                },
                {
                  "type": "Literal",
                  "value": "Whereof one cannot speak, thereof one must be silent."
                },
                {
                  "type": "Literal",
                  "value": "There are, indeed, things that cannot be put into words. They make themselves manifest. They are what is mystical."
                },
                {
                  "type": "Literal",
                  "value": "It is not <i>how things are</i> in the world that is mystical, but &nbsp;<i>that it exists</i>."
                }
              ]
            }
          }
        ]
      },
      "rest": null,
      "generator": false,
      "expression": false
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "canRubeOffer"
      },
      "params": [
        {
          "type": "Identifier",
          "name": "pc"
        },
        {
          "type": "Identifier",
          "name": "rube"
        }
      ],
      "defaults": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "IfStatement",
            "test": {
              "type": "LogicalExpression",
              "operator": "&&",
              "left": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "Identifier",
                  "name": "rube"
                },
                "property": {
                  "type": "Identifier",
                  "name": "was_summoned"
                }
              },
              "right": {
                "type": "CallExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "is_chance"
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "value": 0.1
                  }
                ]
              }
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "contents"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "pc"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "getAllContents"
                          }
                        },
                        "arguments": [
                          {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [
                              {
                                "type": "Identifier",
                                "name": "it"
                              }
                            ],
                            "defaults": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "LogicalExpression",
                                    "operator": "&&",
                                    "left": {
                                      "type": "LogicalExpression",
                                      "operator": "&&",
                                      "left": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "it"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "getBaseCost"
                                          }
                                        },
                                        "arguments": []
                                      },
                                      "right": {
                                        "type": "BinaryExpression",
                                        "operator": ">=",
                                        "left": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "it"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "getBaseCost"
                                            }
                                          },
                                          "arguments": []
                                        },
                                        "right": {
                                          "type": "Literal",
                                          "value": 1500
                                        }
                                      }
                                    },
                                    "right": {
                                      "type": "UnaryExpression",
                                      "operator": "!",
                                      "argument": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "it"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "hasTag"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "Literal",
                                            "value": "no_rube"
                                          }
                                        ]
                                      },
                                      "prefix": true
                                    }
                                  }
                                }
                              ]
                            },
                            "rest": null,
                            "generator": false,
                            "expression": false
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "num_keys"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "contents"
                      }
                    ]
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "argument": {
                          "type": "Literal",
                          "value": true
                        }
                      }
                    ]
                  },
                  "alternate": null
                }
              ]
            },
            "alternate": null
          },
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "Literal",
              "value": false
            }
          }
        ]
      },
      "rest": null,
      "generator": false,
      "expression": false
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "parent_getQuotes"
      },
      "params": [],
      "defaults": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "ArrayExpression",
              "elements": [
                {
                  "type": "Literal",
                  "value": "pls override this"
                }
              ]
            }
          }
        ]
      },
      "rest": null,
      "generator": false,
      "expression": false
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "getDescExtras"
      },
      "params": [
        {
          "type": "Identifier",
          "name": "pc"
        }
      ],
      "defaults": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "VariableDeclaration",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "out"
                },
                "init": {
                  "type": "ArrayExpression",
                  "elements": []
                }
              }
            ],
            "kind": "var"
          },
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "Identifier",
              "name": "out"
            }
          }
        ]
      },
      "rest": null,
      "generator": false,
      "expression": false
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "tags"
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": "collectible"
              },
              {
                "type": "Literal",
                "value": "doll"
              },
              {
                "type": "Literal",
                "value": "toys"
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "getAssetInfo"
      },
      "params": [],
      "defaults": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "ObjectExpression",
              "properties": [
                {
                  "type": "Property",
                  "key": {
                    "type": "Literal",
                    "value": "position"
                  },
                  "value": {
                    "type": "ObjectExpression",
                    "properties": [
                      {
                        "type": "Property",
                        "key": {
                          "type": "Literal",
                          "value": "x"
                        },
                        "value": {
                          "type": "UnaryExpression",
                          "operator": "-",
                          "argument": {
                            "type": "Literal",
                            "value": 24
                          },
                          "prefix": true
                        },
                        "kind": "init"
                      },
                      {
                        "type": "Property",
                        "key": {
                          "type": "Literal",
                          "value": "y"
                        },
                        "value": {
                          "type": "UnaryExpression",
                          "operator": "-",
                          "argument": {
                            "type": "Literal",
                            "value": 53
                          },
                          "prefix": true
                        },
                        "kind": "init"
                      },
                      {
                        "type": "Property",
                        "key": {
                          "type": "Literal",
                          "value": "w"
                        },
                        "value": {
                          "type": "Literal",
                          "value": 51
                        },
                        "kind": "init"
                      },
                      {
                        "type": "Property",
                        "key": {
                          "type": "Literal",
                          "value": "h"
                        },
                        "value": {
                          "type": "Literal",
                          "value": 53
                        },
                        "kind": "init"
                      }
                    ]
                  },
                  "kind": "init"
                },
                {
                  "type": "Property",
                  "key": {
                    "type": "Literal",
                    "value": "thumb"
                  },
                  "value": {
                    "type": "Literal",
                    "value": "iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAIaUlEQVR42s2Y+1OTZxbH/Q/Yzqyg\nIATCNSQhCeEO4SWQcFMIBsIlCEGKkUtCBJWoUONtFFQaUGnFy3jpRaVoioq6Ys12WevsyhSnuh3r\nrMs425md/WXzY3/87nkeDbW4XrozxL4z33kf3mTm+fA9zznvOVmy5P+8Rq26oEN2vcDE1i8+X/Jb\nuAbtBZ7+Ni2GHHquQbvOO9ypd9B6dl9rHpwNWT5nY5bhnQEOtGk5yAdrc7C5PoNrmyUbu1pysccq\nYEtDFjbWpfu6alIdveYsUcAB97fnY7M5A52mFDiqU2GrUqN1dTLWlSv5uqs2DR2VarTRM2uF0hVw\nwJ3v5/r6mnJAdw7JYKwGJYx58VgtxGHtyiTU6hLRUqYIPOAhm1axrTFrdhM5uL5CBbM+Eab8BA6m\nTRYhQxYGQRWBXGU4DLlxaCpNChzg9qYcx4GOfGyns8dCaymVo3lVEspzYqFPF6PbpsPxj5tw5kQL\nLp7rwMUzLQzcZ1KLA5PdPWsyPQyOHOSAfgdLM6NhqUnD6EgjpiZ78PXUNtzx9uLJ93tx/MNaGIU4\nz6LDdVanuNqNag5mr0rhCcCSgp27ovQodLUX4PaNLRzOr3t3tuPxg13kYrx3UeG2NmQKVDbo0CtR\nUyDBeoJjzjE4Fl523vp3GPHtXRfuft03D8jWD7/dhT6bbnZRAfeu0wgstF0UxupiGTrbtTAVSqEn\nODsV7M/PrMctCu31cTvX5BedHPC6pxs7W/Nhq0xBIBJklgE2UngdtgKU50tgohB/fLiBw3y4rZwX\naL/Ys7EzrWg1qNBrzZtbNDCnSR3k35QBNpvTYaL6xtxrpzrIEuPcsRbsoAzurM9EHR0BF73+PGN2\nzNzZgY76bPTZixfXwUFbvosBsoK8WpvAHdzmLIX7QC2ODNXj09NWDA5UI08ZAWNWIvq6SnHsIwvG\nqdRMnLdjb69hcQF76jNnu2vSPDYCNOulWEUFmJWVgwTFAMc+a8dhtxmlmlisVItxYHcVhgfrePiZ\ni5fpXM5MORe3FnYYVSJWaghyzijEoyQjGuuaNRzwxNEmfuYmxh3kmo2v+/dUYf8+Ewe8emkDpm87\nFQEp1jVFMk9xhhj61Cjkp4lhpS6GQd64vImD3f/LDnw3sxMXPu1Az8ZifOPtw82rmxAQuNFRU9Cl\n8zYYtBLkqyOx1pSG4f11/CyeO9vKAVktZAWarUeGG+DqK8eGTr0vYO/jw0PmuYMUOvNqNT5wruTh\nbbXmYe9u4y/eIkxfTTrx2VAzPtnV4AkY4IkjZtHA3ir31p7S2VpTKrb3lqGNAJsp1Jcu2HH7Sg++\nPNmOs/0WDNlX47SrHpNH299Nd+20moKOfNjnGxm2oatTj/XUUQ8dNGNqfCPXzbHuualLm95d6z80\nsMX7cGYC/346jdPHN1NitGHiwkGcPbZfeGdQk5NHRNcuH3IP7ra6Dg1sxtMfbuHpoyn88N01TN86\njhsTx3Bv+gvXO4G7fuWwa/LyoVNTU6NBFZpYt0GQYLezCWWCDGeO78O9P4+he32l79bVUUvA4R5/\n73F4p0bdbG3SiYOq8uN9GsUK5FF7z/SHiVE8JherClX0ygs/FXDA+zPnPcw5tm4slrnqqB9Ml4Yi\nSx7GAU8e7uVnkQMrI+YdLNPECH69aQ+TTh1UmSe1lOcm/LoIPP37Vctfvzk7v0FjsXSuRieBRhGO\nArWIQ9kspdzBjoZi/qwsJ8ZbnhPjYw2tX9XUQ/ZTvfQXdaY/3dwqrFmlUpRkxnkKUsXQKEX0T4cj\nU77C/VZw/3kyFfTowcX5kDUWJRoaS2So0sbzKU6gbtof5vGzA3jy8Dp2bW5AhSYOBs3PcH41UsPB\nOp+TR9fy4er0iRavUSudY2ApCaGQR4dwJZHeCvDe3U9cLLTmUomoXi911+gSfbV6CZiDDDBFshwZ\nFOps+bPzuMVWjY8GnTg90gdzsZKPoxW5z2BXZsWgIi8RJVlxqC1XobUl12WjMbZcI0GmLHwezq83\nl5Txfoe1KtW9pkg6W1+UyKH8dyZdaiTfvDAtiq+5UiKpkYgk+Ihnz+nvEmouitKj58PHnFLFLYcy\ndhmPjD4t5iVAmTjk5y4cgIgk/PSTT/jn3DUuSdTvRBmyULxfl4EN6wTUFCaiuiABlRRaBldBzjDH\nGEwlDU9UdlBNAzwbqth9VTbbNIyAVtBQJeJw6dIVv4CgMPoy5eFe9tlLgNEhzybBH/9xRfGvH2fx\n+NGMY+zz/QLTtHfQ9ceb+3zXJzbyg8w65m5q4420OTtHDJK5k5O0groaEZ+LWQgrn//0UUxDfDZ9\nVkAtWXFmDH1fBkEVyV1bGMbk+OV4LeCNyRHH/Zkx398eTLumvSMEtnVuYVdy+eIGakArYSiRU6jE\nPJRpiaFgdZCNnOynDgZYRq4VpIi4a4UU0pKsWK6V2fEcQh0f+hKgIibk9YDsOn++X8GcGxlu5CXA\n33z6xQby1hYBuQTGkkIVFzKrjA9x0N2XHL+MJwlzkonVRm1yJHduIeDCEDNJo5a+GdB/bdxQNOef\nM04da8bkl90E3MYhd/YZfPKYpV4Gpha/xwu2Kmq5KDkuxMMgUxKWkavLkRQTTC5Sx50WzV1kd90L\n9e1VgGmJYW8GvPNVr6i5SXOqg4bxzo4CWGiSKymRu40VyaeqjMmvLJwMODk2xM1A5dHBSJWEIlcl\nglZNY0FKFAfWPE+UpAWAsqil3hxFhC9V8haA/mvPHqNIr08QCrXSXzXoqOKCFTLxUocsOtjDQNWU\nAAyWALh7DHBhorDv5igjXC8BioMXvyOSRjHg4Lkkgk2Xhv1vwOf1Tp0QZmFQTPLIkMA2ufLI3wuU\nXN7XAf4mrhylaPbF961cHOxj8K/6/n8B5bGKqPY7A9sAAAAASUVORK5CYII="
                  },
                  "kind": "init"
                }
              ]
            }
          }
        ]
      },
      "rest": null,
      "generator": false,
      "expression": false
    },
    {
      "type": "EmptyStatement"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "itemDef"
          },
          "init": {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "label"
                },
                "value": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "ThisExpression"
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "label"
                  }
                },
                "kind": "init"
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "name_plural"
                },
                "value": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "ThisExpression"
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "name_plural"
                  }
                },
                "kind": "init"
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "stackmax"
                },
                "value": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "ThisExpression"
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "stackmax"
                  }
                },
                "kind": "init"
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "is_hidden"
                },
                "value": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "ThisExpression"
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "is_hidden"
                  }
                },
                "kind": "init"
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "has_info"
                },
                "value": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "ThisExpression"
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "has_info"
                  }
                },
                "kind": "init"
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "adjusted_scale"
                },
                "value": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "ThisExpression"
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "adjusted_scale"
                  }
                },
                "kind": "init"
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "asset_swf_v"
                },
                "value": {
                  "type": "Literal",
                  "value": "http://c2.glitch.bz/items/2012-04/doll_wittgenstein-1334267344.swf"
                },
                "kind": "init"
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "admin_props"
                },
                "value": {
                  "type": "Literal",
                  "value": false
                },
                "kind": "init"
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "obey_physics"
                },
                "value": {
                  "type": "Literal",
                  "value": true
                },
                "kind": "init"
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "in_background"
                },
                "value": {
                  "type": "Literal",
                  "value": false
                },
                "kind": "init"
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "in_foreground"
                },
                "value": {
                  "type": "Literal",
                  "value": false
                },
                "kind": "init"
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "has_status"
                },
                "value": {
                  "type": "Literal",
                  "value": false
                },
                "kind": "init"
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "not_selectable"
                },
                "value": {
                  "type": "Literal",
                  "value": false
                },
                "kind": "init"
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "MemberExpression",
        "computed": false,
        "object": {
          "type": "ThisExpression"
        },
        "property": {
          "type": "Identifier",
          "name": "consumable_label_single"
        }
      },
      "consequent": {
        "type": "ExpressionStatement",
        "expression": {
          "type": "AssignmentExpression",
          "operator": "=",
          "left": {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "Identifier",
              "name": "itemDef"
            },
            "property": {
              "type": "Identifier",
              "name": "consumable_label_single"
            }
          },
          "right": {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "ThisExpression"
            },
            "property": {
              "type": "Identifier",
              "name": "consumable_label_single"
            }
          }
        }
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "MemberExpression",
        "computed": false,
        "object": {
          "type": "ThisExpression"
        },
        "property": {
          "type": "Identifier",
          "name": "consumable_label_plural"
        }
      },
      "consequent": {
        "type": "ExpressionStatement",
        "expression": {
          "type": "AssignmentExpression",
          "operator": "=",
          "left": {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "Identifier",
              "name": "itemDef"
            },
            "property": {
              "type": "Identifier",
              "name": "consumable_label_plural"
            }
          },
          "right": {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "ThisExpression"
            },
            "property": {
              "type": "Identifier",
              "name": "consumable_label_plural"
            }
          }
        }
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "itemDef"
          },
          "property": {
            "type": "Identifier",
            "name": "verbs"
          }
        },
        "right": {
          "type": "ObjectExpression",
          "properties": []
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "itemDef"
          },
          "property": {
            "type": "Identifier",
            "name": "hasConditionalVerbs"
          }
        },
        "right": {
          "type": "Literal",
          "value": 1
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "itemDef"
          },
          "property": {
            "type": "Identifier",
            "name": "emote_verbs"
          }
        },
        "right": {
          "type": "ObjectExpression",
          "properties": []
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "itemDef"
          },
          "property": {
            "type": "Identifier",
            "name": "hasConditionalEmoteVerbs"
          }
        },
        "right": {
          "type": "Literal",
          "value": 0
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "itemDef"
          },
          "property": {
            "type": "Identifier",
            "name": "tags"
          }
        },
        "right": {
          "type": "ArrayExpression",
          "elements": [
            {
              "type": "Literal",
              "value": "collectible"
            },
            {
              "type": "Literal",
              "value": "doll"
            },
            {
              "type": "Literal",
              "value": "toys"
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "itemDef"
          },
          "property": {
            "type": "Identifier",
            "name": "keys_in_location"
          }
        },
        "right": {
          "type": "ObjectExpression",
          "properties": [
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "p"
              },
              "value": {
                "type": "Literal",
                "value": "pickup"
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "u"
              },
              "value": {
                "type": "Literal",
                "value": "pull_string"
              },
              "kind": "init"
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "itemDef"
          },
          "property": {
            "type": "Identifier",
            "name": "keys_in_pack"
          }
        },
        "right": {
          "type": "ObjectExpression",
          "properties": [
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "r"
              },
              "value": {
                "type": "Literal",
                "value": "drop"
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "g"
              },
              "value": {
                "type": "Literal",
                "value": "give"
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "u"
              },
              "value": {
                "type": "Literal",
                "value": "pull_string"
              },
              "kind": "init"
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "log"
          },
          "property": {
            "type": "Identifier",
            "name": "info"
          }
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "doll_wittgenstein.js LOADED"
          }
        ]
      }
    }
  ]
}
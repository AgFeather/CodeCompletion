{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "module"
          },
          "property": {
            "type": "Identifier",
            "name": "exports"
          }
        },
        "right": {
          "type": "FunctionExpression",
          "id": null,
          "params": [
            {
              "type": "Identifier",
              "name": "grunt"
            }
          ],
          "defaults": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "Literal",
                  "value": "use strict"
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "grunt"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "config"
                      }
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "set"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": "concat"
                    },
                    {
                      "type": "ObjectExpression",
                      "properties": [
                        {
                          "type": "Property",
                          "key": {
                            "type": "Identifier",
                            "name": "options"
                          },
                          "value": {
                            "type": "ObjectExpression",
                            "properties": [
                              {
                                "type": "Property",
                                "key": {
                                  "type": "Identifier",
                                  "name": "banner"
                                },
                                "value": {
                                  "type": "BinaryExpression",
                                  "operator": "+",
                                  "left": {
                                    "type": "BinaryExpression",
                                    "operator": "+",
                                    "left": {
                                      "type": "BinaryExpression",
                                      "operator": "+",
                                      "left": {
                                        "type": "Literal",
                                        "value": "/*! <%= meta.pkg.name %> - v<%= meta.pkg.version %>\n"
                                      },
                                      "right": {
                                        "type": "Literal",
                                        "value": " *  License: <%= meta.pkg.license %>\n"
                                      }
                                    },
                                    "right": {
                                      "type": "Literal",
                                      "value": " *  Date: <%= grunt.template.today('yyyy-mm-dd') %>\n"
                                    }
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": " */\n"
                                  }
                                },
                                "kind": "init"
                              }
                            ]
                          },
                          "kind": "init"
                        },
                        {
                          "type": "Property",
                          "key": {
                            "type": "Identifier",
                            "name": "test"
                          },
                          "value": {
                            "type": "ObjectExpression",
                            "properties": [
                              {
                                "type": "Property",
                                "key": {
                                  "type": "Identifier",
                                  "name": "files"
                                },
                                "value": {
                                  "type": "ObjectExpression",
                                  "properties": [
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Literal",
                                        "value": "d3.chart.test.js"
                                      },
                                      "value": {
                                        "type": "ArrayExpression",
                                        "elements": [
                                          {
                                            "type": "Literal",
                                            "value": "src/wrapper/start.frag"
                                          },
                                          {
                                            "type": "Literal",
                                            "value": "<%= meta.srcFiles %>"
                                          },
                                          {
                                            "type": "Literal",
                                            "value": "src/wrapper/end.frag"
                                          }
                                        ]
                                      },
                                      "kind": "init"
                                    }
                                  ]
                                },
                                "kind": "init"
                              }
                            ]
                          },
                          "kind": "init"
                        },
                        {
                          "type": "Property",
                          "key": {
                            "type": "Identifier",
                            "name": "release"
                          },
                          "value": {
                            "type": "ObjectExpression",
                            "properties": [
                              {
                                "type": "Property",
                                "key": {
                                  "type": "Identifier",
                                  "name": "files"
                                },
                                "value": {
                                  "type": "ObjectExpression",
                                  "properties": [
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Literal",
                                        "value": "d3.chart.js"
                                      },
                                      "value": {
                                        "type": "ArrayExpression",
                                        "elements": [
                                          {
                                            "type": "Literal",
                                            "value": "src/wrapper/start.frag"
                                          },
                                          {
                                            "type": "Literal",
                                            "value": "<%= meta.srcFiles %>"
                                          },
                                          {
                                            "type": "Literal",
                                            "value": "src/wrapper/end.frag"
                                          }
                                        ]
                                      },
                                      "kind": "init"
                                    }
                                  ]
                                },
                                "kind": "init"
                              }
                            ]
                          },
                          "kind": "init"
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "grunt"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "loadNpmTasks"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": "grunt-contrib-concat"
                    }
                  ]
                }
              }
            ]
          },
          "rest": null,
          "generator": false,
          "expression": false
        }
      }
    }
  ]
}
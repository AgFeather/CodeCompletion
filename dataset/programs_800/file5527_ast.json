{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "define"
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "dojox/charting/axis2d/Default"
          },
          {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": "dojo/_base/lang"
              },
              {
                "type": "Literal",
                "value": "dojo/_base/array"
              },
              {
                "type": "Literal",
                "value": "dojo/_base/sniff"
              },
              {
                "type": "Literal",
                "value": "dojo/_base/declare"
              },
              {
                "type": "Literal",
                "value": "dojo/_base/connect"
              },
              {
                "type": "Literal",
                "value": "dojo/_base/html"
              },
              {
                "type": "Literal",
                "value": "dojo/dom-geometry"
              },
              {
                "type": "Literal",
                "value": "./Invisible"
              },
              {
                "type": "Literal",
                "value": "../scaler/common"
              },
              {
                "type": "Literal",
                "value": "../scaler/linear"
              },
              {
                "type": "Literal",
                "value": "./common"
              },
              {
                "type": "Literal",
                "value": "dojox/gfx"
              },
              {
                "type": "Literal",
                "value": "dojox/lang/utils"
              }
            ]
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "params": [
              {
                "type": "Identifier",
                "name": "lang"
              },
              {
                "type": "Identifier",
                "name": "arr"
              },
              {
                "type": "Identifier",
                "name": "has"
              },
              {
                "type": "Identifier",
                "name": "declare"
              },
              {
                "type": "Identifier",
                "name": "connect"
              },
              {
                "type": "Identifier",
                "name": "html"
              },
              {
                "type": "Identifier",
                "name": "domGeom"
              },
              {
                "type": "Identifier",
                "name": "Invisible"
              },
              {
                "type": "Identifier",
                "name": "scommon"
              },
              {
                "type": "Identifier",
                "name": "lin"
              },
              {
                "type": "Identifier",
                "name": "acommon"
              },
              {
                "type": "Identifier",
                "name": "g"
              },
              {
                "type": "Identifier",
                "name": "du"
              }
            ],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "labelGap"
                      },
                      "init": {
                        "type": "Literal",
                        "value": 4
                      }
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "centerAnchorLimit"
                      },
                      "init": {
                        "type": "Literal",
                        "value": 45
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "declare"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": "dojox.charting.axis2d.Default"
                      },
                      {
                        "type": "Identifier",
                        "name": "Invisible"
                      },
                      {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "defaultParams"
                            },
                            "value": {
                              "type": "ObjectExpression",
                              "properties": [
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "vertical"
                                  },
                                  "value": {
                                    "type": "Literal",
                                    "value": false
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "fixUpper"
                                  },
                                  "value": {
                                    "type": "Literal",
                                    "value": "none"
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "fixLower"
                                  },
                                  "value": {
                                    "type": "Literal",
                                    "value": "none"
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "natural"
                                  },
                                  "value": {
                                    "type": "Literal",
                                    "value": false
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "leftBottom"
                                  },
                                  "value": {
                                    "type": "Literal",
                                    "value": true
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "includeZero"
                                  },
                                  "value": {
                                    "type": "Literal",
                                    "value": false
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "fixed"
                                  },
                                  "value": {
                                    "type": "Literal",
                                    "value": true
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "majorLabels"
                                  },
                                  "value": {
                                    "type": "Literal",
                                    "value": true
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "minorTicks"
                                  },
                                  "value": {
                                    "type": "Literal",
                                    "value": true
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "minorLabels"
                                  },
                                  "value": {
                                    "type": "Literal",
                                    "value": true
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "microTicks"
                                  },
                                  "value": {
                                    "type": "Literal",
                                    "value": false
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "rotation"
                                  },
                                  "value": {
                                    "type": "Literal",
                                    "value": 0
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "htmlLabels"
                                  },
                                  "value": {
                                    "type": "Literal",
                                    "value": true
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "enableCache"
                                  },
                                  "value": {
                                    "type": "Literal",
                                    "value": false
                                  },
                                  "kind": "init"
                                }
                              ]
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "optionalParams"
                            },
                            "value": {
                              "type": "ObjectExpression",
                              "properties": [
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "min"
                                  },
                                  "value": {
                                    "type": "Literal",
                                    "value": 0
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "max"
                                  },
                                  "value": {
                                    "type": "Literal",
                                    "value": 1
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "from"
                                  },
                                  "value": {
                                    "type": "Literal",
                                    "value": 0
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "to"
                                  },
                                  "value": {
                                    "type": "Literal",
                                    "value": 1
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "majorTickStep"
                                  },
                                  "value": {
                                    "type": "Literal",
                                    "value": 4
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "minorTickStep"
                                  },
                                  "value": {
                                    "type": "Literal",
                                    "value": 2
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "microTickStep"
                                  },
                                  "value": {
                                    "type": "Literal",
                                    "value": 1
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "labels"
                                  },
                                  "value": {
                                    "type": "ArrayExpression",
                                    "elements": []
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "labelFunc"
                                  },
                                  "value": {
                                    "type": "Literal",
                                    "value": null
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "maxLabelSize"
                                  },
                                  "value": {
                                    "type": "Literal",
                                    "value": 0
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "maxLabelCharCount"
                                  },
                                  "value": {
                                    "type": "Literal",
                                    "value": 0
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "trailingSymbol"
                                  },
                                  "value": {
                                    "type": "Literal",
                                    "value": null
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "stroke"
                                  },
                                  "value": {
                                    "type": "ObjectExpression",
                                    "properties": []
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "majorTick"
                                  },
                                  "value": {
                                    "type": "ObjectExpression",
                                    "properties": []
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "minorTick"
                                  },
                                  "value": {
                                    "type": "ObjectExpression",
                                    "properties": []
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "microTick"
                                  },
                                  "value": {
                                    "type": "ObjectExpression",
                                    "properties": []
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "tick"
                                  },
                                  "value": {
                                    "type": "ObjectExpression",
                                    "properties": []
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "font"
                                  },
                                  "value": {
                                    "type": "Literal",
                                    "value": ""
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "fontColor"
                                  },
                                  "value": {
                                    "type": "Literal",
                                    "value": ""
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "title"
                                  },
                                  "value": {
                                    "type": "Literal",
                                    "value": ""
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "titleGap"
                                  },
                                  "value": {
                                    "type": "Literal",
                                    "value": 0
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "titleFont"
                                  },
                                  "value": {
                                    "type": "Literal",
                                    "value": ""
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "titleFontColor"
                                  },
                                  "value": {
                                    "type": "Literal",
                                    "value": ""
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "titleOrientation"
                                  },
                                  "value": {
                                    "type": "Literal",
                                    "value": ""
                                  },
                                  "kind": "init"
                                }
                              ]
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "constructor"
                            },
                            "value": {
                              "type": "FunctionExpression",
                              "id": null,
                              "params": [
                                {
                                  "type": "Identifier",
                                  "name": "chart"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "kwArgs"
                                }
                              ],
                              "defaults": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "ThisExpression"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "opt"
                                        }
                                      },
                                      "right": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "lang"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "clone"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "defaultParams"
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "du"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "updateWithObject"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "ThisExpression"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "opt"
                                          }
                                        },
                                        {
                                          "type": "Identifier",
                                          "name": "kwArgs"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "du"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "updateWithPattern"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "ThisExpression"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "opt"
                                          }
                                        },
                                        {
                                          "type": "Identifier",
                                          "name": "kwArgs"
                                        },
                                        {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "ThisExpression"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "optionalParams"
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "IfStatement",
                                    "test": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "ThisExpression"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "opt"
                                        }
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "enableCache"
                                      }
                                    },
                                    "consequent": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "ThisExpression"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "_textFreePool"
                                              }
                                            },
                                            "right": {
                                              "type": "ArrayExpression",
                                              "elements": []
                                            }
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "ThisExpression"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "_lineFreePool"
                                              }
                                            },
                                            "right": {
                                              "type": "ArrayExpression",
                                              "elements": []
                                            }
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "ThisExpression"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "_textUsePool"
                                              }
                                            },
                                            "right": {
                                              "type": "ArrayExpression",
                                              "elements": []
                                            }
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "ThisExpression"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "_lineUsePool"
                                              }
                                            },
                                            "right": {
                                              "type": "ArrayExpression",
                                              "elements": []
                                            }
                                          }
                                        }
                                      ]
                                    },
                                    "alternate": null
                                  }
                                ]
                              },
                              "rest": null,
                              "generator": false,
                              "expression": false
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "getOffsets"
                            },
                            "value": {
                              "type": "FunctionExpression",
                              "id": null,
                              "params": [],
                              "defaults": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "s"
                                        },
                                        "init": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "ThisExpression"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "scaler"
                                          }
                                        }
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "offsets"
                                        },
                                        "init": {
                                          "type": "ObjectExpression",
                                          "properties": [
                                            {
                                              "type": "Property",
                                              "key": {
                                                "type": "Identifier",
                                                "name": "l"
                                              },
                                              "value": {
                                                "type": "Literal",
                                                "value": 0
                                              },
                                              "kind": "init"
                                            },
                                            {
                                              "type": "Property",
                                              "key": {
                                                "type": "Identifier",
                                                "name": "r"
                                              },
                                              "value": {
                                                "type": "Literal",
                                                "value": 0
                                              },
                                              "kind": "init"
                                            },
                                            {
                                              "type": "Property",
                                              "key": {
                                                "type": "Identifier",
                                                "name": "t"
                                              },
                                              "value": {
                                                "type": "Literal",
                                                "value": 0
                                              },
                                              "kind": "init"
                                            },
                                            {
                                              "type": "Property",
                                              "key": {
                                                "type": "Identifier",
                                                "name": "b"
                                              },
                                              "value": {
                                                "type": "Literal",
                                                "value": 0
                                              },
                                              "kind": "init"
                                            }
                                          ]
                                        }
                                      }
                                    ],
                                    "kind": "var"
                                  },
                                  {
                                    "type": "IfStatement",
                                    "test": {
                                      "type": "UnaryExpression",
                                      "operator": "!",
                                      "argument": {
                                        "type": "Identifier",
                                        "name": "s"
                                      },
                                      "prefix": true
                                    },
                                    "consequent": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "ReturnStatement",
                                          "argument": {
                                            "type": "Identifier",
                                            "name": "offsets"
                                          }
                                        }
                                      ]
                                    },
                                    "alternate": null
                                  },
                                  {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "o"
                                        },
                                        "init": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "ThisExpression"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "opt"
                                          }
                                        }
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "labelWidth"
                                        },
                                        "init": {
                                          "type": "Literal",
                                          "value": 0
                                        }
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "a"
                                        },
                                        "init": null
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "b"
                                        },
                                        "init": null
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "c"
                                        },
                                        "init": null
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "d"
                                        },
                                        "init": null
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "gl"
                                        },
                                        "init": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "scommon"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "getNumericLabel"
                                          }
                                        }
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "offset"
                                        },
                                        "init": {
                                          "type": "Literal",
                                          "value": 0
                                        }
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "ma"
                                        },
                                        "init": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "s"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "major"
                                          }
                                        }
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "mi"
                                        },
                                        "init": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "s"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "minor"
                                          }
                                        }
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "ta"
                                        },
                                        "init": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "ThisExpression"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "chart"
                                              }
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "theme"
                                            }
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "axis"
                                          }
                                        }
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "taFont"
                                        },
                                        "init": {
                                          "type": "LogicalExpression",
                                          "operator": "||",
                                          "left": {
                                            "type": "LogicalExpression",
                                            "operator": "||",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "o"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "font"
                                              }
                                            },
                                            "right": {
                                              "type": "LogicalExpression",
                                              "operator": "&&",
                                              "left": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "ta"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "majorTick"
                                                }
                                              },
                                              "right": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "ta"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "majorTick"
                                                  }
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "font"
                                                }
                                              }
                                            }
                                          },
                                          "right": {
                                            "type": "LogicalExpression",
                                            "operator": "&&",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "ta"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "tick"
                                              }
                                            },
                                            "right": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "ta"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "tick"
                                                }
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "font"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "taTitleFont"
                                        },
                                        "init": {
                                          "type": "LogicalExpression",
                                          "operator": "||",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "o"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "titleFont"
                                            }
                                          },
                                          "right": {
                                            "type": "LogicalExpression",
                                            "operator": "&&",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "ta"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "tick"
                                              }
                                            },
                                            "right": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "ta"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "tick"
                                                }
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "titleFont"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "taTitleGap"
                                        },
                                        "init": {
                                          "type": "ConditionalExpression",
                                          "test": {
                                            "type": "BinaryExpression",
                                            "operator": "==",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "o"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "titleGap"
                                              }
                                            },
                                            "right": {
                                              "type": "Literal",
                                              "value": 0
                                            }
                                          },
                                          "consequent": {
                                            "type": "Literal",
                                            "value": 0
                                          },
                                          "alternate": {
                                            "type": "LogicalExpression",
                                            "operator": "||",
                                            "left": {
                                              "type": "LogicalExpression",
                                              "operator": "||",
                                              "left": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "o"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "titleGap"
                                                }
                                              },
                                              "right": {
                                                "type": "LogicalExpression",
                                                "operator": "&&",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "ta"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "tick"
                                                  }
                                                },
                                                "right": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "ta"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "tick"
                                                    }
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "titleGap"
                                                  }
                                                }
                                              }
                                            },
                                            "right": {
                                              "type": "Literal",
                                              "value": 15
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "taMajorTick"
                                        },
                                        "init": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "ThisExpression"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "chart"
                                                }
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "theme"
                                              }
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "getTick"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Literal",
                                              "value": "major"
                                            },
                                            {
                                              "type": "Identifier",
                                              "name": "o"
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "taMinorTick"
                                        },
                                        "init": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "ThisExpression"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "chart"
                                                }
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "theme"
                                              }
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "getTick"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Literal",
                                              "value": "minor"
                                            },
                                            {
                                              "type": "Identifier",
                                              "name": "o"
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "size"
                                        },
                                        "init": {
                                          "type": "ConditionalExpression",
                                          "test": {
                                            "type": "Identifier",
                                            "name": "taFont"
                                          },
                                          "consequent": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "g"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "normalizedLength"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "g"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "splitFontString"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "taFont"
                                                    }
                                                  ]
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "size"
                                                }
                                              }
                                            ]
                                          },
                                          "alternate": {
                                            "type": "Literal",
                                            "value": 0
                                          }
                                        }
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "tsize"
                                        },
                                        "init": {
                                          "type": "ConditionalExpression",
                                          "test": {
                                            "type": "Identifier",
                                            "name": "taTitleFont"
                                          },
                                          "consequent": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "g"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "normalizedLength"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "g"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "splitFontString"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "taTitleFont"
                                                    }
                                                  ]
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "size"
                                                }
                                              }
                                            ]
                                          },
                                          "alternate": {
                                            "type": "Literal",
                                            "value": 0
                                          }
                                        }
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "rotation"
                                        },
                                        "init": {
                                          "type": "BinaryExpression",
                                          "operator": "%",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "o"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "rotation"
                                            }
                                          },
                                          "right": {
                                            "type": "Literal",
                                            "value": 360
                                          }
                                        }
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "leftBottom"
                                        },
                                        "init": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "o"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "leftBottom"
                                          }
                                        }
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "cosr"
                                        },
                                        "init": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "Math"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "abs"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "Math"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "cos"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "BinaryExpression",
                                                  "operator": "/",
                                                  "left": {
                                                    "type": "BinaryExpression",
                                                    "operator": "*",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "rotation"
                                                    },
                                                    "right": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "Math"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "PI"
                                                      }
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "Literal",
                                                    "value": 180
                                                  }
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "sinr"
                                        },
                                        "init": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "Math"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "abs"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "Math"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "sin"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "BinaryExpression",
                                                  "operator": "/",
                                                  "left": {
                                                    "type": "BinaryExpression",
                                                    "operator": "*",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "rotation"
                                                    },
                                                    "right": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "Math"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "PI"
                                                      }
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "Literal",
                                                    "value": 180
                                                  }
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      }
                                    ],
                                    "kind": "var"
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "ThisExpression"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "trailingSymbol"
                                        }
                                      },
                                      "right": {
                                        "type": "ConditionalExpression",
                                        "test": {
                                          "type": "LogicalExpression",
                                          "operator": "||",
                                          "left": {
                                            "type": "BinaryExpression",
                                            "operator": "===",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "o"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "trailingSymbol"
                                              }
                                            },
                                            "right": {
                                              "type": "Identifier",
                                              "name": "undefined"
                                            }
                                          },
                                          "right": {
                                            "type": "BinaryExpression",
                                            "operator": "===",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "o"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "trailingSymbol"
                                              }
                                            },
                                            "right": {
                                              "type": "Literal",
                                              "value": null
                                            }
                                          }
                                        },
                                        "consequent": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "ThisExpression"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "trailingSymbol"
                                          }
                                        },
                                        "alternate": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "o"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "trailingSymbol"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "type": "IfStatement",
                                    "test": {
                                      "type": "BinaryExpression",
                                      "operator": "<",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "rotation"
                                      },
                                      "right": {
                                        "type": "Literal",
                                        "value": 0
                                      }
                                    },
                                    "consequent": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "+=",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "rotation"
                                            },
                                            "right": {
                                              "type": "Literal",
                                              "value": 360
                                            }
                                          }
                                        }
                                      ]
                                    },
                                    "alternate": null
                                  },
                                  {
                                    "type": "IfStatement",
                                    "test": {
                                      "type": "Identifier",
                                      "name": "size"
                                    },
                                    "consequent": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "IfStatement",
                                          "test": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "labels"
                                            }
                                          },
                                          "consequent": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "AssignmentExpression",
                                                  "operator": "=",
                                                  "left": {
                                                    "type": "Identifier",
                                                    "name": "labelWidth"
                                                  },
                                                  "right": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "ThisExpression"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "_groupLabelWidth"
                                                      }
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "labels"
                                                        }
                                                      },
                                                      {
                                                        "type": "Identifier",
                                                        "name": "taFont"
                                                      },
                                                      {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "o"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "maxLabelCharCount"
                                                        }
                                                      }
                                                    ]
                                                  }
                                                }
                                              }
                                            ]
                                          },
                                          "alternate": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "AssignmentExpression",
                                                  "operator": "=",
                                                  "left": {
                                                    "type": "Identifier",
                                                    "name": "labelWidth"
                                                  },
                                                  "right": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "ThisExpression"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "_groupLabelWidth"
                                                      }
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "ArrayExpression",
                                                        "elements": [
                                                          {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "Identifier",
                                                              "name": "gl"
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "ma"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "start"
                                                                }
                                                              },
                                                              {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "ma"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "prec"
                                                                }
                                                              },
                                                              {
                                                                "type": "Identifier",
                                                                "name": "o"
                                                              }
                                                            ]
                                                          },
                                                          {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "Identifier",
                                                              "name": "gl"
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "ma"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "start"
                                                                  }
                                                                },
                                                                "right": {
                                                                  "type": "BinaryExpression",
                                                                  "operator": "*",
                                                                  "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "ma"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "count"
                                                                    }
                                                                  },
                                                                  "right": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "ma"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "tick"
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "ma"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "prec"
                                                                }
                                                              },
                                                              {
                                                                "type": "Identifier",
                                                                "name": "o"
                                                              }
                                                            ]
                                                          },
                                                          {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "Identifier",
                                                              "name": "gl"
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "mi"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "start"
                                                                }
                                                              },
                                                              {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "mi"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "prec"
                                                                }
                                                              },
                                                              {
                                                                "type": "Identifier",
                                                                "name": "o"
                                                              }
                                                            ]
                                                          },
                                                          {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "Identifier",
                                                              "name": "gl"
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "mi"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "start"
                                                                  }
                                                                },
                                                                "right": {
                                                                  "type": "BinaryExpression",
                                                                  "operator": "*",
                                                                  "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "mi"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "count"
                                                                    }
                                                                  },
                                                                  "right": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "mi"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "tick"
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "mi"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "prec"
                                                                }
                                                              },
                                                              {
                                                                "type": "Identifier",
                                                                "name": "o"
                                                              }
                                                            ]
                                                          }
                                                        ]
                                                      },
                                                      {
                                                        "type": "Identifier",
                                                        "name": "taFont"
                                                      },
                                                      {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "o"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "maxLabelCharCount"
                                                        }
                                                      }
                                                    ]
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "labelWidth"
                                            },
                                            "right": {
                                              "type": "ConditionalExpression",
                                              "test": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "o"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "maxLabelSize"
                                                }
                                              },
                                              "consequent": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "Math"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "min"
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "o"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "maxLabelSize"
                                                    }
                                                  },
                                                  {
                                                    "type": "Identifier",
                                                    "name": "labelWidth"
                                                  }
                                                ]
                                              },
                                              "alternate": {
                                                "type": "Identifier",
                                                "name": "labelWidth"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "IfStatement",
                                          "test": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "vertical"
                                            }
                                          },
                                          "consequent": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "VariableDeclaration",
                                                "declarations": [
                                                  {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                      "type": "Identifier",
                                                      "name": "side"
                                                    },
                                                    "init": {
                                                      "type": "ConditionalExpression",
                                                      "test": {
                                                        "type": "Identifier",
                                                        "name": "leftBottom"
                                                      },
                                                      "consequent": {
                                                        "type": "Literal",
                                                        "value": "l"
                                                      },
                                                      "alternate": {
                                                        "type": "Literal",
                                                        "value": "r"
                                                      }
                                                    }
                                                  }
                                                ],
                                                "kind": "var"
                                              },
                                              {
                                                "type": "SwitchStatement",
                                                "discriminant": {
                                                  "type": "Identifier",
                                                  "name": "rotation"
                                                },
                                                "cases": [
                                                  {
                                                    "type": "SwitchCase",
                                                    "test": {
                                                      "type": "Literal",
                                                      "value": 0
                                                    },
                                                    "consequent": []
                                                  },
                                                  {
                                                    "type": "SwitchCase",
                                                    "test": {
                                                      "type": "Literal",
                                                      "value": 180
                                                    },
                                                    "consequent": [
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "AssignmentExpression",
                                                          "operator": "=",
                                                          "left": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "offsets"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "side"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Identifier",
                                                            "name": "labelWidth"
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "AssignmentExpression",
                                                          "operator": "=",
                                                          "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "offsets"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "t"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "offsets"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "b"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "BinaryExpression",
                                                              "operator": "/",
                                                              "left": {
                                                                "type": "Identifier",
                                                                "name": "size"
                                                              },
                                                              "right": {
                                                                "type": "Literal",
                                                                "value": 2
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "type": "BreakStatement",
                                                        "label": null
                                                      }
                                                    ]
                                                  },
                                                  {
                                                    "type": "SwitchCase",
                                                    "test": {
                                                      "type": "Literal",
                                                      "value": 90
                                                    },
                                                    "consequent": []
                                                  },
                                                  {
                                                    "type": "SwitchCase",
                                                    "test": {
                                                      "type": "Literal",
                                                      "value": 270
                                                    },
                                                    "consequent": [
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "AssignmentExpression",
                                                          "operator": "=",
                                                          "left": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "offsets"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "side"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Identifier",
                                                            "name": "size"
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "AssignmentExpression",
                                                          "operator": "=",
                                                          "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "offsets"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "t"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "offsets"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "b"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "BinaryExpression",
                                                              "operator": "/",
                                                              "left": {
                                                                "type": "Identifier",
                                                                "name": "labelWidth"
                                                              },
                                                              "right": {
                                                                "type": "Literal",
                                                                "value": 2
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "type": "BreakStatement",
                                                        "label": null
                                                      }
                                                    ]
                                                  },
                                                  {
                                                    "type": "SwitchCase",
                                                    "test": null,
                                                    "consequent": [
                                                      {
                                                        "type": "IfStatement",
                                                        "test": {
                                                          "type": "LogicalExpression",
                                                          "operator": "||",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "<=",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "rotation"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "centerAnchorLimit"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "LogicalExpression",
                                                            "operator": "&&",
                                                            "left": {
                                                              "type": "BinaryExpression",
                                                              "operator": "<",
                                                              "left": {
                                                                "type": "Literal",
                                                                "value": 180
                                                              },
                                                              "right": {
                                                                "type": "Identifier",
                                                                "name": "rotation"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "BinaryExpression",
                                                              "operator": "<=",
                                                              "left": {
                                                                "type": "Identifier",
                                                                "name": "rotation"
                                                              },
                                                              "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                  "type": "Literal",
                                                                  "value": 180
                                                                },
                                                                "right": {
                                                                  "type": "Identifier",
                                                                  "name": "centerAnchorLimit"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "consequent": {
                                                          "type": "BlockStatement",
                                                          "body": [
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "expression": {
                                                                "type": "AssignmentExpression",
                                                                "operator": "=",
                                                                "left": {
                                                                  "type": "MemberExpression",
                                                                  "computed": true,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "offsets"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "side"
                                                                  }
                                                                },
                                                                "right": {
                                                                  "type": "BinaryExpression",
                                                                  "operator": "+",
                                                                  "left": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "/",
                                                                    "left": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "*",
                                                                      "left": {
                                                                        "type": "Identifier",
                                                                        "name": "size"
                                                                      },
                                                                      "right": {
                                                                        "type": "Identifier",
                                                                        "name": "sinr"
                                                                      }
                                                                    },
                                                                    "right": {
                                                                      "type": "Literal",
                                                                      "value": 2
                                                                    }
                                                                  },
                                                                  "right": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "*",
                                                                    "left": {
                                                                      "type": "Identifier",
                                                                      "name": "labelWidth"
                                                                    },
                                                                    "right": {
                                                                      "type": "Identifier",
                                                                      "name": "cosr"
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            },
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "expression": {
                                                                "type": "AssignmentExpression",
                                                                "operator": "=",
                                                                "left": {
                                                                  "type": "MemberExpression",
                                                                  "computed": true,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "offsets"
                                                                  },
                                                                  "property": {
                                                                    "type": "ConditionalExpression",
                                                                    "test": {
                                                                      "type": "Identifier",
                                                                      "name": "leftBottom"
                                                                    },
                                                                    "consequent": {
                                                                      "type": "Literal",
                                                                      "value": "t"
                                                                    },
                                                                    "alternate": {
                                                                      "type": "Literal",
                                                                      "value": "b"
                                                                    }
                                                                  }
                                                                },
                                                                "right": {
                                                                  "type": "BinaryExpression",
                                                                  "operator": "+",
                                                                  "left": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "/",
                                                                    "left": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "*",
                                                                      "left": {
                                                                        "type": "Identifier",
                                                                        "name": "size"
                                                                      },
                                                                      "right": {
                                                                        "type": "Identifier",
                                                                        "name": "cosr"
                                                                      }
                                                                    },
                                                                    "right": {
                                                                      "type": "Literal",
                                                                      "value": 2
                                                                    }
                                                                  },
                                                                  "right": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "*",
                                                                    "left": {
                                                                      "type": "Identifier",
                                                                      "name": "labelWidth"
                                                                    },
                                                                    "right": {
                                                                      "type": "Identifier",
                                                                      "name": "sinr"
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            },
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "expression": {
                                                                "type": "AssignmentExpression",
                                                                "operator": "=",
                                                                "left": {
                                                                  "type": "MemberExpression",
                                                                  "computed": true,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "offsets"
                                                                  },
                                                                  "property": {
                                                                    "type": "ConditionalExpression",
                                                                    "test": {
                                                                      "type": "Identifier",
                                                                      "name": "leftBottom"
                                                                    },
                                                                    "consequent": {
                                                                      "type": "Literal",
                                                                      "value": "b"
                                                                    },
                                                                    "alternate": {
                                                                      "type": "Literal",
                                                                      "value": "t"
                                                                    }
                                                                  }
                                                                },
                                                                "right": {
                                                                  "type": "BinaryExpression",
                                                                  "operator": "/",
                                                                  "left": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "*",
                                                                    "left": {
                                                                      "type": "Identifier",
                                                                      "name": "size"
                                                                    },
                                                                    "right": {
                                                                      "type": "Identifier",
                                                                      "name": "cosr"
                                                                    }
                                                                  },
                                                                  "right": {
                                                                    "type": "Literal",
                                                                    "value": 2
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        },
                                                        "alternate": {
                                                          "type": "IfStatement",
                                                          "test": {
                                                            "type": "LogicalExpression",
                                                            "operator": "||",
                                                            "left": {
                                                              "type": "BinaryExpression",
                                                              "operator": ">",
                                                              "left": {
                                                                "type": "Identifier",
                                                                "name": "rotation"
                                                              },
                                                              "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "-",
                                                                "left": {
                                                                  "type": "Literal",
                                                                  "value": 360
                                                                },
                                                                "right": {
                                                                  "type": "Identifier",
                                                                  "name": "centerAnchorLimit"
                                                                }
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "LogicalExpression",
                                                              "operator": "&&",
                                                              "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": ">",
                                                                "left": {
                                                                  "type": "Literal",
                                                                  "value": 180
                                                                },
                                                                "right": {
                                                                  "type": "Identifier",
                                                                  "name": "rotation"
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": ">",
                                                                "left": {
                                                                  "type": "Identifier",
                                                                  "name": "rotation"
                                                                },
                                                                "right": {
                                                                  "type": "BinaryExpression",
                                                                  "operator": "-",
                                                                  "left": {
                                                                    "type": "Literal",
                                                                    "value": 180
                                                                  },
                                                                  "right": {
                                                                    "type": "Identifier",
                                                                    "name": "centerAnchorLimit"
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          },
                                                          "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                              {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                  "type": "AssignmentExpression",
                                                                  "operator": "=",
                                                                  "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "offsets"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "side"
                                                                    }
                                                                  },
                                                                  "right": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "+",
                                                                    "left": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "/",
                                                                      "left": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "*",
                                                                        "left": {
                                                                          "type": "Identifier",
                                                                          "name": "size"
                                                                        },
                                                                        "right": {
                                                                          "type": "Identifier",
                                                                          "name": "sinr"
                                                                        }
                                                                      },
                                                                      "right": {
                                                                        "type": "Literal",
                                                                        "value": 2
                                                                      }
                                                                    },
                                                                    "right": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "*",
                                                                      "left": {
                                                                        "type": "Identifier",
                                                                        "name": "labelWidth"
                                                                      },
                                                                      "right": {
                                                                        "type": "Identifier",
                                                                        "name": "cosr"
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                  "type": "AssignmentExpression",
                                                                  "operator": "=",
                                                                  "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "offsets"
                                                                    },
                                                                    "property": {
                                                                      "type": "ConditionalExpression",
                                                                      "test": {
                                                                        "type": "Identifier",
                                                                        "name": "leftBottom"
                                                                      },
                                                                      "consequent": {
                                                                        "type": "Literal",
                                                                        "value": "b"
                                                                      },
                                                                      "alternate": {
                                                                        "type": "Literal",
                                                                        "value": "t"
                                                                      }
                                                                    }
                                                                  },
                                                                  "right": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "+",
                                                                    "left": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "/",
                                                                      "left": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "*",
                                                                        "left": {
                                                                          "type": "Identifier",
                                                                          "name": "size"
                                                                        },
                                                                        "right": {
                                                                          "type": "Identifier",
                                                                          "name": "cosr"
                                                                        }
                                                                      },
                                                                      "right": {
                                                                        "type": "Literal",
                                                                        "value": 2
                                                                      }
                                                                    },
                                                                    "right": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "*",
                                                                      "left": {
                                                                        "type": "Identifier",
                                                                        "name": "labelWidth"
                                                                      },
                                                                      "right": {
                                                                        "type": "Identifier",
                                                                        "name": "sinr"
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                  "type": "AssignmentExpression",
                                                                  "operator": "=",
                                                                  "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "offsets"
                                                                    },
                                                                    "property": {
                                                                      "type": "ConditionalExpression",
                                                                      "test": {
                                                                        "type": "Identifier",
                                                                        "name": "leftBottom"
                                                                      },
                                                                      "consequent": {
                                                                        "type": "Literal",
                                                                        "value": "t"
                                                                      },
                                                                      "alternate": {
                                                                        "type": "Literal",
                                                                        "value": "b"
                                                                      }
                                                                    }
                                                                  },
                                                                  "right": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "/",
                                                                    "left": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "*",
                                                                      "left": {
                                                                        "type": "Identifier",
                                                                        "name": "size"
                                                                      },
                                                                      "right": {
                                                                        "type": "Identifier",
                                                                        "name": "cosr"
                                                                      }
                                                                    },
                                                                    "right": {
                                                                      "type": "Literal",
                                                                      "value": 2
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            ]
                                                          },
                                                          "alternate": {
                                                            "type": "IfStatement",
                                                            "test": {
                                                              "type": "LogicalExpression",
                                                              "operator": "||",
                                                              "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": "<",
                                                                "left": {
                                                                  "type": "Identifier",
                                                                  "name": "rotation"
                                                                },
                                                                "right": {
                                                                  "type": "Literal",
                                                                  "value": 90
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "LogicalExpression",
                                                                "operator": "&&",
                                                                "left": {
                                                                  "type": "BinaryExpression",
                                                                  "operator": "<",
                                                                  "left": {
                                                                    "type": "Literal",
                                                                    "value": 180
                                                                  },
                                                                  "right": {
                                                                    "type": "Identifier",
                                                                    "name": "rotation"
                                                                  }
                                                                },
                                                                "right": {
                                                                  "type": "BinaryExpression",
                                                                  "operator": "<",
                                                                  "left": {
                                                                    "type": "Identifier",
                                                                    "name": "rotation"
                                                                  },
                                                                  "right": {
                                                                    "type": "Literal",
                                                                    "value": 270
                                                                  }
                                                                }
                                                              }
                                                            },
                                                            "consequent": {
                                                              "type": "BlockStatement",
                                                              "body": [
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                      "type": "MemberExpression",
                                                                      "computed": true,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "offsets"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "side"
                                                                      }
                                                                    },
                                                                    "right": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "+",
                                                                      "left": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "*",
                                                                        "left": {
                                                                          "type": "Identifier",
                                                                          "name": "size"
                                                                        },
                                                                        "right": {
                                                                          "type": "Identifier",
                                                                          "name": "sinr"
                                                                        }
                                                                      },
                                                                      "right": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "*",
                                                                        "left": {
                                                                          "type": "Identifier",
                                                                          "name": "labelWidth"
                                                                        },
                                                                        "right": {
                                                                          "type": "Identifier",
                                                                          "name": "cosr"
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                },
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                      "type": "MemberExpression",
                                                                      "computed": true,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "offsets"
                                                                      },
                                                                      "property": {
                                                                        "type": "ConditionalExpression",
                                                                        "test": {
                                                                          "type": "Identifier",
                                                                          "name": "leftBottom"
                                                                        },
                                                                        "consequent": {
                                                                          "type": "Literal",
                                                                          "value": "t"
                                                                        },
                                                                        "alternate": {
                                                                          "type": "Literal",
                                                                          "value": "b"
                                                                        }
                                                                      }
                                                                    },
                                                                    "right": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "+",
                                                                      "left": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "*",
                                                                        "left": {
                                                                          "type": "Identifier",
                                                                          "name": "size"
                                                                        },
                                                                        "right": {
                                                                          "type": "Identifier",
                                                                          "name": "cosr"
                                                                        }
                                                                      },
                                                                      "right": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "*",
                                                                        "left": {
                                                                          "type": "Identifier",
                                                                          "name": "labelWidth"
                                                                        },
                                                                        "right": {
                                                                          "type": "Identifier",
                                                                          "name": "sinr"
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              ]
                                                            },
                                                            "alternate": {
                                                              "type": "BlockStatement",
                                                              "body": [
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                      "type": "MemberExpression",
                                                                      "computed": true,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "offsets"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "side"
                                                                      }
                                                                    },
                                                                    "right": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "+",
                                                                      "left": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "*",
                                                                        "left": {
                                                                          "type": "Identifier",
                                                                          "name": "size"
                                                                        },
                                                                        "right": {
                                                                          "type": "Identifier",
                                                                          "name": "sinr"
                                                                        }
                                                                      },
                                                                      "right": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "*",
                                                                        "left": {
                                                                          "type": "Identifier",
                                                                          "name": "labelWidth"
                                                                        },
                                                                        "right": {
                                                                          "type": "Identifier",
                                                                          "name": "cosr"
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                },
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                      "type": "MemberExpression",
                                                                      "computed": true,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "offsets"
                                                                      },
                                                                      "property": {
                                                                        "type": "ConditionalExpression",
                                                                        "test": {
                                                                          "type": "Identifier",
                                                                          "name": "leftBottom"
                                                                        },
                                                                        "consequent": {
                                                                          "type": "Literal",
                                                                          "value": "b"
                                                                        },
                                                                        "alternate": {
                                                                          "type": "Literal",
                                                                          "value": "t"
                                                                        }
                                                                      }
                                                                    },
                                                                    "right": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "+",
                                                                      "left": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "*",
                                                                        "left": {
                                                                          "type": "Identifier",
                                                                          "name": "size"
                                                                        },
                                                                        "right": {
                                                                          "type": "Identifier",
                                                                          "name": "cosr"
                                                                        }
                                                                      },
                                                                      "right": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "*",
                                                                        "left": {
                                                                          "type": "Identifier",
                                                                          "name": "labelWidth"
                                                                        },
                                                                        "right": {
                                                                          "type": "Identifier",
                                                                          "name": "sinr"
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "type": "BreakStatement",
                                                        "label": null
                                                      }
                                                    ]
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "AssignmentExpression",
                                                  "operator": "+=",
                                                  "left": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "offsets"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "side"
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                      "type": "BinaryExpression",
                                                      "operator": "+",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "labelGap"
                                                      },
                                                      "right": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "Math"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "max"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "taMajorTick"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "length"
                                                            }
                                                          },
                                                          {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "taMinorTick"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "length"
                                                            }
                                                          }
                                                        ]
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "ConditionalExpression",
                                                      "test": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "o"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "title"
                                                        }
                                                      },
                                                      "consequent": {
                                                        "type": "BinaryExpression",
                                                        "operator": "+",
                                                        "left": {
                                                          "type": "Identifier",
                                                          "name": "tsize"
                                                        },
                                                        "right": {
                                                          "type": "Identifier",
                                                          "name": "taTitleGap"
                                                        }
                                                      },
                                                      "alternate": {
                                                        "type": "Literal",
                                                        "value": 0
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            ]
                                          },
                                          "alternate": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "VariableDeclaration",
                                                "declarations": [
                                                  {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                      "type": "Identifier",
                                                      "name": "side"
                                                    },
                                                    "init": {
                                                      "type": "ConditionalExpression",
                                                      "test": {
                                                        "type": "Identifier",
                                                        "name": "leftBottom"
                                                      },
                                                      "consequent": {
                                                        "type": "Literal",
                                                        "value": "b"
                                                      },
                                                      "alternate": {
                                                        "type": "Literal",
                                                        "value": "t"
                                                      }
                                                    }
                                                  }
                                                ],
                                                "kind": "var"
                                              },
                                              {
                                                "type": "SwitchStatement",
                                                "discriminant": {
                                                  "type": "Identifier",
                                                  "name": "rotation"
                                                },
                                                "cases": [
                                                  {
                                                    "type": "SwitchCase",
                                                    "test": {
                                                      "type": "Literal",
                                                      "value": 0
                                                    },
                                                    "consequent": []
                                                  },
                                                  {
                                                    "type": "SwitchCase",
                                                    "test": {
                                                      "type": "Literal",
                                                      "value": 180
                                                    },
                                                    "consequent": [
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "AssignmentExpression",
                                                          "operator": "=",
                                                          "left": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "offsets"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "side"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Identifier",
                                                            "name": "size"
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "AssignmentExpression",
                                                          "operator": "=",
                                                          "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "offsets"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "l"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "offsets"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "r"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "BinaryExpression",
                                                              "operator": "/",
                                                              "left": {
                                                                "type": "Identifier",
                                                                "name": "labelWidth"
                                                              },
                                                              "right": {
                                                                "type": "Literal",
                                                                "value": 2
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "type": "BreakStatement",
                                                        "label": null
                                                      }
                                                    ]
                                                  },
                                                  {
                                                    "type": "SwitchCase",
                                                    "test": {
                                                      "type": "Literal",
                                                      "value": 90
                                                    },
                                                    "consequent": []
                                                  },
                                                  {
                                                    "type": "SwitchCase",
                                                    "test": {
                                                      "type": "Literal",
                                                      "value": 270
                                                    },
                                                    "consequent": [
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "AssignmentExpression",
                                                          "operator": "=",
                                                          "left": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "offsets"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "side"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Identifier",
                                                            "name": "labelWidth"
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "AssignmentExpression",
                                                          "operator": "=",
                                                          "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "offsets"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "l"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "offsets"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "r"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "BinaryExpression",
                                                              "operator": "/",
                                                              "left": {
                                                                "type": "Identifier",
                                                                "name": "size"
                                                              },
                                                              "right": {
                                                                "type": "Literal",
                                                                "value": 2
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "type": "BreakStatement",
                                                        "label": null
                                                      }
                                                    ]
                                                  },
                                                  {
                                                    "type": "SwitchCase",
                                                    "test": null,
                                                    "consequent": [
                                                      {
                                                        "type": "IfStatement",
                                                        "test": {
                                                          "type": "LogicalExpression",
                                                          "operator": "||",
                                                          "left": {
                                                            "type": "LogicalExpression",
                                                            "operator": "&&",
                                                            "left": {
                                                              "type": "BinaryExpression",
                                                              "operator": "<=",
                                                              "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": "-",
                                                                "left": {
                                                                  "type": "Literal",
                                                                  "value": 90
                                                                },
                                                                "right": {
                                                                  "type": "Identifier",
                                                                  "name": "centerAnchorLimit"
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "Identifier",
                                                                "name": "rotation"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "BinaryExpression",
                                                              "operator": "<=",
                                                              "left": {
                                                                "type": "Identifier",
                                                                "name": "rotation"
                                                              },
                                                              "right": {
                                                                "type": "Literal",
                                                                "value": 90
                                                              }
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "LogicalExpression",
                                                            "operator": "&&",
                                                            "left": {
                                                              "type": "BinaryExpression",
                                                              "operator": "<=",
                                                              "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": "-",
                                                                "left": {
                                                                  "type": "Literal",
                                                                  "value": 270
                                                                },
                                                                "right": {
                                                                  "type": "Identifier",
                                                                  "name": "centerAnchorLimit"
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "Identifier",
                                                                "name": "rotation"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "BinaryExpression",
                                                              "operator": "<=",
                                                              "left": {
                                                                "type": "Identifier",
                                                                "name": "rotation"
                                                              },
                                                              "right": {
                                                                "type": "Literal",
                                                                "value": 270
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "consequent": {
                                                          "type": "BlockStatement",
                                                          "body": [
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "expression": {
                                                                "type": "AssignmentExpression",
                                                                "operator": "=",
                                                                "left": {
                                                                  "type": "MemberExpression",
                                                                  "computed": true,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "offsets"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "side"
                                                                  }
                                                                },
                                                                "right": {
                                                                  "type": "BinaryExpression",
                                                                  "operator": "+",
                                                                  "left": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "/",
                                                                    "left": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "*",
                                                                      "left": {
                                                                        "type": "Identifier",
                                                                        "name": "size"
                                                                      },
                                                                      "right": {
                                                                        "type": "Identifier",
                                                                        "name": "sinr"
                                                                      }
                                                                    },
                                                                    "right": {
                                                                      "type": "Literal",
                                                                      "value": 2
                                                                    }
                                                                  },
                                                                  "right": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "*",
                                                                    "left": {
                                                                      "type": "Identifier",
                                                                      "name": "labelWidth"
                                                                    },
                                                                    "right": {
                                                                      "type": "Identifier",
                                                                      "name": "cosr"
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            },
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "expression": {
                                                                "type": "AssignmentExpression",
                                                                "operator": "=",
                                                                "left": {
                                                                  "type": "MemberExpression",
                                                                  "computed": true,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "offsets"
                                                                  },
                                                                  "property": {
                                                                    "type": "ConditionalExpression",
                                                                    "test": {
                                                                      "type": "Identifier",
                                                                      "name": "leftBottom"
                                                                    },
                                                                    "consequent": {
                                                                      "type": "Literal",
                                                                      "value": "r"
                                                                    },
                                                                    "alternate": {
                                                                      "type": "Literal",
                                                                      "value": "l"
                                                                    }
                                                                  }
                                                                },
                                                                "right": {
                                                                  "type": "BinaryExpression",
                                                                  "operator": "+",
                                                                  "left": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "/",
                                                                    "left": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "*",
                                                                      "left": {
                                                                        "type": "Identifier",
                                                                        "name": "size"
                                                                      },
                                                                      "right": {
                                                                        "type": "Identifier",
                                                                        "name": "cosr"
                                                                      }
                                                                    },
                                                                    "right": {
                                                                      "type": "Literal",
                                                                      "value": 2
                                                                    }
                                                                  },
                                                                  "right": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "*",
                                                                    "left": {
                                                                      "type": "Identifier",
                                                                      "name": "labelWidth"
                                                                    },
                                                                    "right": {
                                                                      "type": "Identifier",
                                                                      "name": "sinr"
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            },
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "expression": {
                                                                "type": "AssignmentExpression",
                                                                "operator": "=",
                                                                "left": {
                                                                  "type": "MemberExpression",
                                                                  "computed": true,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "offsets"
                                                                  },
                                                                  "property": {
                                                                    "type": "ConditionalExpression",
                                                                    "test": {
                                                                      "type": "Identifier",
                                                                      "name": "leftBottom"
                                                                    },
                                                                    "consequent": {
                                                                      "type": "Literal",
                                                                      "value": "l"
                                                                    },
                                                                    "alternate": {
                                                                      "type": "Literal",
                                                                      "value": "r"
                                                                    }
                                                                  }
                                                                },
                                                                "right": {
                                                                  "type": "BinaryExpression",
                                                                  "operator": "/",
                                                                  "left": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "*",
                                                                    "left": {
                                                                      "type": "Identifier",
                                                                      "name": "size"
                                                                    },
                                                                    "right": {
                                                                      "type": "Identifier",
                                                                      "name": "cosr"
                                                                    }
                                                                  },
                                                                  "right": {
                                                                    "type": "Literal",
                                                                    "value": 2
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        },
                                                        "alternate": {
                                                          "type": "IfStatement",
                                                          "test": {
                                                            "type": "LogicalExpression",
                                                            "operator": "||",
                                                            "left": {
                                                              "type": "LogicalExpression",
                                                              "operator": "&&",
                                                              "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": "<=",
                                                                "left": {
                                                                  "type": "Literal",
                                                                  "value": 90
                                                                },
                                                                "right": {
                                                                  "type": "Identifier",
                                                                  "name": "rotation"
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "<=",
                                                                "left": {
                                                                  "type": "Identifier",
                                                                  "name": "rotation"
                                                                },
                                                                "right": {
                                                                  "type": "BinaryExpression",
                                                                  "operator": "+",
                                                                  "left": {
                                                                    "type": "Literal",
                                                                    "value": 90
                                                                  },
                                                                  "right": {
                                                                    "type": "Identifier",
                                                                    "name": "centerAnchorLimit"
                                                                  }
                                                                }
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "LogicalExpression",
                                                              "operator": "&&",
                                                              "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": "<=",
                                                                "left": {
                                                                  "type": "Literal",
                                                                  "value": 270
                                                                },
                                                                "right": {
                                                                  "type": "Identifier",
                                                                  "name": "rotation"
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "<=",
                                                                "left": {
                                                                  "type": "Identifier",
                                                                  "name": "rotation"
                                                                },
                                                                "right": {
                                                                  "type": "BinaryExpression",
                                                                  "operator": "+",
                                                                  "left": {
                                                                    "type": "Literal",
                                                                    "value": 270
                                                                  },
                                                                  "right": {
                                                                    "type": "Identifier",
                                                                    "name": "centerAnchorLimit"
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          },
                                                          "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                              {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                  "type": "AssignmentExpression",
                                                                  "operator": "=",
                                                                  "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "offsets"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "side"
                                                                    }
                                                                  },
                                                                  "right": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "+",
                                                                    "left": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "/",
                                                                      "left": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "*",
                                                                        "left": {
                                                                          "type": "Identifier",
                                                                          "name": "size"
                                                                        },
                                                                        "right": {
                                                                          "type": "Identifier",
                                                                          "name": "sinr"
                                                                        }
                                                                      },
                                                                      "right": {
                                                                        "type": "Literal",
                                                                        "value": 2
                                                                      }
                                                                    },
                                                                    "right": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "*",
                                                                      "left": {
                                                                        "type": "Identifier",
                                                                        "name": "labelWidth"
                                                                      },
                                                                      "right": {
                                                                        "type": "Identifier",
                                                                        "name": "cosr"
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                  "type": "AssignmentExpression",
                                                                  "operator": "=",
                                                                  "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "offsets"
                                                                    },
                                                                    "property": {
                                                                      "type": "ConditionalExpression",
                                                                      "test": {
                                                                        "type": "Identifier",
                                                                        "name": "leftBottom"
                                                                      },
                                                                      "consequent": {
                                                                        "type": "Literal",
                                                                        "value": "l"
                                                                      },
                                                                      "alternate": {
                                                                        "type": "Literal",
                                                                        "value": "r"
                                                                      }
                                                                    }
                                                                  },
                                                                  "right": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "+",
                                                                    "left": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "/",
                                                                      "left": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "*",
                                                                        "left": {
                                                                          "type": "Identifier",
                                                                          "name": "size"
                                                                        },
                                                                        "right": {
                                                                          "type": "Identifier",
                                                                          "name": "cosr"
                                                                        }
                                                                      },
                                                                      "right": {
                                                                        "type": "Literal",
                                                                        "value": 2
                                                                      }
                                                                    },
                                                                    "right": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "*",
                                                                      "left": {
                                                                        "type": "Identifier",
                                                                        "name": "labelWidth"
                                                                      },
                                                                      "right": {
                                                                        "type": "Identifier",
                                                                        "name": "sinr"
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                  "type": "AssignmentExpression",
                                                                  "operator": "=",
                                                                  "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "offsets"
                                                                    },
                                                                    "property": {
                                                                      "type": "ConditionalExpression",
                                                                      "test": {
                                                                        "type": "Identifier",
                                                                        "name": "leftBottom"
                                                                      },
                                                                      "consequent": {
                                                                        "type": "Literal",
                                                                        "value": "r"
                                                                      },
                                                                      "alternate": {
                                                                        "type": "Literal",
                                                                        "value": "l"
                                                                      }
                                                                    }
                                                                  },
                                                                  "right": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "/",
                                                                    "left": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "*",
                                                                      "left": {
                                                                        "type": "Identifier",
                                                                        "name": "size"
                                                                      },
                                                                      "right": {
                                                                        "type": "Identifier",
                                                                        "name": "cosr"
                                                                      }
                                                                    },
                                                                    "right": {
                                                                      "type": "Literal",
                                                                      "value": 2
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            ]
                                                          },
                                                          "alternate": {
                                                            "type": "IfStatement",
                                                            "test": {
                                                              "type": "LogicalExpression",
                                                              "operator": "||",
                                                              "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": "<",
                                                                "left": {
                                                                  "type": "Identifier",
                                                                  "name": "rotation"
                                                                },
                                                                "right": {
                                                                  "type": "Identifier",
                                                                  "name": "centerAnchorLimit"
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "LogicalExpression",
                                                                "operator": "&&",
                                                                "left": {
                                                                  "type": "BinaryExpression",
                                                                  "operator": "<",
                                                                  "left": {
                                                                    "type": "Literal",
                                                                    "value": 180
                                                                  },
                                                                  "right": {
                                                                    "type": "Identifier",
                                                                    "name": "rotation"
                                                                  }
                                                                },
                                                                "right": {
                                                                  "type": "BinaryExpression",
                                                                  "operator": "<",
                                                                  "left": {
                                                                    "type": "Identifier",
                                                                    "name": "rotation"
                                                                  },
                                                                  "right": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "-",
                                                                    "left": {
                                                                      "type": "Literal",
                                                                      "value": 180
                                                                    },
                                                                    "right": {
                                                                      "type": "Identifier",
                                                                      "name": "centerAnchorLimit"
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            },
                                                            "consequent": {
                                                              "type": "BlockStatement",
                                                              "body": [
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                      "type": "MemberExpression",
                                                                      "computed": true,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "offsets"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "side"
                                                                      }
                                                                    },
                                                                    "right": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "+",
                                                                      "left": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "*",
                                                                        "left": {
                                                                          "type": "Identifier",
                                                                          "name": "size"
                                                                        },
                                                                        "right": {
                                                                          "type": "Identifier",
                                                                          "name": "sinr"
                                                                        }
                                                                      },
                                                                      "right": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "*",
                                                                        "left": {
                                                                          "type": "Identifier",
                                                                          "name": "labelWidth"
                                                                        },
                                                                        "right": {
                                                                          "type": "Identifier",
                                                                          "name": "cosr"
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                },
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                      "type": "MemberExpression",
                                                                      "computed": true,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "offsets"
                                                                      },
                                                                      "property": {
                                                                        "type": "ConditionalExpression",
                                                                        "test": {
                                                                          "type": "Identifier",
                                                                          "name": "leftBottom"
                                                                        },
                                                                        "consequent": {
                                                                          "type": "Literal",
                                                                          "value": "r"
                                                                        },
                                                                        "alternate": {
                                                                          "type": "Literal",
                                                                          "value": "l"
                                                                        }
                                                                      }
                                                                    },
                                                                    "right": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "+",
                                                                      "left": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "*",
                                                                        "left": {
                                                                          "type": "Identifier",
                                                                          "name": "size"
                                                                        },
                                                                        "right": {
                                                                          "type": "Identifier",
                                                                          "name": "cosr"
                                                                        }
                                                                      },
                                                                      "right": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "*",
                                                                        "left": {
                                                                          "type": "Identifier",
                                                                          "name": "labelWidth"
                                                                        },
                                                                        "right": {
                                                                          "type": "Identifier",
                                                                          "name": "sinr"
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              ]
                                                            },
                                                            "alternate": {
                                                              "type": "BlockStatement",
                                                              "body": [
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                      "type": "MemberExpression",
                                                                      "computed": true,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "offsets"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "side"
                                                                      }
                                                                    },
                                                                    "right": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "+",
                                                                      "left": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "*",
                                                                        "left": {
                                                                          "type": "Identifier",
                                                                          "name": "size"
                                                                        },
                                                                        "right": {
                                                                          "type": "Identifier",
                                                                          "name": "sinr"
                                                                        }
                                                                      },
                                                                      "right": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "*",
                                                                        "left": {
                                                                          "type": "Identifier",
                                                                          "name": "labelWidth"
                                                                        },
                                                                        "right": {
                                                                          "type": "Identifier",
                                                                          "name": "cosr"
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                },
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                      "type": "MemberExpression",
                                                                      "computed": true,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "offsets"
                                                                      },
                                                                      "property": {
                                                                        "type": "ConditionalExpression",
                                                                        "test": {
                                                                          "type": "Identifier",
                                                                          "name": "leftBottom"
                                                                        },
                                                                        "consequent": {
                                                                          "type": "Literal",
                                                                          "value": "l"
                                                                        },
                                                                        "alternate": {
                                                                          "type": "Literal",
                                                                          "value": "r"
                                                                        }
                                                                      }
                                                                    },
                                                                    "right": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "+",
                                                                      "left": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "*",
                                                                        "left": {
                                                                          "type": "Identifier",
                                                                          "name": "size"
                                                                        },
                                                                        "right": {
                                                                          "type": "Identifier",
                                                                          "name": "cosr"
                                                                        }
                                                                      },
                                                                      "right": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "*",
                                                                        "left": {
                                                                          "type": "Identifier",
                                                                          "name": "labelWidth"
                                                                        },
                                                                        "right": {
                                                                          "type": "Identifier",
                                                                          "name": "sinr"
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "type": "BreakStatement",
                                                        "label": null
                                                      }
                                                    ]
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "AssignmentExpression",
                                                  "operator": "+=",
                                                  "left": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "offsets"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "side"
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                      "type": "BinaryExpression",
                                                      "operator": "+",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "labelGap"
                                                      },
                                                      "right": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "Math"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "max"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "taMajorTick"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "length"
                                                            }
                                                          },
                                                          {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "taMinorTick"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "length"
                                                            }
                                                          }
                                                        ]
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "ConditionalExpression",
                                                      "test": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "o"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "title"
                                                        }
                                                      },
                                                      "consequent": {
                                                        "type": "BinaryExpression",
                                                        "operator": "+",
                                                        "left": {
                                                          "type": "Identifier",
                                                          "name": "tsize"
                                                        },
                                                        "right": {
                                                          "type": "Identifier",
                                                          "name": "taTitleGap"
                                                        }
                                                      },
                                                      "alternate": {
                                                        "type": "Literal",
                                                        "value": 0
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      ]
                                    },
                                    "alternate": null
                                  },
                                  {
                                    "type": "IfStatement",
                                    "test": {
                                      "type": "Identifier",
                                      "name": "labelWidth"
                                    },
                                    "consequent": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "ThisExpression"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "_cachedLabelWidth"
                                              }
                                            },
                                            "right": {
                                              "type": "Identifier",
                                              "name": "labelWidth"
                                            }
                                          }
                                        }
                                      ]
                                    },
                                    "alternate": null
                                  },
                                  {
                                    "type": "ReturnStatement",
                                    "argument": {
                                      "type": "Identifier",
                                      "name": "offsets"
                                    }
                                  }
                                ]
                              },
                              "rest": null,
                              "generator": false,
                              "expression": false
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "cleanGroup"
                            },
                            "value": {
                              "type": "FunctionExpression",
                              "id": null,
                              "params": [
                                {
                                  "type": "Identifier",
                                  "name": "creator"
                                }
                              ],
                              "defaults": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "IfStatement",
                                    "test": {
                                      "type": "LogicalExpression",
                                      "operator": "&&",
                                      "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "ThisExpression"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "opt"
                                          }
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "enableCache"
                                        }
                                      },
                                      "right": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "ThisExpression"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "group"
                                        }
                                      }
                                    },
                                    "consequent": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "ThisExpression"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "_lineFreePool"
                                              }
                                            },
                                            "right": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "ThisExpression"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "_lineFreePool"
                                                  }
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "concat"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "ThisExpression"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "_lineUsePool"
                                                  }
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "ThisExpression"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "_lineUsePool"
                                              }
                                            },
                                            "right": {
                                              "type": "ArrayExpression",
                                              "elements": []
                                            }
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "ThisExpression"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "_textFreePool"
                                              }
                                            },
                                            "right": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "ThisExpression"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "_textFreePool"
                                                  }
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "concat"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "ThisExpression"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "_textUsePool"
                                                  }
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "ThisExpression"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "_textUsePool"
                                              }
                                            },
                                            "right": {
                                              "type": "ArrayExpression",
                                              "elements": []
                                            }
                                          }
                                        }
                                      ]
                                    },
                                    "alternate": null
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "ThisExpression"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "inherited"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "Identifier",
                                          "name": "arguments"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              },
                              "rest": null,
                              "generator": false,
                              "expression": false
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "createText"
                            },
                            "value": {
                              "type": "FunctionExpression",
                              "id": null,
                              "params": [
                                {
                                  "type": "Identifier",
                                  "name": "labelType"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "creator"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "x"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "y"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "align"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "textContent"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "font"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "fontColor"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "labelWidth"
                                }
                              ],
                              "defaults": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "IfStatement",
                                    "test": {
                                      "type": "LogicalExpression",
                                      "operator": "||",
                                      "left": {
                                        "type": "UnaryExpression",
                                        "operator": "!",
                                        "argument": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "opt"
                                            }
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "enableCache"
                                          }
                                        },
                                        "prefix": true
                                      },
                                      "right": {
                                        "type": "BinaryExpression",
                                        "operator": "==",
                                        "left": {
                                          "type": "Identifier",
                                          "name": "labelType"
                                        },
                                        "right": {
                                          "type": "Literal",
                                          "value": "html"
                                        }
                                      }
                                    },
                                    "consequent": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "ReturnStatement",
                                          "argument": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": true,
                                              "object": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "acommon"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "createText"
                                                }
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "labelType"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "ThisExpression"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "chart"
                                                }
                                              },
                                              {
                                                "type": "Identifier",
                                                "name": "creator"
                                              },
                                              {
                                                "type": "Identifier",
                                                "name": "x"
                                              },
                                              {
                                                "type": "Identifier",
                                                "name": "y"
                                              },
                                              {
                                                "type": "Identifier",
                                                "name": "align"
                                              },
                                              {
                                                "type": "Identifier",
                                                "name": "textContent"
                                              },
                                              {
                                                "type": "Identifier",
                                                "name": "font"
                                              },
                                              {
                                                "type": "Identifier",
                                                "name": "fontColor"
                                              },
                                              {
                                                "type": "Identifier",
                                                "name": "labelWidth"
                                              }
                                            ]
                                          }
                                        }
                                      ]
                                    },
                                    "alternate": null
                                  },
                                  {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "text"
                                        },
                                        "init": null
                                      }
                                    ],
                                    "kind": "var"
                                  },
                                  {
                                    "type": "IfStatement",
                                    "test": {
                                      "type": "BinaryExpression",
                                      "operator": ">",
                                      "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "ThisExpression"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "_textFreePool"
                                          }
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "length"
                                        }
                                      },
                                      "right": {
                                        "type": "Literal",
                                        "value": 0
                                      }
                                    },
                                    "consequent": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "text"
                                            },
                                            "right": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "ThisExpression"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "_textFreePool"
                                                  }
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "pop"
                                                }
                                              },
                                              "arguments": []
                                            }
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "text"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "setShape"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "ObjectExpression",
                                                "properties": [
                                                  {
                                                    "type": "Property",
                                                    "key": {
                                                      "type": "Identifier",
                                                      "name": "x"
                                                    },
                                                    "value": {
                                                      "type": "Identifier",
                                                      "name": "x"
                                                    },
                                                    "kind": "init"
                                                  },
                                                  {
                                                    "type": "Property",
                                                    "key": {
                                                      "type": "Identifier",
                                                      "name": "y"
                                                    },
                                                    "value": {
                                                      "type": "Identifier",
                                                      "name": "y"
                                                    },
                                                    "kind": "init"
                                                  },
                                                  {
                                                    "type": "Property",
                                                    "key": {
                                                      "type": "Identifier",
                                                      "name": "text"
                                                    },
                                                    "value": {
                                                      "type": "Identifier",
                                                      "name": "textContent"
                                                    },
                                                    "kind": "init"
                                                  },
                                                  {
                                                    "type": "Property",
                                                    "key": {
                                                      "type": "Identifier",
                                                      "name": "align"
                                                    },
                                                    "value": {
                                                      "type": "Identifier",
                                                      "name": "align"
                                                    },
                                                    "kind": "init"
                                                  }
                                                ]
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "creator"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "add"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "Identifier",
                                                "name": "text"
                                              }
                                            ]
                                          }
                                        }
                                      ]
                                    },
                                    "alternate": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "text"
                                            },
                                            "right": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "acommon"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "createText"
                                                  }
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "labelType"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "ThisExpression"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "chart"
                                                  }
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "name": "creator"
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "name": "x"
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "name": "y"
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "name": "align"
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "name": "textContent"
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "name": "font"
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "name": "fontColor"
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "name": "labelWidth"
                                                }
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "ThisExpression"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "_textUsePool"
                                          }
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "push"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "Identifier",
                                          "name": "text"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "ReturnStatement",
                                    "argument": {
                                      "type": "Identifier",
                                      "name": "text"
                                    }
                                  }
                                ]
                              },
                              "rest": null,
                              "generator": false,
                              "expression": false
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "createLine"
                            },
                            "value": {
                              "type": "FunctionExpression",
                              "id": null,
                              "params": [
                                {
                                  "type": "Identifier",
                                  "name": "creator"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "params"
                                }
                              ],
                              "defaults": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "line"
                                        },
                                        "init": null
                                      }
                                    ],
                                    "kind": "var"
                                  },
                                  {
                                    "type": "IfStatement",
                                    "test": {
                                      "type": "LogicalExpression",
                                      "operator": "&&",
                                      "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "ThisExpression"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "opt"
                                          }
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "enableCache"
                                        }
                                      },
                                      "right": {
                                        "type": "BinaryExpression",
                                        "operator": ">",
                                        "left": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "_lineFreePool"
                                            }
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "length"
                                          }
                                        },
                                        "right": {
                                          "type": "Literal",
                                          "value": 0
                                        }
                                      }
                                    },
                                    "consequent": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "line"
                                            },
                                            "right": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "ThisExpression"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "_lineFreePool"
                                                  }
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "pop"
                                                }
                                              },
                                              "arguments": []
                                            }
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "line"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "setShape"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "Identifier",
                                                "name": "params"
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "creator"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "add"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "Identifier",
                                                "name": "line"
                                              }
                                            ]
                                          }
                                        }
                                      ]
                                    },
                                    "alternate": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "line"
                                            },
                                            "right": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "creator"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "createLine"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "params"
                                                }
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "IfStatement",
                                    "test": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "ThisExpression"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "opt"
                                        }
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "enableCache"
                                      }
                                    },
                                    "consequent": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "ThisExpression"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "_lineUsePool"
                                                }
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "push"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "Identifier",
                                                "name": "line"
                                              }
                                            ]
                                          }
                                        }
                                      ]
                                    },
                                    "alternate": null
                                  },
                                  {
                                    "type": "ReturnStatement",
                                    "argument": {
                                      "type": "Identifier",
                                      "name": "line"
                                    }
                                  }
                                ]
                              },
                              "rest": null,
                              "generator": false,
                              "expression": false
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "render"
                            },
                            "value": {
                              "type": "FunctionExpression",
                              "id": null,
                              "params": [
                                {
                                  "type": "Identifier",
                                  "name": "dim"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "offsets"
                                }
                              ],
                              "defaults": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "IfStatement",
                                    "test": {
                                      "type": "UnaryExpression",
                                      "operator": "!",
                                      "argument": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "ThisExpression"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "dirty"
                                        }
                                      },
                                      "prefix": true
                                    },
                                    "consequent": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "ReturnStatement",
                                          "argument": {
                                            "type": "ThisExpression"
                                          }
                                        }
                                      ]
                                    },
                                    "alternate": null
                                  },
                                  {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "o"
                                        },
                                        "init": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "ThisExpression"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "opt"
                                          }
                                        }
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "ta"
                                        },
                                        "init": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "ThisExpression"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "chart"
                                              }
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "theme"
                                            }
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "axis"
                                          }
                                        }
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "leftBottom"
                                        },
                                        "init": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "o"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "leftBottom"
                                          }
                                        }
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "rotation"
                                        },
                                        "init": {
                                          "type": "BinaryExpression",
                                          "operator": "%",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "o"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "rotation"
                                            }
                                          },
                                          "right": {
                                            "type": "Literal",
                                            "value": 360
                                          }
                                        }
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "start"
                                        },
                                        "init": null
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "stop"
                                        },
                                        "init": null
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "titlePos"
                                        },
                                        "init": null
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "titleRotation"
                                        },
                                        "init": {
                                          "type": "Literal",
                                          "value": 0
                                        }
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "titleOffset"
                                        },
                                        "init": null
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "axisVector"
                                        },
                                        "init": null
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "tickVector"
                                        },
                                        "init": null
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "anchorOffset"
                                        },
                                        "init": null
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "labelOffset"
                                        },
                                        "init": null
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "labelAlign"
                                        },
                                        "init": null
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "taFont"
                                        },
                                        "init": {
                                          "type": "LogicalExpression",
                                          "operator": "||",
                                          "left": {
                                            "type": "LogicalExpression",
                                            "operator": "||",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "o"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "font"
                                              }
                                            },
                                            "right": {
                                              "type": "LogicalExpression",
                                              "operator": "&&",
                                              "left": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "ta"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "majorTick"
                                                }
                                              },
                                              "right": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "ta"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "majorTick"
                                                  }
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "font"
                                                }
                                              }
                                            }
                                          },
                                          "right": {
                                            "type": "LogicalExpression",
                                            "operator": "&&",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "ta"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "tick"
                                              }
                                            },
                                            "right": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "ta"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "tick"
                                                }
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "font"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "taTitleFont"
                                        },
                                        "init": {
                                          "type": "LogicalExpression",
                                          "operator": "||",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "o"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "titleFont"
                                            }
                                          },
                                          "right": {
                                            "type": "LogicalExpression",
                                            "operator": "&&",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "ta"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "tick"
                                              }
                                            },
                                            "right": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "ta"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "tick"
                                                }
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "titleFont"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "taFontColor"
                                        },
                                        "init": {
                                          "type": "LogicalExpression",
                                          "operator": "||",
                                          "left": {
                                            "type": "LogicalExpression",
                                            "operator": "||",
                                            "left": {
                                              "type": "LogicalExpression",
                                              "operator": "||",
                                              "left": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "o"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "fontColor"
                                                }
                                              },
                                              "right": {
                                                "type": "LogicalExpression",
                                                "operator": "&&",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "ta"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "majorTick"
                                                  }
                                                },
                                                "right": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "ta"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "majorTick"
                                                    }
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "fontColor"
                                                  }
                                                }
                                              }
                                            },
                                            "right": {
                                              "type": "LogicalExpression",
                                              "operator": "&&",
                                              "left": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "ta"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "tick"
                                                }
                                              },
                                              "right": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "ta"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "tick"
                                                  }
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "fontColor"
                                                }
                                              }
                                            }
                                          },
                                          "right": {
                                            "type": "Literal",
                                            "value": "black"
                                          }
                                        }
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "taTitleFontColor"
                                        },
                                        "init": {
                                          "type": "LogicalExpression",
                                          "operator": "||",
                                          "left": {
                                            "type": "LogicalExpression",
                                            "operator": "||",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "o"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "titleFontColor"
                                              }
                                            },
                                            "right": {
                                              "type": "LogicalExpression",
                                              "operator": "&&",
                                              "left": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "ta"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "tick"
                                                }
                                              },
                                              "right": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "ta"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "tick"
                                                  }
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "titleFontColor"
                                                }
                                              }
                                            }
                                          },
                                          "right": {
                                            "type": "Literal",
                                            "value": "black"
                                          }
                                        }
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "taTitleGap"
                                        },
                                        "init": {
                                          "type": "ConditionalExpression",
                                          "test": {
                                            "type": "BinaryExpression",
                                            "operator": "==",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "o"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "titleGap"
                                              }
                                            },
                                            "right": {
                                              "type": "Literal",
                                              "value": 0
                                            }
                                          },
                                          "consequent": {
                                            "type": "Literal",
                                            "value": 0
                                          },
                                          "alternate": {
                                            "type": "LogicalExpression",
                                            "operator": "||",
                                            "left": {
                                              "type": "LogicalExpression",
                                              "operator": "||",
                                              "left": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "o"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "titleGap"
                                                }
                                              },
                                              "right": {
                                                "type": "LogicalExpression",
                                                "operator": "&&",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "ta"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "tick"
                                                  }
                                                },
                                                "right": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "ta"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "tick"
                                                    }
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "titleGap"
                                                  }
                                                }
                                              }
                                            },
                                            "right": {
                                              "type": "Literal",
                                              "value": 15
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "taTitleOrientation"
                                        },
                                        "init": {
                                          "type": "LogicalExpression",
                                          "operator": "||",
                                          "left": {
                                            "type": "LogicalExpression",
                                            "operator": "||",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "o"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "titleOrientation"
                                              }
                                            },
                                            "right": {
                                              "type": "LogicalExpression",
                                              "operator": "&&",
                                              "left": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "ta"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "tick"
                                                }
                                              },
                                              "right": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "ta"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "tick"
                                                  }
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "titleOrientation"
                                                }
                                              }
                                            }
                                          },
                                          "right": {
                                            "type": "Literal",
                                            "value": "axis"
                                          }
                                        }
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "taMajorTick"
                                        },
                                        "init": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "ThisExpression"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "chart"
                                                }
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "theme"
                                              }
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "getTick"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Literal",
                                              "value": "major"
                                            },
                                            {
                                              "type": "Identifier",
                                              "name": "o"
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "taMinorTick"
                                        },
                                        "init": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "ThisExpression"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "chart"
                                                }
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "theme"
                                              }
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "getTick"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Literal",
                                              "value": "minor"
                                            },
                                            {
                                              "type": "Identifier",
                                              "name": "o"
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "taMicroTick"
                                        },
                                        "init": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "ThisExpression"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "chart"
                                                }
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "theme"
                                              }
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "getTick"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Literal",
                                              "value": "micro"
                                            },
                                            {
                                              "type": "Identifier",
                                              "name": "o"
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "tickSize"
                                        },
                                        "init": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "Math"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "max"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "taMajorTick"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "length"
                                              }
                                            },
                                            {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "taMinorTick"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "length"
                                              }
                                            },
                                            {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "taMicroTick"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "length"
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "taStroke"
                                        },
                                        "init": {
                                          "type": "ConditionalExpression",
                                          "test": {
                                            "type": "BinaryExpression",
                                            "operator": "in",
                                            "left": {
                                              "type": "Literal",
                                              "value": "stroke"
                                            },
                                            "right": {
                                              "type": "Identifier",
                                              "name": "o"
                                            }
                                          },
                                          "consequent": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "o"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "stroke"
                                            }
                                          },
                                          "alternate": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "ta"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "stroke"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "size"
                                        },
                                        "init": {
                                          "type": "ConditionalExpression",
                                          "test": {
                                            "type": "Identifier",
                                            "name": "taFont"
                                          },
                                          "consequent": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "g"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "normalizedLength"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "g"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "splitFontString"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "taFont"
                                                    }
                                                  ]
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "size"
                                                }
                                              }
                                            ]
                                          },
                                          "alternate": {
                                            "type": "Literal",
                                            "value": 0
                                          }
                                        }
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "cosr"
                                        },
                                        "init": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "Math"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "abs"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "Math"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "cos"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "BinaryExpression",
                                                  "operator": "/",
                                                  "left": {
                                                    "type": "BinaryExpression",
                                                    "operator": "*",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "rotation"
                                                    },
                                                    "right": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "Math"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "PI"
                                                      }
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "Literal",
                                                    "value": 180
                                                  }
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "sinr"
                                        },
                                        "init": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "Math"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "abs"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "Math"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "sin"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "BinaryExpression",
                                                  "operator": "/",
                                                  "left": {
                                                    "type": "BinaryExpression",
                                                    "operator": "*",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "rotation"
                                                    },
                                                    "right": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "Math"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "PI"
                                                      }
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "Literal",
                                                    "value": 180
                                                  }
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "tsize"
                                        },
                                        "init": {
                                          "type": "ConditionalExpression",
                                          "test": {
                                            "type": "Identifier",
                                            "name": "taTitleFont"
                                          },
                                          "consequent": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "g"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "normalizedLength"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "g"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "splitFontString"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "taTitleFont"
                                                    }
                                                  ]
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "size"
                                                }
                                              }
                                            ]
                                          },
                                          "alternate": {
                                            "type": "Literal",
                                            "value": 0
                                          }
                                        }
                                      }
                                    ],
                                    "kind": "var"
                                  },
                                  {
                                    "type": "IfStatement",
                                    "test": {
                                      "type": "BinaryExpression",
                                      "operator": "<",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "rotation"
                                      },
                                      "right": {
                                        "type": "Literal",
                                        "value": 0
                                      }
                                    },
                                    "consequent": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "+=",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "rotation"
                                            },
                                            "right": {
                                              "type": "Literal",
                                              "value": 360
                                            }
                                          }
                                        }
                                      ]
                                    },
                                    "alternate": null
                                  },
                                  {
                                    "type": "IfStatement",
                                    "test": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "ThisExpression"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "vertical"
                                      }
                                    },
                                    "consequent": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "start"
                                            },
                                            "right": {
                                              "type": "ObjectExpression",
                                              "properties": [
                                                {
                                                  "type": "Property",
                                                  "key": {
                                                    "type": "Identifier",
                                                    "name": "y"
                                                  },
                                                  "value": {
                                                    "type": "BinaryExpression",
                                                    "operator": "-",
                                                    "left": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "dim"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "height"
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "offsets"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "b"
                                                      }
                                                    }
                                                  },
                                                  "kind": "init"
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "stop"
                                            },
                                            "right": {
                                              "type": "ObjectExpression",
                                              "properties": [
                                                {
                                                  "type": "Property",
                                                  "key": {
                                                    "type": "Identifier",
                                                    "name": "y"
                                                  },
                                                  "value": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "offsets"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "t"
                                                    }
                                                  },
                                                  "kind": "init"
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "titlePos"
                                            },
                                            "right": {
                                              "type": "ObjectExpression",
                                              "properties": [
                                                {
                                                  "type": "Property",
                                                  "key": {
                                                    "type": "Identifier",
                                                    "name": "y"
                                                  },
                                                  "value": {
                                                    "type": "BinaryExpression",
                                                    "operator": "/",
                                                    "left": {
                                                      "type": "BinaryExpression",
                                                      "operator": "+",
                                                      "left": {
                                                        "type": "BinaryExpression",
                                                        "operator": "-",
                                                        "left": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "dim"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "height"
                                                          }
                                                        },
                                                        "right": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "offsets"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "b"
                                                          }
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "offsets"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "t"
                                                        }
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": 2
                                                    }
                                                  },
                                                  "kind": "init"
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "titleOffset"
                                            },
                                            "right": {
                                              "type": "BinaryExpression",
                                              "operator": "+",
                                              "left": {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                  "type": "BinaryExpression",
                                                  "operator": "+",
                                                  "left": {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                      "type": "BinaryExpression",
                                                      "operator": "+",
                                                      "left": {
                                                        "type": "BinaryExpression",
                                                        "operator": "*",
                                                        "left": {
                                                          "type": "Identifier",
                                                          "name": "size"
                                                        },
                                                        "right": {
                                                          "type": "Identifier",
                                                          "name": "sinr"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "BinaryExpression",
                                                        "operator": "*",
                                                        "left": {
                                                          "type": "LogicalExpression",
                                                          "operator": "||",
                                                          "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "_cachedLabelWidth"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": 0
                                                          }
                                                        },
                                                        "right": {
                                                          "type": "Identifier",
                                                          "name": "cosr"
                                                        }
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "Identifier",
                                                      "name": "labelGap"
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "Math"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "max"
                                                      }
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "taMajorTick"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "length"
                                                        }
                                                      },
                                                      {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "taMinorTick"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "length"
                                                        }
                                                      }
                                                    ]
                                                  }
                                                },
                                                "right": {
                                                  "type": "Identifier",
                                                  "name": "tsize"
                                                }
                                              },
                                              "right": {
                                                "type": "Identifier",
                                                "name": "taTitleGap"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "axisVector"
                                            },
                                            "right": {
                                              "type": "ObjectExpression",
                                              "properties": [
                                                {
                                                  "type": "Property",
                                                  "key": {
                                                    "type": "Identifier",
                                                    "name": "x"
                                                  },
                                                  "value": {
                                                    "type": "Literal",
                                                    "value": 0
                                                  },
                                                  "kind": "init"
                                                },
                                                {
                                                  "type": "Property",
                                                  "key": {
                                                    "type": "Identifier",
                                                    "name": "y"
                                                  },
                                                  "value": {
                                                    "type": "UnaryExpression",
                                                    "operator": "-",
                                                    "argument": {
                                                      "type": "Literal",
                                                      "value": 1
                                                    },
                                                    "prefix": true
                                                  },
                                                  "kind": "init"
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "labelOffset"
                                            },
                                            "right": {
                                              "type": "ObjectExpression",
                                              "properties": [
                                                {
                                                  "type": "Property",
                                                  "key": {
                                                    "type": "Identifier",
                                                    "name": "x"
                                                  },
                                                  "value": {
                                                    "type": "Literal",
                                                    "value": 0
                                                  },
                                                  "kind": "init"
                                                },
                                                {
                                                  "type": "Property",
                                                  "key": {
                                                    "type": "Identifier",
                                                    "name": "y"
                                                  },
                                                  "value": {
                                                    "type": "Literal",
                                                    "value": 0
                                                  },
                                                  "kind": "init"
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "tickVector"
                                            },
                                            "right": {
                                              "type": "ObjectExpression",
                                              "properties": [
                                                {
                                                  "type": "Property",
                                                  "key": {
                                                    "type": "Identifier",
                                                    "name": "x"
                                                  },
                                                  "value": {
                                                    "type": "Literal",
                                                    "value": 1
                                                  },
                                                  "kind": "init"
                                                },
                                                {
                                                  "type": "Property",
                                                  "key": {
                                                    "type": "Identifier",
                                                    "name": "y"
                                                  },
                                                  "value": {
                                                    "type": "Literal",
                                                    "value": 0
                                                  },
                                                  "kind": "init"
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "anchorOffset"
                                            },
                                            "right": {
                                              "type": "ObjectExpression",
                                              "properties": [
                                                {
                                                  "type": "Property",
                                                  "key": {
                                                    "type": "Identifier",
                                                    "name": "x"
                                                  },
                                                  "value": {
                                                    "type": "Identifier",
                                                    "name": "labelGap"
                                                  },
                                                  "kind": "init"
                                                },
                                                {
                                                  "type": "Property",
                                                  "key": {
                                                    "type": "Identifier",
                                                    "name": "y"
                                                  },
                                                  "value": {
                                                    "type": "Literal",
                                                    "value": 0
                                                  },
                                                  "kind": "init"
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        {
                                          "type": "SwitchStatement",
                                          "discriminant": {
                                            "type": "Identifier",
                                            "name": "rotation"
                                          },
                                          "cases": [
                                            {
                                              "type": "SwitchCase",
                                              "test": {
                                                "type": "Literal",
                                                "value": 0
                                              },
                                              "consequent": [
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "labelAlign"
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": "end"
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "labelOffset"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "y"
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "BinaryExpression",
                                                      "operator": "*",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "size"
                                                      },
                                                      "right": {
                                                        "type": "Literal",
                                                        "value": 0.4
                                                      }
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "BreakStatement",
                                                  "label": null
                                                }
                                              ]
                                            },
                                            {
                                              "type": "SwitchCase",
                                              "test": {
                                                "type": "Literal",
                                                "value": 90
                                              },
                                              "consequent": [
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "labelAlign"
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": "middle"
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "labelOffset"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "x"
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "UnaryExpression",
                                                      "operator": "-",
                                                      "argument": {
                                                        "type": "Identifier",
                                                        "name": "size"
                                                      },
                                                      "prefix": true
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "BreakStatement",
                                                  "label": null
                                                }
                                              ]
                                            },
                                            {
                                              "type": "SwitchCase",
                                              "test": {
                                                "type": "Literal",
                                                "value": 180
                                              },
                                              "consequent": [
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "labelAlign"
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": "start"
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "labelOffset"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "y"
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "BinaryExpression",
                                                      "operator": "*",
                                                      "left": {
                                                        "type": "UnaryExpression",
                                                        "operator": "-",
                                                        "argument": {
                                                          "type": "Identifier",
                                                          "name": "size"
                                                        },
                                                        "prefix": true
                                                      },
                                                      "right": {
                                                        "type": "Literal",
                                                        "value": 0.4
                                                      }
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "BreakStatement",
                                                  "label": null
                                                }
                                              ]
                                            },
                                            {
                                              "type": "SwitchCase",
                                              "test": {
                                                "type": "Literal",
                                                "value": 270
                                              },
                                              "consequent": [
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "labelAlign"
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": "middle"
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "BreakStatement",
                                                  "label": null
                                                }
                                              ]
                                            },
                                            {
                                              "type": "SwitchCase",
                                              "test": null,
                                              "consequent": [
                                                {
                                                  "type": "IfStatement",
                                                  "test": {
                                                    "type": "BinaryExpression",
                                                    "operator": "<",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "rotation"
                                                    },
                                                    "right": {
                                                      "type": "Identifier",
                                                      "name": "centerAnchorLimit"
                                                    }
                                                  },
                                                  "consequent": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "AssignmentExpression",
                                                          "operator": "=",
                                                          "left": {
                                                            "type": "Identifier",
                                                            "name": "labelAlign"
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "end"
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "AssignmentExpression",
                                                          "operator": "=",
                                                          "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "labelOffset"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "y"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "BinaryExpression",
                                                            "operator": "*",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "size"
                                                            },
                                                            "right": {
                                                              "type": "Literal",
                                                              "value": 0.4
                                                            }
                                                          }
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "alternate": {
                                                    "type": "IfStatement",
                                                    "test": {
                                                      "type": "BinaryExpression",
                                                      "operator": "<",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "rotation"
                                                      },
                                                      "right": {
                                                        "type": "Literal",
                                                        "value": 90
                                                      }
                                                    },
                                                    "consequent": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "labelAlign"
                                                            },
                                                            "right": {
                                                              "type": "Literal",
                                                              "value": "end"
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "labelOffset"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "y"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "BinaryExpression",
                                                              "operator": "*",
                                                              "left": {
                                                                "type": "Identifier",
                                                                "name": "size"
                                                              },
                                                              "right": {
                                                                "type": "Literal",
                                                                "value": 0.4
                                                              }
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "alternate": {
                                                      "type": "IfStatement",
                                                      "test": {
                                                        "type": "BinaryExpression",
                                                        "operator": "<",
                                                        "left": {
                                                          "type": "Identifier",
                                                          "name": "rotation"
                                                        },
                                                        "right": {
                                                          "type": "BinaryExpression",
                                                          "operator": "-",
                                                          "left": {
                                                            "type": "Literal",
                                                            "value": 180
                                                          },
                                                          "right": {
                                                            "type": "Identifier",
                                                            "name": "centerAnchorLimit"
                                                          }
                                                        }
                                                      },
                                                      "consequent": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "AssignmentExpression",
                                                              "operator": "=",
                                                              "left": {
                                                                "type": "Identifier",
                                                                "name": "labelAlign"
                                                              },
                                                              "right": {
                                                                "type": "Literal",
                                                                "value": "start"
                                                              }
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      "alternate": {
                                                        "type": "IfStatement",
                                                        "test": {
                                                          "type": "BinaryExpression",
                                                          "operator": "<",
                                                          "left": {
                                                            "type": "Identifier",
                                                            "name": "rotation"
                                                          },
                                                          "right": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": 180
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "centerAnchorLimit"
                                                            }
                                                          }
                                                        },
                                                        "consequent": {
                                                          "type": "BlockStatement",
                                                          "body": [
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "expression": {
                                                                "type": "AssignmentExpression",
                                                                "operator": "=",
                                                                "left": {
                                                                  "type": "Identifier",
                                                                  "name": "labelAlign"
                                                                },
                                                                "right": {
                                                                  "type": "Literal",
                                                                  "value": "start"
                                                                }
                                                              }
                                                            },
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "expression": {
                                                                "type": "AssignmentExpression",
                                                                "operator": "=",
                                                                "left": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "labelOffset"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "y"
                                                                  }
                                                                },
                                                                "right": {
                                                                  "type": "BinaryExpression",
                                                                  "operator": "*",
                                                                  "left": {
                                                                    "type": "UnaryExpression",
                                                                    "operator": "-",
                                                                    "argument": {
                                                                      "type": "Identifier",
                                                                      "name": "size"
                                                                    },
                                                                    "prefix": true
                                                                  },
                                                                  "right": {
                                                                    "type": "Literal",
                                                                    "value": 0.4
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        },
                                                        "alternate": {
                                                          "type": "IfStatement",
                                                          "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "<",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "rotation"
                                                            },
                                                            "right": {
                                                              "type": "Literal",
                                                              "value": 270
                                                            }
                                                          },
                                                          "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                              {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                  "type": "AssignmentExpression",
                                                                  "operator": "=",
                                                                  "left": {
                                                                    "type": "Identifier",
                                                                    "name": "labelAlign"
                                                                  },
                                                                  "right": {
                                                                    "type": "Literal",
                                                                    "value": "start"
                                                                  }
                                                                }
                                                              },
                                                              {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                  "type": "AssignmentExpression",
                                                                  "operator": "=",
                                                                  "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "labelOffset"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "x"
                                                                    }
                                                                  },
                                                                  "right": {
                                                                    "type": "ConditionalExpression",
                                                                    "test": {
                                                                      "type": "Identifier",
                                                                      "name": "leftBottom"
                                                                    },
                                                                    "consequent": {
                                                                      "type": "Literal",
                                                                      "value": 0
                                                                    },
                                                                    "alternate": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "*",
                                                                      "left": {
                                                                        "type": "Identifier",
                                                                        "name": "size"
                                                                      },
                                                                      "right": {
                                                                        "type": "Literal",
                                                                        "value": 0.4
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            ]
                                                          },
                                                          "alternate": {
                                                            "type": "IfStatement",
                                                            "test": {
                                                              "type": "BinaryExpression",
                                                              "operator": "<",
                                                              "left": {
                                                                "type": "Identifier",
                                                                "name": "rotation"
                                                              },
                                                              "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "-",
                                                                "left": {
                                                                  "type": "Literal",
                                                                  "value": 360
                                                                },
                                                                "right": {
                                                                  "type": "Identifier",
                                                                  "name": "centerAnchorLimit"
                                                                }
                                                              }
                                                            },
                                                            "consequent": {
                                                              "type": "BlockStatement",
                                                              "body": [
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                      "type": "Identifier",
                                                                      "name": "labelAlign"
                                                                    },
                                                                    "right": {
                                                                      "type": "Literal",
                                                                      "value": "end"
                                                                    }
                                                                  }
                                                                },
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "labelOffset"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "x"
                                                                      }
                                                                    },
                                                                    "right": {
                                                                      "type": "ConditionalExpression",
                                                                      "test": {
                                                                        "type": "Identifier",
                                                                        "name": "leftBottom"
                                                                      },
                                                                      "consequent": {
                                                                        "type": "Literal",
                                                                        "value": 0
                                                                      },
                                                                      "alternate": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "*",
                                                                        "left": {
                                                                          "type": "Identifier",
                                                                          "name": "size"
                                                                        },
                                                                        "right": {
                                                                          "type": "Literal",
                                                                          "value": 0.4
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              ]
                                                            },
                                                            "alternate": {
                                                              "type": "BlockStatement",
                                                              "body": [
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                      "type": "Identifier",
                                                                      "name": "labelAlign"
                                                                    },
                                                                    "right": {
                                                                      "type": "Literal",
                                                                      "value": "end"
                                                                    }
                                                                  }
                                                                },
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "labelOffset"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "y"
                                                                      }
                                                                    },
                                                                    "right": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "*",
                                                                      "left": {
                                                                        "type": "Identifier",
                                                                        "name": "size"
                                                                      },
                                                                      "right": {
                                                                        "type": "Literal",
                                                                        "value": 0.4
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "IfStatement",
                                          "test": {
                                            "type": "Identifier",
                                            "name": "leftBottom"
                                          },
                                          "consequent": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "AssignmentExpression",
                                                  "operator": "=",
                                                  "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "start"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "x"
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "stop"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "x"
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "offsets"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "l"
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "AssignmentExpression",
                                                  "operator": "=",
                                                  "left": {
                                                    "type": "Identifier",
                                                    "name": "titleRotation"
                                                  },
                                                  "right": {
                                                    "type": "ConditionalExpression",
                                                    "test": {
                                                      "type": "LogicalExpression",
                                                      "operator": "&&",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "taTitleOrientation"
                                                      },
                                                      "right": {
                                                        "type": "BinaryExpression",
                                                        "operator": "==",
                                                        "left": {
                                                          "type": "Identifier",
                                                          "name": "taTitleOrientation"
                                                        },
                                                        "right": {
                                                          "type": "Literal",
                                                          "value": "away"
                                                        }
                                                      }
                                                    },
                                                    "consequent": {
                                                      "type": "Literal",
                                                      "value": 90
                                                    },
                                                    "alternate": {
                                                      "type": "Literal",
                                                      "value": 270
                                                    }
                                                  }
                                                }
                                              },
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "AssignmentExpression",
                                                  "operator": "=",
                                                  "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "titlePos"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "x"
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                      "type": "BinaryExpression",
                                                      "operator": "-",
                                                      "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "offsets"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "l"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "Identifier",
                                                        "name": "titleOffset"
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "ConditionalExpression",
                                                      "test": {
                                                        "type": "BinaryExpression",
                                                        "operator": "==",
                                                        "left": {
                                                          "type": "Identifier",
                                                          "name": "titleRotation"
                                                        },
                                                        "right": {
                                                          "type": "Literal",
                                                          "value": 270
                                                        }
                                                      },
                                                      "consequent": {
                                                        "type": "Identifier",
                                                        "name": "tsize"
                                                      },
                                                      "alternate": {
                                                        "type": "Literal",
                                                        "value": 0
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "AssignmentExpression",
                                                  "operator": "=",
                                                  "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "tickVector"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "x"
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "UnaryExpression",
                                                    "operator": "-",
                                                    "argument": {
                                                      "type": "Literal",
                                                      "value": 1
                                                    },
                                                    "prefix": true
                                                  }
                                                }
                                              },
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "AssignmentExpression",
                                                  "operator": "=",
                                                  "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "anchorOffset"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "x"
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "UnaryExpression",
                                                    "operator": "-",
                                                    "argument": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "anchorOffset"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "x"
                                                      }
                                                    },
                                                    "prefix": true
                                                  }
                                                }
                                              }
                                            ]
                                          },
                                          "alternate": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "AssignmentExpression",
                                                  "operator": "=",
                                                  "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "start"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "x"
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "stop"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "x"
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "BinaryExpression",
                                                      "operator": "-",
                                                      "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "dim"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "width"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "offsets"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "r"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "AssignmentExpression",
                                                  "operator": "=",
                                                  "left": {
                                                    "type": "Identifier",
                                                    "name": "titleRotation"
                                                  },
                                                  "right": {
                                                    "type": "ConditionalExpression",
                                                    "test": {
                                                      "type": "LogicalExpression",
                                                      "operator": "&&",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "taTitleOrientation"
                                                      },
                                                      "right": {
                                                        "type": "BinaryExpression",
                                                        "operator": "==",
                                                        "left": {
                                                          "type": "Identifier",
                                                          "name": "taTitleOrientation"
                                                        },
                                                        "right": {
                                                          "type": "Literal",
                                                          "value": "axis"
                                                        }
                                                      }
                                                    },
                                                    "consequent": {
                                                      "type": "Literal",
                                                      "value": 90
                                                    },
                                                    "alternate": {
                                                      "type": "Literal",
                                                      "value": 270
                                                    }
                                                  }
                                                }
                                              },
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "AssignmentExpression",
                                                  "operator": "=",
                                                  "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "titlePos"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "x"
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "-",
                                                    "left": {
                                                      "type": "BinaryExpression",
                                                      "operator": "+",
                                                      "left": {
                                                        "type": "BinaryExpression",
                                                        "operator": "-",
                                                        "left": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "dim"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "width"
                                                          }
                                                        },
                                                        "right": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "offsets"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "r"
                                                          }
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "Identifier",
                                                        "name": "titleOffset"
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "ConditionalExpression",
                                                      "test": {
                                                        "type": "BinaryExpression",
                                                        "operator": "==",
                                                        "left": {
                                                          "type": "Identifier",
                                                          "name": "titleRotation"
                                                        },
                                                        "right": {
                                                          "type": "Literal",
                                                          "value": 270
                                                        }
                                                      },
                                                      "consequent": {
                                                        "type": "Literal",
                                                        "value": 0
                                                      },
                                                      "alternate": {
                                                        "type": "Identifier",
                                                        "name": "tsize"
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              {
                                                "type": "SwitchStatement",
                                                "discriminant": {
                                                  "type": "Identifier",
                                                  "name": "labelAlign"
                                                },
                                                "cases": [
                                                  {
                                                    "type": "SwitchCase",
                                                    "test": {
                                                      "type": "Literal",
                                                      "value": "start"
                                                    },
                                                    "consequent": [
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "AssignmentExpression",
                                                          "operator": "=",
                                                          "left": {
                                                            "type": "Identifier",
                                                            "name": "labelAlign"
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "end"
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "type": "BreakStatement",
                                                        "label": null
                                                      }
                                                    ]
                                                  },
                                                  {
                                                    "type": "SwitchCase",
                                                    "test": {
                                                      "type": "Literal",
                                                      "value": "end"
                                                    },
                                                    "consequent": [
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "AssignmentExpression",
                                                          "operator": "=",
                                                          "left": {
                                                            "type": "Identifier",
                                                            "name": "labelAlign"
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "start"
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "type": "BreakStatement",
                                                        "label": null
                                                      }
                                                    ]
                                                  },
                                                  {
                                                    "type": "SwitchCase",
                                                    "test": {
                                                      "type": "Literal",
                                                      "value": "middle"
                                                    },
                                                    "consequent": [
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "AssignmentExpression",
                                                          "operator": "+=",
                                                          "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "labelOffset"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "x"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Identifier",
                                                            "name": "size"
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "type": "BreakStatement",
                                                        "label": null
                                                      }
                                                    ]
                                                  }
                                                ]
                                              }
                                            ]
                                          }
                                        }
                                      ]
                                    },
                                    "alternate": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "start"
                                            },
                                            "right": {
                                              "type": "ObjectExpression",
                                              "properties": [
                                                {
                                                  "type": "Property",
                                                  "key": {
                                                    "type": "Identifier",
                                                    "name": "x"
                                                  },
                                                  "value": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "offsets"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "l"
                                                    }
                                                  },
                                                  "kind": "init"
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "stop"
                                            },
                                            "right": {
                                              "type": "ObjectExpression",
                                              "properties": [
                                                {
                                                  "type": "Property",
                                                  "key": {
                                                    "type": "Identifier",
                                                    "name": "x"
                                                  },
                                                  "value": {
                                                    "type": "BinaryExpression",
                                                    "operator": "-",
                                                    "left": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "dim"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "width"
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "offsets"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "r"
                                                      }
                                                    }
                                                  },
                                                  "kind": "init"
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "titlePos"
                                            },
                                            "right": {
                                              "type": "ObjectExpression",
                                              "properties": [
                                                {
                                                  "type": "Property",
                                                  "key": {
                                                    "type": "Identifier",
                                                    "name": "x"
                                                  },
                                                  "value": {
                                                    "type": "BinaryExpression",
                                                    "operator": "/",
                                                    "left": {
                                                      "type": "BinaryExpression",
                                                      "operator": "+",
                                                      "left": {
                                                        "type": "BinaryExpression",
                                                        "operator": "-",
                                                        "left": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "dim"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "width"
                                                          }
                                                        },
                                                        "right": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "offsets"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "r"
                                                          }
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "offsets"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "l"
                                                        }
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": 2
                                                    }
                                                  },
                                                  "kind": "init"
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "titleOffset"
                                            },
                                            "right": {
                                              "type": "BinaryExpression",
                                              "operator": "+",
                                              "left": {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                  "type": "BinaryExpression",
                                                  "operator": "+",
                                                  "left": {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                      "type": "BinaryExpression",
                                                      "operator": "+",
                                                      "left": {
                                                        "type": "BinaryExpression",
                                                        "operator": "*",
                                                        "left": {
                                                          "type": "Identifier",
                                                          "name": "size"
                                                        },
                                                        "right": {
                                                          "type": "Identifier",
                                                          "name": "cosr"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "BinaryExpression",
                                                        "operator": "*",
                                                        "left": {
                                                          "type": "LogicalExpression",
                                                          "operator": "||",
                                                          "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "_cachedLabelWidth"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": 0
                                                          }
                                                        },
                                                        "right": {
                                                          "type": "Identifier",
                                                          "name": "sinr"
                                                        }
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "Identifier",
                                                      "name": "labelGap"
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "Math"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "max"
                                                      }
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "taMajorTick"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "length"
                                                        }
                                                      },
                                                      {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "taMinorTick"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "length"
                                                        }
                                                      }
                                                    ]
                                                  }
                                                },
                                                "right": {
                                                  "type": "Identifier",
                                                  "name": "tsize"
                                                }
                                              },
                                              "right": {
                                                "type": "Identifier",
                                                "name": "taTitleGap"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "axisVector"
                                            },
                                            "right": {
                                              "type": "ObjectExpression",
                                              "properties": [
                                                {
                                                  "type": "Property",
                                                  "key": {
                                                    "type": "Identifier",
                                                    "name": "x"
                                                  },
                                                  "value": {
                                                    "type": "Literal",
                                                    "value": 1
                                                  },
                                                  "kind": "init"
                                                },
                                                {
                                                  "type": "Property",
                                                  "key": {
                                                    "type": "Identifier",
                                                    "name": "y"
                                                  },
                                                  "value": {
                                                    "type": "Literal",
                                                    "value": 0
                                                  },
                                                  "kind": "init"
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "labelOffset"
                                            },
                                            "right": {
                                              "type": "ObjectExpression",
                                              "properties": [
                                                {
                                                  "type": "Property",
                                                  "key": {
                                                    "type": "Identifier",
                                                    "name": "x"
                                                  },
                                                  "value": {
                                                    "type": "Literal",
                                                    "value": 0
                                                  },
                                                  "kind": "init"
                                                },
                                                {
                                                  "type": "Property",
                                                  "key": {
                                                    "type": "Identifier",
                                                    "name": "y"
                                                  },
                                                  "value": {
                                                    "type": "Literal",
                                                    "value": 0
                                                  },
                                                  "kind": "init"
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "tickVector"
                                            },
                                            "right": {
                                              "type": "ObjectExpression",
                                              "properties": [
                                                {
                                                  "type": "Property",
                                                  "key": {
                                                    "type": "Identifier",
                                                    "name": "x"
                                                  },
                                                  "value": {
                                                    "type": "Literal",
                                                    "value": 0
                                                  },
                                                  "kind": "init"
                                                },
                                                {
                                                  "type": "Property",
                                                  "key": {
                                                    "type": "Identifier",
                                                    "name": "y"
                                                  },
                                                  "value": {
                                                    "type": "Literal",
                                                    "value": 1
                                                  },
                                                  "kind": "init"
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "anchorOffset"
                                            },
                                            "right": {
                                              "type": "ObjectExpression",
                                              "properties": [
                                                {
                                                  "type": "Property",
                                                  "key": {
                                                    "type": "Identifier",
                                                    "name": "x"
                                                  },
                                                  "value": {
                                                    "type": "Literal",
                                                    "value": 0
                                                  },
                                                  "kind": "init"
                                                },
                                                {
                                                  "type": "Property",
                                                  "key": {
                                                    "type": "Identifier",
                                                    "name": "y"
                                                  },
                                                  "value": {
                                                    "type": "Identifier",
                                                    "name": "labelGap"
                                                  },
                                                  "kind": "init"
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        {
                                          "type": "SwitchStatement",
                                          "discriminant": {
                                            "type": "Identifier",
                                            "name": "rotation"
                                          },
                                          "cases": [
                                            {
                                              "type": "SwitchCase",
                                              "test": {
                                                "type": "Literal",
                                                "value": 0
                                              },
                                              "consequent": [
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "labelAlign"
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": "middle"
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "labelOffset"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "y"
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "Identifier",
                                                      "name": "size"
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "BreakStatement",
                                                  "label": null
                                                }
                                              ]
                                            },
                                            {
                                              "type": "SwitchCase",
                                              "test": {
                                                "type": "Literal",
                                                "value": 90
                                              },
                                              "consequent": [
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "labelAlign"
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": "start"
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "labelOffset"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "x"
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "BinaryExpression",
                                                      "operator": "*",
                                                      "left": {
                                                        "type": "UnaryExpression",
                                                        "operator": "-",
                                                        "argument": {
                                                          "type": "Identifier",
                                                          "name": "size"
                                                        },
                                                        "prefix": true
                                                      },
                                                      "right": {
                                                        "type": "Literal",
                                                        "value": 0.4
                                                      }
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "BreakStatement",
                                                  "label": null
                                                }
                                              ]
                                            },
                                            {
                                              "type": "SwitchCase",
                                              "test": {
                                                "type": "Literal",
                                                "value": 180
                                              },
                                              "consequent": [
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "labelAlign"
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": "middle"
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "BreakStatement",
                                                  "label": null
                                                }
                                              ]
                                            },
                                            {
                                              "type": "SwitchCase",
                                              "test": {
                                                "type": "Literal",
                                                "value": 270
                                              },
                                              "consequent": [
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "labelAlign"
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": "end"
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "labelOffset"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "x"
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "BinaryExpression",
                                                      "operator": "*",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "size"
                                                      },
                                                      "right": {
                                                        "type": "Literal",
                                                        "value": 0.4
                                                      }
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "BreakStatement",
                                                  "label": null
                                                }
                                              ]
                                            },
                                            {
                                              "type": "SwitchCase",
                                              "test": null,
                                              "consequent": [
                                                {
                                                  "type": "IfStatement",
                                                  "test": {
                                                    "type": "BinaryExpression",
                                                    "operator": "<",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "rotation"
                                                    },
                                                    "right": {
                                                      "type": "BinaryExpression",
                                                      "operator": "-",
                                                      "left": {
                                                        "type": "Literal",
                                                        "value": 90
                                                      },
                                                      "right": {
                                                        "type": "Identifier",
                                                        "name": "centerAnchorLimit"
                                                      }
                                                    }
                                                  },
                                                  "consequent": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "AssignmentExpression",
                                                          "operator": "=",
                                                          "left": {
                                                            "type": "Identifier",
                                                            "name": "labelAlign"
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "start"
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "AssignmentExpression",
                                                          "operator": "=",
                                                          "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "labelOffset"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "y"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "ConditionalExpression",
                                                            "test": {
                                                              "type": "Identifier",
                                                              "name": "leftBottom"
                                                            },
                                                            "consequent": {
                                                              "type": "Identifier",
                                                              "name": "size"
                                                            },
                                                            "alternate": {
                                                              "type": "Literal",
                                                              "value": 0
                                                            }
                                                          }
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "alternate": {
                                                    "type": "IfStatement",
                                                    "test": {
                                                      "type": "BinaryExpression",
                                                      "operator": "<",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "rotation"
                                                      },
                                                      "right": {
                                                        "type": "BinaryExpression",
                                                        "operator": "+",
                                                        "left": {
                                                          "type": "Literal",
                                                          "value": 90
                                                        },
                                                        "right": {
                                                          "type": "Identifier",
                                                          "name": "centerAnchorLimit"
                                                        }
                                                      }
                                                    },
                                                    "consequent": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "labelAlign"
                                                            },
                                                            "right": {
                                                              "type": "Literal",
                                                              "value": "start"
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "labelOffset"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "x"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "BinaryExpression",
                                                              "operator": "*",
                                                              "left": {
                                                                "type": "UnaryExpression",
                                                                "operator": "-",
                                                                "argument": {
                                                                  "type": "Identifier",
                                                                  "name": "size"
                                                                },
                                                                "prefix": true
                                                              },
                                                              "right": {
                                                                "type": "Literal",
                                                                "value": 0.4
                                                              }
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "alternate": {
                                                      "type": "IfStatement",
                                                      "test": {
                                                        "type": "BinaryExpression",
                                                        "operator": "<",
                                                        "left": {
                                                          "type": "Identifier",
                                                          "name": "rotation"
                                                        },
                                                        "right": {
                                                          "type": "Literal",
                                                          "value": 180
                                                        }
                                                      },
                                                      "consequent": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "AssignmentExpression",
                                                              "operator": "=",
                                                              "left": {
                                                                "type": "Identifier",
                                                                "name": "labelAlign"
                                                              },
                                                              "right": {
                                                                "type": "Literal",
                                                                "value": "start"
                                                              }
                                                            }
                                                          },
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "AssignmentExpression",
                                                              "operator": "=",
                                                              "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "labelOffset"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "y"
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "ConditionalExpression",
                                                                "test": {
                                                                  "type": "Identifier",
                                                                  "name": "leftBottom"
                                                                },
                                                                "consequent": {
                                                                  "type": "Literal",
                                                                  "value": 0
                                                                },
                                                                "alternate": {
                                                                  "type": "UnaryExpression",
                                                                  "operator": "-",
                                                                  "argument": {
                                                                    "type": "Identifier",
                                                                    "name": "size"
                                                                  },
                                                                  "prefix": true
                                                                }
                                                              }
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      "alternate": {
                                                        "type": "IfStatement",
                                                        "test": {
                                                          "type": "BinaryExpression",
                                                          "operator": "<",
                                                          "left": {
                                                            "type": "Identifier",
                                                            "name": "rotation"
                                                          },
                                                          "right": {
                                                            "type": "BinaryExpression",
                                                            "operator": "-",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": 270
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "centerAnchorLimit"
                                                            }
                                                          }
                                                        },
                                                        "consequent": {
                                                          "type": "BlockStatement",
                                                          "body": [
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "expression": {
                                                                "type": "AssignmentExpression",
                                                                "operator": "=",
                                                                "left": {
                                                                  "type": "Identifier",
                                                                  "name": "labelAlign"
                                                                },
                                                                "right": {
                                                                  "type": "Literal",
                                                                  "value": "end"
                                                                }
                                                              }
                                                            },
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "expression": {
                                                                "type": "AssignmentExpression",
                                                                "operator": "=",
                                                                "left": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "labelOffset"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "y"
                                                                  }
                                                                },
                                                                "right": {
                                                                  "type": "ConditionalExpression",
                                                                  "test": {
                                                                    "type": "Identifier",
                                                                    "name": "leftBottom"
                                                                  },
                                                                  "consequent": {
                                                                    "type": "Literal",
                                                                    "value": 0
                                                                  },
                                                                  "alternate": {
                                                                    "type": "UnaryExpression",
                                                                    "operator": "-",
                                                                    "argument": {
                                                                      "type": "Identifier",
                                                                      "name": "size"
                                                                    },
                                                                    "prefix": true
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        },
                                                        "alternate": {
                                                          "type": "IfStatement",
                                                          "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "<",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "rotation"
                                                            },
                                                            "right": {
                                                              "type": "BinaryExpression",
                                                              "operator": "+",
                                                              "left": {
                                                                "type": "Literal",
                                                                "value": 270
                                                              },
                                                              "right": {
                                                                "type": "Identifier",
                                                                "name": "centerAnchorLimit"
                                                              }
                                                            }
                                                          },
                                                          "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                              {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                  "type": "AssignmentExpression",
                                                                  "operator": "=",
                                                                  "left": {
                                                                    "type": "Identifier",
                                                                    "name": "labelAlign"
                                                                  },
                                                                  "right": {
                                                                    "type": "Literal",
                                                                    "value": "end"
                                                                  }
                                                                }
                                                              },
                                                              {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                  "type": "AssignmentExpression",
                                                                  "operator": "=",
                                                                  "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "labelOffset"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "y"
                                                                    }
                                                                  },
                                                                  "right": {
                                                                    "type": "ConditionalExpression",
                                                                    "test": {
                                                                      "type": "Identifier",
                                                                      "name": "leftBottom"
                                                                    },
                                                                    "consequent": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "*",
                                                                      "left": {
                                                                        "type": "Identifier",
                                                                        "name": "size"
                                                                      },
                                                                      "right": {
                                                                        "type": "Literal",
                                                                        "value": 0.4
                                                                      }
                                                                    },
                                                                    "alternate": {
                                                                      "type": "Literal",
                                                                      "value": 0
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            ]
                                                          },
                                                          "alternate": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                              {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                  "type": "AssignmentExpression",
                                                                  "operator": "=",
                                                                  "left": {
                                                                    "type": "Identifier",
                                                                    "name": "labelAlign"
                                                                  },
                                                                  "right": {
                                                                    "type": "Literal",
                                                                    "value": "end"
                                                                  }
                                                                }
                                                              },
                                                              {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                  "type": "AssignmentExpression",
                                                                  "operator": "=",
                                                                  "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "labelOffset"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "y"
                                                                    }
                                                                  },
                                                                  "right": {
                                                                    "type": "ConditionalExpression",
                                                                    "test": {
                                                                      "type": "Identifier",
                                                                      "name": "leftBottom"
                                                                    },
                                                                    "consequent": {
                                                                      "type": "Identifier",
                                                                      "name": "size"
                                                                    },
                                                                    "alternate": {
                                                                      "type": "Literal",
                                                                      "value": 0
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            ]
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "IfStatement",
                                          "test": {
                                            "type": "Identifier",
                                            "name": "leftBottom"
                                          },
                                          "consequent": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "AssignmentExpression",
                                                  "operator": "=",
                                                  "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "start"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "y"
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "stop"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "y"
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "BinaryExpression",
                                                      "operator": "-",
                                                      "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "dim"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "height"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "offsets"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "b"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "AssignmentExpression",
                                                  "operator": "=",
                                                  "left": {
                                                    "type": "Identifier",
                                                    "name": "titleRotation"
                                                  },
                                                  "right": {
                                                    "type": "ConditionalExpression",
                                                    "test": {
                                                      "type": "LogicalExpression",
                                                      "operator": "&&",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "taTitleOrientation"
                                                      },
                                                      "right": {
                                                        "type": "BinaryExpression",
                                                        "operator": "==",
                                                        "left": {
                                                          "type": "Identifier",
                                                          "name": "taTitleOrientation"
                                                        },
                                                        "right": {
                                                          "type": "Literal",
                                                          "value": "axis"
                                                        }
                                                      }
                                                    },
                                                    "consequent": {
                                                      "type": "Literal",
                                                      "value": 180
                                                    },
                                                    "alternate": {
                                                      "type": "Literal",
                                                      "value": 0
                                                    }
                                                  }
                                                }
                                              },
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "AssignmentExpression",
                                                  "operator": "=",
                                                  "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "titlePos"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "y"
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "-",
                                                    "left": {
                                                      "type": "BinaryExpression",
                                                      "operator": "+",
                                                      "left": {
                                                        "type": "BinaryExpression",
                                                        "operator": "-",
                                                        "left": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "dim"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "height"
                                                          }
                                                        },
                                                        "right": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "offsets"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "b"
                                                          }
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "Identifier",
                                                        "name": "titleOffset"
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "ConditionalExpression",
                                                      "test": {
                                                        "type": "Identifier",
                                                        "name": "titleRotation"
                                                      },
                                                      "consequent": {
                                                        "type": "Identifier",
                                                        "name": "tsize"
                                                      },
                                                      "alternate": {
                                                        "type": "Literal",
                                                        "value": 0
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            ]
                                          },
                                          "alternate": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "AssignmentExpression",
                                                  "operator": "=",
                                                  "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "start"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "y"
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "stop"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "y"
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "offsets"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "t"
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "AssignmentExpression",
                                                  "operator": "=",
                                                  "left": {
                                                    "type": "Identifier",
                                                    "name": "titleRotation"
                                                  },
                                                  "right": {
                                                    "type": "ConditionalExpression",
                                                    "test": {
                                                      "type": "LogicalExpression",
                                                      "operator": "&&",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "taTitleOrientation"
                                                      },
                                                      "right": {
                                                        "type": "BinaryExpression",
                                                        "operator": "==",
                                                        "left": {
                                                          "type": "Identifier",
                                                          "name": "taTitleOrientation"
                                                        },
                                                        "right": {
                                                          "type": "Literal",
                                                          "value": "away"
                                                        }
                                                      }
                                                    },
                                                    "consequent": {
                                                      "type": "Literal",
                                                      "value": 180
                                                    },
                                                    "alternate": {
                                                      "type": "Literal",
                                                      "value": 0
                                                    }
                                                  }
                                                }
                                              },
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "AssignmentExpression",
                                                  "operator": "=",
                                                  "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "titlePos"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "y"
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                      "type": "BinaryExpression",
                                                      "operator": "-",
                                                      "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "offsets"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "t"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "Identifier",
                                                        "name": "titleOffset"
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "ConditionalExpression",
                                                      "test": {
                                                        "type": "Identifier",
                                                        "name": "titleRotation"
                                                      },
                                                      "consequent": {
                                                        "type": "Literal",
                                                        "value": 0
                                                      },
                                                      "alternate": {
                                                        "type": "Identifier",
                                                        "name": "tsize"
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "AssignmentExpression",
                                                  "operator": "=",
                                                  "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "tickVector"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "y"
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "UnaryExpression",
                                                    "operator": "-",
                                                    "argument": {
                                                      "type": "Literal",
                                                      "value": 1
                                                    },
                                                    "prefix": true
                                                  }
                                                }
                                              },
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "AssignmentExpression",
                                                  "operator": "=",
                                                  "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "anchorOffset"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "y"
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "UnaryExpression",
                                                    "operator": "-",
                                                    "argument": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "anchorOffset"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "y"
                                                      }
                                                    },
                                                    "prefix": true
                                                  }
                                                }
                                              },
                                              {
                                                "type": "SwitchStatement",
                                                "discriminant": {
                                                  "type": "Identifier",
                                                  "name": "labelAlign"
                                                },
                                                "cases": [
                                                  {
                                                    "type": "SwitchCase",
                                                    "test": {
                                                      "type": "Literal",
                                                      "value": "start"
                                                    },
                                                    "consequent": [
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "AssignmentExpression",
                                                          "operator": "=",
                                                          "left": {
                                                            "type": "Identifier",
                                                            "name": "labelAlign"
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "end"
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "type": "BreakStatement",
                                                        "label": null
                                                      }
                                                    ]
                                                  },
                                                  {
                                                    "type": "SwitchCase",
                                                    "test": {
                                                      "type": "Literal",
                                                      "value": "end"
                                                    },
                                                    "consequent": [
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "AssignmentExpression",
                                                          "operator": "=",
                                                          "left": {
                                                            "type": "Identifier",
                                                            "name": "labelAlign"
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "start"
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "type": "BreakStatement",
                                                        "label": null
                                                      }
                                                    ]
                                                  },
                                                  {
                                                    "type": "SwitchCase",
                                                    "test": {
                                                      "type": "Literal",
                                                      "value": "middle"
                                                    },
                                                    "consequent": [
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "AssignmentExpression",
                                                          "operator": "-=",
                                                          "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "labelOffset"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "y"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Identifier",
                                                            "name": "size"
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "type": "BreakStatement",
                                                        "label": null
                                                      }
                                                    ]
                                                  }
                                                ]
                                              }
                                            ]
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "ThisExpression"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "cleanGroup"
                                        }
                                      },
                                      "arguments": []
                                    }
                                  },
                                  {
                                    "type": "TryStatement",
                                    "block": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "VariableDeclaration",
                                          "declarations": [
                                            {
                                              "type": "VariableDeclarator",
                                              "id": {
                                                "type": "Identifier",
                                                "name": "s"
                                              },
                                              "init": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "ThisExpression"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "group"
                                                }
                                              }
                                            },
                                            {
                                              "type": "VariableDeclarator",
                                              "id": {
                                                "type": "Identifier",
                                                "name": "c"
                                              },
                                              "init": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "ThisExpression"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "scaler"
                                                }
                                              }
                                            },
                                            {
                                              "type": "VariableDeclarator",
                                              "id": {
                                                "type": "Identifier",
                                                "name": "t"
                                              },
                                              "init": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "ThisExpression"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "ticks"
                                                }
                                              }
                                            },
                                            {
                                              "type": "VariableDeclarator",
                                              "id": {
                                                "type": "Identifier",
                                                "name": "canLabel"
                                              },
                                              "init": null
                                            },
                                            {
                                              "type": "VariableDeclarator",
                                              "id": {
                                                "type": "Identifier",
                                                "name": "f"
                                              },
                                              "init": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "lin"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "getTransformerFromModel"
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "scaler"
                                                    }
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "type": "VariableDeclarator",
                                              "id": {
                                                "type": "Identifier",
                                                "name": "labelType"
                                              },
                                              "init": {
                                                "type": "ConditionalExpression",
                                                "test": {
                                                  "type": "LogicalExpression",
                                                  "operator": "&&",
                                                  "left": {
                                                    "type": "LogicalExpression",
                                                    "operator": "&&",
                                                    "left": {
                                                      "type": "LogicalExpression",
                                                      "operator": "&&",
                                                      "left": {
                                                        "type": "LogicalExpression",
                                                        "operator": "&&",
                                                        "left": {
                                                          "type": "LogicalExpression",
                                                          "operator": "||",
                                                          "left": {
                                                            "type": "UnaryExpression",
                                                            "operator": "!",
                                                            "argument": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "o"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "title"
                                                              }
                                                            },
                                                            "prefix": true
                                                          },
                                                          "right": {
                                                            "type": "UnaryExpression",
                                                            "operator": "!",
                                                            "argument": {
                                                              "type": "Identifier",
                                                              "name": "titleRotation"
                                                            },
                                                            "prefix": true
                                                          }
                                                        },
                                                        "right": {
                                                          "type": "UnaryExpression",
                                                          "operator": "!",
                                                          "argument": {
                                                            "type": "Identifier",
                                                            "name": "rotation"
                                                          },
                                                          "prefix": true
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "ThisExpression"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "opt"
                                                          }
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "htmlLabels"
                                                        }
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "UnaryExpression",
                                                      "operator": "!",
                                                      "argument": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "Identifier",
                                                          "name": "has"
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Literal",
                                                            "value": "ie"
                                                          }
                                                        ]
                                                      },
                                                      "prefix": true
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "UnaryExpression",
                                                    "operator": "!",
                                                    "argument": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "Identifier",
                                                        "name": "has"
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Literal",
                                                          "value": "opera"
                                                        }
                                                      ]
                                                    },
                                                    "prefix": true
                                                  }
                                                },
                                                "consequent": {
                                                  "type": "Literal",
                                                  "value": "html"
                                                },
                                                "alternate": {
                                                  "type": "Literal",
                                                  "value": "gfx"
                                                }
                                              }
                                            },
                                            {
                                              "type": "VariableDeclarator",
                                              "id": {
                                                "type": "Identifier",
                                                "name": "dx"
                                              },
                                              "init": {
                                                "type": "BinaryExpression",
                                                "operator": "*",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "tickVector"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "x"
                                                  }
                                                },
                                                "right": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "taMajorTick"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "length"
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "type": "VariableDeclarator",
                                              "id": {
                                                "type": "Identifier",
                                                "name": "dy"
                                              },
                                              "init": {
                                                "type": "BinaryExpression",
                                                "operator": "*",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "tickVector"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "y"
                                                  }
                                                },
                                                "right": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "taMajorTick"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "length"
                                                  }
                                                }
                                              }
                                            }
                                          ],
                                          "kind": "var"
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "s"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "createLine"
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "ObjectExpression",
                                                    "properties": [
                                                      {
                                                        "type": "Property",
                                                        "key": {
                                                          "type": "Identifier",
                                                          "name": "x1"
                                                        },
                                                        "value": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "start"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "x"
                                                          }
                                                        },
                                                        "kind": "init"
                                                      },
                                                      {
                                                        "type": "Property",
                                                        "key": {
                                                          "type": "Identifier",
                                                          "name": "y1"
                                                        },
                                                        "value": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "start"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "y"
                                                          }
                                                        },
                                                        "kind": "init"
                                                      },
                                                      {
                                                        "type": "Property",
                                                        "key": {
                                                          "type": "Identifier",
                                                          "name": "x2"
                                                        },
                                                        "value": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "stop"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "x"
                                                          }
                                                        },
                                                        "kind": "init"
                                                      },
                                                      {
                                                        "type": "Property",
                                                        "key": {
                                                          "type": "Identifier",
                                                          "name": "y2"
                                                        },
                                                        "value": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "stop"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "y"
                                                          }
                                                        },
                                                        "kind": "init"
                                                      }
                                                    ]
                                                  }
                                                ]
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "setStroke"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "Identifier",
                                                "name": "taStroke"
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "IfStatement",
                                          "test": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "o"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "title"
                                            }
                                          },
                                          "consequent": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "VariableDeclaration",
                                                "declarations": [
                                                  {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                      "type": "Identifier",
                                                      "name": "axisTitle"
                                                    },
                                                    "init": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "acommon"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "createText"
                                                          }
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "labelType"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "ThisExpression"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "chart"
                                                          }
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "name": "s"
                                                        },
                                                        {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "titlePos"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "x"
                                                          }
                                                        },
                                                        {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "titlePos"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "y"
                                                          }
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": "middle"
                                                        },
                                                        {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "o"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "title"
                                                          }
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "name": "taTitleFont"
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "name": "taTitleFontColor"
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ],
                                                "kind": "var"
                                              },
                                              {
                                                "type": "IfStatement",
                                                "test": {
                                                  "type": "BinaryExpression",
                                                  "operator": "==",
                                                  "left": {
                                                    "type": "Identifier",
                                                    "name": "labelType"
                                                  },
                                                  "right": {
                                                    "type": "Literal",
                                                    "value": "html"
                                                  }
                                                },
                                                "consequent": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "htmlElements"
                                                            }
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "push"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Identifier",
                                                            "name": "axisTitle"
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  ]
                                                },
                                                "alternate": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "axisTitle"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "setTransform"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "g"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "matrix"
                                                                }
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "rotategAt"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "Identifier",
                                                                "name": "titleRotation"
                                                              },
                                                              {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "titlePos"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "x"
                                                                }
                                                              },
                                                              {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "titlePos"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "y"
                                                                }
                                                              }
                                                            ]
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  ]
                                                }
                                              }
                                            ]
                                          },
                                          "alternate": null
                                        },
                                        {
                                          "type": "IfStatement",
                                          "test": {
                                            "type": "BinaryExpression",
                                            "operator": "==",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "t"
                                            },
                                            "right": {
                                              "type": "Literal",
                                              "value": null
                                            }
                                          },
                                          "consequent": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "AssignmentExpression",
                                                  "operator": "=",
                                                  "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "dirty"
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "Literal",
                                                    "value": false
                                                  }
                                                }
                                              },
                                              {
                                                "type": "ReturnStatement",
                                                "argument": {
                                                  "type": "ThisExpression"
                                                }
                                              }
                                            ]
                                          },
                                          "alternate": null
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "arr"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "forEach"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "t"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "major"
                                                }
                                              },
                                              {
                                                "type": "FunctionExpression",
                                                "id": null,
                                                "params": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "tick"
                                                  }
                                                ],
                                                "defaults": [],
                                                "body": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "VariableDeclaration",
                                                      "declarations": [
                                                        {
                                                          "type": "VariableDeclarator",
                                                          "id": {
                                                            "type": "Identifier",
                                                            "name": "offset"
                                                          },
                                                          "init": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "Identifier",
                                                              "name": "f"
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "tick"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "value"
                                                                }
                                                              }
                                                            ]
                                                          }
                                                        },
                                                        {
                                                          "type": "VariableDeclarator",
                                                          "id": {
                                                            "type": "Identifier",
                                                            "name": "elem"
                                                          },
                                                          "init": null
                                                        },
                                                        {
                                                          "type": "VariableDeclarator",
                                                          "id": {
                                                            "type": "Identifier",
                                                            "name": "x"
                                                          },
                                                          "init": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "start"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "x"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "BinaryExpression",
                                                              "operator": "*",
                                                              "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "axisVector"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "x"
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "Identifier",
                                                                "name": "offset"
                                                              }
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "VariableDeclarator",
                                                          "id": {
                                                            "type": "Identifier",
                                                            "name": "y"
                                                          },
                                                          "init": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "start"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "y"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "BinaryExpression",
                                                              "operator": "*",
                                                              "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "axisVector"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "y"
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "Identifier",
                                                                "name": "offset"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      ],
                                                      "kind": "var"
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "ThisExpression"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "createLine"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "Identifier",
                                                                "name": "s"
                                                              },
                                                              {
                                                                "type": "ObjectExpression",
                                                                "properties": [
                                                                  {
                                                                    "type": "Property",
                                                                    "key": {
                                                                      "type": "Identifier",
                                                                      "name": "x1"
                                                                    },
                                                                    "value": {
                                                                      "type": "Identifier",
                                                                      "name": "x"
                                                                    },
                                                                    "kind": "init"
                                                                  },
                                                                  {
                                                                    "type": "Property",
                                                                    "key": {
                                                                      "type": "Identifier",
                                                                      "name": "y1"
                                                                    },
                                                                    "value": {
                                                                      "type": "Identifier",
                                                                      "name": "y"
                                                                    },
                                                                    "kind": "init"
                                                                  },
                                                                  {
                                                                    "type": "Property",
                                                                    "key": {
                                                                      "type": "Identifier",
                                                                      "name": "x2"
                                                                    },
                                                                    "value": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "+",
                                                                      "left": {
                                                                        "type": "Identifier",
                                                                        "name": "x"
                                                                      },
                                                                      "right": {
                                                                        "type": "Identifier",
                                                                        "name": "dx"
                                                                      }
                                                                    },
                                                                    "kind": "init"
                                                                  },
                                                                  {
                                                                    "type": "Property",
                                                                    "key": {
                                                                      "type": "Identifier",
                                                                      "name": "y2"
                                                                    },
                                                                    "value": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "+",
                                                                      "left": {
                                                                        "type": "Identifier",
                                                                        "name": "y"
                                                                      },
                                                                      "right": {
                                                                        "type": "Identifier",
                                                                        "name": "dy"
                                                                      }
                                                                    },
                                                                    "kind": "init"
                                                                  }
                                                                ]
                                                              }
                                                            ]
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "setStroke"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Identifier",
                                                            "name": "taMajorTick"
                                                          }
                                                        ]
                                                      }
                                                    },
                                                    {
                                                      "type": "IfStatement",
                                                      "test": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "tick"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "label"
                                                        }
                                                      },
                                                      "consequent": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "VariableDeclaration",
                                                            "declarations": [
                                                              {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                  "type": "Identifier",
                                                                  "name": "label"
                                                                },
                                                                "init": {
                                                                  "type": "ConditionalExpression",
                                                                  "test": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "o"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "maxLabelCharCount"
                                                                    }
                                                                  },
                                                                  "consequent": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "ThisExpression"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "getTextWithLimitCharCount"
                                                                      }
                                                                    },
                                                                    "arguments": [
                                                                      {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "tick"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "label"
                                                                        }
                                                                      },
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "taFont"
                                                                      },
                                                                      {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "o"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "maxLabelCharCount"
                                                                        }
                                                                      }
                                                                    ]
                                                                  },
                                                                  "alternate": {
                                                                    "type": "ObjectExpression",
                                                                    "properties": [
                                                                      {
                                                                        "type": "Property",
                                                                        "key": {
                                                                          "type": "Identifier",
                                                                          "name": "text"
                                                                        },
                                                                        "value": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "tick"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "label"
                                                                          }
                                                                        },
                                                                        "kind": "init"
                                                                      },
                                                                      {
                                                                        "type": "Property",
                                                                        "key": {
                                                                          "type": "Identifier",
                                                                          "name": "truncated"
                                                                        },
                                                                        "value": {
                                                                          "type": "Literal",
                                                                          "value": false
                                                                        },
                                                                        "kind": "init"
                                                                      }
                                                                    ]
                                                                  }
                                                                }
                                                              }
                                                            ],
                                                            "kind": "var"
                                                          },
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "AssignmentExpression",
                                                              "operator": "=",
                                                              "left": {
                                                                "type": "Identifier",
                                                                "name": "label"
                                                              },
                                                              "right": {
                                                                "type": "ConditionalExpression",
                                                                "test": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "o"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "maxLabelSize"
                                                                  }
                                                                },
                                                                "consequent": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "getTextWithLimitLength"
                                                                    }
                                                                  },
                                                                  "arguments": [
                                                                    {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "label"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "text"
                                                                      }
                                                                    },
                                                                    {
                                                                      "type": "Identifier",
                                                                      "name": "taFont"
                                                                    },
                                                                    {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "o"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "maxLabelSize"
                                                                      }
                                                                    },
                                                                    {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "label"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "truncated"
                                                                      }
                                                                    }
                                                                  ]
                                                                },
                                                                "alternate": {
                                                                  "type": "Identifier",
                                                                  "name": "label"
                                                                }
                                                              }
                                                            }
                                                          },
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "AssignmentExpression",
                                                              "operator": "=",
                                                              "left": {
                                                                "type": "Identifier",
                                                                "name": "elem"
                                                              },
                                                              "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "ThisExpression"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "createText"
                                                                  }
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "labelType"
                                                                  },
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "s"
                                                                  },
                                                                  {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "+",
                                                                    "left": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "+",
                                                                      "left": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "+",
                                                                        "left": {
                                                                          "type": "Identifier",
                                                                          "name": "x"
                                                                        },
                                                                        "right": {
                                                                          "type": "Identifier",
                                                                          "name": "dx"
                                                                        }
                                                                      },
                                                                      "right": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "anchorOffset"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "x"
                                                                        }
                                                                      }
                                                                    },
                                                                    "right": {
                                                                      "type": "ConditionalExpression",
                                                                      "test": {
                                                                        "type": "Identifier",
                                                                        "name": "rotation"
                                                                      },
                                                                      "consequent": {
                                                                        "type": "Literal",
                                                                        "value": 0
                                                                      },
                                                                      "alternate": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "labelOffset"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "x"
                                                                        }
                                                                      }
                                                                    }
                                                                  },
                                                                  {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "+",
                                                                    "left": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "+",
                                                                      "left": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "+",
                                                                        "left": {
                                                                          "type": "Identifier",
                                                                          "name": "y"
                                                                        },
                                                                        "right": {
                                                                          "type": "Identifier",
                                                                          "name": "dy"
                                                                        }
                                                                      },
                                                                      "right": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "anchorOffset"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "y"
                                                                        }
                                                                      }
                                                                    },
                                                                    "right": {
                                                                      "type": "ConditionalExpression",
                                                                      "test": {
                                                                        "type": "Identifier",
                                                                        "name": "rotation"
                                                                      },
                                                                      "consequent": {
                                                                        "type": "Literal",
                                                                        "value": 0
                                                                      },
                                                                      "alternate": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "labelOffset"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "y"
                                                                        }
                                                                      }
                                                                    }
                                                                  },
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "labelAlign"
                                                                  },
                                                                  {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "label"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "text"
                                                                    }
                                                                  },
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "taFont"
                                                                  },
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "taFontColor"
                                                                  }
                                                                ]
                                                              }
                                                            }
                                                          },
                                                          {
                                                            "type": "IfStatement",
                                                            "test": {
                                                              "type": "LogicalExpression",
                                                              "operator": "&&",
                                                              "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "ThisExpression"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "chart"
                                                                  }
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "truncateBidi"
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "label"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "truncated"
                                                                }
                                                              }
                                                            },
                                                            "consequent": {
                                                              "type": "BlockStatement",
                                                              "body": [
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "expression": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "chart"
                                                                        }
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "truncateBidi"
                                                                      }
                                                                    },
                                                                    "arguments": [
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "elem"
                                                                      },
                                                                      {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "tick"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "label"
                                                                        }
                                                                      },
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "labelType"
                                                                      }
                                                                    ]
                                                                  }
                                                                }
                                                              ]
                                                            },
                                                            "alternate": null
                                                          },
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "LogicalExpression",
                                                              "operator": "&&",
                                                              "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "label"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "truncated"
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "ThisExpression"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "labelTooltip"
                                                                  }
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "elem"
                                                                  },
                                                                  {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "chart"
                                                                    }
                                                                  },
                                                                  {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "tick"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "label"
                                                                    }
                                                                  },
                                                                  {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "label"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "text"
                                                                    }
                                                                  },
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "taFont"
                                                                  },
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "labelType"
                                                                  }
                                                                ]
                                                              }
                                                            }
                                                          },
                                                          {
                                                            "type": "IfStatement",
                                                            "test": {
                                                              "type": "BinaryExpression",
                                                              "operator": "==",
                                                              "left": {
                                                                "type": "Identifier",
                                                                "name": "labelType"
                                                              },
                                                              "right": {
                                                                "type": "Literal",
                                                                "value": "html"
                                                              }
                                                            },
                                                            "consequent": {
                                                              "type": "BlockStatement",
                                                              "body": [
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "expression": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "htmlElements"
                                                                        }
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "push"
                                                                      }
                                                                    },
                                                                    "arguments": [
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "elem"
                                                                      }
                                                                    ]
                                                                  }
                                                                }
                                                              ]
                                                            },
                                                            "alternate": {
                                                              "type": "IfStatement",
                                                              "test": {
                                                                "type": "Identifier",
                                                                "name": "rotation"
                                                              },
                                                              "consequent": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                  {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "elem"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "setTransform"
                                                                        }
                                                                      },
                                                                      "arguments": [
                                                                        {
                                                                          "type": "ArrayExpression",
                                                                          "elements": [
                                                                            {
                                                                              "type": "ObjectExpression",
                                                                              "properties": [
                                                                                {
                                                                                  "type": "Property",
                                                                                  "key": {
                                                                                    "type": "Identifier",
                                                                                    "name": "dx"
                                                                                  },
                                                                                  "value": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "labelOffset"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "x"
                                                                                    }
                                                                                  },
                                                                                  "kind": "init"
                                                                                },
                                                                                {
                                                                                  "type": "Property",
                                                                                  "key": {
                                                                                    "type": "Identifier",
                                                                                    "name": "dy"
                                                                                  },
                                                                                  "value": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "labelOffset"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "y"
                                                                                    }
                                                                                  },
                                                                                  "kind": "init"
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "CallExpression",
                                                                              "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "MemberExpression",
                                                                                  "computed": false,
                                                                                  "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "g"
                                                                                  },
                                                                                  "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "matrix"
                                                                                  }
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "rotategAt"
                                                                                }
                                                                              },
                                                                              "arguments": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "name": "rotation"
                                                                                },
                                                                                {
                                                                                  "type": "BinaryExpression",
                                                                                  "operator": "+",
                                                                                  "left": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "+",
                                                                                    "left": {
                                                                                      "type": "Identifier",
                                                                                      "name": "x"
                                                                                    },
                                                                                    "right": {
                                                                                      "type": "Identifier",
                                                                                      "name": "dx"
                                                                                    }
                                                                                  },
                                                                                  "right": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "anchorOffset"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "x"
                                                                                    }
                                                                                  }
                                                                                },
                                                                                {
                                                                                  "type": "BinaryExpression",
                                                                                  "operator": "+",
                                                                                  "left": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "+",
                                                                                    "left": {
                                                                                      "type": "Identifier",
                                                                                      "name": "y"
                                                                                    },
                                                                                    "right": {
                                                                                      "type": "Identifier",
                                                                                      "name": "dy"
                                                                                    }
                                                                                  },
                                                                                  "right": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "anchorOffset"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "y"
                                                                                    }
                                                                                  }
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  }
                                                                ]
                                                              },
                                                              "alternate": null
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      "alternate": null
                                                    }
                                                  ]
                                                },
                                                "rest": null,
                                                "generator": false,
                                                "expression": false
                                              },
                                              {
                                                "type": "ThisExpression"
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "dx"
                                            },
                                            "right": {
                                              "type": "BinaryExpression",
                                              "operator": "*",
                                              "left": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "tickVector"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "x"
                                                }
                                              },
                                              "right": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "taMinorTick"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "length"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "dy"
                                            },
                                            "right": {
                                              "type": "BinaryExpression",
                                              "operator": "*",
                                              "left": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "tickVector"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "y"
                                                }
                                              },
                                              "right": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "taMinorTick"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "length"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "canLabel"
                                            },
                                            "right": {
                                              "type": "BinaryExpression",
                                              "operator": "<=",
                                              "left": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "c"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "minMinorStep"
                                                }
                                              },
                                              "right": {
                                                "type": "BinaryExpression",
                                                "operator": "*",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "c"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "minor"
                                                    }
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "tick"
                                                  }
                                                },
                                                "right": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "c"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "bounds"
                                                    }
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "scale"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "arr"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "forEach"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "t"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "minor"
                                                }
                                              },
                                              {
                                                "type": "FunctionExpression",
                                                "id": null,
                                                "params": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "tick"
                                                  }
                                                ],
                                                "defaults": [],
                                                "body": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "VariableDeclaration",
                                                      "declarations": [
                                                        {
                                                          "type": "VariableDeclarator",
                                                          "id": {
                                                            "type": "Identifier",
                                                            "name": "offset"
                                                          },
                                                          "init": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "Identifier",
                                                              "name": "f"
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "tick"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "value"
                                                                }
                                                              }
                                                            ]
                                                          }
                                                        },
                                                        {
                                                          "type": "VariableDeclarator",
                                                          "id": {
                                                            "type": "Identifier",
                                                            "name": "elem"
                                                          },
                                                          "init": null
                                                        },
                                                        {
                                                          "type": "VariableDeclarator",
                                                          "id": {
                                                            "type": "Identifier",
                                                            "name": "x"
                                                          },
                                                          "init": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "start"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "x"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "BinaryExpression",
                                                              "operator": "*",
                                                              "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "axisVector"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "x"
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "Identifier",
                                                                "name": "offset"
                                                              }
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "VariableDeclarator",
                                                          "id": {
                                                            "type": "Identifier",
                                                            "name": "y"
                                                          },
                                                          "init": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "start"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "y"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "BinaryExpression",
                                                              "operator": "*",
                                                              "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "axisVector"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "y"
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "Identifier",
                                                                "name": "offset"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      ],
                                                      "kind": "var"
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "ThisExpression"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "createLine"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "Identifier",
                                                                "name": "s"
                                                              },
                                                              {
                                                                "type": "ObjectExpression",
                                                                "properties": [
                                                                  {
                                                                    "type": "Property",
                                                                    "key": {
                                                                      "type": "Identifier",
                                                                      "name": "x1"
                                                                    },
                                                                    "value": {
                                                                      "type": "Identifier",
                                                                      "name": "x"
                                                                    },
                                                                    "kind": "init"
                                                                  },
                                                                  {
                                                                    "type": "Property",
                                                                    "key": {
                                                                      "type": "Identifier",
                                                                      "name": "y1"
                                                                    },
                                                                    "value": {
                                                                      "type": "Identifier",
                                                                      "name": "y"
                                                                    },
                                                                    "kind": "init"
                                                                  },
                                                                  {
                                                                    "type": "Property",
                                                                    "key": {
                                                                      "type": "Identifier",
                                                                      "name": "x2"
                                                                    },
                                                                    "value": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "+",
                                                                      "left": {
                                                                        "type": "Identifier",
                                                                        "name": "x"
                                                                      },
                                                                      "right": {
                                                                        "type": "Identifier",
                                                                        "name": "dx"
                                                                      }
                                                                    },
                                                                    "kind": "init"
                                                                  },
                                                                  {
                                                                    "type": "Property",
                                                                    "key": {
                                                                      "type": "Identifier",
                                                                      "name": "y2"
                                                                    },
                                                                    "value": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "+",
                                                                      "left": {
                                                                        "type": "Identifier",
                                                                        "name": "y"
                                                                      },
                                                                      "right": {
                                                                        "type": "Identifier",
                                                                        "name": "dy"
                                                                      }
                                                                    },
                                                                    "kind": "init"
                                                                  }
                                                                ]
                                                              }
                                                            ]
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "setStroke"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Identifier",
                                                            "name": "taMinorTick"
                                                          }
                                                        ]
                                                      }
                                                    },
                                                    {
                                                      "type": "IfStatement",
                                                      "test": {
                                                        "type": "LogicalExpression",
                                                        "operator": "&&",
                                                        "left": {
                                                          "type": "Identifier",
                                                          "name": "canLabel"
                                                        },
                                                        "right": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "tick"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "label"
                                                          }
                                                        }
                                                      },
                                                      "consequent": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "VariableDeclaration",
                                                            "declarations": [
                                                              {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                  "type": "Identifier",
                                                                  "name": "label"
                                                                },
                                                                "init": {
                                                                  "type": "ConditionalExpression",
                                                                  "test": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "o"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "maxLabelCharCount"
                                                                    }
                                                                  },
                                                                  "consequent": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "ThisExpression"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "getTextWithLimitCharCount"
                                                                      }
                                                                    },
                                                                    "arguments": [
                                                                      {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "tick"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "label"
                                                                        }
                                                                      },
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "taFont"
                                                                      },
                                                                      {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "o"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "maxLabelCharCount"
                                                                        }
                                                                      }
                                                                    ]
                                                                  },
                                                                  "alternate": {
                                                                    "type": "ObjectExpression",
                                                                    "properties": [
                                                                      {
                                                                        "type": "Property",
                                                                        "key": {
                                                                          "type": "Identifier",
                                                                          "name": "text"
                                                                        },
                                                                        "value": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "tick"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "label"
                                                                          }
                                                                        },
                                                                        "kind": "init"
                                                                      },
                                                                      {
                                                                        "type": "Property",
                                                                        "key": {
                                                                          "type": "Identifier",
                                                                          "name": "truncated"
                                                                        },
                                                                        "value": {
                                                                          "type": "Literal",
                                                                          "value": false
                                                                        },
                                                                        "kind": "init"
                                                                      }
                                                                    ]
                                                                  }
                                                                }
                                                              }
                                                            ],
                                                            "kind": "var"
                                                          },
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "AssignmentExpression",
                                                              "operator": "=",
                                                              "left": {
                                                                "type": "Identifier",
                                                                "name": "label"
                                                              },
                                                              "right": {
                                                                "type": "ConditionalExpression",
                                                                "test": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "o"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "maxLabelSize"
                                                                  }
                                                                },
                                                                "consequent": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "getTextWithLimitLength"
                                                                    }
                                                                  },
                                                                  "arguments": [
                                                                    {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "label"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "text"
                                                                      }
                                                                    },
                                                                    {
                                                                      "type": "Identifier",
                                                                      "name": "taFont"
                                                                    },
                                                                    {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "o"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "maxLabelSize"
                                                                      }
                                                                    },
                                                                    {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "label"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "truncated"
                                                                      }
                                                                    }
                                                                  ]
                                                                },
                                                                "alternate": {
                                                                  "type": "Identifier",
                                                                  "name": "label"
                                                                }
                                                              }
                                                            }
                                                          },
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "AssignmentExpression",
                                                              "operator": "=",
                                                              "left": {
                                                                "type": "Identifier",
                                                                "name": "elem"
                                                              },
                                                              "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "ThisExpression"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "createText"
                                                                  }
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "labelType"
                                                                  },
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "s"
                                                                  },
                                                                  {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "+",
                                                                    "left": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "+",
                                                                      "left": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "+",
                                                                        "left": {
                                                                          "type": "Identifier",
                                                                          "name": "x"
                                                                        },
                                                                        "right": {
                                                                          "type": "Identifier",
                                                                          "name": "dx"
                                                                        }
                                                                      },
                                                                      "right": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "anchorOffset"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "x"
                                                                        }
                                                                      }
                                                                    },
                                                                    "right": {
                                                                      "type": "ConditionalExpression",
                                                                      "test": {
                                                                        "type": "Identifier",
                                                                        "name": "rotation"
                                                                      },
                                                                      "consequent": {
                                                                        "type": "Literal",
                                                                        "value": 0
                                                                      },
                                                                      "alternate": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "labelOffset"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "x"
                                                                        }
                                                                      }
                                                                    }
                                                                  },
                                                                  {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "+",
                                                                    "left": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "+",
                                                                      "left": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "+",
                                                                        "left": {
                                                                          "type": "Identifier",
                                                                          "name": "y"
                                                                        },
                                                                        "right": {
                                                                          "type": "Identifier",
                                                                          "name": "dy"
                                                                        }
                                                                      },
                                                                      "right": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "anchorOffset"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "y"
                                                                        }
                                                                      }
                                                                    },
                                                                    "right": {
                                                                      "type": "ConditionalExpression",
                                                                      "test": {
                                                                        "type": "Identifier",
                                                                        "name": "rotation"
                                                                      },
                                                                      "consequent": {
                                                                        "type": "Literal",
                                                                        "value": 0
                                                                      },
                                                                      "alternate": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "labelOffset"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "y"
                                                                        }
                                                                      }
                                                                    }
                                                                  },
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "labelAlign"
                                                                  },
                                                                  {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "label"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "text"
                                                                    }
                                                                  },
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "taFont"
                                                                  },
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "taFontColor"
                                                                  }
                                                                ]
                                                              }
                                                            }
                                                          },
                                                          {
                                                            "type": "IfStatement",
                                                            "test": {
                                                              "type": "LogicalExpression",
                                                              "operator": "&&",
                                                              "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "ThisExpression"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "chart"
                                                                  }
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "getTextDir"
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "label"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "truncated"
                                                                }
                                                              }
                                                            },
                                                            "consequent": {
                                                              "type": "BlockStatement",
                                                              "body": [
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "expression": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "chart"
                                                                        }
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "truncateBidi"
                                                                      }
                                                                    },
                                                                    "arguments": [
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "elem"
                                                                      },
                                                                      {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "tick"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "label"
                                                                        }
                                                                      },
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "labelType"
                                                                      }
                                                                    ]
                                                                  }
                                                                }
                                                              ]
                                                            },
                                                            "alternate": null
                                                          },
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "LogicalExpression",
                                                              "operator": "&&",
                                                              "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "label"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "truncated"
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "ThisExpression"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "labelTooltip"
                                                                  }
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "elem"
                                                                  },
                                                                  {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "chart"
                                                                    }
                                                                  },
                                                                  {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "tick"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "label"
                                                                    }
                                                                  },
                                                                  {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "label"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "text"
                                                                    }
                                                                  },
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "taFont"
                                                                  },
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "labelType"
                                                                  }
                                                                ]
                                                              }
                                                            }
                                                          },
                                                          {
                                                            "type": "IfStatement",
                                                            "test": {
                                                              "type": "BinaryExpression",
                                                              "operator": "==",
                                                              "left": {
                                                                "type": "Identifier",
                                                                "name": "labelType"
                                                              },
                                                              "right": {
                                                                "type": "Literal",
                                                                "value": "html"
                                                              }
                                                            },
                                                            "consequent": {
                                                              "type": "BlockStatement",
                                                              "body": [
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "expression": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "htmlElements"
                                                                        }
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "push"
                                                                      }
                                                                    },
                                                                    "arguments": [
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "elem"
                                                                      }
                                                                    ]
                                                                  }
                                                                }
                                                              ]
                                                            },
                                                            "alternate": {
                                                              "type": "IfStatement",
                                                              "test": {
                                                                "type": "Identifier",
                                                                "name": "rotation"
                                                              },
                                                              "consequent": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                  {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "elem"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "setTransform"
                                                                        }
                                                                      },
                                                                      "arguments": [
                                                                        {
                                                                          "type": "ArrayExpression",
                                                                          "elements": [
                                                                            {
                                                                              "type": "ObjectExpression",
                                                                              "properties": [
                                                                                {
                                                                                  "type": "Property",
                                                                                  "key": {
                                                                                    "type": "Identifier",
                                                                                    "name": "dx"
                                                                                  },
                                                                                  "value": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "labelOffset"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "x"
                                                                                    }
                                                                                  },
                                                                                  "kind": "init"
                                                                                },
                                                                                {
                                                                                  "type": "Property",
                                                                                  "key": {
                                                                                    "type": "Identifier",
                                                                                    "name": "dy"
                                                                                  },
                                                                                  "value": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "labelOffset"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "y"
                                                                                    }
                                                                                  },
                                                                                  "kind": "init"
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "CallExpression",
                                                                              "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "MemberExpression",
                                                                                  "computed": false,
                                                                                  "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "g"
                                                                                  },
                                                                                  "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "matrix"
                                                                                  }
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "rotategAt"
                                                                                }
                                                                              },
                                                                              "arguments": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "name": "rotation"
                                                                                },
                                                                                {
                                                                                  "type": "BinaryExpression",
                                                                                  "operator": "+",
                                                                                  "left": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "+",
                                                                                    "left": {
                                                                                      "type": "Identifier",
                                                                                      "name": "x"
                                                                                    },
                                                                                    "right": {
                                                                                      "type": "Identifier",
                                                                                      "name": "dx"
                                                                                    }
                                                                                  },
                                                                                  "right": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "anchorOffset"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "x"
                                                                                    }
                                                                                  }
                                                                                },
                                                                                {
                                                                                  "type": "BinaryExpression",
                                                                                  "operator": "+",
                                                                                  "left": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "+",
                                                                                    "left": {
                                                                                      "type": "Identifier",
                                                                                      "name": "y"
                                                                                    },
                                                                                    "right": {
                                                                                      "type": "Identifier",
                                                                                      "name": "dy"
                                                                                    }
                                                                                  },
                                                                                  "right": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "anchorOffset"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "y"
                                                                                    }
                                                                                  }
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  }
                                                                ]
                                                              },
                                                              "alternate": null
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      "alternate": null
                                                    }
                                                  ]
                                                },
                                                "rest": null,
                                                "generator": false,
                                                "expression": false
                                              },
                                              {
                                                "type": "ThisExpression"
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "dx"
                                            },
                                            "right": {
                                              "type": "BinaryExpression",
                                              "operator": "*",
                                              "left": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "tickVector"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "x"
                                                }
                                              },
                                              "right": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "taMicroTick"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "length"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "dy"
                                            },
                                            "right": {
                                              "type": "BinaryExpression",
                                              "operator": "*",
                                              "left": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "tickVector"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "y"
                                                }
                                              },
                                              "right": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "taMicroTick"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "length"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "arr"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "forEach"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "t"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "micro"
                                                }
                                              },
                                              {
                                                "type": "FunctionExpression",
                                                "id": null,
                                                "params": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "tick"
                                                  }
                                                ],
                                                "defaults": [],
                                                "body": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "VariableDeclaration",
                                                      "declarations": [
                                                        {
                                                          "type": "VariableDeclarator",
                                                          "id": {
                                                            "type": "Identifier",
                                                            "name": "offset"
                                                          },
                                                          "init": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "Identifier",
                                                              "name": "f"
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "tick"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "value"
                                                                }
                                                              }
                                                            ]
                                                          }
                                                        },
                                                        {
                                                          "type": "VariableDeclarator",
                                                          "id": {
                                                            "type": "Identifier",
                                                            "name": "elem"
                                                          },
                                                          "init": null
                                                        },
                                                        {
                                                          "type": "VariableDeclarator",
                                                          "id": {
                                                            "type": "Identifier",
                                                            "name": "x"
                                                          },
                                                          "init": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "start"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "x"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "BinaryExpression",
                                                              "operator": "*",
                                                              "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "axisVector"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "x"
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "Identifier",
                                                                "name": "offset"
                                                              }
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "VariableDeclarator",
                                                          "id": {
                                                            "type": "Identifier",
                                                            "name": "y"
                                                          },
                                                          "init": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "start"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "y"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "BinaryExpression",
                                                              "operator": "*",
                                                              "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "axisVector"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "y"
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "Identifier",
                                                                "name": "offset"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      ],
                                                      "kind": "var"
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "ThisExpression"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "createLine"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "Identifier",
                                                                "name": "s"
                                                              },
                                                              {
                                                                "type": "ObjectExpression",
                                                                "properties": [
                                                                  {
                                                                    "type": "Property",
                                                                    "key": {
                                                                      "type": "Identifier",
                                                                      "name": "x1"
                                                                    },
                                                                    "value": {
                                                                      "type": "Identifier",
                                                                      "name": "x"
                                                                    },
                                                                    "kind": "init"
                                                                  },
                                                                  {
                                                                    "type": "Property",
                                                                    "key": {
                                                                      "type": "Identifier",
                                                                      "name": "y1"
                                                                    },
                                                                    "value": {
                                                                      "type": "Identifier",
                                                                      "name": "y"
                                                                    },
                                                                    "kind": "init"
                                                                  },
                                                                  {
                                                                    "type": "Property",
                                                                    "key": {
                                                                      "type": "Identifier",
                                                                      "name": "x2"
                                                                    },
                                                                    "value": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "+",
                                                                      "left": {
                                                                        "type": "Identifier",
                                                                        "name": "x"
                                                                      },
                                                                      "right": {
                                                                        "type": "Identifier",
                                                                        "name": "dx"
                                                                      }
                                                                    },
                                                                    "kind": "init"
                                                                  },
                                                                  {
                                                                    "type": "Property",
                                                                    "key": {
                                                                      "type": "Identifier",
                                                                      "name": "y2"
                                                                    },
                                                                    "value": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "+",
                                                                      "left": {
                                                                        "type": "Identifier",
                                                                        "name": "y"
                                                                      },
                                                                      "right": {
                                                                        "type": "Identifier",
                                                                        "name": "dy"
                                                                      }
                                                                    },
                                                                    "kind": "init"
                                                                  }
                                                                ]
                                                              }
                                                            ]
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "setStroke"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Identifier",
                                                            "name": "taMicroTick"
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  ]
                                                },
                                                "rest": null,
                                                "generator": false,
                                                "expression": false
                                              },
                                              {
                                                "type": "ThisExpression"
                                              }
                                            ]
                                          }
                                        }
                                      ]
                                    },
                                    "guardedHandlers": [],
                                    "handlers": [
                                      {
                                        "type": "CatchClause",
                                        "param": {
                                          "type": "Identifier",
                                          "name": "e"
                                        },
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": []
                                        }
                                      }
                                    ],
                                    "finalizer": null
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "ThisExpression"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "dirty"
                                        }
                                      },
                                      "right": {
                                        "type": "Literal",
                                        "value": false
                                      }
                                    }
                                  },
                                  {
                                    "type": "ReturnStatement",
                                    "argument": {
                                      "type": "ThisExpression"
                                    }
                                  }
                                ]
                              },
                              "rest": null,
                              "generator": false,
                              "expression": false
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "labelTooltip"
                            },
                            "value": {
                              "type": "FunctionExpression",
                              "id": null,
                              "params": [
                                {
                                  "type": "Identifier",
                                  "name": "elem"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "chart"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "label"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "truncatedLabel"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "font"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "elemType"
                                }
                              ],
                              "defaults": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "modules"
                                        },
                                        "init": {
                                          "type": "ArrayExpression",
                                          "elements": [
                                            {
                                              "type": "Literal",
                                              "value": "dijit/Tooltip"
                                            }
                                          ]
                                        }
                                      }
                                    ],
                                    "kind": "var"
                                  },
                                  {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "aroundRect"
                                        },
                                        "init": {
                                          "type": "ObjectExpression",
                                          "properties": [
                                            {
                                              "type": "Property",
                                              "key": {
                                                "type": "Identifier",
                                                "name": "type"
                                              },
                                              "value": {
                                                "type": "Literal",
                                                "value": "rect"
                                              },
                                              "kind": "init"
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "position"
                                        },
                                        "init": {
                                          "type": "ArrayExpression",
                                          "elements": [
                                            {
                                              "type": "Literal",
                                              "value": "above"
                                            },
                                            {
                                              "type": "Literal",
                                              "value": "below"
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "fontWidth"
                                        },
                                        "init": {
                                          "type": "LogicalExpression",
                                          "operator": "||",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "g"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "_base"
                                                  }
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "_getTextBox"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "truncatedLabel"
                                                },
                                                {
                                                  "type": "ObjectExpression",
                                                  "properties": [
                                                    {
                                                      "type": "Property",
                                                      "key": {
                                                        "type": "Identifier",
                                                        "name": "font"
                                                      },
                                                      "value": {
                                                        "type": "Identifier",
                                                        "name": "font"
                                                      },
                                                      "kind": "init"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "w"
                                            }
                                          },
                                          "right": {
                                            "type": "Literal",
                                            "value": 0
                                          }
                                        }
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "fontHeight"
                                        },
                                        "init": {
                                          "type": "ConditionalExpression",
                                          "test": {
                                            "type": "Identifier",
                                            "name": "font"
                                          },
                                          "consequent": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "g"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "normalizedLength"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "g"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "splitFontString"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "font"
                                                    }
                                                  ]
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "size"
                                                }
                                              }
                                            ]
                                          },
                                          "alternate": {
                                            "type": "Literal",
                                            "value": 0
                                          }
                                        }
                                      }
                                    ],
                                    "kind": "var"
                                  },
                                  {
                                    "type": "IfStatement",
                                    "test": {
                                      "type": "BinaryExpression",
                                      "operator": "==",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "elemType"
                                      },
                                      "right": {
                                        "type": "Literal",
                                        "value": "html"
                                      }
                                    },
                                    "consequent": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "lang"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "mixin"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "Identifier",
                                                "name": "aroundRect"
                                              },
                                              {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "html"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "coords"
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "elem"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "firstChild"
                                                    }
                                                  },
                                                  {
                                                    "type": "Literal",
                                                    "value": true
                                                  }
                                                ]
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "aroundRect"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "width"
                                              }
                                            },
                                            "right": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "Math"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "ceil"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "fontWidth"
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "aroundRect"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "height"
                                              }
                                            },
                                            "right": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "Math"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "ceil"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "fontHeight"
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "ThisExpression"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "_events"
                                                }
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "push"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "ObjectExpression",
                                                "properties": [
                                                  {
                                                    "type": "Property",
                                                    "key": {
                                                      "type": "Identifier",
                                                      "name": "shape"
                                                    },
                                                    "value": {
                                                      "type": "Identifier",
                                                      "name": "dojo"
                                                    },
                                                    "kind": "init"
                                                  },
                                                  {
                                                    "type": "Property",
                                                    "key": {
                                                      "type": "Identifier",
                                                      "name": "handle"
                                                    },
                                                    "value": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "connect"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "connect"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "elem"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "firstChild"
                                                          }
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": "onmouseover"
                                                        },
                                                        {
                                                          "type": "ThisExpression"
                                                        },
                                                        {
                                                          "type": "FunctionExpression",
                                                          "id": null,
                                                          "params": [
                                                            {
                                                              "type": "Identifier",
                                                              "name": "e"
                                                            }
                                                          ],
                                                          "defaults": [],
                                                          "body": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                              {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "require"
                                                                  },
                                                                  "arguments": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "name": "modules"
                                                                    },
                                                                    {
                                                                      "type": "FunctionExpression",
                                                                      "id": null,
                                                                      "params": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "name": "Tooltip"
                                                                        }
                                                                      ],
                                                                      "defaults": [],
                                                                      "body": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                          {
                                                                            "type": "ExpressionStatement",
                                                                            "expression": {
                                                                              "type": "CallExpression",
                                                                              "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "Tooltip"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "show"
                                                                                }
                                                                              },
                                                                              "arguments": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "name": "label"
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "name": "aroundRect"
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "name": "position"
                                                                                }
                                                                              ]
                                                                            }
                                                                          }
                                                                        ]
                                                                      },
                                                                      "rest": null,
                                                                      "generator": false,
                                                                      "expression": false
                                                                    }
                                                                  ]
                                                                }
                                                              }
                                                            ]
                                                          },
                                                          "rest": null,
                                                          "generator": false,
                                                          "expression": false
                                                        }
                                                      ]
                                                    },
                                                    "kind": "init"
                                                  }
                                                ]
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "ThisExpression"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "_events"
                                                }
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "push"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "ObjectExpression",
                                                "properties": [
                                                  {
                                                    "type": "Property",
                                                    "key": {
                                                      "type": "Identifier",
                                                      "name": "shape"
                                                    },
                                                    "value": {
                                                      "type": "Identifier",
                                                      "name": "dojo"
                                                    },
                                                    "kind": "init"
                                                  },
                                                  {
                                                    "type": "Property",
                                                    "key": {
                                                      "type": "Identifier",
                                                      "name": "handle"
                                                    },
                                                    "value": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "connect"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "connect"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "elem"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "firstChild"
                                                          }
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": "onmouseout"
                                                        },
                                                        {
                                                          "type": "ThisExpression"
                                                        },
                                                        {
                                                          "type": "FunctionExpression",
                                                          "id": null,
                                                          "params": [
                                                            {
                                                              "type": "Identifier",
                                                              "name": "e"
                                                            }
                                                          ],
                                                          "defaults": [],
                                                          "body": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                              {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "require"
                                                                  },
                                                                  "arguments": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "name": "modules"
                                                                    },
                                                                    {
                                                                      "type": "FunctionExpression",
                                                                      "id": null,
                                                                      "params": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "name": "Tooltip"
                                                                        }
                                                                      ],
                                                                      "defaults": [],
                                                                      "body": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                          {
                                                                            "type": "ExpressionStatement",
                                                                            "expression": {
                                                                              "type": "CallExpression",
                                                                              "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "Tooltip"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "hide"
                                                                                }
                                                                              },
                                                                              "arguments": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "name": "aroundRect"
                                                                                }
                                                                              ]
                                                                            }
                                                                          }
                                                                        ]
                                                                      },
                                                                      "rest": null,
                                                                      "generator": false,
                                                                      "expression": false
                                                                    }
                                                                  ]
                                                                }
                                                              }
                                                            ]
                                                          },
                                                          "rest": null,
                                                          "generator": false,
                                                          "expression": false
                                                        }
                                                      ]
                                                    },
                                                    "kind": "init"
                                                  }
                                                ]
                                              }
                                            ]
                                          }
                                        }
                                      ]
                                    },
                                    "alternate": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "VariableDeclaration",
                                          "declarations": [
                                            {
                                              "type": "VariableDeclarator",
                                              "id": {
                                                "type": "Identifier",
                                                "name": "shp"
                                              },
                                              "init": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "elem"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "getShape"
                                                  }
                                                },
                                                "arguments": []
                                              }
                                            },
                                            {
                                              "type": "VariableDeclarator",
                                              "id": {
                                                "type": "Identifier",
                                                "name": "lt"
                                              },
                                              "init": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "html"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "coords"
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "chart"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "node"
                                                    }
                                                  },
                                                  {
                                                    "type": "Literal",
                                                    "value": true
                                                  }
                                                ]
                                              }
                                            }
                                          ],
                                          "kind": "var"
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "aroundRect"
                                            },
                                            "right": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "lang"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "mixin"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "aroundRect"
                                                },
                                                {
                                                  "type": "ObjectExpression",
                                                  "properties": [
                                                    {
                                                      "type": "Property",
                                                      "key": {
                                                        "type": "Identifier",
                                                        "name": "x"
                                                      },
                                                      "value": {
                                                        "type": "BinaryExpression",
                                                        "operator": "-",
                                                        "left": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "shp"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "x"
                                                          }
                                                        },
                                                        "right": {
                                                          "type": "BinaryExpression",
                                                          "operator": "/",
                                                          "left": {
                                                            "type": "Identifier",
                                                            "name": "fontWidth"
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": 2
                                                          }
                                                        }
                                                      },
                                                      "kind": "init"
                                                    },
                                                    {
                                                      "type": "Property",
                                                      "key": {
                                                        "type": "Identifier",
                                                        "name": "y"
                                                      },
                                                      "value": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "shp"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "y"
                                                        }
                                                      },
                                                      "kind": "init"
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "+=",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "aroundRect"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "x"
                                              }
                                            },
                                            "right": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "lt"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "x"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "+=",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "aroundRect"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "y"
                                              }
                                            },
                                            "right": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "lt"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "y"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "aroundRect"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "x"
                                              }
                                            },
                                            "right": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "Math"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "round"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "aroundRect"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "x"
                                                  }
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "aroundRect"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "y"
                                              }
                                            },
                                            "right": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "Math"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "round"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "aroundRect"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "y"
                                                  }
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "aroundRect"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "width"
                                              }
                                            },
                                            "right": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "Math"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "ceil"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "fontWidth"
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "aroundRect"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "height"
                                              }
                                            },
                                            "right": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "Math"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "ceil"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "fontHeight"
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "ThisExpression"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "_events"
                                                }
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "push"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "ObjectExpression",
                                                "properties": [
                                                  {
                                                    "type": "Property",
                                                    "key": {
                                                      "type": "Identifier",
                                                      "name": "shape"
                                                    },
                                                    "value": {
                                                      "type": "Identifier",
                                                      "name": "elem"
                                                    },
                                                    "kind": "init"
                                                  },
                                                  {
                                                    "type": "Property",
                                                    "key": {
                                                      "type": "Identifier",
                                                      "name": "handle"
                                                    },
                                                    "value": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "elem"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "connect"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Literal",
                                                          "value": "onmouseenter"
                                                        },
                                                        {
                                                          "type": "ThisExpression"
                                                        },
                                                        {
                                                          "type": "FunctionExpression",
                                                          "id": null,
                                                          "params": [
                                                            {
                                                              "type": "Identifier",
                                                              "name": "e"
                                                            }
                                                          ],
                                                          "defaults": [],
                                                          "body": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                              {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "require"
                                                                  },
                                                                  "arguments": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "name": "modules"
                                                                    },
                                                                    {
                                                                      "type": "FunctionExpression",
                                                                      "id": null,
                                                                      "params": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "name": "Tooltip"
                                                                        }
                                                                      ],
                                                                      "defaults": [],
                                                                      "body": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                          {
                                                                            "type": "ExpressionStatement",
                                                                            "expression": {
                                                                              "type": "CallExpression",
                                                                              "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "Tooltip"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "show"
                                                                                }
                                                                              },
                                                                              "arguments": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "name": "label"
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "name": "aroundRect"
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "name": "position"
                                                                                }
                                                                              ]
                                                                            }
                                                                          }
                                                                        ]
                                                                      },
                                                                      "rest": null,
                                                                      "generator": false,
                                                                      "expression": false
                                                                    }
                                                                  ]
                                                                }
                                                              }
                                                            ]
                                                          },
                                                          "rest": null,
                                                          "generator": false,
                                                          "expression": false
                                                        }
                                                      ]
                                                    },
                                                    "kind": "init"
                                                  }
                                                ]
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "ThisExpression"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "_events"
                                                }
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "push"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "ObjectExpression",
                                                "properties": [
                                                  {
                                                    "type": "Property",
                                                    "key": {
                                                      "type": "Identifier",
                                                      "name": "shape"
                                                    },
                                                    "value": {
                                                      "type": "Identifier",
                                                      "name": "elem"
                                                    },
                                                    "kind": "init"
                                                  },
                                                  {
                                                    "type": "Property",
                                                    "key": {
                                                      "type": "Identifier",
                                                      "name": "handle"
                                                    },
                                                    "value": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "elem"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "connect"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Literal",
                                                          "value": "onmouseleave"
                                                        },
                                                        {
                                                          "type": "ThisExpression"
                                                        },
                                                        {
                                                          "type": "FunctionExpression",
                                                          "id": null,
                                                          "params": [
                                                            {
                                                              "type": "Identifier",
                                                              "name": "e"
                                                            }
                                                          ],
                                                          "defaults": [],
                                                          "body": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                              {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "require"
                                                                  },
                                                                  "arguments": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "name": "modules"
                                                                    },
                                                                    {
                                                                      "type": "FunctionExpression",
                                                                      "id": null,
                                                                      "params": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "name": "Tooltip"
                                                                        }
                                                                      ],
                                                                      "defaults": [],
                                                                      "body": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                          {
                                                                            "type": "ExpressionStatement",
                                                                            "expression": {
                                                                              "type": "CallExpression",
                                                                              "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "Tooltip"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "hide"
                                                                                }
                                                                              },
                                                                              "arguments": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "name": "aroundRect"
                                                                                }
                                                                              ]
                                                                            }
                                                                          }
                                                                        ]
                                                                      },
                                                                      "rest": null,
                                                                      "generator": false,
                                                                      "expression": false
                                                                    }
                                                                  ]
                                                                }
                                                              }
                                                            ]
                                                          },
                                                          "rest": null,
                                                          "generator": false,
                                                          "expression": false
                                                        }
                                                      ]
                                                    },
                                                    "kind": "init"
                                                  }
                                                ]
                                              }
                                            ]
                                          }
                                        }
                                      ]
                                    }
                                  }
                                ]
                              },
                              "rest": null,
                              "generator": false,
                              "expression": false
                            },
                            "kind": "init"
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    }
  ]
}
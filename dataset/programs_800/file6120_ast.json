{
  "type": "Program",
  "body": [
    {
      "type": "EmptyStatement"
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "FunctionExpression",
          "id": null,
          "params": [
            {
              "type": "Identifier",
              "name": "$"
            },
            {
              "type": "Identifier",
              "name": "window"
            },
            {
              "type": "Identifier",
              "name": "document"
            },
            {
              "type": "Identifier",
              "name": "undefined"
            }
          ],
          "defaults": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "Literal",
                  "value": "use strict"
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "=",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "$"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "fn"
                      }
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "accordion"
                    }
                  },
                  "right": {
                    "type": "FunctionExpression",
                    "id": null,
                    "params": [
                      {
                        "type": "Identifier",
                        "name": "parameters"
                      }
                    ],
                    "defaults": [],
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "VariableDeclaration",
                          "declarations": [
                            {
                              "type": "VariableDeclarator",
                              "id": {
                                "type": "Identifier",
                                "name": "$allModules"
                              },
                              "init": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "$"
                                },
                                "arguments": [
                                  {
                                    "type": "ThisExpression"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "VariableDeclarator",
                              "id": {
                                "type": "Identifier",
                                "name": "time"
                              },
                              "init": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "NewExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "Date"
                                    },
                                    "arguments": []
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "getTime"
                                  }
                                },
                                "arguments": []
                              }
                            },
                            {
                              "type": "VariableDeclarator",
                              "id": {
                                "type": "Identifier",
                                "name": "performance"
                              },
                              "init": {
                                "type": "ArrayExpression",
                                "elements": []
                              }
                            },
                            {
                              "type": "VariableDeclarator",
                              "id": {
                                "type": "Identifier",
                                "name": "query"
                              },
                              "init": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                  "type": "Identifier",
                                  "name": "arguments"
                                },
                                "property": {
                                  "type": "Literal",
                                  "value": 0
                                }
                              }
                            },
                            {
                              "type": "VariableDeclarator",
                              "id": {
                                "type": "Identifier",
                                "name": "methodInvoked"
                              },
                              "init": {
                                "type": "BinaryExpression",
                                "operator": "==",
                                "left": {
                                  "type": "UnaryExpression",
                                  "operator": "typeof",
                                  "argument": {
                                    "type": "Identifier",
                                    "name": "query"
                                  },
                                  "prefix": true
                                },
                                "right": {
                                  "type": "Literal",
                                  "value": "string"
                                }
                              }
                            },
                            {
                              "type": "VariableDeclarator",
                              "id": {
                                "type": "Identifier",
                                "name": "queryArguments"
                              },
                              "init": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "ArrayExpression",
                                      "elements": []
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "slice"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "call"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "arguments"
                                  },
                                  {
                                    "type": "Literal",
                                    "value": 1
                                  }
                                ]
                              }
                            },
                            {
                              "type": "VariableDeclarator",
                              "id": {
                                "type": "Identifier",
                                "name": "requestAnimationFrame"
                              },
                              "init": {
                                "type": "LogicalExpression",
                                "operator": "||",
                                "left": {
                                  "type": "LogicalExpression",
                                  "operator": "||",
                                  "left": {
                                    "type": "LogicalExpression",
                                    "operator": "||",
                                    "left": {
                                      "type": "LogicalExpression",
                                      "operator": "||",
                                      "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "window"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "requestAnimationFrame"
                                        }
                                      },
                                      "right": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "window"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "mozRequestAnimationFrame"
                                        }
                                      }
                                    },
                                    "right": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "window"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "webkitRequestAnimationFrame"
                                      }
                                    }
                                  },
                                  "right": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "window"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "msRequestAnimationFrame"
                                    }
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "callback"
                                    }
                                  ],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "Identifier",
                                            "name": "setTimeout"
                                          },
                                          "arguments": [
                                            {
                                              "type": "Identifier",
                                              "name": "callback"
                                            },
                                            {
                                              "type": "Literal",
                                              "value": 0
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "VariableDeclarator",
                              "id": {
                                "type": "Identifier",
                                "name": "returnedValue"
                              },
                              "init": null
                            }
                          ],
                          "kind": "var"
                        },
                        {
                          "type": "EmptyStatement"
                        },
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "$allModules"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "each"
                              }
                            },
                            "arguments": [
                              {
                                "type": "FunctionExpression",
                                "id": null,
                                "params": [],
                                "defaults": [],
                                "body": {
                                  "type": "BlockStatement",
                                  "body": [
                                    {
                                      "type": "VariableDeclaration",
                                      "declarations": [
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "settings"
                                          },
                                          "init": {
                                            "type": "ConditionalExpression",
                                            "test": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "$"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "isPlainObject"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "parameters"
                                                }
                                              ]
                                            },
                                            "consequent": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "$"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "extend"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Literal",
                                                  "value": true
                                                },
                                                {
                                                  "type": "ObjectExpression",
                                                  "properties": []
                                                },
                                                {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "$"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "fn"
                                                      }
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "accordion"
                                                    }
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "settings"
                                                  }
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "name": "parameters"
                                                }
                                              ]
                                            },
                                            "alternate": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "$"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "extend"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "ObjectExpression",
                                                  "properties": []
                                                },
                                                {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "$"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "fn"
                                                      }
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "accordion"
                                                    }
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "settings"
                                                  }
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "className"
                                          },
                                          "init": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "settings"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "className"
                                            }
                                          }
                                        },
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "namespace"
                                          },
                                          "init": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "settings"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "namespace"
                                            }
                                          }
                                        },
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "selector"
                                          },
                                          "init": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "settings"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "selector"
                                            }
                                          }
                                        },
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "error"
                                          },
                                          "init": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "settings"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "error"
                                            }
                                          }
                                        },
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "eventNamespace"
                                          },
                                          "init": {
                                            "type": "BinaryExpression",
                                            "operator": "+",
                                            "left": {
                                              "type": "Literal",
                                              "value": "."
                                            },
                                            "right": {
                                              "type": "Identifier",
                                              "name": "namespace"
                                            }
                                          }
                                        },
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "moduleNamespace"
                                          },
                                          "init": {
                                            "type": "BinaryExpression",
                                            "operator": "+",
                                            "left": {
                                              "type": "Literal",
                                              "value": "module-"
                                            },
                                            "right": {
                                              "type": "Identifier",
                                              "name": "namespace"
                                            }
                                          }
                                        },
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "moduleSelector"
                                          },
                                          "init": {
                                            "type": "LogicalExpression",
                                            "operator": "||",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "$allModules"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "selector"
                                              }
                                            },
                                            "right": {
                                              "type": "Literal",
                                              "value": ""
                                            }
                                          }
                                        },
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "$module"
                                          },
                                          "init": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "$"
                                            },
                                            "arguments": [
                                              {
                                                "type": "ThisExpression"
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "$title"
                                          },
                                          "init": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "$module"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "find"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "selector"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "title"
                                                }
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "$content"
                                          },
                                          "init": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "$module"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "find"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "selector"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "content"
                                                }
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "element"
                                          },
                                          "init": {
                                            "type": "ThisExpression"
                                          }
                                        },
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "instance"
                                          },
                                          "init": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "$module"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "data"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "Identifier",
                                                "name": "moduleNamespace"
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "observer"
                                          },
                                          "init": null
                                        },
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "module"
                                          },
                                          "init": null
                                        }
                                      ],
                                      "kind": "var"
                                    },
                                    {
                                      "type": "EmptyStatement"
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                          "type": "Identifier",
                                          "name": "module"
                                        },
                                        "right": {
                                          "type": "ObjectExpression",
                                          "properties": [
                                            {
                                              "type": "Property",
                                              "key": {
                                                "type": "Identifier",
                                                "name": "initialize"
                                              },
                                              "value": {
                                                "type": "FunctionExpression",
                                                "id": null,
                                                "params": [],
                                                "defaults": [],
                                                "body": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "module"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "debug"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Literal",
                                                            "value": "Initializing accordion with bound events"
                                                          },
                                                          {
                                                            "type": "Identifier",
                                                            "name": "$module"
                                                          }
                                                        ]
                                                      }
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "$module"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "on"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "click"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "eventNamespace"
                                                            }
                                                          },
                                                          {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "selector"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "title"
                                                            }
                                                          },
                                                          {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "module"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "event"
                                                              }
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "click"
                                                            }
                                                          }
                                                        ]
                                                      }
                                                    },
                                                    {
                                                      "type": "EmptyStatement"
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "module"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "observeChanges"
                                                          }
                                                        },
                                                        "arguments": []
                                                      }
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "module"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "instantiate"
                                                          }
                                                        },
                                                        "arguments": []
                                                      }
                                                    }
                                                  ]
                                                },
                                                "rest": null,
                                                "generator": false,
                                                "expression": false
                                              },
                                              "kind": "init"
                                            },
                                            {
                                              "type": "Property",
                                              "key": {
                                                "type": "Identifier",
                                                "name": "instantiate"
                                              },
                                              "value": {
                                                "type": "FunctionExpression",
                                                "id": null,
                                                "params": [],
                                                "defaults": [],
                                                "body": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                          "type": "Identifier",
                                                          "name": "instance"
                                                        },
                                                        "right": {
                                                          "type": "Identifier",
                                                          "name": "module"
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "$module"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "data"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Identifier",
                                                            "name": "moduleNamespace"
                                                          },
                                                          {
                                                            "type": "Identifier",
                                                            "name": "module"
                                                          }
                                                        ]
                                                      }
                                                    },
                                                    {
                                                      "type": "EmptyStatement"
                                                    }
                                                  ]
                                                },
                                                "rest": null,
                                                "generator": false,
                                                "expression": false
                                              },
                                              "kind": "init"
                                            },
                                            {
                                              "type": "Property",
                                              "key": {
                                                "type": "Identifier",
                                                "name": "destroy"
                                              },
                                              "value": {
                                                "type": "FunctionExpression",
                                                "id": null,
                                                "params": [],
                                                "defaults": [],
                                                "body": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "module"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "debug"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Literal",
                                                            "value": "Destroying previous accordion for"
                                                          },
                                                          {
                                                            "type": "Identifier",
                                                            "name": "$module"
                                                          }
                                                        ]
                                                      }
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "$module"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "removeData"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Identifier",
                                                            "name": "moduleNamespace"
                                                          }
                                                        ]
                                                      }
                                                    },
                                                    {
                                                      "type": "EmptyStatement"
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "$title"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "off"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Identifier",
                                                            "name": "eventNamespace"
                                                          }
                                                        ]
                                                      }
                                                    },
                                                    {
                                                      "type": "EmptyStatement"
                                                    }
                                                  ]
                                                },
                                                "rest": null,
                                                "generator": false,
                                                "expression": false
                                              },
                                              "kind": "init"
                                            },
                                            {
                                              "type": "Property",
                                              "key": {
                                                "type": "Identifier",
                                                "name": "refresh"
                                              },
                                              "value": {
                                                "type": "FunctionExpression",
                                                "id": null,
                                                "params": [],
                                                "defaults": [],
                                                "body": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                          "type": "Identifier",
                                                          "name": "$title"
                                                        },
                                                        "right": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "$module"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "find"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "selector"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "title"
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                          "type": "Identifier",
                                                          "name": "$content"
                                                        },
                                                        "right": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "$module"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "find"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "selector"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "content"
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    }
                                                  ]
                                                },
                                                "rest": null,
                                                "generator": false,
                                                "expression": false
                                              },
                                              "kind": "init"
                                            },
                                            {
                                              "type": "Property",
                                              "key": {
                                                "type": "Identifier",
                                                "name": "observeChanges"
                                              },
                                              "value": {
                                                "type": "FunctionExpression",
                                                "id": null,
                                                "params": [],
                                                "defaults": [],
                                                "body": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "IfStatement",
                                                      "test": {
                                                        "type": "BinaryExpression",
                                                        "operator": "in",
                                                        "left": {
                                                          "type": "Literal",
                                                          "value": "MutationObserver"
                                                        },
                                                        "right": {
                                                          "type": "Identifier",
                                                          "name": "window"
                                                        }
                                                      },
                                                      "consequent": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "AssignmentExpression",
                                                              "operator": "=",
                                                              "left": {
                                                                "type": "Identifier",
                                                                "name": "observer"
                                                              },
                                                              "right": {
                                                                "type": "NewExpression",
                                                                "callee": {
                                                                  "type": "Identifier",
                                                                  "name": "MutationObserver"
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "FunctionExpression",
                                                                    "id": null,
                                                                    "params": [
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "mutations"
                                                                      }
                                                                    ],
                                                                    "defaults": [],
                                                                    "body": {
                                                                      "type": "BlockStatement",
                                                                      "body": [
                                                                        {
                                                                          "type": "ExpressionStatement",
                                                                          "expression": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                              "type": "MemberExpression",
                                                                              "computed": false,
                                                                              "object": {
                                                                                "type": "Identifier",
                                                                                "name": "module"
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "debug"
                                                                              }
                                                                            },
                                                                            "arguments": [
                                                                              {
                                                                                "type": "Literal",
                                                                                "value": "DOM tree modified, updating selector cache"
                                                                              }
                                                                            ]
                                                                          }
                                                                        },
                                                                        {
                                                                          "type": "ExpressionStatement",
                                                                          "expression": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                              "type": "MemberExpression",
                                                                              "computed": false,
                                                                              "object": {
                                                                                "type": "Identifier",
                                                                                "name": "module"
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "refresh"
                                                                              }
                                                                            },
                                                                            "arguments": []
                                                                          }
                                                                        }
                                                                      ]
                                                                    },
                                                                    "rest": null,
                                                                    "generator": false,
                                                                    "expression": false
                                                                  }
                                                                ]
                                                              }
                                                            }
                                                          },
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "observer"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "observe"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "element"
                                                                },
                                                                {
                                                                  "type": "ObjectExpression",
                                                                  "properties": [
                                                                    {
                                                                      "type": "Property",
                                                                      "key": {
                                                                        "type": "Identifier",
                                                                        "name": "childList"
                                                                      },
                                                                      "value": {
                                                                        "type": "Literal",
                                                                        "value": true
                                                                      },
                                                                      "kind": "init"
                                                                    },
                                                                    {
                                                                      "type": "Property",
                                                                      "key": {
                                                                        "type": "Identifier",
                                                                        "name": "subtree"
                                                                      },
                                                                      "value": {
                                                                        "type": "Literal",
                                                                        "value": true
                                                                      },
                                                                      "kind": "init"
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          },
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "module"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "debug"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Literal",
                                                                  "value": "Setting up mutation observer"
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "observer"
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      "alternate": null
                                                    }
                                                  ]
                                                },
                                                "rest": null,
                                                "generator": false,
                                                "expression": false
                                              },
                                              "kind": "init"
                                            },
                                            {
                                              "type": "Property",
                                              "key": {
                                                "type": "Identifier",
                                                "name": "event"
                                              },
                                              "value": {
                                                "type": "ObjectExpression",
                                                "properties": [
                                                  {
                                                    "type": "Property",
                                                    "key": {
                                                      "type": "Identifier",
                                                      "name": "click"
                                                    },
                                                    "value": {
                                                      "type": "FunctionExpression",
                                                      "id": null,
                                                      "params": [],
                                                      "defaults": [],
                                                      "body": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "module"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "toggle"
                                                                  }
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "call"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "ThisExpression"
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      "rest": null,
                                                      "generator": false,
                                                      "expression": false
                                                    },
                                                    "kind": "init"
                                                  }
                                                ]
                                              },
                                              "kind": "init"
                                            },
                                            {
                                              "type": "Property",
                                              "key": {
                                                "type": "Identifier",
                                                "name": "toggle"
                                              },
                                              "value": {
                                                "type": "FunctionExpression",
                                                "id": null,
                                                "params": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "query"
                                                  }
                                                ],
                                                "defaults": [],
                                                "body": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "VariableDeclaration",
                                                      "declarations": [
                                                        {
                                                          "type": "VariableDeclarator",
                                                          "id": {
                                                            "type": "Identifier",
                                                            "name": "$activeTitle"
                                                          },
                                                          "init": {
                                                            "type": "ConditionalExpression",
                                                            "test": {
                                                              "type": "BinaryExpression",
                                                              "operator": "!==",
                                                              "left": {
                                                                "type": "Identifier",
                                                                "name": "query"
                                                              },
                                                              "right": {
                                                                "type": "Identifier",
                                                                "name": "undefined"
                                                              }
                                                            },
                                                            "consequent": {
                                                              "type": "ConditionalExpression",
                                                              "test": {
                                                                "type": "BinaryExpression",
                                                                "operator": "===",
                                                                "left": {
                                                                  "type": "UnaryExpression",
                                                                  "operator": "typeof",
                                                                  "argument": {
                                                                    "type": "Identifier",
                                                                    "name": "query"
                                                                  },
                                                                  "prefix": true
                                                                },
                                                                "right": {
                                                                  "type": "Literal",
                                                                  "value": "number"
                                                                }
                                                              },
                                                              "consequent": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "$title"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "eq"
                                                                  }
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "query"
                                                                  }
                                                                ]
                                                              },
                                                              "alternate": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "Identifier",
                                                                  "name": "$"
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "query"
                                                                  }
                                                                ]
                                                              }
                                                            },
                                                            "alternate": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "Identifier",
                                                                "name": "$"
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "ThisExpression"
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "VariableDeclarator",
                                                          "id": {
                                                            "type": "Identifier",
                                                            "name": "$activeContent"
                                                          },
                                                          "init": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "$activeTitle"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "next"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "Identifier",
                                                                "name": "$content"
                                                              }
                                                            ]
                                                          }
                                                        },
                                                        {
                                                          "type": "VariableDeclarator",
                                                          "id": {
                                                            "type": "Identifier",
                                                            "name": "contentIsOpen"
                                                          },
                                                          "init": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "$activeContent"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "is"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "Literal",
                                                                "value": ":visible"
                                                              }
                                                            ]
                                                          }
                                                        }
                                                      ],
                                                      "kind": "var"
                                                    },
                                                    {
                                                      "type": "EmptyStatement"
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "module"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "debug"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Literal",
                                                            "value": "Toggling visibility of content"
                                                          },
                                                          {
                                                            "type": "Identifier",
                                                            "name": "$activeTitle"
                                                          }
                                                        ]
                                                      }
                                                    },
                                                    {
                                                      "type": "IfStatement",
                                                      "test": {
                                                        "type": "Identifier",
                                                        "name": "contentIsOpen"
                                                      },
                                                      "consequent": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "IfStatement",
                                                            "test": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "settings"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "collapsible"
                                                              }
                                                            },
                                                            "consequent": {
                                                              "type": "BlockStatement",
                                                              "body": [
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "expression": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "module"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "close"
                                                                        }
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "call"
                                                                      }
                                                                    },
                                                                    "arguments": [
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "$activeTitle"
                                                                      }
                                                                    ]
                                                                  }
                                                                }
                                                              ]
                                                            },
                                                            "alternate": {
                                                              "type": "BlockStatement",
                                                              "body": [
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "expression": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "module"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "debug"
                                                                      }
                                                                    },
                                                                    "arguments": [
                                                                      {
                                                                        "type": "Literal",
                                                                        "value": "Cannot close accordion content collapsing is disabled"
                                                                      }
                                                                    ]
                                                                  }
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      "alternate": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "module"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "open"
                                                                  }
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "call"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "$activeTitle"
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  ]
                                                },
                                                "rest": null,
                                                "generator": false,
                                                "expression": false
                                              },
                                              "kind": "init"
                                            },
                                            {
                                              "type": "Property",
                                              "key": {
                                                "type": "Identifier",
                                                "name": "open"
                                              },
                                              "value": {
                                                "type": "FunctionExpression",
                                                "id": null,
                                                "params": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "query"
                                                  }
                                                ],
                                                "defaults": [],
                                                "body": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "VariableDeclaration",
                                                      "declarations": [
                                                        {
                                                          "type": "VariableDeclarator",
                                                          "id": {
                                                            "type": "Identifier",
                                                            "name": "$activeTitle"
                                                          },
                                                          "init": {
                                                            "type": "ConditionalExpression",
                                                            "test": {
                                                              "type": "BinaryExpression",
                                                              "operator": "!==",
                                                              "left": {
                                                                "type": "Identifier",
                                                                "name": "query"
                                                              },
                                                              "right": {
                                                                "type": "Identifier",
                                                                "name": "undefined"
                                                              }
                                                            },
                                                            "consequent": {
                                                              "type": "ConditionalExpression",
                                                              "test": {
                                                                "type": "BinaryExpression",
                                                                "operator": "===",
                                                                "left": {
                                                                  "type": "UnaryExpression",
                                                                  "operator": "typeof",
                                                                  "argument": {
                                                                    "type": "Identifier",
                                                                    "name": "query"
                                                                  },
                                                                  "prefix": true
                                                                },
                                                                "right": {
                                                                  "type": "Literal",
                                                                  "value": "number"
                                                                }
                                                              },
                                                              "consequent": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "$title"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "eq"
                                                                  }
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "query"
                                                                  }
                                                                ]
                                                              },
                                                              "alternate": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "Identifier",
                                                                  "name": "$"
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "query"
                                                                  }
                                                                ]
                                                              }
                                                            },
                                                            "alternate": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "Identifier",
                                                                "name": "$"
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "ThisExpression"
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "VariableDeclarator",
                                                          "id": {
                                                            "type": "Identifier",
                                                            "name": "$activeContent"
                                                          },
                                                          "init": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "$activeTitle"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "next"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "Identifier",
                                                                "name": "$content"
                                                              }
                                                            ]
                                                          }
                                                        },
                                                        {
                                                          "type": "VariableDeclarator",
                                                          "id": {
                                                            "type": "Identifier",
                                                            "name": "currentlyAnimating"
                                                          },
                                                          "init": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "$activeContent"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "is"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "Literal",
                                                                "value": ":animated"
                                                              }
                                                            ]
                                                          }
                                                        },
                                                        {
                                                          "type": "VariableDeclarator",
                                                          "id": {
                                                            "type": "Identifier",
                                                            "name": "currentlyActive"
                                                          },
                                                          "init": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "$activeContent"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "hasClass"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "className"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "active"
                                                                }
                                                              }
                                                            ]
                                                          }
                                                        }
                                                      ],
                                                      "kind": "var"
                                                    },
                                                    {
                                                      "type": "EmptyStatement"
                                                    },
                                                    {
                                                      "type": "IfStatement",
                                                      "test": {
                                                        "type": "LogicalExpression",
                                                        "operator": "&&",
                                                        "left": {
                                                          "type": "UnaryExpression",
                                                          "operator": "!",
                                                          "argument": {
                                                            "type": "Identifier",
                                                            "name": "currentlyAnimating"
                                                          },
                                                          "prefix": true
                                                        },
                                                        "right": {
                                                          "type": "UnaryExpression",
                                                          "operator": "!",
                                                          "argument": {
                                                            "type": "Identifier",
                                                            "name": "currentlyActive"
                                                          },
                                                          "prefix": true
                                                        }
                                                      },
                                                      "consequent": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "module"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "debug"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Literal",
                                                                  "value": "Opening accordion content"
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "$activeTitle"
                                                                }
                                                              ]
                                                            }
                                                          },
                                                          {
                                                            "type": "IfStatement",
                                                            "test": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "settings"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "exclusive"
                                                              }
                                                            },
                                                            "consequent": {
                                                              "type": "BlockStatement",
                                                              "body": [
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "expression": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "module"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "closeOthers"
                                                                        }
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "call"
                                                                      }
                                                                    },
                                                                    "arguments": [
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "$activeTitle"
                                                                      }
                                                                    ]
                                                                  }
                                                                }
                                                              ]
                                                            },
                                                            "alternate": null
                                                          },
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "$activeTitle"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "addClass"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "className"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "active"
                                                                  }
                                                                }
                                                              ]
                                                            }
                                                          },
                                                          {
                                                            "type": "EmptyStatement"
                                                          },
                                                          {
                                                            "type": "IfStatement",
                                                            "test": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "settings"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "animateChildren"
                                                              }
                                                            },
                                                            "consequent": {
                                                              "type": "BlockStatement",
                                                              "body": [
                                                                {
                                                                  "type": "IfStatement",
                                                                  "test": {
                                                                    "type": "LogicalExpression",
                                                                    "operator": "&&",
                                                                    "left": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "!==",
                                                                      "left": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "$"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "fn"
                                                                          }
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "transition"
                                                                        }
                                                                      },
                                                                      "right": {
                                                                        "type": "Identifier",
                                                                        "name": "undefined"
                                                                      }
                                                                    },
                                                                    "right": {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "$module"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "transition"
                                                                        }
                                                                      },
                                                                      "arguments": [
                                                                        {
                                                                          "type": "Literal",
                                                                          "value": "is supported"
                                                                        }
                                                                      ]
                                                                    }
                                                                  },
                                                                  "consequent": {
                                                                    "type": "BlockStatement",
                                                                    "body": [
                                                                      {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                          "type": "CallExpression",
                                                                          "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "CallExpression",
                                                                              "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "$activeContent"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "children"
                                                                                }
                                                                              },
                                                                              "arguments": []
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "transition"
                                                                            }
                                                                          },
                                                                          "arguments": [
                                                                            {
                                                                              "type": "ObjectExpression",
                                                                              "properties": [
                                                                                {
                                                                                  "type": "Property",
                                                                                  "key": {
                                                                                    "type": "Identifier",
                                                                                    "name": "animation"
                                                                                  },
                                                                                  "value": {
                                                                                    "type": "Literal",
                                                                                    "value": "fade in"
                                                                                  },
                                                                                  "kind": "init"
                                                                                },
                                                                                {
                                                                                  "type": "Property",
                                                                                  "key": {
                                                                                    "type": "Identifier",
                                                                                    "name": "useFailSafe"
                                                                                  },
                                                                                  "value": {
                                                                                    "type": "Literal",
                                                                                    "value": true
                                                                                  },
                                                                                  "kind": "init"
                                                                                },
                                                                                {
                                                                                  "type": "Property",
                                                                                  "key": {
                                                                                    "type": "Identifier",
                                                                                    "name": "debug"
                                                                                  },
                                                                                  "value": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "settings"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "debug"
                                                                                    }
                                                                                  },
                                                                                  "kind": "init"
                                                                                },
                                                                                {
                                                                                  "type": "Property",
                                                                                  "key": {
                                                                                    "type": "Identifier",
                                                                                    "name": "verbose"
                                                                                  },
                                                                                  "value": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "settings"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "verbose"
                                                                                    }
                                                                                  },
                                                                                  "kind": "init"
                                                                                },
                                                                                {
                                                                                  "type": "Property",
                                                                                  "key": {
                                                                                    "type": "Identifier",
                                                                                    "name": "duration"
                                                                                  },
                                                                                  "value": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "settings"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "duration"
                                                                                    }
                                                                                  },
                                                                                  "kind": "init"
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        }
                                                                      },
                                                                      {
                                                                        "type": "EmptyStatement"
                                                                      }
                                                                    ]
                                                                  },
                                                                  "alternate": {
                                                                    "type": "BlockStatement",
                                                                    "body": [
                                                                      {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                          "type": "CallExpression",
                                                                          "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "CallExpression",
                                                                              "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "CallExpression",
                                                                                  "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "$activeContent"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "children"
                                                                                    }
                                                                                  },
                                                                                  "arguments": []
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "stop"
                                                                                }
                                                                              },
                                                                              "arguments": []
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "animate"
                                                                            }
                                                                          },
                                                                          "arguments": [
                                                                            {
                                                                              "type": "ObjectExpression",
                                                                              "properties": [
                                                                                {
                                                                                  "type": "Property",
                                                                                  "key": {
                                                                                    "type": "Identifier",
                                                                                    "name": "opacity"
                                                                                  },
                                                                                  "value": {
                                                                                    "type": "Literal",
                                                                                    "value": 1
                                                                                  },
                                                                                  "kind": "init"
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "MemberExpression",
                                                                              "computed": false,
                                                                              "object": {
                                                                                "type": "Identifier",
                                                                                "name": "settings"
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "duration"
                                                                              }
                                                                            },
                                                                            {
                                                                              "type": "MemberExpression",
                                                                              "computed": false,
                                                                              "object": {
                                                                                "type": "Identifier",
                                                                                "name": "module"
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "resetOpacity"
                                                                              }
                                                                            }
                                                                          ]
                                                                        }
                                                                      },
                                                                      {
                                                                        "type": "EmptyStatement"
                                                                      }
                                                                    ]
                                                                  }
                                                                }
                                                              ]
                                                            },
                                                            "alternate": null
                                                          },
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "$activeContent"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "stop"
                                                                    }
                                                                  },
                                                                  "arguments": []
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "slideDown"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "settings"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "duration"
                                                                  }
                                                                },
                                                                {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "settings"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "easing"
                                                                  }
                                                                },
                                                                {
                                                                  "type": "FunctionExpression",
                                                                  "id": null,
                                                                  "params": [],
                                                                  "defaults": [],
                                                                  "body": {
                                                                    "type": "BlockStatement",
                                                                    "body": [
                                                                      {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                          "type": "CallExpression",
                                                                          "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "Identifier",
                                                                              "name": "$activeContent"
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "addClass"
                                                                            }
                                                                          },
                                                                          "arguments": [
                                                                            {
                                                                              "type": "MemberExpression",
                                                                              "computed": false,
                                                                              "object": {
                                                                                "type": "Identifier",
                                                                                "name": "className"
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "active"
                                                                              }
                                                                            }
                                                                          ]
                                                                        }
                                                                      },
                                                                      {
                                                                        "type": "EmptyStatement"
                                                                      },
                                                                      {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                          "type": "CallExpression",
                                                                          "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "MemberExpression",
                                                                              "computed": false,
                                                                              "object": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "module"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "reset"
                                                                                }
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "display"
                                                                              }
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "call"
                                                                            }
                                                                          },
                                                                          "arguments": [
                                                                            {
                                                                              "type": "ThisExpression"
                                                                            }
                                                                          ]
                                                                        }
                                                                      },
                                                                      {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                          "type": "CallExpression",
                                                                          "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "MemberExpression",
                                                                              "computed": false,
                                                                              "object": {
                                                                                "type": "Identifier",
                                                                                "name": "settings"
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "onOpen"
                                                                              }
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "call"
                                                                            }
                                                                          },
                                                                          "arguments": [
                                                                            {
                                                                              "type": "ThisExpression"
                                                                            }
                                                                          ]
                                                                        }
                                                                      },
                                                                      {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                          "type": "CallExpression",
                                                                          "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "MemberExpression",
                                                                              "computed": false,
                                                                              "object": {
                                                                                "type": "Identifier",
                                                                                "name": "settings"
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "onChange"
                                                                              }
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "call"
                                                                            }
                                                                          },
                                                                          "arguments": [
                                                                            {
                                                                              "type": "ThisExpression"
                                                                            }
                                                                          ]
                                                                        }
                                                                      }
                                                                    ]
                                                                  },
                                                                  "rest": null,
                                                                  "generator": false,
                                                                  "expression": false
                                                                }
                                                              ]
                                                            }
                                                          },
                                                          {
                                                            "type": "EmptyStatement"
                                                          }
                                                        ]
                                                      },
                                                      "alternate": null
                                                    }
                                                  ]
                                                },
                                                "rest": null,
                                                "generator": false,
                                                "expression": false
                                              },
                                              "kind": "init"
                                            },
                                            {
                                              "type": "Property",
                                              "key": {
                                                "type": "Identifier",
                                                "name": "close"
                                              },
                                              "value": {
                                                "type": "FunctionExpression",
                                                "id": null,
                                                "params": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "query"
                                                  }
                                                ],
                                                "defaults": [],
                                                "body": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "VariableDeclaration",
                                                      "declarations": [
                                                        {
                                                          "type": "VariableDeclarator",
                                                          "id": {
                                                            "type": "Identifier",
                                                            "name": "$activeTitle"
                                                          },
                                                          "init": {
                                                            "type": "ConditionalExpression",
                                                            "test": {
                                                              "type": "BinaryExpression",
                                                              "operator": "!==",
                                                              "left": {
                                                                "type": "Identifier",
                                                                "name": "query"
                                                              },
                                                              "right": {
                                                                "type": "Identifier",
                                                                "name": "undefined"
                                                              }
                                                            },
                                                            "consequent": {
                                                              "type": "ConditionalExpression",
                                                              "test": {
                                                                "type": "BinaryExpression",
                                                                "operator": "===",
                                                                "left": {
                                                                  "type": "UnaryExpression",
                                                                  "operator": "typeof",
                                                                  "argument": {
                                                                    "type": "Identifier",
                                                                    "name": "query"
                                                                  },
                                                                  "prefix": true
                                                                },
                                                                "right": {
                                                                  "type": "Literal",
                                                                  "value": "number"
                                                                }
                                                              },
                                                              "consequent": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "$title"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "eq"
                                                                  }
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "query"
                                                                  }
                                                                ]
                                                              },
                                                              "alternate": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "Identifier",
                                                                  "name": "$"
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "query"
                                                                  }
                                                                ]
                                                              }
                                                            },
                                                            "alternate": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "Identifier",
                                                                "name": "$"
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "ThisExpression"
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "VariableDeclarator",
                                                          "id": {
                                                            "type": "Identifier",
                                                            "name": "$activeContent"
                                                          },
                                                          "init": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "$activeTitle"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "next"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "Identifier",
                                                                "name": "$content"
                                                              }
                                                            ]
                                                          }
                                                        },
                                                        {
                                                          "type": "VariableDeclarator",
                                                          "id": {
                                                            "type": "Identifier",
                                                            "name": "isActive"
                                                          },
                                                          "init": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "$activeContent"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "hasClass"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "className"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "active"
                                                                }
                                                              }
                                                            ]
                                                          }
                                                        }
                                                      ],
                                                      "kind": "var"
                                                    },
                                                    {
                                                      "type": "EmptyStatement"
                                                    },
                                                    {
                                                      "type": "IfStatement",
                                                      "test": {
                                                        "type": "Identifier",
                                                        "name": "isActive"
                                                      },
                                                      "consequent": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "module"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "debug"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Literal",
                                                                  "value": "Closing accordion content"
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "$activeContent"
                                                                }
                                                              ]
                                                            }
                                                          },
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "$activeTitle"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "removeClass"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "className"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "active"
                                                                  }
                                                                }
                                                              ]
                                                            }
                                                          },
                                                          {
                                                            "type": "EmptyStatement"
                                                          },
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "$activeContent"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "removeClass"
                                                                    }
                                                                  },
                                                                  "arguments": [
                                                                    {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "className"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "active"
                                                                      }
                                                                    }
                                                                  ]
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "show"
                                                                }
                                                              },
                                                              "arguments": []
                                                            }
                                                          },
                                                          {
                                                            "type": "EmptyStatement"
                                                          },
                                                          {
                                                            "type": "IfStatement",
                                                            "test": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "settings"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "animateChildren"
                                                              }
                                                            },
                                                            "consequent": {
                                                              "type": "BlockStatement",
                                                              "body": [
                                                                {
                                                                  "type": "IfStatement",
                                                                  "test": {
                                                                    "type": "LogicalExpression",
                                                                    "operator": "&&",
                                                                    "left": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "!==",
                                                                      "left": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "$"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "fn"
                                                                          }
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "transition"
                                                                        }
                                                                      },
                                                                      "right": {
                                                                        "type": "Identifier",
                                                                        "name": "undefined"
                                                                      }
                                                                    },
                                                                    "right": {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "$module"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "transition"
                                                                        }
                                                                      },
                                                                      "arguments": [
                                                                        {
                                                                          "type": "Literal",
                                                                          "value": "is supported"
                                                                        }
                                                                      ]
                                                                    }
                                                                  },
                                                                  "consequent": {
                                                                    "type": "BlockStatement",
                                                                    "body": [
                                                                      {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                          "type": "CallExpression",
                                                                          "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "CallExpression",
                                                                              "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "$activeContent"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "children"
                                                                                }
                                                                              },
                                                                              "arguments": []
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "transition"
                                                                            }
                                                                          },
                                                                          "arguments": [
                                                                            {
                                                                              "type": "ObjectExpression",
                                                                              "properties": [
                                                                                {
                                                                                  "type": "Property",
                                                                                  "key": {
                                                                                    "type": "Identifier",
                                                                                    "name": "animation"
                                                                                  },
                                                                                  "value": {
                                                                                    "type": "Literal",
                                                                                    "value": "fade out"
                                                                                  },
                                                                                  "kind": "init"
                                                                                },
                                                                                {
                                                                                  "type": "Property",
                                                                                  "key": {
                                                                                    "type": "Identifier",
                                                                                    "name": "useFailSafe"
                                                                                  },
                                                                                  "value": {
                                                                                    "type": "Literal",
                                                                                    "value": true
                                                                                  },
                                                                                  "kind": "init"
                                                                                },
                                                                                {
                                                                                  "type": "Property",
                                                                                  "key": {
                                                                                    "type": "Identifier",
                                                                                    "name": "debug"
                                                                                  },
                                                                                  "value": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "settings"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "debug"
                                                                                    }
                                                                                  },
                                                                                  "kind": "init"
                                                                                },
                                                                                {
                                                                                  "type": "Property",
                                                                                  "key": {
                                                                                    "type": "Identifier",
                                                                                    "name": "verbose"
                                                                                  },
                                                                                  "value": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "settings"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "verbose"
                                                                                    }
                                                                                  },
                                                                                  "kind": "init"
                                                                                },
                                                                                {
                                                                                  "type": "Property",
                                                                                  "key": {
                                                                                    "type": "Identifier",
                                                                                    "name": "duration"
                                                                                  },
                                                                                  "value": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "settings"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "duration"
                                                                                    }
                                                                                  },
                                                                                  "kind": "init"
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        }
                                                                      },
                                                                      {
                                                                        "type": "EmptyStatement"
                                                                      }
                                                                    ]
                                                                  },
                                                                  "alternate": {
                                                                    "type": "BlockStatement",
                                                                    "body": [
                                                                      {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                          "type": "CallExpression",
                                                                          "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "CallExpression",
                                                                              "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "CallExpression",
                                                                                  "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "$activeContent"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "children"
                                                                                    }
                                                                                  },
                                                                                  "arguments": []
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "stop"
                                                                                }
                                                                              },
                                                                              "arguments": []
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "animate"
                                                                            }
                                                                          },
                                                                          "arguments": [
                                                                            {
                                                                              "type": "ObjectExpression",
                                                                              "properties": [
                                                                                {
                                                                                  "type": "Property",
                                                                                  "key": {
                                                                                    "type": "Identifier",
                                                                                    "name": "opacity"
                                                                                  },
                                                                                  "value": {
                                                                                    "type": "Literal",
                                                                                    "value": 0
                                                                                  },
                                                                                  "kind": "init"
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "MemberExpression",
                                                                              "computed": false,
                                                                              "object": {
                                                                                "type": "Identifier",
                                                                                "name": "settings"
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "duration"
                                                                              }
                                                                            },
                                                                            {
                                                                              "type": "MemberExpression",
                                                                              "computed": false,
                                                                              "object": {
                                                                                "type": "Identifier",
                                                                                "name": "module"
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "resetOpacity"
                                                                              }
                                                                            }
                                                                          ]
                                                                        }
                                                                      },
                                                                      {
                                                                        "type": "EmptyStatement"
                                                                      }
                                                                    ]
                                                                  }
                                                                }
                                                              ]
                                                            },
                                                            "alternate": null
                                                          },
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "$activeContent"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "stop"
                                                                    }
                                                                  },
                                                                  "arguments": []
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "slideUp"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "settings"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "duration"
                                                                  }
                                                                },
                                                                {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "settings"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "easing"
                                                                  }
                                                                },
                                                                {
                                                                  "type": "FunctionExpression",
                                                                  "id": null,
                                                                  "params": [],
                                                                  "defaults": [],
                                                                  "body": {
                                                                    "type": "BlockStatement",
                                                                    "body": [
                                                                      {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                          "type": "CallExpression",
                                                                          "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "MemberExpression",
                                                                              "computed": false,
                                                                              "object": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "module"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "reset"
                                                                                }
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "display"
                                                                              }
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "call"
                                                                            }
                                                                          },
                                                                          "arguments": [
                                                                            {
                                                                              "type": "ThisExpression"
                                                                            }
                                                                          ]
                                                                        }
                                                                      },
                                                                      {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                          "type": "CallExpression",
                                                                          "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "MemberExpression",
                                                                              "computed": false,
                                                                              "object": {
                                                                                "type": "Identifier",
                                                                                "name": "settings"
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "onClose"
                                                                              }
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "call"
                                                                            }
                                                                          },
                                                                          "arguments": [
                                                                            {
                                                                              "type": "ThisExpression"
                                                                            }
                                                                          ]
                                                                        }
                                                                      },
                                                                      {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                          "type": "CallExpression",
                                                                          "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "MemberExpression",
                                                                              "computed": false,
                                                                              "object": {
                                                                                "type": "Identifier",
                                                                                "name": "settings"
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "onChange"
                                                                              }
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "call"
                                                                            }
                                                                          },
                                                                          "arguments": [
                                                                            {
                                                                              "type": "ThisExpression"
                                                                            }
                                                                          ]
                                                                        }
                                                                      }
                                                                    ]
                                                                  },
                                                                  "rest": null,
                                                                  "generator": false,
                                                                  "expression": false
                                                                }
                                                              ]
                                                            }
                                                          },
                                                          {
                                                            "type": "EmptyStatement"
                                                          }
                                                        ]
                                                      },
                                                      "alternate": null
                                                    }
                                                  ]
                                                },
                                                "rest": null,
                                                "generator": false,
                                                "expression": false
                                              },
                                              "kind": "init"
                                            },
                                            {
                                              "type": "Property",
                                              "key": {
                                                "type": "Identifier",
                                                "name": "closeOthers"
                                              },
                                              "value": {
                                                "type": "FunctionExpression",
                                                "id": null,
                                                "params": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "index"
                                                  }
                                                ],
                                                "defaults": [],
                                                "body": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "VariableDeclaration",
                                                      "declarations": [
                                                        {
                                                          "type": "VariableDeclarator",
                                                          "id": {
                                                            "type": "Identifier",
                                                            "name": "$activeTitle"
                                                          },
                                                          "init": {
                                                            "type": "ConditionalExpression",
                                                            "test": {
                                                              "type": "BinaryExpression",
                                                              "operator": "!==",
                                                              "left": {
                                                                "type": "Identifier",
                                                                "name": "index"
                                                              },
                                                              "right": {
                                                                "type": "Identifier",
                                                                "name": "undefined"
                                                              }
                                                            },
                                                            "consequent": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "$title"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "eq"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "index"
                                                                }
                                                              ]
                                                            },
                                                            "alternate": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "Identifier",
                                                                "name": "$"
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "ThisExpression"
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "VariableDeclarator",
                                                          "id": {
                                                            "type": "Identifier",
                                                            "name": "$parentTitles"
                                                          },
                                                          "init": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "$activeTitle"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "parents"
                                                                  }
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "selector"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "content"
                                                                    }
                                                                  }
                                                                ]
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "prev"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "selector"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "title"
                                                                }
                                                              }
                                                            ]
                                                          }
                                                        },
                                                        {
                                                          "type": "VariableDeclarator",
                                                          "id": {
                                                            "type": "Identifier",
                                                            "name": "$activeAccordion"
                                                          },
                                                          "init": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "$activeTitle"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "closest"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "selector"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "accordion"
                                                                }
                                                              }
                                                            ]
                                                          }
                                                        },
                                                        {
                                                          "type": "VariableDeclarator",
                                                          "id": {
                                                            "type": "Identifier",
                                                            "name": "activeSelector"
                                                          },
                                                          "init": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "BinaryExpression",
                                                              "operator": "+",
                                                              "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "selector"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "title"
                                                                  }
                                                                },
                                                                "right": {
                                                                  "type": "Literal",
                                                                  "value": "."
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "className"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "active"
                                                                }
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "Literal",
                                                              "value": ":visible"
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "VariableDeclarator",
                                                          "id": {
                                                            "type": "Identifier",
                                                            "name": "activeContent"
                                                          },
                                                          "init": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "BinaryExpression",
                                                              "operator": "+",
                                                              "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "selector"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "content"
                                                                  }
                                                                },
                                                                "right": {
                                                                  "type": "Literal",
                                                                  "value": "."
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "className"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "active"
                                                                }
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "Literal",
                                                              "value": ":visible"
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "VariableDeclarator",
                                                          "id": {
                                                            "type": "Identifier",
                                                            "name": "$openTitles"
                                                          },
                                                          "init": null
                                                        },
                                                        {
                                                          "type": "VariableDeclarator",
                                                          "id": {
                                                            "type": "Identifier",
                                                            "name": "$nestedTitles"
                                                          },
                                                          "init": null
                                                        },
                                                        {
                                                          "type": "VariableDeclarator",
                                                          "id": {
                                                            "type": "Identifier",
                                                            "name": "$openContents"
                                                          },
                                                          "init": null
                                                        }
                                                      ],
                                                      "kind": "var"
                                                    },
                                                    {
                                                      "type": "EmptyStatement"
                                                    },
                                                    {
                                                      "type": "IfStatement",
                                                      "test": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "settings"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "closeNested"
                                                        }
                                                      },
                                                      "consequent": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "AssignmentExpression",
                                                              "operator": "=",
                                                              "left": {
                                                                "type": "Identifier",
                                                                "name": "$openTitles"
                                                              },
                                                              "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "$activeAccordion"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "find"
                                                                      }
                                                                    },
                                                                    "arguments": [
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "activeSelector"
                                                                      }
                                                                    ]
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "not"
                                                                  }
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "$parentTitles"
                                                                  }
                                                                ]
                                                              }
                                                            }
                                                          },
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "AssignmentExpression",
                                                              "operator": "=",
                                                              "left": {
                                                                "type": "Identifier",
                                                                "name": "$openContents"
                                                              },
                                                              "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "$openTitles"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "next"
                                                                  }
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "$content"
                                                                  }
                                                                ]
                                                              }
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      "alternate": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "AssignmentExpression",
                                                              "operator": "=",
                                                              "left": {
                                                                "type": "Identifier",
                                                                "name": "$openTitles"
                                                              },
                                                              "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "$activeAccordion"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "find"
                                                                      }
                                                                    },
                                                                    "arguments": [
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "activeSelector"
                                                                      }
                                                                    ]
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "not"
                                                                  }
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "$parentTitles"
                                                                  }
                                                                ]
                                                              }
                                                            }
                                                          },
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "AssignmentExpression",
                                                              "operator": "=",
                                                              "left": {
                                                                "type": "Identifier",
                                                                "name": "$nestedTitles"
                                                              },
                                                              "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "$activeAccordion"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "find"
                                                                          }
                                                                        },
                                                                        "arguments": [
                                                                          {
                                                                            "type": "Identifier",
                                                                            "name": "activeContent"
                                                                          }
                                                                        ]
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "find"
                                                                      }
                                                                    },
                                                                    "arguments": [
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "activeSelector"
                                                                      }
                                                                    ]
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "not"
                                                                  }
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "$parentTitles"
                                                                  }
                                                                ]
                                                              }
                                                            }
                                                          },
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "AssignmentExpression",
                                                              "operator": "=",
                                                              "left": {
                                                                "type": "Identifier",
                                                                "name": "$openTitles"
                                                              },
                                                              "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "$openTitles"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "not"
                                                                  }
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "$nestedTitles"
                                                                  }
                                                                ]
                                                              }
                                                            }
                                                          },
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "AssignmentExpression",
                                                              "operator": "=",
                                                              "left": {
                                                                "type": "Identifier",
                                                                "name": "$openContents"
                                                              },
                                                              "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "$openTitles"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "next"
                                                                  }
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "$content"
                                                                  }
                                                                ]
                                                              }
                                                            }
                                                          }
                                                        ]
                                                      }
                                                    },
                                                    {
                                                      "type": "IfStatement",
                                                      "test": {
                                                        "type": "BinaryExpression",
                                                        "operator": ">",
                                                        "left": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "$openTitles"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "length"
                                                          }
                                                        },
                                                        "right": {
                                                          "type": "Literal",
                                                          "value": 0
                                                        }
                                                      },
                                                      "consequent": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "module"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "debug"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Literal",
                                                                  "value": "Exclusive enabled, closing other content"
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "$openTitles"
                                                                }
                                                              ]
                                                            }
                                                          },
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "$openTitles"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "removeClass"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "className"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "active"
                                                                  }
                                                                }
                                                              ]
                                                            }
                                                          },
                                                          {
                                                            "type": "EmptyStatement"
                                                          },
                                                          {
                                                            "type": "IfStatement",
                                                            "test": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "settings"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "animateChildren"
                                                              }
                                                            },
                                                            "consequent": {
                                                              "type": "BlockStatement",
                                                              "body": [
                                                                {
                                                                  "type": "IfStatement",
                                                                  "test": {
                                                                    "type": "LogicalExpression",
                                                                    "operator": "&&",
                                                                    "left": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "!==",
                                                                      "left": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "$"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "fn"
                                                                          }
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "transition"
                                                                        }
                                                                      },
                                                                      "right": {
                                                                        "type": "Identifier",
                                                                        "name": "undefined"
                                                                      }
                                                                    },
                                                                    "right": {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "$module"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "transition"
                                                                        }
                                                                      },
                                                                      "arguments": [
                                                                        {
                                                                          "type": "Literal",
                                                                          "value": "is supported"
                                                                        }
                                                                      ]
                                                                    }
                                                                  },
                                                                  "consequent": {
                                                                    "type": "BlockStatement",
                                                                    "body": [
                                                                      {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                          "type": "CallExpression",
                                                                          "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "CallExpression",
                                                                              "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "$openContents"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "children"
                                                                                }
                                                                              },
                                                                              "arguments": []
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "transition"
                                                                            }
                                                                          },
                                                                          "arguments": [
                                                                            {
                                                                              "type": "ObjectExpression",
                                                                              "properties": [
                                                                                {
                                                                                  "type": "Property",
                                                                                  "key": {
                                                                                    "type": "Identifier",
                                                                                    "name": "animation"
                                                                                  },
                                                                                  "value": {
                                                                                    "type": "Literal",
                                                                                    "value": "fade out"
                                                                                  },
                                                                                  "kind": "init"
                                                                                },
                                                                                {
                                                                                  "type": "Property",
                                                                                  "key": {
                                                                                    "type": "Identifier",
                                                                                    "name": "useFailSafe"
                                                                                  },
                                                                                  "value": {
                                                                                    "type": "Literal",
                                                                                    "value": true
                                                                                  },
                                                                                  "kind": "init"
                                                                                },
                                                                                {
                                                                                  "type": "Property",
                                                                                  "key": {
                                                                                    "type": "Identifier",
                                                                                    "name": "debug"
                                                                                  },
                                                                                  "value": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "settings"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "debug"
                                                                                    }
                                                                                  },
                                                                                  "kind": "init"
                                                                                },
                                                                                {
                                                                                  "type": "Property",
                                                                                  "key": {
                                                                                    "type": "Identifier",
                                                                                    "name": "verbose"
                                                                                  },
                                                                                  "value": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "settings"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "verbose"
                                                                                    }
                                                                                  },
                                                                                  "kind": "init"
                                                                                },
                                                                                {
                                                                                  "type": "Property",
                                                                                  "key": {
                                                                                    "type": "Identifier",
                                                                                    "name": "duration"
                                                                                  },
                                                                                  "value": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "settings"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "duration"
                                                                                    }
                                                                                  },
                                                                                  "kind": "init"
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        }
                                                                      },
                                                                      {
                                                                        "type": "EmptyStatement"
                                                                      }
                                                                    ]
                                                                  },
                                                                  "alternate": {
                                                                    "type": "BlockStatement",
                                                                    "body": [
                                                                      {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                          "type": "CallExpression",
                                                                          "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "CallExpression",
                                                                              "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "CallExpression",
                                                                                  "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "$openContents"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "children"
                                                                                    }
                                                                                  },
                                                                                  "arguments": []
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "stop"
                                                                                }
                                                                              },
                                                                              "arguments": []
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "animate"
                                                                            }
                                                                          },
                                                                          "arguments": [
                                                                            {
                                                                              "type": "ObjectExpression",
                                                                              "properties": [
                                                                                {
                                                                                  "type": "Property",
                                                                                  "key": {
                                                                                    "type": "Identifier",
                                                                                    "name": "opacity"
                                                                                  },
                                                                                  "value": {
                                                                                    "type": "Literal",
                                                                                    "value": 0
                                                                                  },
                                                                                  "kind": "init"
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "MemberExpression",
                                                                              "computed": false,
                                                                              "object": {
                                                                                "type": "Identifier",
                                                                                "name": "settings"
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "duration"
                                                                              }
                                                                            },
                                                                            {
                                                                              "type": "MemberExpression",
                                                                              "computed": false,
                                                                              "object": {
                                                                                "type": "Identifier",
                                                                                "name": "module"
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "resetOpacity"
                                                                              }
                                                                            }
                                                                          ]
                                                                        }
                                                                      },
                                                                      {
                                                                        "type": "EmptyStatement"
                                                                      }
                                                                    ]
                                                                  }
                                                                }
                                                              ]
                                                            },
                                                            "alternate": null
                                                          },
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "$openContents"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "stop"
                                                                    }
                                                                  },
                                                                  "arguments": []
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "slideUp"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "settings"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "duration"
                                                                  }
                                                                },
                                                                {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "settings"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "easing"
                                                                  }
                                                                },
                                                                {
                                                                  "type": "FunctionExpression",
                                                                  "id": null,
                                                                  "params": [],
                                                                  "defaults": [],
                                                                  "body": {
                                                                    "type": "BlockStatement",
                                                                    "body": [
                                                                      {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                          "type": "CallExpression",
                                                                          "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "CallExpression",
                                                                              "callee": {
                                                                                "type": "Identifier",
                                                                                "name": "$"
                                                                              },
                                                                              "arguments": [
                                                                                {
                                                                                  "type": "ThisExpression"
                                                                                }
                                                                              ]
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "removeClass"
                                                                            }
                                                                          },
                                                                          "arguments": [
                                                                            {
                                                                              "type": "MemberExpression",
                                                                              "computed": false,
                                                                              "object": {
                                                                                "type": "Identifier",
                                                                                "name": "className"
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "active"
                                                                              }
                                                                            }
                                                                          ]
                                                                        }
                                                                      },
                                                                      {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                          "type": "CallExpression",
                                                                          "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "MemberExpression",
                                                                              "computed": false,
                                                                              "object": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "module"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "reset"
                                                                                }
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "display"
                                                                              }
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "call"
                                                                            }
                                                                          },
                                                                          "arguments": [
                                                                            {
                                                                              "type": "ThisExpression"
                                                                            }
                                                                          ]
                                                                        }
                                                                      }
                                                                    ]
                                                                  },
                                                                  "rest": null,
                                                                  "generator": false,
                                                                  "expression": false
                                                                }
                                                              ]
                                                            }
                                                          },
                                                          {
                                                            "type": "EmptyStatement"
                                                          }
                                                        ]
                                                      },
                                                      "alternate": null
                                                    }
                                                  ]
                                                },
                                                "rest": null,
                                                "generator": false,
                                                "expression": false
                                              },
                                              "kind": "init"
                                            },
                                            {
                                              "type": "Property",
                                              "key": {
                                                "type": "Identifier",
                                                "name": "reset"
                                              },
                                              "value": {
                                                "type": "ObjectExpression",
                                                "properties": [
                                                  {
                                                    "type": "Property",
                                                    "key": {
                                                      "type": "Identifier",
                                                      "name": "display"
                                                    },
                                                    "value": {
                                                      "type": "FunctionExpression",
                                                      "id": null,
                                                      "params": [],
                                                      "defaults": [],
                                                      "body": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "module"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "verbose"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Literal",
                                                                  "value": "Removing inline display from element"
                                                                },
                                                                {
                                                                  "type": "ThisExpression"
                                                                }
                                                              ]
                                                            }
                                                          },
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "$"
                                                                  },
                                                                  "arguments": [
                                                                    {
                                                                      "type": "ThisExpression"
                                                                    }
                                                                  ]
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "css"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Literal",
                                                                  "value": "display"
                                                                },
                                                                {
                                                                  "type": "Literal",
                                                                  "value": ""
                                                                }
                                                              ]
                                                            }
                                                          },
                                                          {
                                                            "type": "IfStatement",
                                                            "test": {
                                                              "type": "BinaryExpression",
                                                              "operator": "===",
                                                              "left": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "Identifier",
                                                                      "name": "$"
                                                                    },
                                                                    "arguments": [
                                                                      {
                                                                        "type": "ThisExpression"
                                                                      }
                                                                    ]
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "attr"
                                                                  }
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "Literal",
                                                                    "value": "style"
                                                                  }
                                                                ]
                                                              },
                                                              "right": {
                                                                "type": "Literal",
                                                                "value": ""
                                                              }
                                                            },
                                                            "consequent": {
                                                              "type": "BlockStatement",
                                                              "body": [
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "expression": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                              "type": "Identifier",
                                                                              "name": "$"
                                                                            },
                                                                            "arguments": [
                                                                              {
                                                                                "type": "ThisExpression"
                                                                              }
                                                                            ]
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "attr"
                                                                          }
                                                                        },
                                                                        "arguments": [
                                                                          {
                                                                            "type": "Literal",
                                                                            "value": "style"
                                                                          },
                                                                          {
                                                                            "type": "Literal",
                                                                            "value": ""
                                                                          }
                                                                        ]
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "removeAttr"
                                                                      }
                                                                    },
                                                                    "arguments": [
                                                                      {
                                                                        "type": "Literal",
                                                                        "value": "style"
                                                                      }
                                                                    ]
                                                                  }
                                                                },
                                                                {
                                                                  "type": "EmptyStatement"
                                                                }
                                                              ]
                                                            },
                                                            "alternate": null
                                                          }
                                                        ]
                                                      },
                                                      "rest": null,
                                                      "generator": false,
                                                      "expression": false
                                                    },
                                                    "kind": "init"
                                                  },
                                                  {
                                                    "type": "Property",
                                                    "key": {
                                                      "type": "Identifier",
                                                      "name": "opacity"
                                                    },
                                                    "value": {
                                                      "type": "FunctionExpression",
                                                      "id": null,
                                                      "params": [],
                                                      "defaults": [],
                                                      "body": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "module"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "verbose"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Literal",
                                                                  "value": "Removing inline opacity from element"
                                                                },
                                                                {
                                                                  "type": "ThisExpression"
                                                                }
                                                              ]
                                                            }
                                                          },
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "$"
                                                                  },
                                                                  "arguments": [
                                                                    {
                                                                      "type": "ThisExpression"
                                                                    }
                                                                  ]
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "css"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Literal",
                                                                  "value": "opacity"
                                                                },
                                                                {
                                                                  "type": "Literal",
                                                                  "value": ""
                                                                }
                                                              ]
                                                            }
                                                          },
                                                          {
                                                            "type": "IfStatement",
                                                            "test": {
                                                              "type": "BinaryExpression",
                                                              "operator": "===",
                                                              "left": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "Identifier",
                                                                      "name": "$"
                                                                    },
                                                                    "arguments": [
                                                                      {
                                                                        "type": "ThisExpression"
                                                                      }
                                                                    ]
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "attr"
                                                                  }
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "Literal",
                                                                    "value": "style"
                                                                  }
                                                                ]
                                                              },
                                                              "right": {
                                                                "type": "Literal",
                                                                "value": ""
                                                              }
                                                            },
                                                            "consequent": {
                                                              "type": "BlockStatement",
                                                              "body": [
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "expression": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                              "type": "Identifier",
                                                                              "name": "$"
                                                                            },
                                                                            "arguments": [
                                                                              {
                                                                                "type": "ThisExpression"
                                                                              }
                                                                            ]
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "attr"
                                                                          }
                                                                        },
                                                                        "arguments": [
                                                                          {
                                                                            "type": "Literal",
                                                                            "value": "style"
                                                                          },
                                                                          {
                                                                            "type": "Literal",
                                                                            "value": ""
                                                                          }
                                                                        ]
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "removeAttr"
                                                                      }
                                                                    },
                                                                    "arguments": [
                                                                      {
                                                                        "type": "Literal",
                                                                        "value": "style"
                                                                      }
                                                                    ]
                                                                  }
                                                                },
                                                                {
                                                                  "type": "EmptyStatement"
                                                                }
                                                              ]
                                                            },
                                                            "alternate": null
                                                          }
                                                        ]
                                                      },
                                                      "rest": null,
                                                      "generator": false,
                                                      "expression": false
                                                    },
                                                    "kind": "init"
                                                  }
                                                ]
                                              },
                                              "kind": "init"
                                            },
                                            {
                                              "type": "Property",
                                              "key": {
                                                "type": "Identifier",
                                                "name": "setting"
                                              },
                                              "value": {
                                                "type": "FunctionExpression",
                                                "id": null,
                                                "params": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "name"
                                                  },
                                                  {
                                                    "type": "Identifier",
                                                    "name": "value"
                                                  }
                                                ],
                                                "defaults": [],
                                                "body": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "module"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "debug"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Literal",
                                                            "value": "Changing setting"
                                                          },
                                                          {
                                                            "type": "Identifier",
                                                            "name": "name"
                                                          },
                                                          {
                                                            "type": "Identifier",
                                                            "name": "value"
                                                          }
                                                        ]
                                                      }
                                                    },
                                                    {
                                                      "type": "IfStatement",
                                                      "test": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "$"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "isPlainObject"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Identifier",
                                                            "name": "name"
                                                          }
                                                        ]
                                                      },
                                                      "consequent": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "$"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "extend"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Literal",
                                                                  "value": true
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "settings"
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "name"
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      "alternate": {
                                                        "type": "IfStatement",
                                                        "test": {
                                                          "type": "BinaryExpression",
                                                          "operator": "!==",
                                                          "left": {
                                                            "type": "Identifier",
                                                            "name": "value"
                                                          },
                                                          "right": {
                                                            "type": "Identifier",
                                                            "name": "undefined"
                                                          }
                                                        },
                                                        "consequent": {
                                                          "type": "BlockStatement",
                                                          "body": [
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "expression": {
                                                                "type": "AssignmentExpression",
                                                                "operator": "=",
                                                                "left": {
                                                                  "type": "MemberExpression",
                                                                  "computed": true,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "settings"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "name"
                                                                  }
                                                                },
                                                                "right": {
                                                                  "type": "Identifier",
                                                                  "name": "value"
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        },
                                                        "alternate": {
                                                          "type": "BlockStatement",
                                                          "body": [
                                                            {
                                                              "type": "ReturnStatement",
                                                              "argument": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "settings"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "name"
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    }
                                                  ]
                                                },
                                                "rest": null,
                                                "generator": false,
                                                "expression": false
                                              },
                                              "kind": "init"
                                            },
                                            {
                                              "type": "Property",
                                              "key": {
                                                "type": "Identifier",
                                                "name": "internal"
                                              },
                                              "value": {
                                                "type": "FunctionExpression",
                                                "id": null,
                                                "params": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "name"
                                                  },
                                                  {
                                                    "type": "Identifier",
                                                    "name": "value"
                                                  }
                                                ],
                                                "defaults": [],
                                                "body": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "module"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "debug"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Literal",
                                                            "value": "Changing internal"
                                                          },
                                                          {
                                                            "type": "Identifier",
                                                            "name": "name"
                                                          },
                                                          {
                                                            "type": "Identifier",
                                                            "name": "value"
                                                          }
                                                        ]
                                                      }
                                                    },
                                                    {
                                                      "type": "IfStatement",
                                                      "test": {
                                                        "type": "BinaryExpression",
                                                        "operator": "!==",
                                                        "left": {
                                                          "type": "Identifier",
                                                          "name": "value"
                                                        },
                                                        "right": {
                                                          "type": "Identifier",
                                                          "name": "undefined"
                                                        }
                                                      },
                                                      "consequent": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "IfStatement",
                                                            "test": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "$"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "isPlainObject"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "name"
                                                                }
                                                              ]
                                                            },
                                                            "consequent": {
                                                              "type": "BlockStatement",
                                                              "body": [
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "expression": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "$"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "extend"
                                                                      }
                                                                    },
                                                                    "arguments": [
                                                                      {
                                                                        "type": "Literal",
                                                                        "value": true
                                                                      },
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "module"
                                                                      },
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "name"
                                                                      }
                                                                    ]
                                                                  }
                                                                }
                                                              ]
                                                            },
                                                            "alternate": {
                                                              "type": "BlockStatement",
                                                              "body": [
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                      "type": "MemberExpression",
                                                                      "computed": true,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "module"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "name"
                                                                      }
                                                                    },
                                                                    "right": {
                                                                      "type": "Identifier",
                                                                      "name": "value"
                                                                    }
                                                                  }
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      "alternate": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "ReturnStatement",
                                                            "argument": {
                                                              "type": "MemberExpression",
                                                              "computed": true,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "module"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "name"
                                                              }
                                                            }
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  ]
                                                },
                                                "rest": null,
                                                "generator": false,
                                                "expression": false
                                              },
                                              "kind": "init"
                                            },
                                            {
                                              "type": "Property",
                                              "key": {
                                                "type": "Identifier",
                                                "name": "debug"
                                              },
                                              "value": {
                                                "type": "FunctionExpression",
                                                "id": null,
                                                "params": [],
                                                "defaults": [],
                                                "body": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "IfStatement",
                                                      "test": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "settings"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "debug"
                                                        }
                                                      },
                                                      "consequent": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "IfStatement",
                                                            "test": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "settings"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "performance"
                                                              }
                                                            },
                                                            "consequent": {
                                                              "type": "BlockStatement",
                                                              "body": [
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "expression": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "module"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "performance"
                                                                        }
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "log"
                                                                      }
                                                                    },
                                                                    "arguments": [
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "arguments"
                                                                      }
                                                                    ]
                                                                  }
                                                                }
                                                              ]
                                                            },
                                                            "alternate": {
                                                              "type": "BlockStatement",
                                                              "body": [
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "module"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "debug"
                                                                      }
                                                                    },
                                                                    "right": {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "Identifier",
                                                                              "name": "Function"
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "prototype"
                                                                            }
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "bind"
                                                                          }
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "call"
                                                                        }
                                                                      },
                                                                      "arguments": [
                                                                        {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "console"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "info"
                                                                          }
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "name": "console"
                                                                        },
                                                                        {
                                                                          "type": "BinaryExpression",
                                                                          "operator": "+",
                                                                          "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "Identifier",
                                                                              "name": "settings"
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "name"
                                                                            }
                                                                          },
                                                                          "right": {
                                                                            "type": "Literal",
                                                                            "value": ":"
                                                                          }
                                                                        }
                                                                      ]
                                                                    }
                                                                  }
                                                                },
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "expression": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "module"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "debug"
                                                                        }
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "apply"
                                                                      }
                                                                    },
                                                                    "arguments": [
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "console"
                                                                      },
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "arguments"
                                                                      }
                                                                    ]
                                                                  }
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      "alternate": null
                                                    }
                                                  ]
                                                },
                                                "rest": null,
                                                "generator": false,
                                                "expression": false
                                              },
                                              "kind": "init"
                                            },
                                            {
                                              "type": "Property",
                                              "key": {
                                                "type": "Identifier",
                                                "name": "verbose"
                                              },
                                              "value": {
                                                "type": "FunctionExpression",
                                                "id": null,
                                                "params": [],
                                                "defaults": [],
                                                "body": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "IfStatement",
                                                      "test": {
                                                        "type": "LogicalExpression",
                                                        "operator": "&&",
                                                        "left": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "settings"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "verbose"
                                                          }
                                                        },
                                                        "right": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "settings"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "debug"
                                                          }
                                                        }
                                                      },
                                                      "consequent": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "IfStatement",
                                                            "test": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "settings"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "performance"
                                                              }
                                                            },
                                                            "consequent": {
                                                              "type": "BlockStatement",
                                                              "body": [
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "expression": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "module"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "performance"
                                                                        }
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "log"
                                                                      }
                                                                    },
                                                                    "arguments": [
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "arguments"
                                                                      }
                                                                    ]
                                                                  }
                                                                }
                                                              ]
                                                            },
                                                            "alternate": {
                                                              "type": "BlockStatement",
                                                              "body": [
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "module"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "verbose"
                                                                      }
                                                                    },
                                                                    "right": {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "Identifier",
                                                                              "name": "Function"
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "prototype"
                                                                            }
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "bind"
                                                                          }
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "call"
                                                                        }
                                                                      },
                                                                      "arguments": [
                                                                        {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "console"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "info"
                                                                          }
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "name": "console"
                                                                        },
                                                                        {
                                                                          "type": "BinaryExpression",
                                                                          "operator": "+",
                                                                          "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "Identifier",
                                                                              "name": "settings"
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "name"
                                                                            }
                                                                          },
                                                                          "right": {
                                                                            "type": "Literal",
                                                                            "value": ":"
                                                                          }
                                                                        }
                                                                      ]
                                                                    }
                                                                  }
                                                                },
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "expression": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "module"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "verbose"
                                                                        }
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "apply"
                                                                      }
                                                                    },
                                                                    "arguments": [
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "console"
                                                                      },
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "arguments"
                                                                      }
                                                                    ]
                                                                  }
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      "alternate": null
                                                    }
                                                  ]
                                                },
                                                "rest": null,
                                                "generator": false,
                                                "expression": false
                                              },
                                              "kind": "init"
                                            },
                                            {
                                              "type": "Property",
                                              "key": {
                                                "type": "Identifier",
                                                "name": "error"
                                              },
                                              "value": {
                                                "type": "FunctionExpression",
                                                "id": null,
                                                "params": [],
                                                "defaults": [],
                                                "body": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "module"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "error"
                                                          }
                                                        },
                                                        "right": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "Function"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "prototype"
                                                                }
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "bind"
                                                              }
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "call"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "console"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "error"
                                                              }
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "name": "console"
                                                            },
                                                            {
                                                              "type": "BinaryExpression",
                                                              "operator": "+",
                                                              "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "settings"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "name"
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "Literal",
                                                                "value": ":"
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "module"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "error"
                                                            }
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "apply"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Identifier",
                                                            "name": "console"
                                                          },
                                                          {
                                                            "type": "Identifier",
                                                            "name": "arguments"
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  ]
                                                },
                                                "rest": null,
                                                "generator": false,
                                                "expression": false
                                              },
                                              "kind": "init"
                                            },
                                            {
                                              "type": "Property",
                                              "key": {
                                                "type": "Identifier",
                                                "name": "performance"
                                              },
                                              "value": {
                                                "type": "ObjectExpression",
                                                "properties": [
                                                  {
                                                    "type": "Property",
                                                    "key": {
                                                      "type": "Identifier",
                                                      "name": "log"
                                                    },
                                                    "value": {
                                                      "type": "FunctionExpression",
                                                      "id": null,
                                                      "params": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "message"
                                                        }
                                                      ],
                                                      "defaults": [],
                                                      "body": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "VariableDeclaration",
                                                            "declarations": [
                                                              {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                  "type": "Identifier",
                                                                  "name": "currentTime"
                                                                },
                                                                "init": null
                                                              },
                                                              {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                  "type": "Identifier",
                                                                  "name": "executionTime"
                                                                },
                                                                "init": null
                                                              },
                                                              {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                  "type": "Identifier",
                                                                  "name": "previousTime"
                                                                },
                                                                "init": null
                                                              }
                                                            ],
                                                            "kind": "var"
                                                          },
                                                          {
                                                            "type": "EmptyStatement"
                                                          },
                                                          {
                                                            "type": "IfStatement",
                                                            "test": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "settings"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "performance"
                                                              }
                                                            },
                                                            "consequent": {
                                                              "type": "BlockStatement",
                                                              "body": [
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                      "type": "Identifier",
                                                                      "name": "currentTime"
                                                                    },
                                                                    "right": {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "NewExpression",
                                                                          "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "Date"
                                                                          },
                                                                          "arguments": []
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "getTime"
                                                                        }
                                                                      },
                                                                      "arguments": []
                                                                    }
                                                                  }
                                                                },
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                      "type": "Identifier",
                                                                      "name": "previousTime"
                                                                    },
                                                                    "right": {
                                                                      "type": "LogicalExpression",
                                                                      "operator": "||",
                                                                      "left": {
                                                                        "type": "Identifier",
                                                                        "name": "time"
                                                                      },
                                                                      "right": {
                                                                        "type": "Identifier",
                                                                        "name": "currentTime"
                                                                      }
                                                                    }
                                                                  }
                                                                },
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                      "type": "Identifier",
                                                                      "name": "executionTime"
                                                                    },
                                                                    "right": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "-",
                                                                      "left": {
                                                                        "type": "Identifier",
                                                                        "name": "currentTime"
                                                                      },
                                                                      "right": {
                                                                        "type": "Identifier",
                                                                        "name": "previousTime"
                                                                      }
                                                                    }
                                                                  }
                                                                },
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                      "type": "Identifier",
                                                                      "name": "time"
                                                                    },
                                                                    "right": {
                                                                      "type": "Identifier",
                                                                      "name": "currentTime"
                                                                    }
                                                                  }
                                                                },
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "expression": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "performance"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "push"
                                                                      }
                                                                    },
                                                                    "arguments": [
                                                                      {
                                                                        "type": "ObjectExpression",
                                                                        "properties": [
                                                                          {
                                                                            "type": "Property",
                                                                            "key": {
                                                                              "type": "Literal",
                                                                              "value": "Name"
                                                                            },
                                                                            "value": {
                                                                              "type": "MemberExpression",
                                                                              "computed": true,
                                                                              "object": {
                                                                                "type": "Identifier",
                                                                                "name": "message"
                                                                              },
                                                                              "property": {
                                                                                "type": "Literal",
                                                                                "value": 0
                                                                              }
                                                                            },
                                                                            "kind": "init"
                                                                          },
                                                                          {
                                                                            "type": "Property",
                                                                            "key": {
                                                                              "type": "Literal",
                                                                              "value": "Arguments"
                                                                            },
                                                                            "value": {
                                                                              "type": "LogicalExpression",
                                                                              "operator": "||",
                                                                              "left": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                  "type": "MemberExpression",
                                                                                  "computed": false,
                                                                                  "object": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "ArrayExpression",
                                                                                      "elements": []
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "slice"
                                                                                    }
                                                                                  },
                                                                                  "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "call"
                                                                                  }
                                                                                },
                                                                                "arguments": [
                                                                                  {
                                                                                    "type": "Identifier",
                                                                                    "name": "message"
                                                                                  },
                                                                                  {
                                                                                    "type": "Literal",
                                                                                    "value": 1
                                                                                  }
                                                                                ]
                                                                              },
                                                                              "right": {
                                                                                "type": "Literal",
                                                                                "value": ""
                                                                              }
                                                                            },
                                                                            "kind": "init"
                                                                          },
                                                                          {
                                                                            "type": "Property",
                                                                            "key": {
                                                                              "type": "Literal",
                                                                              "value": "Element"
                                                                            },
                                                                            "value": {
                                                                              "type": "Identifier",
                                                                              "name": "element"
                                                                            },
                                                                            "kind": "init"
                                                                          },
                                                                          {
                                                                            "type": "Property",
                                                                            "key": {
                                                                              "type": "Literal",
                                                                              "value": "Execution Time"
                                                                            },
                                                                            "value": {
                                                                              "type": "Identifier",
                                                                              "name": "executionTime"
                                                                            },
                                                                            "kind": "init"
                                                                          }
                                                                        ]
                                                                      }
                                                                    ]
                                                                  }
                                                                }
                                                              ]
                                                            },
                                                            "alternate": null
                                                          },
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "Identifier",
                                                                "name": "clearTimeout"
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "module"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "performance"
                                                                    }
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "timer"
                                                                  }
                                                                }
                                                              ]
                                                            }
                                                          },
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "AssignmentExpression",
                                                              "operator": "=",
                                                              "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "module"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "performance"
                                                                  }
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "timer"
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "Identifier",
                                                                  "name": "setTimeout"
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "module"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "performance"
                                                                      }
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "display"
                                                                    }
                                                                  },
                                                                  {
                                                                    "type": "Literal",
                                                                    "value": 100
                                                                  }
                                                                ]
                                                              }
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      "rest": null,
                                                      "generator": false,
                                                      "expression": false
                                                    },
                                                    "kind": "init"
                                                  },
                                                  {
                                                    "type": "Property",
                                                    "key": {
                                                      "type": "Identifier",
                                                      "name": "display"
                                                    },
                                                    "value": {
                                                      "type": "FunctionExpression",
                                                      "id": null,
                                                      "params": [],
                                                      "defaults": [],
                                                      "body": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "VariableDeclaration",
                                                            "declarations": [
                                                              {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                  "type": "Identifier",
                                                                  "name": "title"
                                                                },
                                                                "init": {
                                                                  "type": "BinaryExpression",
                                                                  "operator": "+",
                                                                  "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "settings"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "name"
                                                                    }
                                                                  },
                                                                  "right": {
                                                                    "type": "Literal",
                                                                    "value": ":"
                                                                  }
                                                                }
                                                              },
                                                              {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                  "type": "Identifier",
                                                                  "name": "totalTime"
                                                                },
                                                                "init": {
                                                                  "type": "Literal",
                                                                  "value": 0
                                                                }
                                                              }
                                                            ],
                                                            "kind": "var"
                                                          },
                                                          {
                                                            "type": "EmptyStatement"
                                                          },
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "AssignmentExpression",
                                                              "operator": "=",
                                                              "left": {
                                                                "type": "Identifier",
                                                                "name": "time"
                                                              },
                                                              "right": {
                                                                "type": "Literal",
                                                                "value": false
                                                              }
                                                            }
                                                          },
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "Identifier",
                                                                "name": "clearTimeout"
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "module"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "performance"
                                                                    }
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "timer"
                                                                  }
                                                                }
                                                              ]
                                                            }
                                                          },
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "$"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "each"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "performance"
                                                                },
                                                                {
                                                                  "type": "FunctionExpression",
                                                                  "id": null,
                                                                  "params": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "name": "index"
                                                                    },
                                                                    {
                                                                      "type": "Identifier",
                                                                      "name": "data"
                                                                    }
                                                                  ],
                                                                  "defaults": [],
                                                                  "body": {
                                                                    "type": "BlockStatement",
                                                                    "body": [
                                                                      {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                          "type": "AssignmentExpression",
                                                                          "operator": "+=",
                                                                          "left": {
                                                                            "type": "Identifier",
                                                                            "name": "totalTime"
                                                                          },
                                                                          "right": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                              "type": "Identifier",
                                                                              "name": "data"
                                                                            },
                                                                            "property": {
                                                                              "type": "Literal",
                                                                              "value": "Execution Time"
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    ]
                                                                  },
                                                                  "rest": null,
                                                                  "generator": false,
                                                                  "expression": false
                                                                }
                                                              ]
                                                            }
                                                          },
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "AssignmentExpression",
                                                              "operator": "+=",
                                                              "left": {
                                                                "type": "Identifier",
                                                                "name": "title"
                                                              },
                                                              "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                  "type": "BinaryExpression",
                                                                  "operator": "+",
                                                                  "left": {
                                                                    "type": "Literal",
                                                                    "value": " "
                                                                  },
                                                                  "right": {
                                                                    "type": "Identifier",
                                                                    "name": "totalTime"
                                                                  }
                                                                },
                                                                "right": {
                                                                  "type": "Literal",
                                                                  "value": "ms"
                                                                }
                                                              }
                                                            }
                                                          },
                                                          {
                                                            "type": "IfStatement",
                                                            "test": {
                                                              "type": "Identifier",
                                                              "name": "moduleSelector"
                                                            },
                                                            "consequent": {
                                                              "type": "BlockStatement",
                                                              "body": [
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "+=",
                                                                    "left": {
                                                                      "type": "Identifier",
                                                                      "name": "title"
                                                                    },
                                                                    "right": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "+",
                                                                      "left": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "+",
                                                                        "left": {
                                                                          "type": "Literal",
                                                                          "value": " '"
                                                                        },
                                                                        "right": {
                                                                          "type": "Identifier",
                                                                          "name": "moduleSelector"
                                                                        }
                                                                      },
                                                                      "right": {
                                                                        "type": "Literal",
                                                                        "value": "'"
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              ]
                                                            },
                                                            "alternate": null
                                                          },
                                                          {
                                                            "type": "IfStatement",
                                                            "test": {
                                                              "type": "LogicalExpression",
                                                              "operator": "&&",
                                                              "left": {
                                                                "type": "LogicalExpression",
                                                                "operator": "||",
                                                                "left": {
                                                                  "type": "BinaryExpression",
                                                                  "operator": "!==",
                                                                  "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "console"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "group"
                                                                    }
                                                                  },
                                                                  "right": {
                                                                    "type": "Identifier",
                                                                    "name": "undefined"
                                                                  }
                                                                },
                                                                "right": {
                                                                  "type": "BinaryExpression",
                                                                  "operator": "!==",
                                                                  "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "console"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "table"
                                                                    }
                                                                  },
                                                                  "right": {
                                                                    "type": "Identifier",
                                                                    "name": "undefined"
                                                                  }
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": ">",
                                                                "left": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "performance"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "length"
                                                                  }
                                                                },
                                                                "right": {
                                                                  "type": "Literal",
                                                                  "value": 0
                                                                }
                                                              }
                                                            },
                                                            "consequent": {
                                                              "type": "BlockStatement",
                                                              "body": [
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "expression": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "console"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "groupCollapsed"
                                                                      }
                                                                    },
                                                                    "arguments": [
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "title"
                                                                      }
                                                                    ]
                                                                  }
                                                                },
                                                                {
                                                                  "type": "IfStatement",
                                                                  "test": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "console"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "table"
                                                                    }
                                                                  },
                                                                  "consequent": {
                                                                    "type": "BlockStatement",
                                                                    "body": [
                                                                      {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                          "type": "CallExpression",
                                                                          "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "Identifier",
                                                                              "name": "console"
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "table"
                                                                            }
                                                                          },
                                                                          "arguments": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "name": "performance"
                                                                            }
                                                                          ]
                                                                        }
                                                                      }
                                                                    ]
                                                                  },
                                                                  "alternate": {
                                                                    "type": "BlockStatement",
                                                                    "body": [
                                                                      {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                          "type": "CallExpression",
                                                                          "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "Identifier",
                                                                              "name": "$"
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "each"
                                                                            }
                                                                          },
                                                                          "arguments": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "name": "performance"
                                                                            },
                                                                            {
                                                                              "type": "FunctionExpression",
                                                                              "id": null,
                                                                              "params": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "name": "index"
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "name": "data"
                                                                                }
                                                                              ],
                                                                              "defaults": [],
                                                                              "body": {
                                                                                "type": "BlockStatement",
                                                                                "body": [
                                                                                  {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                      "type": "CallExpression",
                                                                                      "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                          "type": "Identifier",
                                                                                          "name": "console"
                                                                                        },
                                                                                        "property": {
                                                                                          "type": "Identifier",
                                                                                          "name": "log"
                                                                                        }
                                                                                      },
                                                                                      "arguments": [
                                                                                        {
                                                                                          "type": "BinaryExpression",
                                                                                          "operator": "+",
                                                                                          "left": {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "+",
                                                                                            "left": {
                                                                                              "type": "BinaryExpression",
                                                                                              "operator": "+",
                                                                                              "left": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "data"
                                                                                                },
                                                                                                "property": {
                                                                                                  "type": "Literal",
                                                                                                  "value": "Name"
                                                                                                }
                                                                                              },
                                                                                              "right": {
                                                                                                "type": "Literal",
                                                                                                "value": ": "
                                                                                              }
                                                                                            },
                                                                                            "right": {
                                                                                              "type": "MemberExpression",
                                                                                              "computed": true,
                                                                                              "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "data"
                                                                                              },
                                                                                              "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "Execution Time"
                                                                                              }
                                                                                            }
                                                                                          },
                                                                                          "right": {
                                                                                            "type": "Literal",
                                                                                            "value": "ms"
                                                                                          }
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  }
                                                                                ]
                                                                              },
                                                                              "rest": null,
                                                                              "generator": false,
                                                                              "expression": false
                                                                            }
                                                                          ]
                                                                        }
                                                                      }
                                                                    ]
                                                                  }
                                                                },
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "expression": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "console"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "groupEnd"
                                                                      }
                                                                    },
                                                                    "arguments": []
                                                                  }
                                                                }
                                                              ]
                                                            },
                                                            "alternate": null
                                                          },
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "AssignmentExpression",
                                                              "operator": "=",
                                                              "left": {
                                                                "type": "Identifier",
                                                                "name": "performance"
                                                              },
                                                              "right": {
                                                                "type": "ArrayExpression",
                                                                "elements": []
                                                              }
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      "rest": null,
                                                      "generator": false,
                                                      "expression": false
                                                    },
                                                    "kind": "init"
                                                  }
                                                ]
                                              },
                                              "kind": "init"
                                            },
                                            {
                                              "type": "Property",
                                              "key": {
                                                "type": "Identifier",
                                                "name": "invoke"
                                              },
                                              "value": {
                                                "type": "FunctionExpression",
                                                "id": null,
                                                "params": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "query"
                                                  },
                                                  {
                                                    "type": "Identifier",
                                                    "name": "passedArguments"
                                                  },
                                                  {
                                                    "type": "Identifier",
                                                    "name": "context"
                                                  }
                                                ],
                                                "defaults": [],
                                                "body": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "VariableDeclaration",
                                                      "declarations": [
                                                        {
                                                          "type": "VariableDeclarator",
                                                          "id": {
                                                            "type": "Identifier",
                                                            "name": "object"
                                                          },
                                                          "init": {
                                                            "type": "Identifier",
                                                            "name": "instance"
                                                          }
                                                        },
                                                        {
                                                          "type": "VariableDeclarator",
                                                          "id": {
                                                            "type": "Identifier",
                                                            "name": "maxDepth"
                                                          },
                                                          "init": null
                                                        },
                                                        {
                                                          "type": "VariableDeclarator",
                                                          "id": {
                                                            "type": "Identifier",
                                                            "name": "found"
                                                          },
                                                          "init": null
                                                        },
                                                        {
                                                          "type": "VariableDeclarator",
                                                          "id": {
                                                            "type": "Identifier",
                                                            "name": "response"
                                                          },
                                                          "init": null
                                                        }
                                                      ],
                                                      "kind": "var"
                                                    },
                                                    {
                                                      "type": "EmptyStatement"
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                          "type": "Identifier",
                                                          "name": "passedArguments"
                                                        },
                                                        "right": {
                                                          "type": "LogicalExpression",
                                                          "operator": "||",
                                                          "left": {
                                                            "type": "Identifier",
                                                            "name": "passedArguments"
                                                          },
                                                          "right": {
                                                            "type": "Identifier",
                                                            "name": "queryArguments"
                                                          }
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                          "type": "Identifier",
                                                          "name": "context"
                                                        },
                                                        "right": {
                                                          "type": "LogicalExpression",
                                                          "operator": "||",
                                                          "left": {
                                                            "type": "Identifier",
                                                            "name": "element"
                                                          },
                                                          "right": {
                                                            "type": "Identifier",
                                                            "name": "context"
                                                          }
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "type": "IfStatement",
                                                      "test": {
                                                        "type": "LogicalExpression",
                                                        "operator": "&&",
                                                        "left": {
                                                          "type": "BinaryExpression",
                                                          "operator": "==",
                                                          "left": {
                                                            "type": "UnaryExpression",
                                                            "operator": "typeof",
                                                            "argument": {
                                                              "type": "Identifier",
                                                              "name": "query"
                                                            },
                                                            "prefix": true
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "string"
                                                          }
                                                        },
                                                        "right": {
                                                          "type": "BinaryExpression",
                                                          "operator": "!==",
                                                          "left": {
                                                            "type": "Identifier",
                                                            "name": "object"
                                                          },
                                                          "right": {
                                                            "type": "Identifier",
                                                            "name": "undefined"
                                                          }
                                                        }
                                                      },
                                                      "consequent": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "AssignmentExpression",
                                                              "operator": "=",
                                                              "left": {
                                                                "type": "Identifier",
                                                                "name": "query"
                                                              },
                                                              "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "query"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "split"
                                                                  }
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "Literal",
                                                                    "value": {}
                                                                  }
                                                                ]
                                                              }
                                                            }
                                                          },
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "AssignmentExpression",
                                                              "operator": "=",
                                                              "left": {
                                                                "type": "Identifier",
                                                                "name": "maxDepth"
                                                              },
                                                              "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "-",
                                                                "left": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "query"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "length"
                                                                  }
                                                                },
                                                                "right": {
                                                                  "type": "Literal",
                                                                  "value": 1
                                                                }
                                                              }
                                                            }
                                                          },
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "$"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "each"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "query"
                                                                },
                                                                {
                                                                  "type": "FunctionExpression",
                                                                  "id": null,
                                                                  "params": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "name": "depth"
                                                                    },
                                                                    {
                                                                      "type": "Identifier",
                                                                      "name": "value"
                                                                    }
                                                                  ],
                                                                  "defaults": [],
                                                                  "body": {
                                                                    "type": "BlockStatement",
                                                                    "body": [
                                                                      {
                                                                        "type": "VariableDeclaration",
                                                                        "declarations": [
                                                                          {
                                                                            "type": "VariableDeclarator",
                                                                            "id": {
                                                                              "type": "Identifier",
                                                                              "name": "camelCaseValue"
                                                                            },
                                                                            "init": {
                                                                              "type": "ConditionalExpression",
                                                                              "test": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "!=",
                                                                                "left": {
                                                                                  "type": "Identifier",
                                                                                  "name": "depth"
                                                                                },
                                                                                "right": {
                                                                                  "type": "Identifier",
                                                                                  "name": "maxDepth"
                                                                                }
                                                                              },
                                                                              "consequent": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "+",
                                                                                "left": {
                                                                                  "type": "BinaryExpression",
                                                                                  "operator": "+",
                                                                                  "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "value"
                                                                                  },
                                                                                  "right": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                      "type": "MemberExpression",
                                                                                      "computed": false,
                                                                                      "object": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                          "type": "MemberExpression",
                                                                                          "computed": false,
                                                                                          "object": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                              "type": "Identifier",
                                                                                              "name": "query"
                                                                                            },
                                                                                            "property": {
                                                                                              "type": "BinaryExpression",
                                                                                              "operator": "+",
                                                                                              "left": {
                                                                                                "type": "Identifier",
                                                                                                "name": "depth"
                                                                                              },
                                                                                              "right": {
                                                                                                "type": "Literal",
                                                                                                "value": 1
                                                                                              }
                                                                                            }
                                                                                          },
                                                                                          "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "charAt"
                                                                                          }
                                                                                        },
                                                                                        "arguments": [
                                                                                          {
                                                                                            "type": "Literal",
                                                                                            "value": 0
                                                                                          }
                                                                                        ]
                                                                                      },
                                                                                      "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "toUpperCase"
                                                                                      }
                                                                                    },
                                                                                    "arguments": []
                                                                                  }
                                                                                },
                                                                                "right": {
                                                                                  "type": "CallExpression",
                                                                                  "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "MemberExpression",
                                                                                      "computed": true,
                                                                                      "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "query"
                                                                                      },
                                                                                      "property": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "+",
                                                                                        "left": {
                                                                                          "type": "Identifier",
                                                                                          "name": "depth"
                                                                                        },
                                                                                        "right": {
                                                                                          "type": "Literal",
                                                                                          "value": 1
                                                                                        }
                                                                                      }
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "slice"
                                                                                    }
                                                                                  },
                                                                                  "arguments": [
                                                                                    {
                                                                                      "type": "Literal",
                                                                                      "value": 1
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              },
                                                                              "alternate": {
                                                                                "type": "Identifier",
                                                                                "name": "query"
                                                                              }
                                                                            }
                                                                          }
                                                                        ],
                                                                        "kind": "var"
                                                                      },
                                                                      {
                                                                        "type": "EmptyStatement"
                                                                      },
                                                                      {
                                                                        "type": "IfStatement",
                                                                        "test": {
                                                                          "type": "LogicalExpression",
                                                                          "operator": "&&",
                                                                          "left": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                              "type": "MemberExpression",
                                                                              "computed": false,
                                                                              "object": {
                                                                                "type": "Identifier",
                                                                                "name": "$"
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "isPlainObject"
                                                                              }
                                                                            },
                                                                            "arguments": [
                                                                              {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "object"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "camelCaseValue"
                                                                                }
                                                                              }
                                                                            ]
                                                                          },
                                                                          "right": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "!=",
                                                                            "left": {
                                                                              "type": "Identifier",
                                                                              "name": "depth"
                                                                            },
                                                                            "right": {
                                                                              "type": "Identifier",
                                                                              "name": "maxDepth"
                                                                            }
                                                                          }
                                                                        },
                                                                        "consequent": {
                                                                          "type": "BlockStatement",
                                                                          "body": [
                                                                            {
                                                                              "type": "ExpressionStatement",
                                                                              "expression": {
                                                                                "type": "AssignmentExpression",
                                                                                "operator": "=",
                                                                                "left": {
                                                                                  "type": "Identifier",
                                                                                  "name": "object"
                                                                                },
                                                                                "right": {
                                                                                  "type": "MemberExpression",
                                                                                  "computed": true,
                                                                                  "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "object"
                                                                                  },
                                                                                  "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "camelCaseValue"
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          ]
                                                                        },
                                                                        "alternate": {
                                                                          "type": "IfStatement",
                                                                          "test": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "!==",
                                                                            "left": {
                                                                              "type": "MemberExpression",
                                                                              "computed": true,
                                                                              "object": {
                                                                                "type": "Identifier",
                                                                                "name": "object"
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "camelCaseValue"
                                                                              }
                                                                            },
                                                                            "right": {
                                                                              "type": "Identifier",
                                                                              "name": "undefined"
                                                                            }
                                                                          },
                                                                          "consequent": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                              {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                  "type": "AssignmentExpression",
                                                                                  "operator": "=",
                                                                                  "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "found"
                                                                                  },
                                                                                  "right": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "object"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "camelCaseValue"
                                                                                    }
                                                                                  }
                                                                                }
                                                                              },
                                                                              {
                                                                                "type": "ReturnStatement",
                                                                                "argument": {
                                                                                  "type": "Literal",
                                                                                  "value": false
                                                                                }
                                                                              }
                                                                            ]
                                                                          },
                                                                          "alternate": {
                                                                            "type": "IfStatement",
                                                                            "test": {
                                                                              "type": "LogicalExpression",
                                                                              "operator": "&&",
                                                                              "left": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                  "type": "MemberExpression",
                                                                                  "computed": false,
                                                                                  "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "$"
                                                                                  },
                                                                                  "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "isPlainObject"
                                                                                  }
                                                                                },
                                                                                "arguments": [
                                                                                  {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "object"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "value"
                                                                                    }
                                                                                  }
                                                                                ]
                                                                              },
                                                                              "right": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "!=",
                                                                                "left": {
                                                                                  "type": "Identifier",
                                                                                  "name": "depth"
                                                                                },
                                                                                "right": {
                                                                                  "type": "Identifier",
                                                                                  "name": "maxDepth"
                                                                                }
                                                                              }
                                                                            },
                                                                            "consequent": {
                                                                              "type": "BlockStatement",
                                                                              "body": [
                                                                                {
                                                                                  "type": "ExpressionStatement",
                                                                                  "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                      "type": "Identifier",
                                                                                      "name": "object"
                                                                                    },
                                                                                    "right": {
                                                                                      "type": "MemberExpression",
                                                                                      "computed": true,
                                                                                      "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "object"
                                                                                      },
                                                                                      "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "value"
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              ]
                                                                            },
                                                                            "alternate": {
                                                                              "type": "IfStatement",
                                                                              "test": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "!==",
                                                                                "left": {
                                                                                  "type": "MemberExpression",
                                                                                  "computed": true,
                                                                                  "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "object"
                                                                                  },
                                                                                  "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "value"
                                                                                  }
                                                                                },
                                                                                "right": {
                                                                                  "type": "Identifier",
                                                                                  "name": "undefined"
                                                                                }
                                                                              },
                                                                              "consequent": {
                                                                                "type": "BlockStatement",
                                                                                "body": [
                                                                                  {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                      "type": "AssignmentExpression",
                                                                                      "operator": "=",
                                                                                      "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "found"
                                                                                      },
                                                                                      "right": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                          "type": "Identifier",
                                                                                          "name": "object"
                                                                                        },
                                                                                        "property": {
                                                                                          "type": "Identifier",
                                                                                          "name": "value"
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  },
                                                                                  {
                                                                                    "type": "ReturnStatement",
                                                                                    "argument": {
                                                                                      "type": "Literal",
                                                                                      "value": false
                                                                                    }
                                                                                  }
                                                                                ]
                                                                              },
                                                                              "alternate": {
                                                                                "type": "BlockStatement",
                                                                                "body": [
                                                                                  {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                      "type": "CallExpression",
                                                                                      "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                          "type": "Identifier",
                                                                                          "name": "module"
                                                                                        },
                                                                                        "property": {
                                                                                          "type": "Identifier",
                                                                                          "name": "error"
                                                                                        }
                                                                                      },
                                                                                      "arguments": [
                                                                                        {
                                                                                          "type": "MemberExpression",
                                                                                          "computed": false,
                                                                                          "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "error"
                                                                                          },
                                                                                          "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "method"
                                                                                          }
                                                                                        },
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "name": "query"
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  },
                                                                                  {
                                                                                    "type": "ReturnStatement",
                                                                                    "argument": {
                                                                                      "type": "Literal",
                                                                                      "value": false
                                                                                    }
                                                                                  }
                                                                                ]
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    ]
                                                                  },
                                                                  "rest": null,
                                                                  "generator": false,
                                                                  "expression": false
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      "alternate": null
                                                    },
                                                    {
                                                      "type": "IfStatement",
                                                      "test": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "$"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "isFunction"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Identifier",
                                                            "name": "found"
                                                          }
                                                        ]
                                                      },
                                                      "consequent": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "AssignmentExpression",
                                                              "operator": "=",
                                                              "left": {
                                                                "type": "Identifier",
                                                                "name": "response"
                                                              },
                                                              "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "found"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "apply"
                                                                  }
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "context"
                                                                  },
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "passedArguments"
                                                                  }
                                                                ]
                                                              }
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      "alternate": {
                                                        "type": "IfStatement",
                                                        "test": {
                                                          "type": "BinaryExpression",
                                                          "operator": "!==",
                                                          "left": {
                                                            "type": "Identifier",
                                                            "name": "found"
                                                          },
                                                          "right": {
                                                            "type": "Identifier",
                                                            "name": "undefined"
                                                          }
                                                        },
                                                        "consequent": {
                                                          "type": "BlockStatement",
                                                          "body": [
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "expression": {
                                                                "type": "AssignmentExpression",
                                                                "operator": "=",
                                                                "left": {
                                                                  "type": "Identifier",
                                                                  "name": "response"
                                                                },
                                                                "right": {
                                                                  "type": "Identifier",
                                                                  "name": "found"
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        },
                                                        "alternate": null
                                                      }
                                                    },
                                                    {
                                                      "type": "IfStatement",
                                                      "test": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "$"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "isArray"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Identifier",
                                                            "name": "returnedValue"
                                                          }
                                                        ]
                                                      },
                                                      "consequent": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "returnedValue"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "push"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "response"
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      "alternate": {
                                                        "type": "IfStatement",
                                                        "test": {
                                                          "type": "BinaryExpression",
                                                          "operator": "!==",
                                                          "left": {
                                                            "type": "Identifier",
                                                            "name": "returnedValue"
                                                          },
                                                          "right": {
                                                            "type": "Identifier",
                                                            "name": "undefined"
                                                          }
                                                        },
                                                        "consequent": {
                                                          "type": "BlockStatement",
                                                          "body": [
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "expression": {
                                                                "type": "AssignmentExpression",
                                                                "operator": "=",
                                                                "left": {
                                                                  "type": "Identifier",
                                                                  "name": "returnedValue"
                                                                },
                                                                "right": {
                                                                  "type": "ArrayExpression",
                                                                  "elements": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "name": "returnedValue"
                                                                    },
                                                                    {
                                                                      "type": "Identifier",
                                                                      "name": "response"
                                                                    }
                                                                  ]
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        },
                                                        "alternate": {
                                                          "type": "IfStatement",
                                                          "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "!==",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "response"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "undefined"
                                                            }
                                                          },
                                                          "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                              {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                  "type": "AssignmentExpression",
                                                                  "operator": "=",
                                                                  "left": {
                                                                    "type": "Identifier",
                                                                    "name": "returnedValue"
                                                                  },
                                                                  "right": {
                                                                    "type": "Identifier",
                                                                    "name": "response"
                                                                  }
                                                                }
                                                              }
                                                            ]
                                                          },
                                                          "alternate": null
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "type": "ReturnStatement",
                                                      "argument": {
                                                        "type": "Identifier",
                                                        "name": "found"
                                                      }
                                                    }
                                                  ]
                                                },
                                                "rest": null,
                                                "generator": false,
                                                "expression": false
                                              },
                                              "kind": "init"
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "type": "IfStatement",
                                      "test": {
                                        "type": "Identifier",
                                        "name": "methodInvoked"
                                      },
                                      "consequent": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "IfStatement",
                                            "test": {
                                              "type": "BinaryExpression",
                                              "operator": "===",
                                              "left": {
                                                "type": "Identifier",
                                                "name": "instance"
                                              },
                                              "right": {
                                                "type": "Identifier",
                                                "name": "undefined"
                                              }
                                            },
                                            "consequent": {
                                              "type": "BlockStatement",
                                              "body": [
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "module"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "initialize"
                                                      }
                                                    },
                                                    "arguments": []
                                                  }
                                                }
                                              ]
                                            },
                                            "alternate": null
                                          },
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "module"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "invoke"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "query"
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      },
                                      "alternate": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "IfStatement",
                                            "test": {
                                              "type": "BinaryExpression",
                                              "operator": "!==",
                                              "left": {
                                                "type": "Identifier",
                                                "name": "instance"
                                              },
                                              "right": {
                                                "type": "Identifier",
                                                "name": "undefined"
                                              }
                                            },
                                            "consequent": {
                                              "type": "BlockStatement",
                                              "body": [
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "instance"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "invoke"
                                                      }
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "Literal",
                                                        "value": "destroy"
                                                      }
                                                    ]
                                                  }
                                                }
                                              ]
                                            },
                                            "alternate": null
                                          },
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "module"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "initialize"
                                                }
                                              },
                                              "arguments": []
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                              }
                            ]
                          }
                        },
                        {
                          "type": "EmptyStatement"
                        },
                        {
                          "type": "ReturnStatement",
                          "argument": {
                            "type": "ConditionalExpression",
                            "test": {
                              "type": "BinaryExpression",
                              "operator": "!==",
                              "left": {
                                "type": "Identifier",
                                "name": "returnedValue"
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "undefined"
                              }
                            },
                            "consequent": {
                              "type": "Identifier",
                              "name": "returnedValue"
                            },
                            "alternate": {
                              "type": "ThisExpression"
                            }
                          }
                        },
                        {
                          "type": "EmptyStatement"
                        }
                      ]
                    },
                    "rest": null,
                    "generator": false,
                    "expression": false
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "=",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "$"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "fn"
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "accordion"
                      }
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "settings"
                    }
                  },
                  "right": {
                    "type": "ObjectExpression",
                    "properties": [
                      {
                        "type": "Property",
                        "key": {
                          "type": "Identifier",
                          "name": "name"
                        },
                        "value": {
                          "type": "Literal",
                          "value": "Accordion"
                        },
                        "kind": "init"
                      },
                      {
                        "type": "Property",
                        "key": {
                          "type": "Identifier",
                          "name": "namespace"
                        },
                        "value": {
                          "type": "Literal",
                          "value": "accordion"
                        },
                        "kind": "init"
                      },
                      {
                        "type": "Property",
                        "key": {
                          "type": "Identifier",
                          "name": "debug"
                        },
                        "value": {
                          "type": "Literal",
                          "value": false
                        },
                        "kind": "init"
                      },
                      {
                        "type": "Property",
                        "key": {
                          "type": "Identifier",
                          "name": "verbose"
                        },
                        "value": {
                          "type": "Literal",
                          "value": true
                        },
                        "kind": "init"
                      },
                      {
                        "type": "Property",
                        "key": {
                          "type": "Identifier",
                          "name": "performance"
                        },
                        "value": {
                          "type": "Literal",
                          "value": true
                        },
                        "kind": "init"
                      },
                      {
                        "type": "Property",
                        "key": {
                          "type": "Identifier",
                          "name": "exclusive"
                        },
                        "value": {
                          "type": "Literal",
                          "value": true
                        },
                        "kind": "init"
                      },
                      {
                        "type": "Property",
                        "key": {
                          "type": "Identifier",
                          "name": "collapsible"
                        },
                        "value": {
                          "type": "Literal",
                          "value": true
                        },
                        "kind": "init"
                      },
                      {
                        "type": "Property",
                        "key": {
                          "type": "Identifier",
                          "name": "closeNested"
                        },
                        "value": {
                          "type": "Literal",
                          "value": false
                        },
                        "kind": "init"
                      },
                      {
                        "type": "Property",
                        "key": {
                          "type": "Identifier",
                          "name": "animateChildren"
                        },
                        "value": {
                          "type": "Literal",
                          "value": true
                        },
                        "kind": "init"
                      },
                      {
                        "type": "Property",
                        "key": {
                          "type": "Identifier",
                          "name": "duration"
                        },
                        "value": {
                          "type": "Literal",
                          "value": 500
                        },
                        "kind": "init"
                      },
                      {
                        "type": "Property",
                        "key": {
                          "type": "Identifier",
                          "name": "easing"
                        },
                        "value": {
                          "type": "Literal",
                          "value": "easeOutQuint"
                        },
                        "kind": "init"
                      },
                      {
                        "type": "Property",
                        "key": {
                          "type": "Identifier",
                          "name": "onOpen"
                        },
                        "value": {
                          "type": "FunctionExpression",
                          "id": null,
                          "params": [],
                          "defaults": [],
                          "body": {
                            "type": "BlockStatement",
                            "body": []
                          },
                          "rest": null,
                          "generator": false,
                          "expression": false
                        },
                        "kind": "init"
                      },
                      {
                        "type": "Property",
                        "key": {
                          "type": "Identifier",
                          "name": "onClose"
                        },
                        "value": {
                          "type": "FunctionExpression",
                          "id": null,
                          "params": [],
                          "defaults": [],
                          "body": {
                            "type": "BlockStatement",
                            "body": []
                          },
                          "rest": null,
                          "generator": false,
                          "expression": false
                        },
                        "kind": "init"
                      },
                      {
                        "type": "Property",
                        "key": {
                          "type": "Identifier",
                          "name": "onChange"
                        },
                        "value": {
                          "type": "FunctionExpression",
                          "id": null,
                          "params": [],
                          "defaults": [],
                          "body": {
                            "type": "BlockStatement",
                            "body": []
                          },
                          "rest": null,
                          "generator": false,
                          "expression": false
                        },
                        "kind": "init"
                      },
                      {
                        "type": "Property",
                        "key": {
                          "type": "Identifier",
                          "name": "error"
                        },
                        "value": {
                          "type": "ObjectExpression",
                          "properties": [
                            {
                              "type": "Property",
                              "key": {
                                "type": "Identifier",
                                "name": "method"
                              },
                              "value": {
                                "type": "Literal",
                                "value": "The method you called is not defined"
                              },
                              "kind": "init"
                            }
                          ]
                        },
                        "kind": "init"
                      },
                      {
                        "type": "Property",
                        "key": {
                          "type": "Identifier",
                          "name": "className"
                        },
                        "value": {
                          "type": "ObjectExpression",
                          "properties": [
                            {
                              "type": "Property",
                              "key": {
                                "type": "Identifier",
                                "name": "active"
                              },
                              "value": {
                                "type": "Literal",
                                "value": "active"
                              },
                              "kind": "init"
                            }
                          ]
                        },
                        "kind": "init"
                      },
                      {
                        "type": "Property",
                        "key": {
                          "type": "Identifier",
                          "name": "selector"
                        },
                        "value": {
                          "type": "ObjectExpression",
                          "properties": [
                            {
                              "type": "Property",
                              "key": {
                                "type": "Identifier",
                                "name": "accordion"
                              },
                              "value": {
                                "type": "Literal",
                                "value": ".accordion"
                              },
                              "kind": "init"
                            },
                            {
                              "type": "Property",
                              "key": {
                                "type": "Identifier",
                                "name": "title"
                              },
                              "value": {
                                "type": "Literal",
                                "value": ".title"
                              },
                              "kind": "init"
                            },
                            {
                              "type": "Property",
                              "key": {
                                "type": "Identifier",
                                "name": "content"
                              },
                              "value": {
                                "type": "Literal",
                                "value": ".content"
                              },
                              "kind": "init"
                            }
                          ]
                        },
                        "kind": "init"
                      }
                    ]
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "$"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "extend"
                    }
                  },
                  "arguments": [
                    {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "$"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "easing"
                      }
                    },
                    {
                      "type": "ObjectExpression",
                      "properties": [
                        {
                          "type": "Property",
                          "key": {
                            "type": "Identifier",
                            "name": "easeOutQuint"
                          },
                          "value": {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [
                              {
                                "type": "Identifier",
                                "name": "x"
                              },
                              {
                                "type": "Identifier",
                                "name": "t"
                              },
                              {
                                "type": "Identifier",
                                "name": "b"
                              },
                              {
                                "type": "Identifier",
                                "name": "c"
                              },
                              {
                                "type": "Identifier",
                                "name": "d"
                              }
                            ],
                            "defaults": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "BinaryExpression",
                                    "operator": "+",
                                    "left": {
                                      "type": "BinaryExpression",
                                      "operator": "*",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "c"
                                      },
                                      "right": {
                                        "type": "BinaryExpression",
                                        "operator": "+",
                                        "left": {
                                          "type": "BinaryExpression",
                                          "operator": "*",
                                          "left": {
                                            "type": "BinaryExpression",
                                            "operator": "*",
                                            "left": {
                                              "type": "BinaryExpression",
                                              "operator": "*",
                                              "left": {
                                                "type": "BinaryExpression",
                                                "operator": "*",
                                                "left": {
                                                  "type": "AssignmentExpression",
                                                  "operator": "=",
                                                  "left": {
                                                    "type": "Identifier",
                                                    "name": "t"
                                                  },
                                                  "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "-",
                                                    "left": {
                                                      "type": "BinaryExpression",
                                                      "operator": "/",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "t"
                                                      },
                                                      "right": {
                                                        "type": "Identifier",
                                                        "name": "d"
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": 1
                                                    }
                                                  }
                                                },
                                                "right": {
                                                  "type": "Identifier",
                                                  "name": "t"
                                                }
                                              },
                                              "right": {
                                                "type": "Identifier",
                                                "name": "t"
                                              }
                                            },
                                            "right": {
                                              "type": "Identifier",
                                              "name": "t"
                                            }
                                          },
                                          "right": {
                                            "type": "Identifier",
                                            "name": "t"
                                          }
                                        },
                                        "right": {
                                          "type": "Literal",
                                          "value": 1
                                        }
                                      }
                                    },
                                    "right": {
                                      "type": "Identifier",
                                      "name": "b"
                                    }
                                  }
                                }
                              ]
                            },
                            "rest": null,
                            "generator": false,
                            "expression": false
                          },
                          "kind": "init"
                        }
                      ]
                    }
                  ]
                }
              }
            ]
          },
          "rest": null,
          "generator": false,
          "expression": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "jQuery"
          },
          {
            "type": "Identifier",
            "name": "window"
          },
          {
            "type": "Identifier",
            "name": "document"
          }
        ]
      }
    }
  ]
}
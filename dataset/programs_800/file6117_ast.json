{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "Literal",
        "value": "use strict"
      }
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "test"
          },
          "init": {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "require"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "tap"
                }
              ]
            },
            "property": {
              "type": "Identifier",
              "name": "test"
            }
          }
        },
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "generator"
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "require"
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "inline-source-map"
              }
            ]
          }
        },
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "convert"
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "require"
            },
            "arguments": [
              {
                "type": "Literal",
                "value": ".."
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "gen"
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "computed": false,
              "object": {
                "type": "CallExpression",
                "callee": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "generator"
                    },
                    "arguments": []
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "addMappings"
                  }
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "value": "foo.js"
                  },
                  {
                    "type": "ArrayExpression",
                    "elements": [
                      {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "original"
                            },
                            "value": {
                              "type": "ObjectExpression",
                              "properties": [
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "line"
                                  },
                                  "value": {
                                    "type": "Literal",
                                    "value": 2
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "column"
                                  },
                                  "value": {
                                    "type": "Literal",
                                    "value": 3
                                  },
                                  "kind": "init"
                                }
                              ]
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "generated"
                            },
                            "value": {
                              "type": "ObjectExpression",
                              "properties": [
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "line"
                                  },
                                  "value": {
                                    "type": "Literal",
                                    "value": 5
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "column"
                                  },
                                  "value": {
                                    "type": "Literal",
                                    "value": 10
                                  },
                                  "kind": "init"
                                }
                              ]
                            },
                            "kind": "init"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "type": "ObjectExpression",
                    "properties": [
                      {
                        "type": "Property",
                        "key": {
                          "type": "Identifier",
                          "name": "line"
                        },
                        "value": {
                          "type": "Literal",
                          "value": 5
                        },
                        "kind": "init"
                      }
                    ]
                  }
                ]
              },
              "property": {
                "type": "Identifier",
                "name": "addGeneratedMappings"
              }
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "bar.js"
              },
              {
                "type": "Literal",
                "value": "var a = 2;\nconsole.log(a)"
              },
              {
                "type": "ObjectExpression",
                "properties": [
                  {
                    "type": "Property",
                    "key": {
                      "type": "Identifier",
                      "name": "line"
                    },
                    "value": {
                      "type": "Literal",
                      "value": 23
                    },
                    "kind": "init"
                  },
                  {
                    "type": "Property",
                    "key": {
                      "type": "Identifier",
                      "name": "column"
                    },
                    "value": {
                      "type": "Literal",
                      "value": 22
                    },
                    "kind": "init"
                  }
                ]
              }
            ]
          }
        },
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "base64"
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "computed": false,
              "object": {
                "type": "Identifier",
                "name": "gen"
              },
              "property": {
                "type": "Identifier",
                "name": "base64Encode"
              }
            },
            "arguments": []
          }
        },
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "comment"
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "computed": false,
              "object": {
                "type": "Identifier",
                "name": "gen"
              },
              "property": {
                "type": "Identifier",
                "name": "inlineMappingUrl"
              }
            },
            "arguments": []
          }
        },
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "json"
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "computed": false,
              "object": {
                "type": "Identifier",
                "name": "gen"
              },
              "property": {
                "type": "Identifier",
                "name": "toString"
              }
            },
            "arguments": []
          }
        },
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "obj"
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "computed": false,
              "object": {
                "type": "Identifier",
                "name": "JSON"
              },
              "property": {
                "type": "Identifier",
                "name": "parse"
              }
            },
            "arguments": [
              {
                "type": "Identifier",
                "name": "json"
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "test"
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "different formats"
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "params": [
              {
                "type": "Identifier",
                "name": "t"
              }
            ],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "t"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "equal"
                      }
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "convert"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "fromComment"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "comment"
                              }
                            ]
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "toComment"
                          }
                        },
                        "arguments": []
                      },
                      {
                        "type": "Identifier",
                        "name": "comment"
                      },
                      {
                        "type": "Literal",
                        "value": "comment -> comment"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "t"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "equal"
                      }
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "convert"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "fromComment"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "comment"
                              }
                            ]
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "toBase64"
                          }
                        },
                        "arguments": []
                      },
                      {
                        "type": "Identifier",
                        "name": "base64"
                      },
                      {
                        "type": "Literal",
                        "value": "comment -> base64"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "t"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "equal"
                      }
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "convert"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "fromComment"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "comment"
                              }
                            ]
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "toJSON"
                          }
                        },
                        "arguments": []
                      },
                      {
                        "type": "Identifier",
                        "name": "json"
                      },
                      {
                        "type": "Literal",
                        "value": "comment -> json"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "t"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "deepEqual"
                      }
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "convert"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "fromComment"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "comment"
                              }
                            ]
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "toObject"
                          }
                        },
                        "arguments": []
                      },
                      {
                        "type": "Identifier",
                        "name": "obj"
                      },
                      {
                        "type": "Literal",
                        "value": "comment -> object"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "t"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "equal"
                      }
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "convert"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "fromBase64"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "base64"
                              }
                            ]
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "toBase64"
                          }
                        },
                        "arguments": []
                      },
                      {
                        "type": "Identifier",
                        "name": "base64"
                      },
                      {
                        "type": "Literal",
                        "value": "base64 -> base64"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "t"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "equal"
                      }
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "convert"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "fromBase64"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "base64"
                              }
                            ]
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "toComment"
                          }
                        },
                        "arguments": []
                      },
                      {
                        "type": "Identifier",
                        "name": "comment"
                      },
                      {
                        "type": "Literal",
                        "value": "base64 -> comment"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "t"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "equal"
                      }
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "convert"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "fromBase64"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "base64"
                              }
                            ]
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "toJSON"
                          }
                        },
                        "arguments": []
                      },
                      {
                        "type": "Identifier",
                        "name": "json"
                      },
                      {
                        "type": "Literal",
                        "value": "base64 -> json"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "t"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "deepEqual"
                      }
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "convert"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "fromBase64"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "base64"
                              }
                            ]
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "toObject"
                          }
                        },
                        "arguments": []
                      },
                      {
                        "type": "Identifier",
                        "name": "obj"
                      },
                      {
                        "type": "Literal",
                        "value": "base64 -> object"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "t"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "equal"
                      }
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "convert"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "fromJSON"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "json"
                              }
                            ]
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "toJSON"
                          }
                        },
                        "arguments": []
                      },
                      {
                        "type": "Identifier",
                        "name": "json"
                      },
                      {
                        "type": "Literal",
                        "value": "json -> json"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "t"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "equal"
                      }
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "convert"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "fromJSON"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "json"
                              }
                            ]
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "toBase64"
                          }
                        },
                        "arguments": []
                      },
                      {
                        "type": "Identifier",
                        "name": "base64"
                      },
                      {
                        "type": "Literal",
                        "value": "json -> base64"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "t"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "equal"
                      }
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "convert"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "fromJSON"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "json"
                              }
                            ]
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "toComment"
                          }
                        },
                        "arguments": []
                      },
                      {
                        "type": "Identifier",
                        "name": "comment"
                      },
                      {
                        "type": "Literal",
                        "value": "json -> comment"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "t"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "deepEqual"
                      }
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "convert"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "fromJSON"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "json"
                              }
                            ]
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "toObject"
                          }
                        },
                        "arguments": []
                      },
                      {
                        "type": "Identifier",
                        "name": "obj"
                      },
                      {
                        "type": "Literal",
                        "value": "json -> object"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "t"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "end"
                      }
                    },
                    "arguments": []
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "test"
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "to object returns a copy"
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "params": [
              {
                "type": "Identifier",
                "name": "t"
              }
            ],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "c"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "convert"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "fromJSON"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "json"
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "o"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "c"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "toObject"
                          }
                        },
                        "arguments": []
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "o"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "version"
                      }
                    },
                    "right": {
                      "type": "Literal",
                      "value": "99"
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "t"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "equal"
                      }
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "c"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "toObject"
                            }
                          },
                          "arguments": []
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "version"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": 3
                      },
                      {
                        "type": "Literal",
                        "value": "setting property on returned object does not affect original"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "t"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "end"
                      }
                    },
                    "arguments": []
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "test"
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "from source"
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "params": [
              {
                "type": "Identifier",
                "name": "t"
              }
            ],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "foo"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "ArrayExpression",
                            "elements": [
                              {
                                "type": "Literal",
                                "value": "function foo() {"
                              },
                              {
                                "type": "Literal",
                                "value": " console.log(\"hello I am foo\");"
                              },
                              {
                                "type": "Literal",
                                "value": " console.log(\"who are you\");"
                              },
                              {
                                "type": "Literal",
                                "value": "}"
                              },
                              {
                                "type": "Literal",
                                "value": ""
                              },
                              {
                                "type": "Literal",
                                "value": "foo();"
                              },
                              {
                                "type": "Literal",
                                "value": ""
                              }
                            ]
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "join"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "\n"
                          }
                        ]
                      }
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "map"
                      },
                      "init": {
                        "type": "Literal",
                        "value": "//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiIiwic291cmNlcyI6WyJmdW5jdGlvbiBmb28oKSB7XG4gY29uc29sZS5sb2coXCJoZWxsbyBJIGFtIGZvb1wiKTtcbiBjb25zb2xlLmxvZyhcIndobyBhcmUgeW91XCIpO1xufVxuXG5mb28oKTtcbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSJ9"
                      }
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "otherMap"
                      },
                      "init": {
                        "type": "Literal",
                        "value": "//# sourceMappingURL=data:application/json;base64,otherZXJzaW9uIjozLCJmaWxlIjoiIiwic291cmNlcyI6WyJmdW5jdGlvbiBmb28oKSB7XG4gY29uc29sZS5sb2coXCJoZWxsbyBJIGFtIGZvb1wiKTtcbiBjb25zb2xlLmxvZyhcIndobyBhcmUgeW91XCIpO1xufVxuXG5mb28oKTtcbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSJ9"
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "FunctionDeclaration",
                  "id": {
                    "type": "Identifier",
                    "name": "getComment"
                  },
                  "params": [
                    {
                      "type": "Identifier",
                      "name": "src"
                    }
                  ],
                  "defaults": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "map"
                            },
                            "init": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "convert"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "fromSource"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "src"
                                }
                              ]
                            }
                          }
                        ],
                        "kind": "var"
                      },
                      {
                        "type": "ReturnStatement",
                        "argument": {
                          "type": "ConditionalExpression",
                          "test": {
                            "type": "Identifier",
                            "name": "map"
                          },
                          "consequent": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "map"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "toComment"
                              }
                            },
                            "arguments": []
                          },
                          "alternate": {
                            "type": "Literal",
                            "value": null
                          }
                        }
                      }
                    ]
                  },
                  "rest": null,
                  "generator": false,
                  "expression": false
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "t"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "equal"
                      }
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "getComment"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "foo"
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": null
                      },
                      {
                        "type": "Literal",
                        "value": "no comment returns null"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "t"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "equal"
                      }
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "getComment"
                        },
                        "arguments": [
                          {
                            "type": "BinaryExpression",
                            "operator": "+",
                            "left": {
                              "type": "Identifier",
                              "name": "foo"
                            },
                            "right": {
                              "type": "Identifier",
                              "name": "map"
                            }
                          }
                        ]
                      },
                      {
                        "type": "Identifier",
                        "name": "map"
                      },
                      {
                        "type": "Literal",
                        "value": "beginning of last line"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "t"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "equal"
                      }
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "getComment"
                        },
                        "arguments": [
                          {
                            "type": "BinaryExpression",
                            "operator": "+",
                            "left": {
                              "type": "BinaryExpression",
                              "operator": "+",
                              "left": {
                                "type": "Identifier",
                                "name": "foo"
                              },
                              "right": {
                                "type": "Literal",
                                "value": "    "
                              }
                            },
                            "right": {
                              "type": "Identifier",
                              "name": "map"
                            }
                          }
                        ]
                      },
                      {
                        "type": "Identifier",
                        "name": "map"
                      },
                      {
                        "type": "Literal",
                        "value": "indented of last line"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "t"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "equal"
                      }
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "getComment"
                        },
                        "arguments": [
                          {
                            "type": "BinaryExpression",
                            "operator": "+",
                            "left": {
                              "type": "BinaryExpression",
                              "operator": "+",
                              "left": {
                                "type": "BinaryExpression",
                                "operator": "+",
                                "left": {
                                  "type": "Identifier",
                                  "name": "foo"
                                },
                                "right": {
                                  "type": "Literal",
                                  "value": "   "
                                }
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "map"
                              }
                            },
                            "right": {
                              "type": "Literal",
                              "value": "\n\n"
                            }
                          }
                        ]
                      },
                      {
                        "type": "Identifier",
                        "name": "map"
                      },
                      {
                        "type": "Literal",
                        "value": "indented on last non empty line"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "t"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "equal"
                      }
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "getComment"
                        },
                        "arguments": [
                          {
                            "type": "BinaryExpression",
                            "operator": "+",
                            "left": {
                              "type": "BinaryExpression",
                              "operator": "+",
                              "left": {
                                "type": "Identifier",
                                "name": "foo"
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "map"
                              }
                            },
                            "right": {
                              "type": "Literal",
                              "value": "\nconsole.log(\"more code\");\nfoo()\n"
                            }
                          }
                        ]
                      },
                      {
                        "type": "Identifier",
                        "name": "map"
                      },
                      {
                        "type": "Literal",
                        "value": "in the middle of code"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "t"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "equal"
                      }
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "getComment"
                        },
                        "arguments": [
                          {
                            "type": "BinaryExpression",
                            "operator": "+",
                            "left": {
                              "type": "BinaryExpression",
                              "operator": "+",
                              "left": {
                                "type": "BinaryExpression",
                                "operator": "+",
                                "left": {
                                  "type": "Identifier",
                                  "name": "foo"
                                },
                                "right": {
                                  "type": "Identifier",
                                  "name": "otherMap"
                                }
                              },
                              "right": {
                                "type": "Literal",
                                "value": "\n"
                              }
                            },
                            "right": {
                              "type": "Identifier",
                              "name": "map"
                            }
                          }
                        ]
                      },
                      {
                        "type": "Identifier",
                        "name": "map"
                      },
                      {
                        "type": "Literal",
                        "value": "finds last map in source"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "t"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "end"
                      }
                    },
                    "arguments": []
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "test"
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "remove comments"
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "params": [
              {
                "type": "Identifier",
                "name": "t"
              }
            ],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "foo"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "ArrayExpression",
                            "elements": [
                              {
                                "type": "Literal",
                                "value": "function foo() {"
                              },
                              {
                                "type": "Literal",
                                "value": " console.log(\"hello I am foo\");"
                              },
                              {
                                "type": "Literal",
                                "value": " console.log(\"who are you\");"
                              },
                              {
                                "type": "Literal",
                                "value": "}"
                              },
                              {
                                "type": "Literal",
                                "value": ""
                              },
                              {
                                "type": "Literal",
                                "value": "foo();"
                              },
                              {
                                "type": "Literal",
                                "value": ""
                              }
                            ]
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "join"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "\n"
                          }
                        ]
                      }
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "map"
                      },
                      "init": {
                        "type": "Literal",
                        "value": "//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiIiwic291cmNlcyI6WyJmdW5jdGlvbiBmb28oKSB7XG4gY29uc29sZS5sb2coXCJoZWxsbyBJIGFtIGZvb1wiKTtcbiBjb25zb2xlLmxvZyhcIndobyBhcmUgeW91XCIpO1xufVxuXG5mb28oKTtcbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSJ9"
                      }
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "otherMap"
                      },
                      "init": {
                        "type": "Literal",
                        "value": "//# sourceMappingURL=data:application/json;base64,ZXJzaW9uIjozLCJmaWxlIjoiIiwic291cmNlcyI6WyJmdW5jdGlvbiBmb28oKSB7XG4gY29uc29sZS5sb2coXCJoZWxsbyBJIGFtIGZvb1wiKTtcbiBjb25zb2xlLmxvZyhcIndobyBhcmUgeW91XCIpO1xufVxuXG5mb28oKTtcbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSJ9"
                      }
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "extraCode"
                      },
                      "init": {
                        "type": "Literal",
                        "value": "\nconsole.log(\"more code\");\nfoo()\n"
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "t"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "equal"
                      }
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "convert"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "removeComments"
                          }
                        },
                        "arguments": [
                          {
                            "type": "BinaryExpression",
                            "operator": "+",
                            "left": {
                              "type": "Identifier",
                              "name": "foo"
                            },
                            "right": {
                              "type": "Identifier",
                              "name": "map"
                            }
                          }
                        ]
                      },
                      {
                        "type": "Identifier",
                        "name": "foo"
                      },
                      {
                        "type": "Literal",
                        "value": "from last line"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "t"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "equal"
                      }
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "convert"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "removeComments"
                          }
                        },
                        "arguments": [
                          {
                            "type": "BinaryExpression",
                            "operator": "+",
                            "left": {
                              "type": "BinaryExpression",
                              "operator": "+",
                              "left": {
                                "type": "Identifier",
                                "name": "foo"
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "map"
                              }
                            },
                            "right": {
                              "type": "Identifier",
                              "name": "extraCode"
                            }
                          }
                        ]
                      },
                      {
                        "type": "BinaryExpression",
                        "operator": "+",
                        "left": {
                          "type": "Identifier",
                          "name": "foo"
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "extraCode"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": "from the middle of code"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "t"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "equal"
                      }
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "convert"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "removeComments"
                          }
                        },
                        "arguments": [
                          {
                            "type": "BinaryExpression",
                            "operator": "+",
                            "left": {
                              "type": "BinaryExpression",
                              "operator": "+",
                              "left": {
                                "type": "BinaryExpression",
                                "operator": "+",
                                "left": {
                                  "type": "Identifier",
                                  "name": "foo"
                                },
                                "right": {
                                  "type": "Identifier",
                                  "name": "otherMap"
                                }
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "extraCode"
                              }
                            },
                            "right": {
                              "type": "Identifier",
                              "name": "map"
                            }
                          }
                        ]
                      },
                      {
                        "type": "BinaryExpression",
                        "operator": "+",
                        "left": {
                          "type": "Identifier",
                          "name": "foo"
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "extraCode"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": "multiple comments from the middle of code"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "t"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "end"
                      }
                    },
                    "arguments": []
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "test"
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "remove map file comments"
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "params": [
              {
                "type": "Identifier",
                "name": "t"
              }
            ],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "foo"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "ArrayExpression",
                            "elements": [
                              {
                                "type": "Literal",
                                "value": "function foo() {"
                              },
                              {
                                "type": "Literal",
                                "value": " console.log(\"hello I am foo\");"
                              },
                              {
                                "type": "Literal",
                                "value": " console.log(\"who are you\");"
                              },
                              {
                                "type": "Literal",
                                "value": "}"
                              },
                              {
                                "type": "Literal",
                                "value": ""
                              },
                              {
                                "type": "Literal",
                                "value": "foo();"
                              },
                              {
                                "type": "Literal",
                                "value": ""
                              }
                            ]
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "join"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "\n"
                          }
                        ]
                      }
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "fileMap1"
                      },
                      "init": {
                        "type": "Literal",
                        "value": "//# sourceMappingURL=foo.js.map"
                      }
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "fileMap2"
                      },
                      "init": {
                        "type": "Literal",
                        "value": "/*# sourceMappingURL=foo.js.map */"
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "t"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "equal"
                      }
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "convert"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "removeMapFileComments"
                          }
                        },
                        "arguments": [
                          {
                            "type": "BinaryExpression",
                            "operator": "+",
                            "left": {
                              "type": "Identifier",
                              "name": "foo"
                            },
                            "right": {
                              "type": "Identifier",
                              "name": "fileMap1"
                            }
                          }
                        ]
                      },
                      {
                        "type": "Identifier",
                        "name": "foo"
                      },
                      {
                        "type": "Literal",
                        "value": "// style filemap comment"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "t"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "equal"
                      }
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "convert"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "removeMapFileComments"
                          }
                        },
                        "arguments": [
                          {
                            "type": "BinaryExpression",
                            "operator": "+",
                            "left": {
                              "type": "Identifier",
                              "name": "foo"
                            },
                            "right": {
                              "type": "Identifier",
                              "name": "fileMap2"
                            }
                          }
                        ]
                      },
                      {
                        "type": "Identifier",
                        "name": "foo"
                      },
                      {
                        "type": "Literal",
                        "value": "/* */ style filemap comment"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "t"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "end"
                      }
                    },
                    "arguments": []
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "test"
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "pretty json"
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "params": [
              {
                "type": "Identifier",
                "name": "t"
              }
            ],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "mod"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "convert"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "fromJSON"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "json"
                              }
                            ]
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "toJSON"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": 2
                          }
                        ]
                      }
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "expected"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "JSON"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "stringify"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "obj"
                          },
                          {
                            "type": "Literal",
                            "value": null
                          },
                          {
                            "type": "Literal",
                            "value": 2
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "t"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "equal"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "mod"
                      },
                      {
                        "type": "Identifier",
                        "name": "expected"
                      },
                      {
                        "type": "Literal",
                        "value": "pretty prints json when space is given"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "t"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "end"
                      }
                    },
                    "arguments": []
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "test"
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "adding properties"
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "params": [
              {
                "type": "Identifier",
                "name": "t"
              }
            ],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "mod"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "convert"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "fromJSON"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "json"
                                  }
                                ]
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "addProperty"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": "foo"
                              },
                              {
                                "type": "Literal",
                                "value": "bar"
                              }
                            ]
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "toJSON"
                          }
                        },
                        "arguments": []
                      }
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "expected"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "JSON"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "parse"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "json"
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "expected"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "foo"
                      }
                    },
                    "right": {
                      "type": "Literal",
                      "value": "bar"
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "t"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "equal"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "mod"
                      },
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "JSON"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "stringify"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "expected"
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "includes added property"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "t"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "end"
                      }
                    },
                    "arguments": []
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "test"
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "setting properties"
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "params": [
              {
                "type": "Identifier",
                "name": "t"
              }
            ],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "mod"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "convert"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "fromJSON"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "Identifier",
                                            "name": "json"
                                          }
                                        ]
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "setProperty"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "Literal",
                                        "value": "version"
                                      },
                                      {
                                        "type": "Literal",
                                        "value": "2"
                                      }
                                    ]
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "setProperty"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Literal",
                                    "value": "mappings"
                                  },
                                  {
                                    "type": "Literal",
                                    "value": ";;;UACG"
                                  }
                                ]
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "setProperty"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": "should add"
                              },
                              {
                                "type": "Literal",
                                "value": "this"
                              }
                            ]
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "toJSON"
                          }
                        },
                        "arguments": []
                      }
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "expected"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "JSON"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "parse"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "json"
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "expected"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "version"
                      }
                    },
                    "right": {
                      "type": "Literal",
                      "value": "2"
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "expected"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "mappings"
                      }
                    },
                    "right": {
                      "type": "Literal",
                      "value": ";;;UACG"
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": true,
                      "object": {
                        "type": "Identifier",
                        "name": "expected"
                      },
                      "property": {
                        "type": "Literal",
                        "value": "should add"
                      }
                    },
                    "right": {
                      "type": "Literal",
                      "value": "this"
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "t"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "equal"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "mod"
                      },
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "JSON"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "stringify"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "expected"
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "includes new property and changes existing properties"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "t"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "end"
                      }
                    },
                    "arguments": []
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "test"
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "getting properties"
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "params": [
              {
                "type": "Identifier",
                "name": "t"
              }
            ],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "sm"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "convert"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "fromJSON"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "json"
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "t"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "equal"
                      }
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "sm"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "getProperty"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "version"
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": 3
                      },
                      {
                        "type": "Literal",
                        "value": "gets version"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "t"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "deepEqual"
                      }
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "sm"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "getProperty"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "sources"
                          }
                        ]
                      },
                      {
                        "type": "ArrayExpression",
                        "elements": [
                          {
                            "type": "Literal",
                            "value": "foo.js"
                          },
                          {
                            "type": "Literal",
                            "value": "bar.js"
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "gets sources"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "t"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "end"
                      }
                    },
                    "arguments": []
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    }
  ]
}
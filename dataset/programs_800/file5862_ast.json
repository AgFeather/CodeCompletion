{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "label"
          },
          "init": {
            "type": "Literal",
            "value": "Small Petrified Rock"
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "version"
          },
          "init": {
            "type": "Literal",
            "value": "1350426666"
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "name_single"
          },
          "init": {
            "type": "Literal",
            "value": "Small Petrified Rock"
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "name_plural"
          },
          "init": {
            "type": "Literal",
            "value": "Small Petrified Rocks"
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "article"
          },
          "init": {
            "type": "Literal",
            "value": "a"
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "description"
          },
          "init": {
            "type": "Literal",
            "value": "A once-modest small rock, frozen into a state of petrified awe when it witnessed a truly epic feat, then drawn, like a magnet, to the contributors of whatever act of rock-debilitating awesomenity petrified it. When cracked open, a small selection of rare delights may be found."
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "is_hidden"
          },
          "init": {
            "type": "Literal",
            "value": false
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "has_info"
          },
          "init": {
            "type": "Literal",
            "value": true
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "has_infopage"
          },
          "init": {
            "type": "Literal",
            "value": true
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "proxy_item"
          },
          "init": {
            "type": "Literal",
            "value": null
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "is_routable"
          },
          "init": {
            "type": "Literal",
            "value": false
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "adjusted_scale"
          },
          "init": {
            "type": "Literal",
            "value": 1
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "stackmax"
          },
          "init": {
            "type": "Literal",
            "value": 5
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "base_cost"
          },
          "init": {
            "type": "Literal",
            "value": 0
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "input_for"
          },
          "init": {
            "type": "ArrayExpression",
            "elements": []
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "parent_classes"
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": "petrified_rock_small"
              },
              {
                "type": "Literal",
                "value": "petrified_rock_base"
              },
              {
                "type": "Literal",
                "value": "takeable"
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "has_instance_props"
          },
          "init": {
            "type": "Literal",
            "value": false
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "classProps"
          },
          "init": {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Literal",
                  "value": "collection_id"
                },
                "value": {
                  "type": "Literal",
                  "value": ""
                },
                "kind": "init"
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "instancePropsDef"
          },
          "init": {
            "type": "ObjectExpression",
            "properties": []
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "verbs"
          },
          "init": {
            "type": "ObjectExpression",
            "properties": []
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "verbs"
          },
          "property": {
            "type": "Identifier",
            "name": "pickup"
          }
        },
        "right": {
          "type": "ObjectExpression",
          "properties": [
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "name"
              },
              "value": {
                "type": "Literal",
                "value": "pick up"
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "ok_states"
              },
              "value": {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": "in_location"
                  }
                ]
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "requires_target_pc"
              },
              "value": {
                "type": "Literal",
                "value": false
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "requires_target_item"
              },
              "value": {
                "type": "Literal",
                "value": false
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "include_target_items_from_location"
              },
              "value": {
                "type": "Literal",
                "value": false
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "is_default"
              },
              "value": {
                "type": "Literal",
                "value": false
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "is_emote"
              },
              "value": {
                "type": "Literal",
                "value": false
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "sort_on"
              },
              "value": {
                "type": "Literal",
                "value": 50
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "tooltip"
              },
              "value": {
                "type": "Literal",
                "value": "Put it in your pack"
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "is_drop_target"
              },
              "value": {
                "type": "Literal",
                "value": false
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "proximity_override"
              },
              "value": {
                "type": "Literal",
                "value": 800
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "conditions"
              },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "pc"
                  },
                  {
                    "type": "Identifier",
                    "name": "drop_stack"
                  }
                ],
                "defaults": [],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ReturnStatement",
                      "argument": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "ThisExpression"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "takeable_pickup_conditions"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "pc"
                          },
                          {
                            "type": "Identifier",
                            "name": "drop_stack"
                          }
                        ]
                      }
                    }
                  ]
                },
                "rest": null,
                "generator": false,
                "expression": false
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "handler"
              },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "pc"
                  },
                  {
                    "type": "Identifier",
                    "name": "msg"
                  },
                  {
                    "type": "Identifier",
                    "name": "suppress_activity"
                  }
                ],
                "defaults": [],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ReturnStatement",
                      "argument": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "ThisExpression"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "takeable_pickup"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "pc"
                          },
                          {
                            "type": "Identifier",
                            "name": "msg"
                          }
                        ]
                      }
                    }
                  ]
                },
                "rest": null,
                "generator": false,
                "expression": false
              },
              "kind": "init"
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "verbs"
          },
          "property": {
            "type": "Identifier",
            "name": "give"
          }
        },
        "right": {
          "type": "ObjectExpression",
          "properties": [
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "name"
              },
              "value": {
                "type": "Literal",
                "value": "give"
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "ok_states"
              },
              "value": {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": "in_pack"
                  }
                ]
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "requires_target_pc"
              },
              "value": {
                "type": "Literal",
                "value": true
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "requires_target_item"
              },
              "value": {
                "type": "Literal",
                "value": false
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "include_target_items_from_location"
              },
              "value": {
                "type": "Literal",
                "value": false
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "is_default"
              },
              "value": {
                "type": "Literal",
                "value": false
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "is_emote"
              },
              "value": {
                "type": "Literal",
                "value": false
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "sort_on"
              },
              "value": {
                "type": "Literal",
                "value": 51
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "tooltip"
              },
              "value": {
                "type": "Literal",
                "value": "Or, drag item to player"
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "is_drop_target"
              },
              "value": {
                "type": "Literal",
                "value": false
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "conditions"
              },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "pc"
                  },
                  {
                    "type": "Identifier",
                    "name": "drop_stack"
                  }
                ],
                "defaults": [],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ReturnStatement",
                      "argument": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "ThisExpression"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "takeable_give_conditions"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "pc"
                          },
                          {
                            "type": "Identifier",
                            "name": "drop_stack"
                          }
                        ]
                      }
                    }
                  ]
                },
                "rest": null,
                "generator": false,
                "expression": false
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "handler"
              },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "pc"
                  },
                  {
                    "type": "Identifier",
                    "name": "msg"
                  },
                  {
                    "type": "Identifier",
                    "name": "suppress_activity"
                  }
                ],
                "defaults": [],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ReturnStatement",
                      "argument": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "ThisExpression"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "takeable_give"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "pc"
                          },
                          {
                            "type": "Identifier",
                            "name": "msg"
                          }
                        ]
                      }
                    }
                  ]
                },
                "rest": null,
                "generator": false,
                "expression": false
              },
              "kind": "init"
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "verbs"
          },
          "property": {
            "type": "Identifier",
            "name": "drop"
          }
        },
        "right": {
          "type": "ObjectExpression",
          "properties": [
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "name"
              },
              "value": {
                "type": "Literal",
                "value": "drop"
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "ok_states"
              },
              "value": {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": "in_pack"
                  }
                ]
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "requires_target_pc"
              },
              "value": {
                "type": "Literal",
                "value": false
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "requires_target_item"
              },
              "value": {
                "type": "Literal",
                "value": false
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "include_target_items_from_location"
              },
              "value": {
                "type": "Literal",
                "value": false
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "is_default"
              },
              "value": {
                "type": "Literal",
                "value": false
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "is_emote"
              },
              "value": {
                "type": "Literal",
                "value": false
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "sort_on"
              },
              "value": {
                "type": "Literal",
                "value": 52
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "tooltip"
              },
              "value": {
                "type": "Literal",
                "value": "Drop it on the ground"
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "is_drop_target"
              },
              "value": {
                "type": "Literal",
                "value": false
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "conditions"
              },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "pc"
                  },
                  {
                    "type": "Identifier",
                    "name": "drop_stack"
                  }
                ],
                "defaults": [],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ReturnStatement",
                      "argument": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "ThisExpression"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "takeable_drop_conditions"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "pc"
                          },
                          {
                            "type": "Identifier",
                            "name": "drop_stack"
                          }
                        ]
                      }
                    }
                  ]
                },
                "rest": null,
                "generator": false,
                "expression": false
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "handler"
              },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "pc"
                  },
                  {
                    "type": "Identifier",
                    "name": "msg"
                  },
                  {
                    "type": "Identifier",
                    "name": "suppress_activity"
                  }
                ],
                "defaults": [],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ReturnStatement",
                      "argument": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "ThisExpression"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "takeable_drop"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "pc"
                          },
                          {
                            "type": "Identifier",
                            "name": "msg"
                          }
                        ]
                      }
                    }
                  ]
                },
                "rest": null,
                "generator": false,
                "expression": false
              },
              "kind": "init"
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "verbs"
          },
          "property": {
            "type": "Identifier",
            "name": "crack"
          }
        },
        "right": {
          "type": "ObjectExpression",
          "properties": [
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "name"
              },
              "value": {
                "type": "Literal",
                "value": "crack"
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "ok_states"
              },
              "value": {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": "in_pack"
                  }
                ]
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "requires_target_pc"
              },
              "value": {
                "type": "Literal",
                "value": false
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "requires_target_item"
              },
              "value": {
                "type": "Literal",
                "value": true
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "include_target_items_from_location"
              },
              "value": {
                "type": "Literal",
                "value": false
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "is_all"
              },
              "value": {
                "type": "Literal",
                "value": 1
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "is_default"
              },
              "value": {
                "type": "Literal",
                "value": false
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "is_emote"
              },
              "value": {
                "type": "Literal",
                "value": false
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "sort_on"
              },
              "value": {
                "type": "Literal",
                "value": 53
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "tooltip"
              },
              "value": {
                "type": "Literal",
                "value": "Crack it open"
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "is_drop_target"
              },
              "value": {
                "type": "Literal",
                "value": true
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "drop_many"
              },
              "value": {
                "type": "Literal",
                "value": false
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "drop_tip"
              },
              "value": {
                "type": "Literal",
                "value": "Crack {$item_name} with a {$stack_name}"
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "drop_ok_code"
              },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "stack"
                  },
                  {
                    "type": "Identifier",
                    "name": "pc"
                  }
                ],
                "defaults": [],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "IfStatement",
                      "test": {
                        "type": "LogicalExpression",
                        "operator": "&&",
                        "left": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "in_array_real"
                          },
                          "arguments": [
                            {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "stack"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "class_tsid"
                              }
                            },
                            {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "ThisExpression"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "valid_tools"
                              }
                            }
                          ]
                        },
                        "right": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "stack"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "isWorking"
                            }
                          },
                          "arguments": []
                        }
                      },
                      "consequent": {
                        "type": "ReturnStatement",
                        "argument": {
                          "type": "Literal",
                          "value": true
                        }
                      },
                      "alternate": null
                    },
                    {
                      "type": "ReturnStatement",
                      "argument": {
                        "type": "Literal",
                        "value": false
                      }
                    }
                  ]
                },
                "rest": null,
                "generator": false,
                "expression": false
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "conditions"
              },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "pc"
                  },
                  {
                    "type": "Identifier",
                    "name": "drop_stack"
                  }
                ],
                "defaults": [],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ForStatement",
                      "init": {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "i"
                            },
                            "init": {
                              "type": "Literal",
                              "value": 0
                            }
                          }
                        ],
                        "kind": "var"
                      },
                      "test": {
                        "type": "BinaryExpression",
                        "operator": "<",
                        "left": {
                          "type": "Identifier",
                          "name": "i"
                        },
                        "right": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "ThisExpression"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "valid_tools"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "length"
                          }
                        }
                      },
                      "update": {
                        "type": "UpdateExpression",
                        "operator": "++",
                        "argument": {
                          "type": "Identifier",
                          "name": "i"
                        },
                        "prefix": false
                      },
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "IfStatement",
                            "test": {
                              "type": "LogicalExpression",
                              "operator": "&&",
                              "left": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "ThisExpression"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "valid_tools"
                                  }
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "i"
                                }
                              },
                              "right": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "pc"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "items_find_working_tool"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "ThisExpression"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "valid_tools"
                                      }
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "i"
                                    }
                                  }
                                ]
                              }
                            },
                            "consequent": {
                              "type": "ReturnStatement",
                              "argument": {
                                "type": "ObjectExpression",
                                "properties": [
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Identifier",
                                      "name": "state"
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": "enabled"
                                    },
                                    "kind": "init"
                                  }
                                ]
                              }
                            },
                            "alternate": null
                          }
                        ]
                      }
                    },
                    {
                      "type": "ReturnStatement",
                      "argument": {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "state"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "disabled"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "reason"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "You don't have anything to crack it with."
                            },
                            "kind": "init"
                          }
                        ]
                      }
                    }
                  ]
                },
                "rest": null,
                "generator": false,
                "expression": false
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "requires_target_item_count"
              },
              "value": {
                "type": "Literal",
                "value": false
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "choices_are_stacks"
              },
              "value": {
                "type": "Literal",
                "value": false
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "valid_items"
              },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "pc"
                  }
                ],
                "defaults": [],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "VariableDeclaration",
                      "declarations": [
                        {
                          "type": "VariableDeclarator",
                          "id": {
                            "type": "Identifier",
                            "name": "uniques"
                          },
                          "init": {
                            "type": "ObjectExpression",
                            "properties": []
                          }
                        }
                      ],
                      "kind": "var"
                    },
                    {
                      "type": "VariableDeclaration",
                      "declarations": [
                        {
                          "type": "VariableDeclarator",
                          "id": {
                            "type": "Identifier",
                            "name": "items"
                          },
                          "init": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "pc"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "apiGetAllItems"
                              }
                            },
                            "arguments": []
                          }
                        }
                      ],
                      "kind": "var"
                    },
                    {
                      "type": "ForInStatement",
                      "left": {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "i"
                            },
                            "init": null
                          }
                        ],
                        "kind": "var"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "items"
                      },
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "VariableDeclaration",
                            "declarations": [
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "it"
                                },
                                "init": {
                                  "type": "MemberExpression",
                                  "computed": true,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "items"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "i"
                                  }
                                }
                              }
                            ],
                            "kind": "var"
                          },
                          {
                            "type": "IfStatement",
                            "test": {
                              "type": "LogicalExpression",
                              "operator": "&&",
                              "left": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "in_array_real"
                                },
                                "arguments": [
                                  {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "it"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "class_tsid"
                                    }
                                  },
                                  {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "ThisExpression"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "valid_tools"
                                    }
                                  }
                                ]
                              },
                              "right": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "it"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "isWorking"
                                  }
                                },
                                "arguments": []
                              }
                            },
                            "consequent": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": true,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "uniques"
                                      },
                                      "property": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "it"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "class_tsid"
                                        }
                                      }
                                    },
                                    "right": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "it"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "tsid"
                                      }
                                    }
                                  }
                                }
                              ]
                            },
                            "alternate": null
                          }
                        ]
                      },
                      "each": false
                    },
                    {
                      "type": "VariableDeclaration",
                      "declarations": [
                        {
                          "type": "VariableDeclarator",
                          "id": {
                            "type": "Identifier",
                            "name": "possibles"
                          },
                          "init": {
                            "type": "ArrayExpression",
                            "elements": []
                          }
                        }
                      ],
                      "kind": "var"
                    },
                    {
                      "type": "ForInStatement",
                      "left": {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "i"
                            },
                            "init": null
                          }
                        ],
                        "kind": "var"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "uniques"
                      },
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "possibles"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "push"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "i"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "each": false
                    },
                    {
                      "type": "IfStatement",
                      "test": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "possibles"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "length"
                        }
                      },
                      "consequent": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "ObjectExpression",
                              "properties": [
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Literal",
                                    "value": "ok"
                                  },
                                  "value": {
                                    "type": "Literal",
                                    "value": 1
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Literal",
                                    "value": "choices"
                                  },
                                  "value": {
                                    "type": "Identifier",
                                    "name": "possibles"
                                  },
                                  "kind": "init"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "alternate": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "ThisExpression"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "startMoving"
                                }
                              },
                              "arguments": []
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "pc"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "sendActivity"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": "You don't have anything to crack this with."
                                }
                              ]
                            }
                          },
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "ObjectExpression",
                              "properties": [
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Literal",
                                    "value": "ok"
                                  },
                                  "value": {
                                    "type": "Literal",
                                    "value": 0
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Literal",
                                    "value": "txt"
                                  },
                                  "value": {
                                    "type": "Literal",
                                    "value": "You don't have anything to crack this with."
                                  },
                                  "kind": "init"
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                },
                "rest": null,
                "generator": false,
                "expression": false
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "handler"
              },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "pc"
                  },
                  {
                    "type": "Identifier",
                    "name": "msg"
                  },
                  {
                    "type": "Identifier",
                    "name": "suppress_activity"
                  }
                ],
                "defaults": [],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "VariableDeclaration",
                      "declarations": [
                        {
                          "type": "VariableDeclarator",
                          "id": {
                            "type": "Identifier",
                            "name": "failed"
                          },
                          "init": {
                            "type": "Literal",
                            "value": 0
                          }
                        }
                      ],
                      "kind": "var"
                    },
                    {
                      "type": "VariableDeclaration",
                      "declarations": [
                        {
                          "type": "VariableDeclarator",
                          "id": {
                            "type": "Identifier",
                            "name": "orig_count"
                          },
                          "init": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "ThisExpression"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "count"
                            }
                          }
                        }
                      ],
                      "kind": "var"
                    },
                    {
                      "type": "VariableDeclaration",
                      "declarations": [
                        {
                          "type": "VariableDeclarator",
                          "id": {
                            "type": "Identifier",
                            "name": "self_msgs"
                          },
                          "init": {
                            "type": "ArrayExpression",
                            "elements": []
                          }
                        }
                      ],
                      "kind": "var"
                    },
                    {
                      "type": "VariableDeclaration",
                      "declarations": [
                        {
                          "type": "VariableDeclarator",
                          "id": {
                            "type": "Identifier",
                            "name": "self_effects"
                          },
                          "init": {
                            "type": "ArrayExpression",
                            "elements": []
                          }
                        }
                      ],
                      "kind": "var"
                    },
                    {
                      "type": "VariableDeclaration",
                      "declarations": [
                        {
                          "type": "VariableDeclarator",
                          "id": {
                            "type": "Identifier",
                            "name": "they_effects"
                          },
                          "init": {
                            "type": "ArrayExpression",
                            "elements": []
                          }
                        }
                      ],
                      "kind": "var"
                    },
                    {
                      "type": "IfStatement",
                      "test": {
                        "type": "LogicalExpression",
                        "operator": "||",
                        "left": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "msg"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "target_item_class"
                          }
                        },
                        "right": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "msg"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "target_itemstack_tsid"
                          }
                        }
                      },
                      "consequent": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "VariableDeclaration",
                            "declarations": [
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "tool"
                                },
                                "init": null
                              }
                            ],
                            "kind": "var"
                          },
                          {
                            "type": "IfStatement",
                            "test": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "msg"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "target_itemstack_tsid"
                              }
                            },
                            "consequent": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "tool"
                                    },
                                    "right": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "pc"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "removeItemStackTsid"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "msg"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "target_itemstack_tsid"
                                          }
                                        },
                                        {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "msg"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "target_item_class_count"
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            },
                            "alternate": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "tool"
                                    },
                                    "right": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "pc"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "removeItemStackClassExact"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "msg"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "target_item_class"
                                          }
                                        },
                                        {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "msg"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "target_item_class_count"
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "type": "IfStatement",
                            "test": {
                              "type": "Identifier",
                              "name": "tool"
                            },
                            "consequent": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "IfStatement",
                                  "test": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "tool"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "use"
                                    }
                                  },
                                  "consequent": {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "tool"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "use"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "ThisExpression"
                                        },
                                        {
                                          "type": "Literal",
                                          "value": 1
                                        }
                                      ]
                                    }
                                  },
                                  "alternate": null
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "ThisExpression"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "apiSetTimerX"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "Literal",
                                        "value": "onCrack"
                                      },
                                      {
                                        "type": "Literal",
                                        "value": 2000
                                      },
                                      {
                                        "type": "Identifier",
                                        "name": "pc"
                                      },
                                      {
                                        "type": "Identifier",
                                        "name": "tool"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "pc"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "announce_sound"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "Literal",
                                        "value": "PETRIFIED_ROCK"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "VariableDeclaration",
                                  "declarations": [
                                    {
                                      "type": "VariableDeclarator",
                                      "id": {
                                        "type": "Identifier",
                                        "name": "annc"
                                      },
                                      "init": {
                                        "type": "ObjectExpression",
                                        "properties": [
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "type"
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": "pc_overlay"
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "uid"
                                            },
                                            "value": {
                                              "type": "BinaryExpression",
                                              "operator": "+",
                                              "left": {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "pc"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "tsid"
                                                  }
                                                },
                                                "right": {
                                                  "type": "Literal",
                                                  "value": "-"
                                                }
                                              },
                                              "right": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "ThisExpression"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "class_tsid"
                                                }
                                              }
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "duration"
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": 2000
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "pc_tsid"
                                            },
                                            "value": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "pc"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "tsid"
                                              }
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "locking"
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": true
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "delta_x"
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": 0
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "delta_y"
                                            },
                                            "value": {
                                              "type": "UnaryExpression",
                                              "operator": "-",
                                              "argument": {
                                                "type": "Literal",
                                                "value": 115
                                              },
                                              "prefix": true
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "swf_url"
                                            },
                                            "value": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "overlay_key_to_url"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Literal",
                                                  "value": "petrified_rock_open_overlay"
                                                }
                                              ]
                                            },
                                            "kind": "init"
                                          }
                                        ]
                                      }
                                    }
                                  ],
                                  "kind": "var"
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "pc"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "apiSendAnnouncement"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "annc"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "VariableDeclaration",
                                  "declarations": [
                                    {
                                      "type": "VariableDeclarator",
                                      "id": {
                                        "type": "Identifier",
                                        "name": "anncx"
                                      },
                                      "init": {
                                        "type": "ObjectExpression",
                                        "properties": [
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "type"
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": "pc_overlay"
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "uid"
                                            },
                                            "value": {
                                              "type": "BinaryExpression",
                                              "operator": "+",
                                              "left": {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                  "type": "BinaryExpression",
                                                  "operator": "+",
                                                  "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "pc"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "tsid"
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "Literal",
                                                    "value": "-"
                                                  }
                                                },
                                                "right": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "ThisExpression"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "class_tsid"
                                                  }
                                                }
                                              },
                                              "right": {
                                                "type": "Literal",
                                                "value": "-all"
                                              }
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "duration"
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": 2000
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "pc_tsid"
                                            },
                                            "value": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "pc"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "tsid"
                                              }
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "delta_x"
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": 0
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "delta_y"
                                            },
                                            "value": {
                                              "type": "UnaryExpression",
                                              "operator": "-",
                                              "argument": {
                                                "type": "Literal",
                                                "value": 110
                                              },
                                              "prefix": true
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "bubble"
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": true
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "width"
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": 40
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "height"
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": 40
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "swf_url"
                                            },
                                            "value": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "overlay_key_to_url"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Literal",
                                                  "value": "petrified_rock_open_overlay"
                                                }
                                              ]
                                            },
                                            "kind": "init"
                                          }
                                        ]
                                      }
                                    }
                                  ],
                                  "kind": "var"
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "pc"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "location"
                                        }
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "apiSendAnnouncementX"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "anncx"
                                      },
                                      {
                                        "type": "Identifier",
                                        "name": "pc"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "alternate": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "failed"
                                    },
                                    "right": {
                                      "type": "Literal",
                                      "value": 1
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "alternate": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "name": "failed"
                              },
                              "right": {
                                "type": "Literal",
                                "value": 1
                              }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "type": "VariableDeclaration",
                      "declarations": [
                        {
                          "type": "VariableDeclarator",
                          "id": {
                            "type": "Identifier",
                            "name": "pre_msg"
                          },
                          "init": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "ThisExpression"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "buildVerbMessage"
                              }
                            },
                            "arguments": [
                              {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "msg"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "count"
                                }
                              },
                              {
                                "type": "Literal",
                                "value": "crack"
                              },
                              {
                                "type": "Literal",
                                "value": "cracked"
                              },
                              {
                                "type": "Identifier",
                                "name": "failed"
                              },
                              {
                                "type": "Identifier",
                                "name": "self_msgs"
                              },
                              {
                                "type": "Identifier",
                                "name": "self_effects"
                              },
                              {
                                "type": "Identifier",
                                "name": "they_effects"
                              }
                            ]
                          }
                        }
                      ],
                      "kind": "var"
                    },
                    {
                      "type": "IfStatement",
                      "test": {
                        "type": "LogicalExpression",
                        "operator": "&&",
                        "left": {
                          "type": "UnaryExpression",
                          "operator": "!",
                          "argument": {
                            "type": "Identifier",
                            "name": "suppress_activity"
                          },
                          "prefix": true
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "pre_msg"
                        }
                      },
                      "consequent": {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "pc"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "sendActivity"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "pre_msg"
                            }
                          ]
                        }
                      },
                      "alternate": null
                    },
                    {
                      "type": "ReturnStatement",
                      "argument": {
                        "type": "ConditionalExpression",
                        "test": {
                          "type": "Identifier",
                          "name": "failed"
                        },
                        "consequent": {
                          "type": "Literal",
                          "value": false
                        },
                        "alternate": {
                          "type": "Literal",
                          "value": true
                        }
                      }
                    }
                  ]
                },
                "rest": null,
                "generator": false,
                "expression": false
              },
              "kind": "init"
            }
          ]
        }
      }
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "onCrack"
      },
      "params": [
        {
          "type": "Identifier",
          "name": "pc"
        },
        {
          "type": "Identifier",
          "name": "tool"
        }
      ],
      "defaults": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "ThisExpression"
                },
                "property": {
                  "type": "Identifier",
                  "name": "apiConsume"
                }
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": 1
                }
              ]
            }
          },
          {
            "type": "VariableDeclaration",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "results"
                },
                "init": {
                  "type": "ArrayExpression",
                  "elements": []
                }
              }
            ],
            "kind": "var"
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "=",
              "left": {
                "type": "Identifier",
                "name": "results"
              },
              "right": {
                "type": "CallExpression",
                "callee": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "Identifier",
                    "name": "pc"
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "runDropTable"
                  }
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "value": "petrified_rock_small_crack"
                  },
                  {
                    "type": "Literal",
                    "value": null
                  },
                  {
                    "type": "Literal",
                    "value": null
                  },
                  {
                    "type": "Literal",
                    "value": null
                  },
                  {
                    "type": "Literal",
                    "value": null
                  },
                  {
                    "type": "Identifier",
                    "name": "results"
                  }
                ]
              }
            }
          },
          {
            "type": "IfStatement",
            "test": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "is_chance"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": 0.1
                }
              ]
            },
            "consequent": {
              "type": "ExpressionStatement",
              "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                  "type": "Identifier",
                  "name": "results"
                },
                "right": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "pc"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "runDropTable"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": "gem_equal_chance"
                    },
                    {
                      "type": "Literal",
                      "value": null
                    },
                    {
                      "type": "Literal",
                      "value": null
                    },
                    {
                      "type": "Literal",
                      "value": null
                    },
                    {
                      "type": "Literal",
                      "value": null
                    },
                    {
                      "type": "Identifier",
                      "name": "results"
                    }
                  ]
                }
              }
            },
            "alternate": null
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "=",
              "left": {
                "type": "Identifier",
                "name": "results"
              },
              "right": {
                "type": "CallExpression",
                "callee": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "Identifier",
                    "name": "pc"
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "runDropTable"
                  }
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "value": "petrified_rock_small_currants"
                  },
                  {
                    "type": "Literal",
                    "value": null
                  },
                  {
                    "type": "Literal",
                    "value": null
                  },
                  {
                    "type": "Literal",
                    "value": null
                  },
                  {
                    "type": "Literal",
                    "value": null
                  },
                  {
                    "type": "Identifier",
                    "name": "results"
                  }
                ]
              }
            }
          },
          {
            "type": "IfStatement",
            "test": {
              "type": "MemberExpression",
              "computed": false,
              "object": {
                "type": "Identifier",
                "name": "results"
              },
              "property": {
                "type": "Identifier",
                "name": "length"
              }
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "msg"
                      },
                      "init": null
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "BinaryExpression",
                    "operator": ">",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "results"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "length"
                      }
                    },
                    "right": {
                      "type": "Literal",
                      "value": 1
                    }
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "last"
                            },
                            "init": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "results"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "pop"
                                }
                              },
                              "arguments": []
                            }
                          }
                        ],
                        "kind": "var"
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "name": "msg"
                          },
                          "right": {
                            "type": "BinaryExpression",
                            "operator": "+",
                            "left": {
                              "type": "BinaryExpression",
                              "operator": "+",
                              "left": {
                                "type": "BinaryExpression",
                                "operator": "+",
                                "left": {
                                  "type": "BinaryExpression",
                                  "operator": "+",
                                  "left": {
                                    "type": "Literal",
                                    "value": "You got "
                                  },
                                  "right": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "results"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "join"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "Literal",
                                        "value": ", "
                                      }
                                    ]
                                  }
                                },
                                "right": {
                                  "type": "Literal",
                                  "value": ", and "
                                }
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "last"
                              }
                            },
                            "right": {
                              "type": "Literal",
                              "value": "!"
                            }
                          }
                        }
                      }
                    ]
                  },
                  "alternate": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "name": "msg"
                          },
                          "right": {
                            "type": "BinaryExpression",
                            "operator": "+",
                            "left": {
                              "type": "BinaryExpression",
                              "operator": "+",
                              "left": {
                                "type": "Literal",
                                "value": "You got "
                              },
                              "right": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "results"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "join"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Literal",
                                    "value": ", "
                                  }
                                ]
                              }
                            },
                            "right": {
                              "type": "Literal",
                              "value": "!"
                            }
                          }
                        }
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "pc"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "sendActivity"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "msg"
                      }
                    ]
                  }
                }
              ]
            },
            "alternate": null
          }
        ]
      },
      "rest": null,
      "generator": false,
      "expression": false
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "valid_tools"
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": "ace_of_spades"
              },
              {
                "type": "Literal",
                "value": "class_axe"
              },
              {
                "type": "Literal",
                "value": "fancy_pick"
              },
              {
                "type": "Literal",
                "value": "grand_ol_grinder"
              },
              {
                "type": "Literal",
                "value": "hatchet"
              },
              {
                "type": "Literal",
                "value": "high_class_hoe"
              },
              {
                "type": "Literal",
                "value": "hoe"
              },
              {
                "type": "Literal",
                "value": "ore_grinder"
              },
              {
                "type": "Literal",
                "value": "pick"
              },
              {
                "type": "Literal",
                "value": "shovel"
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "getDescExtras"
      },
      "params": [
        {
          "type": "Identifier",
          "name": "pc"
        }
      ],
      "defaults": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "VariableDeclaration",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "out"
                },
                "init": {
                  "type": "ArrayExpression",
                  "elements": []
                }
              }
            ],
            "kind": "var"
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "Identifier",
                  "name": "out"
                },
                "property": {
                  "type": "Identifier",
                  "name": "push"
                }
              },
              "arguments": [
                {
                  "type": "ArrayExpression",
                  "elements": [
                    {
                      "type": "Literal",
                      "value": 0
                    },
                    {
                      "type": "Literal",
                      "value": "Petrified Rocks are awarded for contributing to <a href=\"http://www.glitch.com/feats/\" glitch=\"external|http://www.glitch.com/feats/\">Feats</a>."
                    }
                  ]
                }
              ]
            }
          },
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "Identifier",
              "name": "out"
            }
          }
        ]
      },
      "rest": null,
      "generator": false,
      "expression": false
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "tags"
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": "no_rube"
              },
              {
                "type": "Literal",
                "value": "no_trade"
              },
              {
                "type": "Literal",
                "value": "no_auction"
              },
              {
                "type": "Literal",
                "value": "collectible"
              },
              {
                "type": "Literal",
                "value": "petrified"
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "getAssetInfo"
      },
      "params": [],
      "defaults": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "ObjectExpression",
              "properties": [
                {
                  "type": "Property",
                  "key": {
                    "type": "Literal",
                    "value": "position"
                  },
                  "value": {
                    "type": "ObjectExpression",
                    "properties": [
                      {
                        "type": "Property",
                        "key": {
                          "type": "Literal",
                          "value": "x"
                        },
                        "value": {
                          "type": "UnaryExpression",
                          "operator": "-",
                          "argument": {
                            "type": "Literal",
                            "value": 10
                          },
                          "prefix": true
                        },
                        "kind": "init"
                      },
                      {
                        "type": "Property",
                        "key": {
                          "type": "Literal",
                          "value": "y"
                        },
                        "value": {
                          "type": "UnaryExpression",
                          "operator": "-",
                          "argument": {
                            "type": "Literal",
                            "value": 14
                          },
                          "prefix": true
                        },
                        "kind": "init"
                      },
                      {
                        "type": "Property",
                        "key": {
                          "type": "Literal",
                          "value": "w"
                        },
                        "value": {
                          "type": "Literal",
                          "value": 20
                        },
                        "kind": "init"
                      },
                      {
                        "type": "Property",
                        "key": {
                          "type": "Literal",
                          "value": "h"
                        },
                        "value": {
                          "type": "Literal",
                          "value": 15
                        },
                        "kind": "init"
                      }
                    ]
                  },
                  "kind": "init"
                },
                {
                  "type": "Property",
                  "key": {
                    "type": "Literal",
                    "value": "thumb"
                  },
                  "value": {
                    "type": "Literal",
                    "value": "iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAACdklEQVR42u2W7U5ScRzHvYMuIJtj\nTDNPRgwfQUN8ShQ9eFQU5SBoItISZ0Yhj0IMU7GjWcNScZOU1IlWcy2dVFtvWO+6AC7BS/jmOVtu\nXQD4ov9n+7z6v/nst/9TXh6BQCAQCATCf0n67KPyKDpLH0bDsS/xlfOv22/A++NoC+nTw9Sv06PB\nKwn7ntyyfzvYxPEmh13Oc2nksQWcw4r43DPsL/uF9bO99cznjcXchv7+eeJLnxzgNBHFp7U5HLwO\nCm5HPEgsBZCMhhELTQm+9U9gPTiJD5w7s7fkpXMS+H7e7dt/FcZxfBUnuxuXJlZm8dI5Ds8DPaaH\nesG57NhZDmEnMi1MmA91WQZiWQ+0MG2B8d4OOIzdgk/YLjjNOsyMGmDrbsMoo8aEXovkGofDd4tI\ncDPYWvDA1quBulGFrAcu2IfPnSadEMdPim2th0GtgmuoD76Rfli7WmG5iLSwfbDZrLBaR2E0sujs\n1KJaJs1kPXB1aSGzuboCv3MKkXAAL4Lef5x8NAb7+EOYzCbQnQzqm1pQpbgHqlSCYupu9g+MY2x4\nMPh0AiGXQwianwvD7ZnG81AAbq8bBqMR5ZVVqKqtR7uWgVrTAbmiBqUUFcvJIZm19FzTMfR5IOiH\nd8YHXT8LubIBtQ0tkNc1CWEVCiW6enRgWQNojRrS4kJQouuSnF01FSVFvgqqCA3lEpi0aozpGYzo\naAxo7qNdVYs6WSn4dV6V7E6mMD+/Mqd3ofSWqOBvAB/ZpigHo5Kjp7EGLdUytCrKoG9WJs0dzVfz\nmvCUlYhpfpKym+KkpFCUui0uSFGiG6mL6EF+G5DPAIFAIBAIBALPH+IUXaSPU1SUAAAAAElFTkSu\nQmCC"
                  },
                  "kind": "init"
                }
              ]
            }
          }
        ]
      },
      "rest": null,
      "generator": false,
      "expression": false
    },
    {
      "type": "EmptyStatement"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "itemDef"
          },
          "init": {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "label"
                },
                "value": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "ThisExpression"
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "label"
                  }
                },
                "kind": "init"
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "name_plural"
                },
                "value": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "ThisExpression"
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "name_plural"
                  }
                },
                "kind": "init"
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "stackmax"
                },
                "value": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "ThisExpression"
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "stackmax"
                  }
                },
                "kind": "init"
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "is_hidden"
                },
                "value": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "ThisExpression"
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "is_hidden"
                  }
                },
                "kind": "init"
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "has_info"
                },
                "value": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "ThisExpression"
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "has_info"
                  }
                },
                "kind": "init"
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "adjusted_scale"
                },
                "value": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "ThisExpression"
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "adjusted_scale"
                  }
                },
                "kind": "init"
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "asset_swf_v"
                },
                "value": {
                  "type": "Literal",
                  "value": "http://c2.glitch.bz/items/2012-10/petrified_rock_small-1349210520.swf"
                },
                "kind": "init"
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "admin_props"
                },
                "value": {
                  "type": "Literal",
                  "value": false
                },
                "kind": "init"
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "obey_physics"
                },
                "value": {
                  "type": "Literal",
                  "value": true
                },
                "kind": "init"
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "in_background"
                },
                "value": {
                  "type": "Literal",
                  "value": false
                },
                "kind": "init"
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "in_foreground"
                },
                "value": {
                  "type": "Literal",
                  "value": false
                },
                "kind": "init"
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "has_status"
                },
                "value": {
                  "type": "Literal",
                  "value": false
                },
                "kind": "init"
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "not_selectable"
                },
                "value": {
                  "type": "Literal",
                  "value": false
                },
                "kind": "init"
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "MemberExpression",
        "computed": false,
        "object": {
          "type": "ThisExpression"
        },
        "property": {
          "type": "Identifier",
          "name": "consumable_label_single"
        }
      },
      "consequent": {
        "type": "ExpressionStatement",
        "expression": {
          "type": "AssignmentExpression",
          "operator": "=",
          "left": {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "Identifier",
              "name": "itemDef"
            },
            "property": {
              "type": "Identifier",
              "name": "consumable_label_single"
            }
          },
          "right": {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "ThisExpression"
            },
            "property": {
              "type": "Identifier",
              "name": "consumable_label_single"
            }
          }
        }
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "MemberExpression",
        "computed": false,
        "object": {
          "type": "ThisExpression"
        },
        "property": {
          "type": "Identifier",
          "name": "consumable_label_plural"
        }
      },
      "consequent": {
        "type": "ExpressionStatement",
        "expression": {
          "type": "AssignmentExpression",
          "operator": "=",
          "left": {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "Identifier",
              "name": "itemDef"
            },
            "property": {
              "type": "Identifier",
              "name": "consumable_label_plural"
            }
          },
          "right": {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "ThisExpression"
            },
            "property": {
              "type": "Identifier",
              "name": "consumable_label_plural"
            }
          }
        }
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "itemDef"
          },
          "property": {
            "type": "Identifier",
            "name": "verbs"
          }
        },
        "right": {
          "type": "ObjectExpression",
          "properties": []
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "itemDef"
          },
          "property": {
            "type": "Identifier",
            "name": "hasConditionalVerbs"
          }
        },
        "right": {
          "type": "Literal",
          "value": 1
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "itemDef"
          },
          "property": {
            "type": "Identifier",
            "name": "emote_verbs"
          }
        },
        "right": {
          "type": "ObjectExpression",
          "properties": []
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "itemDef"
          },
          "property": {
            "type": "Identifier",
            "name": "hasConditionalEmoteVerbs"
          }
        },
        "right": {
          "type": "Literal",
          "value": 0
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "itemDef"
          },
          "property": {
            "type": "Identifier",
            "name": "tags"
          }
        },
        "right": {
          "type": "ArrayExpression",
          "elements": [
            {
              "type": "Literal",
              "value": "no_rube"
            },
            {
              "type": "Literal",
              "value": "no_trade"
            },
            {
              "type": "Literal",
              "value": "no_auction"
            },
            {
              "type": "Literal",
              "value": "collectible"
            },
            {
              "type": "Literal",
              "value": "petrified"
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "itemDef"
          },
          "property": {
            "type": "Identifier",
            "name": "keys_in_location"
          }
        },
        "right": {
          "type": "ObjectExpression",
          "properties": [
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "p"
              },
              "value": {
                "type": "Literal",
                "value": "pickup"
              },
              "kind": "init"
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "itemDef"
          },
          "property": {
            "type": "Identifier",
            "name": "keys_in_pack"
          }
        },
        "right": {
          "type": "ObjectExpression",
          "properties": [
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "r"
              },
              "value": {
                "type": "Literal",
                "value": "drop"
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "c"
              },
              "value": {
                "type": "Literal",
                "value": "crack"
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "g"
              },
              "value": {
                "type": "Literal",
                "value": "give"
              },
              "kind": "init"
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "log"
          },
          "property": {
            "type": "Identifier",
            "name": "info"
          }
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "petrified_rock_small.js LOADED"
          }
        ]
      }
    }
  ]
}
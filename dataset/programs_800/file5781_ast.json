{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "FunctionExpression",
            "id": null,
            "params": [],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "Bacon"
                      },
                      "init": null
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "Bus"
                      },
                      "init": null
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "Dispatcher"
                      },
                      "init": null
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "End"
                      },
                      "init": null
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "Error"
                      },
                      "init": null
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "Event"
                      },
                      "init": null
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "EventStream"
                      },
                      "init": null
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "Initial"
                      },
                      "init": null
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "Next"
                      },
                      "init": null
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "None"
                      },
                      "init": null
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "Observable"
                      },
                      "init": null
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "Property"
                      },
                      "init": null
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "PropertyDispatcher"
                      },
                      "init": null
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "Some"
                      },
                      "init": null
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "addPropertyInitValueToStream"
                      },
                      "init": null
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "assert"
                      },
                      "init": null
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "assertArray"
                      },
                      "init": null
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "assertEvent"
                      },
                      "init": null
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "assertFunction"
                      },
                      "init": null
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "assertNoArguments"
                      },
                      "init": null
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "assertString"
                      },
                      "init": null
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "cloneArray"
                      },
                      "init": null
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "end"
                      },
                      "init": null
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "former"
                      },
                      "init": null
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "indexOf"
                      },
                      "init": null
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "initial"
                      },
                      "init": null
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "isFieldKey"
                      },
                      "init": null
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "isFunction"
                      },
                      "init": null
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "latter"
                      },
                      "init": null
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "liftCallback"
                      },
                      "init": null
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "makeFunction"
                      },
                      "init": null
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "makeSpawner"
                      },
                      "init": null
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "methodCall"
                      },
                      "init": null
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "next"
                      },
                      "init": null
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "nop"
                      },
                      "init": null
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "partiallyApplied"
                      },
                      "init": null
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "sendWrapped"
                      },
                      "init": null
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "toCombinator"
                      },
                      "init": null
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "toEvent"
                      },
                      "init": null
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "toFieldExtractor"
                      },
                      "init": null
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "toFieldKey"
                      },
                      "init": null
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "toOption"
                      },
                      "init": null
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "toSimpleExtractor"
                      },
                      "init": null
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "_"
                      },
                      "init": null
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "_ref"
                      },
                      "init": null
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "__slice"
                      },
                      "init": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "ArrayExpression",
                          "elements": []
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "slice"
                        }
                      }
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "__hasProp"
                      },
                      "init": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "ObjectExpression",
                          "properties": []
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "hasOwnProperty"
                        }
                      }
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "__extends"
                      },
                      "init": {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [
                          {
                            "type": "Identifier",
                            "name": "child"
                          },
                          {
                            "type": "Identifier",
                            "name": "parent"
                          }
                        ],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ForInStatement",
                              "left": {
                                "type": "VariableDeclaration",
                                "declarations": [
                                  {
                                    "type": "VariableDeclarator",
                                    "id": {
                                      "type": "Identifier",
                                      "name": "key"
                                    },
                                    "init": null
                                  }
                                ],
                                "kind": "var"
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "parent"
                              },
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "IfStatement",
                                    "test": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "__hasProp"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "call"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "Identifier",
                                          "name": "parent"
                                        },
                                        {
                                          "type": "Identifier",
                                          "name": "key"
                                        }
                                      ]
                                    },
                                    "consequent": {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                          "type": "MemberExpression",
                                          "computed": true,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "child"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "key"
                                          }
                                        },
                                        "right": {
                                          "type": "MemberExpression",
                                          "computed": true,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "parent"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "key"
                                          }
                                        }
                                      }
                                    },
                                    "alternate": null
                                  }
                                ]
                              },
                              "each": false
                            },
                            {
                              "type": "FunctionDeclaration",
                              "id": {
                                "type": "Identifier",
                                "name": "ctor"
                              },
                              "params": [],
                              "defaults": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "ThisExpression"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "constructor"
                                        }
                                      },
                                      "right": {
                                        "type": "Identifier",
                                        "name": "child"
                                      }
                                    }
                                  }
                                ]
                              },
                              "rest": null,
                              "generator": false,
                              "expression": false
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "ctor"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "prototype"
                                  }
                                },
                                "right": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "parent"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "prototype"
                                  }
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "child"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "prototype"
                                  }
                                },
                                "right": {
                                  "type": "NewExpression",
                                  "callee": {
                                    "type": "Identifier",
                                    "name": "ctor"
                                  },
                                  "arguments": []
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "child"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "__super__"
                                  }
                                },
                                "right": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "parent"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "prototype"
                                  }
                                }
                              }
                            },
                            {
                              "type": "ReturnStatement",
                              "argument": {
                                "type": "Identifier",
                                "name": "child"
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      }
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "__bind"
                      },
                      "init": {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [
                          {
                            "type": "Identifier",
                            "name": "fn"
                          },
                          {
                            "type": "Identifier",
                            "name": "me"
                          }
                        ],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ReturnStatement",
                              "argument": {
                                "type": "FunctionExpression",
                                "id": null,
                                "params": [],
                                "defaults": [],
                                "body": {
                                  "type": "BlockStatement",
                                  "body": [
                                    {
                                      "type": "ReturnStatement",
                                      "argument": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "fn"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "apply"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "Identifier",
                                            "name": "me"
                                          },
                                          {
                                            "type": "Identifier",
                                            "name": "arguments"
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "LogicalExpression",
                    "operator": "&&",
                    "left": {
                      "type": "BinaryExpression",
                      "operator": "!==",
                      "left": {
                        "type": "UnaryExpression",
                        "operator": "typeof",
                        "argument": {
                          "type": "Identifier",
                          "name": "module"
                        },
                        "prefix": true
                      },
                      "right": {
                        "type": "Literal",
                        "value": "undefined"
                      }
                    },
                    "right": {
                      "type": "BinaryExpression",
                      "operator": "!==",
                      "left": {
                        "type": "Identifier",
                        "name": "module"
                      },
                      "right": {
                        "type": "Literal",
                        "value": null
                      }
                    }
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "module"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "exports"
                            }
                          },
                          "right": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                              "type": "Identifier",
                              "name": "Bacon"
                            },
                            "right": {
                              "type": "ObjectExpression",
                              "properties": []
                            }
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "Bacon"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "Bacon"
                            }
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "Bacon"
                          }
                        }
                      }
                    ]
                  },
                  "alternate": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "IfStatement",
                        "test": {
                          "type": "LogicalExpression",
                          "operator": "&&",
                          "left": {
                            "type": "BinaryExpression",
                            "operator": "===",
                            "left": {
                              "type": "UnaryExpression",
                              "operator": "typeof",
                              "argument": {
                                "type": "Identifier",
                                "name": "require"
                              },
                              "prefix": true
                            },
                            "right": {
                              "type": "Literal",
                              "value": "function"
                            }
                          },
                          "right": {
                            "type": "BinaryExpression",
                            "operator": "!=",
                            "left": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "require"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "amd"
                              }
                            },
                            "right": {
                              "type": "Literal",
                              "value": null
                            }
                          }
                        },
                        "consequent": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "define"
                                },
                                "arguments": [
                                  {
                                    "type": "Literal",
                                    "value": "bacon"
                                  },
                                  {
                                    "type": "ArrayExpression",
                                    "elements": []
                                  },
                                  {
                                    "type": "FunctionExpression",
                                    "id": null,
                                    "params": [],
                                    "defaults": [],
                                    "body": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "ReturnStatement",
                                          "argument": {
                                            "type": "Identifier",
                                            "name": "Bacon"
                                          }
                                        }
                                      ]
                                    },
                                    "rest": null,
                                    "generator": false,
                                    "expression": false
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "alternate": null
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "ThisExpression"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "Bacon"
                            }
                          },
                          "right": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                              "type": "Identifier",
                              "name": "Bacon"
                            },
                            "right": {
                              "type": "ObjectExpression",
                              "properties": []
                            }
                          }
                        }
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "Bacon"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "fromBinder"
                      }
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "binder"
                        },
                        {
                          "type": "Identifier",
                          "name": "eventTransformer"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "IfStatement",
                            "test": {
                              "type": "BinaryExpression",
                              "operator": "==",
                              "left": {
                                "type": "Identifier",
                                "name": "eventTransformer"
                              },
                              "right": {
                                "type": "Literal",
                                "value": null
                              }
                            },
                            "consequent": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "eventTransformer"
                                    },
                                    "right": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "_"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "id"
                                      }
                                    }
                                  }
                                }
                              ]
                            },
                            "alternate": null
                          },
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "NewExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "EventStream"
                              },
                              "arguments": [
                                {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "sink"
                                    }
                                  ],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "unbinder"
                                            },
                                            "init": null
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "unbinder"
                                          },
                                          "right": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "binder"
                                            },
                                            "arguments": [
                                              {
                                                "type": "FunctionExpression",
                                                "id": null,
                                                "params": [],
                                                "defaults": [],
                                                "body": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "VariableDeclaration",
                                                      "declarations": [
                                                        {
                                                          "type": "VariableDeclarator",
                                                          "id": {
                                                            "type": "Identifier",
                                                            "name": "args"
                                                          },
                                                          "init": null
                                                        },
                                                        {
                                                          "type": "VariableDeclarator",
                                                          "id": {
                                                            "type": "Identifier",
                                                            "name": "event"
                                                          },
                                                          "init": null
                                                        },
                                                        {
                                                          "type": "VariableDeclarator",
                                                          "id": {
                                                            "type": "Identifier",
                                                            "name": "reply"
                                                          },
                                                          "init": null
                                                        },
                                                        {
                                                          "type": "VariableDeclarator",
                                                          "id": {
                                                            "type": "Identifier",
                                                            "name": "value"
                                                          },
                                                          "init": null
                                                        },
                                                        {
                                                          "type": "VariableDeclarator",
                                                          "id": {
                                                            "type": "Identifier",
                                                            "name": "_i"
                                                          },
                                                          "init": null
                                                        },
                                                        {
                                                          "type": "VariableDeclarator",
                                                          "id": {
                                                            "type": "Identifier",
                                                            "name": "_len"
                                                          },
                                                          "init": null
                                                        },
                                                        {
                                                          "type": "VariableDeclarator",
                                                          "id": {
                                                            "type": "Identifier",
                                                            "name": "_results"
                                                          },
                                                          "init": null
                                                        }
                                                      ],
                                                      "kind": "var"
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                          "type": "Identifier",
                                                          "name": "args"
                                                        },
                                                        "right": {
                                                          "type": "ConditionalExpression",
                                                          "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "<=",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": 1
                                                            },
                                                            "right": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "arguments"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "length"
                                                              }
                                                            }
                                                          },
                                                          "consequent": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "__slice"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "call"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "Identifier",
                                                                "name": "arguments"
                                                              },
                                                              {
                                                                "type": "Literal",
                                                                "value": 0
                                                              }
                                                            ]
                                                          },
                                                          "alternate": {
                                                            "type": "ArrayExpression",
                                                            "elements": []
                                                          }
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                          "type": "Identifier",
                                                          "name": "value"
                                                        },
                                                        "right": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "eventTransformer"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "apply"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "Literal",
                                                              "value": null
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "name": "args"
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "type": "IfStatement",
                                                      "test": {
                                                        "type": "UnaryExpression",
                                                        "operator": "!",
                                                        "argument": {
                                                          "type": "LogicalExpression",
                                                          "operator": "&&",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "instanceof",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "value"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "Array"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "BinaryExpression",
                                                            "operator": "instanceof",
                                                            "left": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "_"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "last"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "value"
                                                                }
                                                              ]
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "Event"
                                                            }
                                                          }
                                                        },
                                                        "prefix": true
                                                      },
                                                      "consequent": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "AssignmentExpression",
                                                              "operator": "=",
                                                              "left": {
                                                                "type": "Identifier",
                                                                "name": "value"
                                                              },
                                                              "right": {
                                                                "type": "ArrayExpression",
                                                                "elements": [
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "value"
                                                                  }
                                                                ]
                                                              }
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      "alternate": null
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                          "type": "Identifier",
                                                          "name": "_results"
                                                        },
                                                        "right": {
                                                          "type": "ArrayExpression",
                                                          "elements": []
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "type": "ForStatement",
                                                      "init": {
                                                        "type": "SequenceExpression",
                                                        "expressions": [
                                                          {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "_i"
                                                            },
                                                            "right": {
                                                              "type": "Literal",
                                                              "value": 0
                                                            }
                                                          },
                                                          {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "_len"
                                                            },
                                                            "right": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "value"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "length"
                                                              }
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      "test": {
                                                        "type": "BinaryExpression",
                                                        "operator": "<",
                                                        "left": {
                                                          "type": "Identifier",
                                                          "name": "_i"
                                                        },
                                                        "right": {
                                                          "type": "Identifier",
                                                          "name": "_len"
                                                        }
                                                      },
                                                      "update": {
                                                        "type": "UpdateExpression",
                                                        "operator": "++",
                                                        "argument": {
                                                          "type": "Identifier",
                                                          "name": "_i"
                                                        },
                                                        "prefix": false
                                                      },
                                                      "body": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "AssignmentExpression",
                                                              "operator": "=",
                                                              "left": {
                                                                "type": "Identifier",
                                                                "name": "event"
                                                              },
                                                              "right": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "value"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "_i"
                                                                }
                                                              }
                                                            }
                                                          },
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "AssignmentExpression",
                                                              "operator": "=",
                                                              "left": {
                                                                "type": "Identifier",
                                                                "name": "reply"
                                                              },
                                                              "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "Identifier",
                                                                  "name": "sink"
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                      "type": "Identifier",
                                                                      "name": "event"
                                                                    },
                                                                    "right": {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "Identifier",
                                                                        "name": "toEvent"
                                                                      },
                                                                      "arguments": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "name": "event"
                                                                        }
                                                                      ]
                                                                    }
                                                                  }
                                                                ]
                                                              }
                                                            }
                                                          },
                                                          {
                                                            "type": "IfStatement",
                                                            "test": {
                                                              "type": "LogicalExpression",
                                                              "operator": "||",
                                                              "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": "===",
                                                                "left": {
                                                                  "type": "Identifier",
                                                                  "name": "reply"
                                                                },
                                                                "right": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "Bacon"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "noMore"
                                                                  }
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "event"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "isEnd"
                                                                  }
                                                                },
                                                                "arguments": []
                                                              }
                                                            },
                                                            "consequent": {
                                                              "type": "BlockStatement",
                                                              "body": [
                                                                {
                                                                  "type": "IfStatement",
                                                                  "test": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "!=",
                                                                    "left": {
                                                                      "type": "Identifier",
                                                                      "name": "unbinder"
                                                                    },
                                                                    "right": {
                                                                      "type": "Literal",
                                                                      "value": null
                                                                    }
                                                                  },
                                                                  "consequent": {
                                                                    "type": "BlockStatement",
                                                                    "body": [
                                                                      {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                          "type": "CallExpression",
                                                                          "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "Identifier",
                                                                              "name": "_results"
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "push"
                                                                            }
                                                                          },
                                                                          "arguments": [
                                                                            {
                                                                              "type": "CallExpression",
                                                                              "callee": {
                                                                                "type": "Identifier",
                                                                                "name": "unbinder"
                                                                              },
                                                                              "arguments": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      }
                                                                    ]
                                                                  },
                                                                  "alternate": {
                                                                    "type": "BlockStatement",
                                                                    "body": [
                                                                      {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                          "type": "CallExpression",
                                                                          "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "Identifier",
                                                                              "name": "_results"
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "push"
                                                                            }
                                                                          },
                                                                          "arguments": [
                                                                            {
                                                                              "type": "CallExpression",
                                                                              "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "MemberExpression",
                                                                                  "computed": false,
                                                                                  "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "Bacon"
                                                                                  },
                                                                                  "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "scheduler"
                                                                                  }
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "setTimeout"
                                                                                }
                                                                              },
                                                                              "arguments": [
                                                                                {
                                                                                  "type": "FunctionExpression",
                                                                                  "id": null,
                                                                                  "params": [],
                                                                                  "defaults": [],
                                                                                  "body": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                      {
                                                                                        "type": "ReturnStatement",
                                                                                        "argument": {
                                                                                          "type": "CallExpression",
                                                                                          "callee": {
                                                                                            "type": "Identifier",
                                                                                            "name": "unbinder"
                                                                                          },
                                                                                          "arguments": []
                                                                                        }
                                                                                      }
                                                                                    ]
                                                                                  },
                                                                                  "rest": null,
                                                                                  "generator": false,
                                                                                  "expression": false
                                                                                },
                                                                                {
                                                                                  "type": "Literal",
                                                                                  "value": 0
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        }
                                                                      }
                                                                    ]
                                                                  }
                                                                }
                                                              ]
                                                            },
                                                            "alternate": {
                                                              "type": "BlockStatement",
                                                              "body": [
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "expression": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_results"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "push"
                                                                      }
                                                                    },
                                                                    "arguments": [
                                                                      {
                                                                        "type": "UnaryExpression",
                                                                        "operator": "void",
                                                                        "argument": {
                                                                          "type": "Literal",
                                                                          "value": 0
                                                                        },
                                                                        "prefix": true
                                                                      }
                                                                    ]
                                                                  }
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        ]
                                                      }
                                                    },
                                                    {
                                                      "type": "ReturnStatement",
                                                      "argument": {
                                                        "type": "Identifier",
                                                        "name": "_results"
                                                      }
                                                    }
                                                  ]
                                                },
                                                "rest": null,
                                                "generator": false,
                                                "expression": false
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "Bacon"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "$"
                      }
                    },
                    "right": {
                      "type": "ObjectExpression",
                      "properties": [
                        {
                          "type": "Property",
                          "key": {
                            "type": "Identifier",
                            "name": "asEventStream"
                          },
                          "value": {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [
                              {
                                "type": "Identifier",
                                "name": "eventName"
                              },
                              {
                                "type": "Identifier",
                                "name": "selector"
                              },
                              {
                                "type": "Identifier",
                                "name": "eventTransformer"
                              }
                            ],
                            "defaults": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "VariableDeclaration",
                                  "declarations": [
                                    {
                                      "type": "VariableDeclarator",
                                      "id": {
                                        "type": "Identifier",
                                        "name": "_ref"
                                      },
                                      "init": null
                                    },
                                    {
                                      "type": "VariableDeclarator",
                                      "id": {
                                        "type": "Identifier",
                                        "name": "_this"
                                      },
                                      "init": {
                                        "type": "ThisExpression"
                                      }
                                    }
                                  ],
                                  "kind": "var"
                                },
                                {
                                  "type": "IfStatement",
                                  "test": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "isFunction"
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "selector"
                                      }
                                    ]
                                  },
                                  "consequent": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "SequenceExpression",
                                          "expressions": [
                                            {
                                              "type": "AssignmentExpression",
                                              "operator": "=",
                                              "left": {
                                                "type": "Identifier",
                                                "name": "_ref"
                                              },
                                              "right": {
                                                "type": "ArrayExpression",
                                                "elements": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "selector"
                                                  },
                                                  {
                                                    "type": "Literal",
                                                    "value": null
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "type": "AssignmentExpression",
                                              "operator": "=",
                                              "left": {
                                                "type": "Identifier",
                                                "name": "eventTransformer"
                                              },
                                              "right": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "_ref"
                                                },
                                                "property": {
                                                  "type": "Literal",
                                                  "value": 0
                                                }
                                              }
                                            },
                                            {
                                              "type": "AssignmentExpression",
                                              "operator": "=",
                                              "left": {
                                                "type": "Identifier",
                                                "name": "selector"
                                              },
                                              "right": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "_ref"
                                                },
                                                "property": {
                                                  "type": "Literal",
                                                  "value": 1
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "alternate": null
                                },
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "Bacon"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "fromBinder"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                          {
                                            "type": "Identifier",
                                            "name": "handler"
                                          }
                                        ],
                                        "defaults": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "_this"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "on"
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "eventName"
                                                  },
                                                  {
                                                    "type": "Identifier",
                                                    "name": "selector"
                                                  },
                                                  {
                                                    "type": "Identifier",
                                                    "name": "handler"
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "type": "ReturnStatement",
                                              "argument": {
                                                "type": "FunctionExpression",
                                                "id": null,
                                                "params": [],
                                                "defaults": [],
                                                "body": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "ReturnStatement",
                                                      "argument": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "_this"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "off"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Identifier",
                                                            "name": "eventName"
                                                          },
                                                          {
                                                            "type": "Identifier",
                                                            "name": "selector"
                                                          },
                                                          {
                                                            "type": "Identifier",
                                                            "name": "handler"
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  ]
                                                },
                                                "rest": null,
                                                "generator": false,
                                                "expression": false
                                              }
                                            }
                                          ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                      },
                                      {
                                        "type": "Identifier",
                                        "name": "eventTransformer"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "rest": null,
                            "generator": false,
                            "expression": false
                          },
                          "kind": "init"
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "BinaryExpression",
                    "operator": "!=",
                    "left": {
                      "type": "AssignmentExpression",
                      "operator": "=",
                      "left": {
                        "type": "Identifier",
                        "name": "_ref"
                      },
                      "right": {
                        "type": "ConditionalExpression",
                        "test": {
                          "type": "LogicalExpression",
                          "operator": "&&",
                          "left": {
                            "type": "BinaryExpression",
                            "operator": "!==",
                            "left": {
                              "type": "UnaryExpression",
                              "operator": "typeof",
                              "argument": {
                                "type": "Identifier",
                                "name": "jQuery"
                              },
                              "prefix": true
                            },
                            "right": {
                              "type": "Literal",
                              "value": "undefined"
                            }
                          },
                          "right": {
                            "type": "BinaryExpression",
                            "operator": "!==",
                            "left": {
                              "type": "Identifier",
                              "name": "jQuery"
                            },
                            "right": {
                              "type": "Literal",
                              "value": null
                            }
                          }
                        },
                        "consequent": {
                          "type": "Identifier",
                          "name": "jQuery"
                        },
                        "alternate": {
                          "type": "ConditionalExpression",
                          "test": {
                            "type": "LogicalExpression",
                            "operator": "&&",
                            "left": {
                              "type": "BinaryExpression",
                              "operator": "!==",
                              "left": {
                                "type": "UnaryExpression",
                                "operator": "typeof",
                                "argument": {
                                  "type": "Identifier",
                                  "name": "Zepto"
                                },
                                "prefix": true
                              },
                              "right": {
                                "type": "Literal",
                                "value": "undefined"
                              }
                            },
                            "right": {
                              "type": "BinaryExpression",
                              "operator": "!==",
                              "left": {
                                "type": "Identifier",
                                "name": "Zepto"
                              },
                              "right": {
                                "type": "Literal",
                                "value": null
                              }
                            }
                          },
                          "consequent": {
                            "type": "Identifier",
                            "name": "Zepto"
                          },
                          "alternate": {
                            "type": "Literal",
                            "value": null
                          }
                        }
                      }
                    },
                    "right": {
                      "type": "Literal",
                      "value": null
                    }
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "_ref"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "fn"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "asEventStream"
                            }
                          },
                          "right": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "Bacon"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "$"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "asEventStream"
                            }
                          }
                        }
                      }
                    ]
                  },
                  "alternate": null
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "Bacon"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "fromEventTarget"
                      }
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "target"
                        },
                        {
                          "type": "Identifier",
                          "name": "eventName"
                        },
                        {
                          "type": "Identifier",
                          "name": "eventTransformer"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "VariableDeclaration",
                            "declarations": [
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "sub"
                                },
                                "init": null
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "unsub"
                                },
                                "init": null
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "_ref1"
                                },
                                "init": null
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "_ref2"
                                },
                                "init": null
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "_ref3"
                                },
                                "init": null
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "_ref4"
                                },
                                "init": null
                              }
                            ],
                            "kind": "var"
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "name": "sub"
                              },
                              "right": {
                                "type": "ConditionalExpression",
                                "test": {
                                  "type": "BinaryExpression",
                                  "operator": "!=",
                                  "left": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "_ref1"
                                    },
                                    "right": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "target"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "addEventListener"
                                      }
                                    }
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": null
                                  }
                                },
                                "consequent": {
                                  "type": "Identifier",
                                  "name": "_ref1"
                                },
                                "alternate": {
                                  "type": "ConditionalExpression",
                                  "test": {
                                    "type": "BinaryExpression",
                                    "operator": "!=",
                                    "left": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "_ref2"
                                      },
                                      "right": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "target"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "addListener"
                                        }
                                      }
                                    },
                                    "right": {
                                      "type": "Literal",
                                      "value": null
                                    }
                                  },
                                  "consequent": {
                                    "type": "Identifier",
                                    "name": "_ref2"
                                  },
                                  "alternate": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "target"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "bind"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "name": "unsub"
                              },
                              "right": {
                                "type": "ConditionalExpression",
                                "test": {
                                  "type": "BinaryExpression",
                                  "operator": "!=",
                                  "left": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "_ref3"
                                    },
                                    "right": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "target"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "removeEventListener"
                                      }
                                    }
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": null
                                  }
                                },
                                "consequent": {
                                  "type": "Identifier",
                                  "name": "_ref3"
                                },
                                "alternate": {
                                  "type": "ConditionalExpression",
                                  "test": {
                                    "type": "BinaryExpression",
                                    "operator": "!=",
                                    "left": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "_ref4"
                                      },
                                      "right": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "target"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "removeListener"
                                        }
                                      }
                                    },
                                    "right": {
                                      "type": "Literal",
                                      "value": null
                                    }
                                  },
                                  "consequent": {
                                    "type": "Identifier",
                                    "name": "_ref4"
                                  },
                                  "alternate": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "target"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "unbind"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "Bacon"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "fromBinder"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "handler"
                                    }
                                  ],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "sub"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "call"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Identifier",
                                              "name": "target"
                                            },
                                            {
                                              "type": "Identifier",
                                              "name": "eventName"
                                            },
                                            {
                                              "type": "Identifier",
                                              "name": "handler"
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "FunctionExpression",
                                          "id": null,
                                          "params": [],
                                          "defaults": [],
                                          "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "ReturnStatement",
                                                "argument": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "unsub"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "call"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "target"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "eventName"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "handler"
                                                    }
                                                  ]
                                                }
                                              }
                                            ]
                                          },
                                          "rest": null,
                                          "generator": false,
                                          "expression": false
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                },
                                {
                                  "type": "Identifier",
                                  "name": "eventTransformer"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "Bacon"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "fromPromise"
                      }
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "promise"
                        },
                        {
                          "type": "Identifier",
                          "name": "abort"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "Bacon"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "fromBinder"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "handler"
                                    }
                                  ],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "promise"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "then"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Identifier",
                                              "name": "handler"
                                            },
                                            {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "e"
                                                }
                                              ],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "Identifier",
                                                        "name": "handler"
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "NewExpression",
                                                          "callee": {
                                                            "type": "Identifier",
                                                            "name": "Error"
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "Identifier",
                                                              "name": "e"
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "FunctionExpression",
                                          "id": null,
                                          "params": [],
                                          "defaults": [],
                                          "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "IfStatement",
                                                "test": {
                                                  "type": "Identifier",
                                                  "name": "abort"
                                                },
                                                "consequent": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "ReturnStatement",
                                                      "argument": {
                                                        "type": "ConditionalExpression",
                                                        "test": {
                                                          "type": "BinaryExpression",
                                                          "operator": "===",
                                                          "left": {
                                                            "type": "UnaryExpression",
                                                            "operator": "typeof",
                                                            "argument": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "promise"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "abort"
                                                              }
                                                            },
                                                            "prefix": true
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "function"
                                                          }
                                                        },
                                                        "consequent": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "promise"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "abort"
                                                            }
                                                          },
                                                          "arguments": []
                                                        },
                                                        "alternate": {
                                                          "type": "UnaryExpression",
                                                          "operator": "void",
                                                          "argument": {
                                                            "type": "Literal",
                                                            "value": 0
                                                          },
                                                          "prefix": true
                                                        }
                                                      }
                                                    }
                                                  ]
                                                },
                                                "alternate": null
                                              }
                                            ]
                                          },
                                          "rest": null,
                                          "generator": false,
                                          "expression": false
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                },
                                {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "value"
                                    }
                                  ],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "ArrayExpression",
                                          "elements": [
                                            {
                                              "type": "Identifier",
                                              "name": "value"
                                            },
                                            {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "end"
                                              },
                                              "arguments": []
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "Bacon"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "noMore"
                      }
                    },
                    "right": {
                      "type": "ArrayExpression",
                      "elements": [
                        {
                          "type": "Literal",
                          "value": "<no-more>"
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "Bacon"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "more"
                      }
                    },
                    "right": {
                      "type": "ArrayExpression",
                      "elements": [
                        {
                          "type": "Literal",
                          "value": "<more>"
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "Bacon"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "later"
                      }
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "delay"
                        },
                        {
                          "type": "Identifier",
                          "name": "value"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "Bacon"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "sequentially"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "delay"
                                },
                                {
                                  "type": "ArrayExpression",
                                  "elements": [
                                    {
                                      "type": "Identifier",
                                      "name": "value"
                                    }
                                  ]
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "Bacon"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "sequentially"
                      }
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "delay"
                        },
                        {
                          "type": "Identifier",
                          "name": "values"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "VariableDeclaration",
                            "declarations": [
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "index"
                                },
                                "init": null
                              }
                            ],
                            "kind": "var"
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "name": "index"
                              },
                              "right": {
                                "type": "Literal",
                                "value": 0
                              }
                            }
                          },
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "Bacon"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "fromPoll"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "delay"
                                },
                                {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "value"
                                            },
                                            "init": null
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "value"
                                          },
                                          "right": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "values"
                                            },
                                            "property": {
                                              "type": "UpdateExpression",
                                              "operator": "++",
                                              "argument": {
                                                "type": "Identifier",
                                                "name": "index"
                                              },
                                              "prefix": false
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "IfStatement",
                                        "test": {
                                          "type": "BinaryExpression",
                                          "operator": "<",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "index"
                                          },
                                          "right": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "values"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "length"
                                            }
                                          }
                                        },
                                        "consequent": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ReturnStatement",
                                              "argument": {
                                                "type": "Identifier",
                                                "name": "value"
                                              }
                                            }
                                          ]
                                        },
                                        "alternate": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ReturnStatement",
                                              "argument": {
                                                "type": "ArrayExpression",
                                                "elements": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "value"
                                                  },
                                                  {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "Identifier",
                                                      "name": "end"
                                                    },
                                                    "arguments": []
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "Bacon"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "repeatedly"
                      }
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "delay"
                        },
                        {
                          "type": "Identifier",
                          "name": "values"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "VariableDeclaration",
                            "declarations": [
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "index"
                                },
                                "init": null
                              }
                            ],
                            "kind": "var"
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "name": "index"
                              },
                              "right": {
                                "type": "Literal",
                                "value": 0
                              }
                            }
                          },
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "Bacon"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "fromPoll"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "delay"
                                },
                                {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "MemberExpression",
                                          "computed": true,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "values"
                                          },
                                          "property": {
                                            "type": "BinaryExpression",
                                            "operator": "%",
                                            "left": {
                                              "type": "UpdateExpression",
                                              "operator": "++",
                                              "argument": {
                                                "type": "Identifier",
                                                "name": "index"
                                              },
                                              "prefix": false
                                            },
                                            "right": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "values"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "length"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "liftCallback"
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "wrapped"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "FunctionExpression",
                              "id": null,
                              "params": [],
                              "defaults": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "args"
                                        },
                                        "init": null
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "f"
                                        },
                                        "init": null
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "stream"
                                        },
                                        "init": null
                                      }
                                    ],
                                    "kind": "var"
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "SequenceExpression",
                                      "expressions": [
                                        {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "f"
                                          },
                                          "right": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "arguments"
                                            },
                                            "property": {
                                              "type": "Literal",
                                              "value": 0
                                            }
                                          }
                                        },
                                        {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "args"
                                          },
                                          "right": {
                                            "type": "ConditionalExpression",
                                            "test": {
                                              "type": "BinaryExpression",
                                              "operator": "<=",
                                              "left": {
                                                "type": "Literal",
                                                "value": 2
                                              },
                                              "right": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "arguments"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "length"
                                                }
                                              }
                                            },
                                            "consequent": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "__slice"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "call"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "arguments"
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 1
                                                }
                                              ]
                                            },
                                            "alternate": {
                                              "type": "ArrayExpression",
                                              "elements": []
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "stream"
                                      },
                                      "right": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "Identifier",
                                          "name": "partiallyApplied"
                                        },
                                        "arguments": [
                                          {
                                            "type": "Identifier",
                                            "name": "wrapped"
                                          },
                                          {
                                            "type": "ArrayExpression",
                                            "elements": [
                                              {
                                                "type": "FunctionExpression",
                                                "id": null,
                                                "params": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "values"
                                                  },
                                                  {
                                                    "type": "Identifier",
                                                    "name": "callback"
                                                  }
                                                ],
                                                "defaults": [],
                                                "body": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "ReturnStatement",
                                                      "argument": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "f"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "apply"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Literal",
                                                            "value": null
                                                          },
                                                          {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "__slice"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "call"
                                                                  }
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "values"
                                                                  }
                                                                ]
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "concat"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "ArrayExpression",
                                                                "elements": [
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "callback"
                                                                  }
                                                                ]
                                                              }
                                                            ]
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  ]
                                                },
                                                "rest": null,
                                                "generator": false,
                                                "expression": false
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  {
                                    "type": "ReturnStatement",
                                    "argument": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "Bacon"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "combineAsArray"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Identifier",
                                              "name": "args"
                                            }
                                          ]
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "flatMap"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "Identifier",
                                          "name": "stream"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              },
                              "rest": null,
                              "generator": false,
                              "expression": false
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "Bacon"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "fromCallback"
                      }
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "liftCallback"
                      },
                      "arguments": [
                        {
                          "type": "FunctionExpression",
                          "id": null,
                          "params": [],
                          "defaults": [],
                          "body": {
                            "type": "BlockStatement",
                            "body": [
                              {
                                "type": "VariableDeclaration",
                                "declarations": [
                                  {
                                    "type": "VariableDeclarator",
                                    "id": {
                                      "type": "Identifier",
                                      "name": "args"
                                    },
                                    "init": null
                                  },
                                  {
                                    "type": "VariableDeclarator",
                                    "id": {
                                      "type": "Identifier",
                                      "name": "f"
                                    },
                                    "init": null
                                  }
                                ],
                                "kind": "var"
                              },
                              {
                                "type": "ExpressionStatement",
                                "expression": {
                                  "type": "SequenceExpression",
                                  "expressions": [
                                    {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "f"
                                      },
                                      "right": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "arguments"
                                        },
                                        "property": {
                                          "type": "Literal",
                                          "value": 0
                                        }
                                      }
                                    },
                                    {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "args"
                                      },
                                      "right": {
                                        "type": "ConditionalExpression",
                                        "test": {
                                          "type": "BinaryExpression",
                                          "operator": "<=",
                                          "left": {
                                            "type": "Literal",
                                            "value": 2
                                          },
                                          "right": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "arguments"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "length"
                                            }
                                          }
                                        },
                                        "consequent": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "__slice"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "call"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Identifier",
                                              "name": "arguments"
                                            },
                                            {
                                              "type": "Literal",
                                              "value": 1
                                            }
                                          ]
                                        },
                                        "alternate": {
                                          "type": "ArrayExpression",
                                          "elements": []
                                        }
                                      }
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "ReturnStatement",
                                "argument": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Bacon"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "fromBinder"
                                    }
                                  },
                                  "arguments": [
                                    {
                                      "type": "FunctionExpression",
                                      "id": null,
                                      "params": [
                                        {
                                          "type": "Identifier",
                                          "name": "handler"
                                        }
                                      ],
                                      "defaults": [],
                                      "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "Identifier",
                                                  "name": "makeFunction"
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "f"
                                                  },
                                                  {
                                                    "type": "Identifier",
                                                    "name": "args"
                                                  }
                                                ]
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "handler"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "ReturnStatement",
                                            "argument": {
                                              "type": "Identifier",
                                              "name": "nop"
                                            }
                                          }
                                        ]
                                      },
                                      "rest": null,
                                      "generator": false,
                                      "expression": false
                                    },
                                    {
                                      "type": "FunctionExpression",
                                      "id": null,
                                      "params": [
                                        {
                                          "type": "Identifier",
                                          "name": "value"
                                        }
                                      ],
                                      "defaults": [],
                                      "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "ReturnStatement",
                                            "argument": {
                                              "type": "ArrayExpression",
                                              "elements": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "value"
                                                },
                                                {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "Identifier",
                                                    "name": "end"
                                                  },
                                                  "arguments": []
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      },
                                      "rest": null,
                                      "generator": false,
                                      "expression": false
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          "rest": null,
                          "generator": false,
                          "expression": false
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "Bacon"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "fromNodeCallback"
                      }
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "liftCallback"
                      },
                      "arguments": [
                        {
                          "type": "FunctionExpression",
                          "id": null,
                          "params": [],
                          "defaults": [],
                          "body": {
                            "type": "BlockStatement",
                            "body": [
                              {
                                "type": "VariableDeclaration",
                                "declarations": [
                                  {
                                    "type": "VariableDeclarator",
                                    "id": {
                                      "type": "Identifier",
                                      "name": "args"
                                    },
                                    "init": null
                                  },
                                  {
                                    "type": "VariableDeclarator",
                                    "id": {
                                      "type": "Identifier",
                                      "name": "f"
                                    },
                                    "init": null
                                  }
                                ],
                                "kind": "var"
                              },
                              {
                                "type": "ExpressionStatement",
                                "expression": {
                                  "type": "SequenceExpression",
                                  "expressions": [
                                    {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "f"
                                      },
                                      "right": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "arguments"
                                        },
                                        "property": {
                                          "type": "Literal",
                                          "value": 0
                                        }
                                      }
                                    },
                                    {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "args"
                                      },
                                      "right": {
                                        "type": "ConditionalExpression",
                                        "test": {
                                          "type": "BinaryExpression",
                                          "operator": "<=",
                                          "left": {
                                            "type": "Literal",
                                            "value": 2
                                          },
                                          "right": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "arguments"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "length"
                                            }
                                          }
                                        },
                                        "consequent": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "__slice"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "call"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Identifier",
                                              "name": "arguments"
                                            },
                                            {
                                              "type": "Literal",
                                              "value": 1
                                            }
                                          ]
                                        },
                                        "alternate": {
                                          "type": "ArrayExpression",
                                          "elements": []
                                        }
                                      }
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "ReturnStatement",
                                "argument": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Bacon"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "fromBinder"
                                    }
                                  },
                                  "arguments": [
                                    {
                                      "type": "FunctionExpression",
                                      "id": null,
                                      "params": [
                                        {
                                          "type": "Identifier",
                                          "name": "handler"
                                        }
                                      ],
                                      "defaults": [],
                                      "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "Identifier",
                                                  "name": "makeFunction"
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "f"
                                                  },
                                                  {
                                                    "type": "Identifier",
                                                    "name": "args"
                                                  }
                                                ]
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "handler"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "ReturnStatement",
                                            "argument": {
                                              "type": "Identifier",
                                              "name": "nop"
                                            }
                                          }
                                        ]
                                      },
                                      "rest": null,
                                      "generator": false,
                                      "expression": false
                                    },
                                    {
                                      "type": "FunctionExpression",
                                      "id": null,
                                      "params": [
                                        {
                                          "type": "Identifier",
                                          "name": "error"
                                        },
                                        {
                                          "type": "Identifier",
                                          "name": "value"
                                        }
                                      ],
                                      "defaults": [],
                                      "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "IfStatement",
                                            "test": {
                                              "type": "Identifier",
                                              "name": "error"
                                            },
                                            "consequent": {
                                              "type": "BlockStatement",
                                              "body": [
                                                {
                                                  "type": "ReturnStatement",
                                                  "argument": {
                                                    "type": "ArrayExpression",
                                                    "elements": [
                                                      {
                                                        "type": "NewExpression",
                                                        "callee": {
                                                          "type": "Identifier",
                                                          "name": "Error"
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Identifier",
                                                            "name": "error"
                                                          }
                                                        ]
                                                      },
                                                      {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "Identifier",
                                                          "name": "end"
                                                        },
                                                        "arguments": []
                                                      }
                                                    ]
                                                  }
                                                }
                                              ]
                                            },
                                            "alternate": null
                                          },
                                          {
                                            "type": "ReturnStatement",
                                            "argument": {
                                              "type": "ArrayExpression",
                                              "elements": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "value"
                                                },
                                                {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "Identifier",
                                                    "name": "end"
                                                  },
                                                  "arguments": []
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      },
                                      "rest": null,
                                      "generator": false,
                                      "expression": false
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          "rest": null,
                          "generator": false,
                          "expression": false
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "Bacon"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "fromPoll"
                      }
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "delay"
                        },
                        {
                          "type": "Identifier",
                          "name": "poll"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "Bacon"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "fromBinder"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "handler"
                                    }
                                  ],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "id"
                                            },
                                            "init": null
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "id"
                                          },
                                          "right": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "Bacon"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "scheduler"
                                                }
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "setInterval"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "Identifier",
                                                "name": "handler"
                                              },
                                              {
                                                "type": "Identifier",
                                                "name": "delay"
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "FunctionExpression",
                                          "id": null,
                                          "params": [],
                                          "defaults": [],
                                          "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "ReturnStatement",
                                                "argument": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "Bacon"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "scheduler"
                                                      }
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "clearInterval"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "id"
                                                    }
                                                  ]
                                                }
                                              }
                                            ]
                                          },
                                          "rest": null,
                                          "generator": false,
                                          "expression": false
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                },
                                {
                                  "type": "Identifier",
                                  "name": "poll"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "Bacon"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "interval"
                      }
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "delay"
                        },
                        {
                          "type": "Identifier",
                          "name": "value"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "IfStatement",
                            "test": {
                              "type": "BinaryExpression",
                              "operator": "==",
                              "left": {
                                "type": "Identifier",
                                "name": "value"
                              },
                              "right": {
                                "type": "Literal",
                                "value": null
                              }
                            },
                            "consequent": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "value"
                                    },
                                    "right": {
                                      "type": "ObjectExpression",
                                      "properties": []
                                    }
                                  }
                                }
                              ]
                            },
                            "alternate": null
                          },
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "Bacon"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "fromPoll"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "delay"
                                },
                                {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "Identifier",
                                            "name": "next"
                                          },
                                          "arguments": [
                                            {
                                              "type": "Identifier",
                                              "name": "value"
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "Bacon"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "constant"
                      }
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "value"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "NewExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "Property"
                              },
                              "arguments": [
                                {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "Identifier",
                                    "name": "sendWrapped"
                                  },
                                  "arguments": [
                                    {
                                      "type": "ArrayExpression",
                                      "elements": [
                                        {
                                          "type": "Identifier",
                                          "name": "value"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "name": "initial"
                                    }
                                  ]
                                },
                                {
                                  "type": "Literal",
                                  "value": true
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "Bacon"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "never"
                      }
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "Bacon"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "fromArray"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "ArrayExpression",
                                  "elements": []
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "Bacon"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "once"
                      }
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "value"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "Bacon"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "fromArray"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "ArrayExpression",
                                  "elements": [
                                    {
                                      "type": "Identifier",
                                      "name": "value"
                                    }
                                  ]
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "Bacon"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "fromArray"
                      }
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "values"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "NewExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "EventStream"
                              },
                              "arguments": [
                                {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "Identifier",
                                    "name": "sendWrapped"
                                  },
                                  "arguments": [
                                    {
                                      "type": "Identifier",
                                      "name": "values"
                                    },
                                    {
                                      "type": "Identifier",
                                      "name": "toEvent"
                                    }
                                  ]
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "sendWrapped"
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "values"
                        },
                        {
                          "type": "Identifier",
                          "name": "wrapper"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "FunctionExpression",
                              "id": null,
                              "params": [
                                {
                                  "type": "Identifier",
                                  "name": "sink"
                                }
                              ],
                              "defaults": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "value"
                                        },
                                        "init": null
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "_i"
                                        },
                                        "init": null
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "_len"
                                        },
                                        "init": null
                                      }
                                    ],
                                    "kind": "var"
                                  },
                                  {
                                    "type": "ForStatement",
                                    "init": {
                                      "type": "SequenceExpression",
                                      "expressions": [
                                        {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "_i"
                                          },
                                          "right": {
                                            "type": "Literal",
                                            "value": 0
                                          }
                                        },
                                        {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "_len"
                                          },
                                          "right": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "values"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "length"
                                            }
                                          }
                                        }
                                      ]
                                    },
                                    "test": {
                                      "type": "BinaryExpression",
                                      "operator": "<",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "_i"
                                      },
                                      "right": {
                                        "type": "Identifier",
                                        "name": "_len"
                                      }
                                    },
                                    "update": {
                                      "type": "UpdateExpression",
                                      "operator": "++",
                                      "argument": {
                                        "type": "Identifier",
                                        "name": "_i"
                                      },
                                      "prefix": false
                                    },
                                    "body": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "value"
                                            },
                                            "right": {
                                              "type": "MemberExpression",
                                              "computed": true,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "values"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "_i"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "sink"
                                            },
                                            "arguments": [
                                              {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "Identifier",
                                                  "name": "wrapper"
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "value"
                                                  }
                                                ]
                                              }
                                            ]
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "sink"
                                      },
                                      "arguments": [
                                        {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "Identifier",
                                            "name": "end"
                                          },
                                          "arguments": []
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "ReturnStatement",
                                    "argument": {
                                      "type": "Identifier",
                                      "name": "nop"
                                    }
                                  }
                                ]
                              },
                              "rest": null,
                              "generator": false,
                              "expression": false
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "Bacon"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "mergeAll"
                      }
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "streams"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "VariableDeclaration",
                            "declarations": [
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "next"
                                },
                                "init": null
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "stream"
                                },
                                "init": null
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "_i"
                                },
                                "init": null
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "_len"
                                },
                                "init": null
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "_ref1"
                                },
                                "init": null
                              }
                            ],
                            "kind": "var"
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "assertArray"
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "streams"
                                }
                              ]
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "name": "stream"
                              },
                              "right": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "_"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "head"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "streams"
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "name": "_ref1"
                              },
                              "right": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "_"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "tail"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "streams"
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "type": "ForStatement",
                            "init": {
                              "type": "SequenceExpression",
                              "expressions": [
                                {
                                  "type": "AssignmentExpression",
                                  "operator": "=",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "_i"
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": 0
                                  }
                                },
                                {
                                  "type": "AssignmentExpression",
                                  "operator": "=",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "_len"
                                  },
                                  "right": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "_ref1"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "length"
                                    }
                                  }
                                }
                              ]
                            },
                            "test": {
                              "type": "BinaryExpression",
                              "operator": "<",
                              "left": {
                                "type": "Identifier",
                                "name": "_i"
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "_len"
                              }
                            },
                            "update": {
                              "type": "UpdateExpression",
                              "operator": "++",
                              "argument": {
                                "type": "Identifier",
                                "name": "_i"
                              },
                              "prefix": false
                            },
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "next"
                                    },
                                    "right": {
                                      "type": "MemberExpression",
                                      "computed": true,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "_ref1"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "_i"
                                      }
                                    }
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "stream"
                                    },
                                    "right": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "stream"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "merge"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "Identifier",
                                          "name": "next"
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "Identifier",
                              "name": "stream"
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "Bacon"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "zipAsArray"
                      }
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "VariableDeclaration",
                            "declarations": [
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "more"
                                },
                                "init": null
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "streams"
                                },
                                "init": null
                              }
                            ],
                            "kind": "var"
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "SequenceExpression",
                              "expressions": [
                                {
                                  "type": "AssignmentExpression",
                                  "operator": "=",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "streams"
                                  },
                                  "right": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "arguments"
                                    },
                                    "property": {
                                      "type": "Literal",
                                      "value": 0
                                    }
                                  }
                                },
                                {
                                  "type": "AssignmentExpression",
                                  "operator": "=",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "more"
                                  },
                                  "right": {
                                    "type": "ConditionalExpression",
                                    "test": {
                                      "type": "BinaryExpression",
                                      "operator": "<=",
                                      "left": {
                                        "type": "Literal",
                                        "value": 2
                                      },
                                      "right": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "arguments"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "length"
                                        }
                                      }
                                    },
                                    "consequent": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "__slice"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "call"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "Identifier",
                                          "name": "arguments"
                                        },
                                        {
                                          "type": "Literal",
                                          "value": 1
                                        }
                                      ]
                                    },
                                    "alternate": {
                                      "type": "ArrayExpression",
                                      "elements": []
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "type": "IfStatement",
                            "test": {
                              "type": "UnaryExpression",
                              "operator": "!",
                              "argument": {
                                "type": "BinaryExpression",
                                "operator": "instanceof",
                                "left": {
                                  "type": "Identifier",
                                  "name": "streams"
                                },
                                "right": {
                                  "type": "Identifier",
                                  "name": "Array"
                                }
                              },
                              "prefix": true
                            },
                            "consequent": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "streams"
                                    },
                                    "right": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "ArrayExpression",
                                          "elements": [
                                            {
                                              "type": "Identifier",
                                              "name": "streams"
                                            }
                                          ]
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "concat"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "Identifier",
                                          "name": "more"
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            },
                            "alternate": null
                          },
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "Bacon"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "zipWith"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "streams"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "Array"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "Bacon"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "zipWith"
                      }
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "streams"
                        },
                        {
                          "type": "Identifier",
                          "name": "f"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "NewExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "EventStream"
                              },
                              "arguments": [
                                {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "sink"
                                    }
                                  ],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "bufs"
                                            },
                                            "init": null
                                          },
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "handle"
                                            },
                                            "init": null
                                          },
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "j"
                                            },
                                            "init": null
                                          },
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "s"
                                            },
                                            "init": null
                                          },
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "unsubAll"
                                            },
                                            "init": null
                                          },
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "unsubs"
                                            },
                                            "init": null
                                          },
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "unsubscribed"
                                            },
                                            "init": null
                                          },
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "zipSink"
                                            },
                                            "init": null
                                          },
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "_i"
                                            },
                                            "init": null
                                          },
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "_len"
                                            },
                                            "init": null
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "bufs"
                                          },
                                          "right": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                      {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                          "type": "Identifier",
                                                          "name": "_i"
                                                        },
                                                        "init": null
                                                      },
                                                      {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                          "type": "Identifier",
                                                          "name": "_len"
                                                        },
                                                        "init": null
                                                      },
                                                      {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                          "type": "Identifier",
                                                          "name": "_results"
                                                        },
                                                        "init": null
                                                      }
                                                    ],
                                                    "kind": "var"
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "_results"
                                                      },
                                                      "right": {
                                                        "type": "ArrayExpression",
                                                        "elements": []
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ForStatement",
                                                    "init": {
                                                      "type": "SequenceExpression",
                                                      "expressions": [
                                                        {
                                                          "type": "AssignmentExpression",
                                                          "operator": "=",
                                                          "left": {
                                                            "type": "Identifier",
                                                            "name": "_i"
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": 0
                                                          }
                                                        },
                                                        {
                                                          "type": "AssignmentExpression",
                                                          "operator": "=",
                                                          "left": {
                                                            "type": "Identifier",
                                                            "name": "_len"
                                                          },
                                                          "right": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "streams"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "length"
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "test": {
                                                      "type": "BinaryExpression",
                                                      "operator": "<",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "_i"
                                                      },
                                                      "right": {
                                                        "type": "Identifier",
                                                        "name": "_len"
                                                      }
                                                    },
                                                    "update": {
                                                      "type": "UpdateExpression",
                                                      "operator": "++",
                                                      "argument": {
                                                        "type": "Identifier",
                                                        "name": "_i"
                                                      },
                                                      "prefix": false
                                                    },
                                                    "body": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "s"
                                                            },
                                                            "right": {
                                                              "type": "MemberExpression",
                                                              "computed": true,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "streams"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "_i"
                                                              }
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "_results"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "push"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "ArrayExpression",
                                                                "elements": []
                                                              }
                                                            ]
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                      "type": "Identifier",
                                                      "name": "_results"
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            },
                                            "arguments": []
                                          }
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "unsubscribed"
                                          },
                                          "right": {
                                            "type": "Literal",
                                            "value": false
                                          }
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "unsubs"
                                          },
                                          "right": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                      {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                          "type": "Identifier",
                                                          "name": "_i"
                                                        },
                                                        "init": null
                                                      },
                                                      {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                          "type": "Identifier",
                                                          "name": "_len"
                                                        },
                                                        "init": null
                                                      },
                                                      {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                          "type": "Identifier",
                                                          "name": "_results"
                                                        },
                                                        "init": null
                                                      }
                                                    ],
                                                    "kind": "var"
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "_results"
                                                      },
                                                      "right": {
                                                        "type": "ArrayExpression",
                                                        "elements": []
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ForStatement",
                                                    "init": {
                                                      "type": "SequenceExpression",
                                                      "expressions": [
                                                        {
                                                          "type": "AssignmentExpression",
                                                          "operator": "=",
                                                          "left": {
                                                            "type": "Identifier",
                                                            "name": "_i"
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": 0
                                                          }
                                                        },
                                                        {
                                                          "type": "AssignmentExpression",
                                                          "operator": "=",
                                                          "left": {
                                                            "type": "Identifier",
                                                            "name": "_len"
                                                          },
                                                          "right": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "streams"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "length"
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "test": {
                                                      "type": "BinaryExpression",
                                                      "operator": "<",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "_i"
                                                      },
                                                      "right": {
                                                        "type": "Identifier",
                                                        "name": "_len"
                                                      }
                                                    },
                                                    "update": {
                                                      "type": "UpdateExpression",
                                                      "operator": "++",
                                                      "argument": {
                                                        "type": "Identifier",
                                                        "name": "_i"
                                                      },
                                                      "prefix": false
                                                    },
                                                    "body": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "s"
                                                            },
                                                            "right": {
                                                              "type": "MemberExpression",
                                                              "computed": true,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "streams"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "_i"
                                                              }
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "_results"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "push"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "Identifier",
                                                                "name": "nop"
                                                              }
                                                            ]
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                      "type": "Identifier",
                                                      "name": "_results"
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            },
                                            "arguments": []
                                          }
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "unsubAll"
                                          },
                                          "right": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [],
                                            "defaults": [],
                                            "body": {
                                              "type": "BlockStatement",
                                              "body": [
                                                {
                                                  "type": "VariableDeclaration",
                                                  "declarations": [
                                                    {
                                                      "type": "VariableDeclarator",
                                                      "id": {
                                                        "type": "Identifier",
                                                        "name": "_i"
                                                      },
                                                      "init": null
                                                    },
                                                    {
                                                      "type": "VariableDeclarator",
                                                      "id": {
                                                        "type": "Identifier",
                                                        "name": "_len"
                                                      },
                                                      "init": null
                                                    }
                                                  ],
                                                  "kind": "var"
                                                },
                                                {
                                                  "type": "ForStatement",
                                                  "init": {
                                                    "type": "SequenceExpression",
                                                    "expressions": [
                                                      {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                          "type": "Identifier",
                                                          "name": "_i"
                                                        },
                                                        "right": {
                                                          "type": "Literal",
                                                          "value": 0
                                                        }
                                                      },
                                                      {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                          "type": "Identifier",
                                                          "name": "_len"
                                                        },
                                                        "right": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "unsubs"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "length"
                                                          }
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "test": {
                                                    "type": "BinaryExpression",
                                                    "operator": "<",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "_i"
                                                    },
                                                    "right": {
                                                      "type": "Identifier",
                                                      "name": "_len"
                                                    }
                                                  },
                                                  "update": {
                                                    "type": "UpdateExpression",
                                                    "operator": "++",
                                                    "argument": {
                                                      "type": "Identifier",
                                                      "name": "_i"
                                                    },
                                                    "prefix": false
                                                  },
                                                  "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "AssignmentExpression",
                                                          "operator": "=",
                                                          "left": {
                                                            "type": "Identifier",
                                                            "name": "f"
                                                          },
                                                          "right": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "unsubs"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "_i"
                                                            }
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "Identifier",
                                                            "name": "f"
                                                          },
                                                          "arguments": []
                                                        }
                                                      }
                                                    ]
                                                  }
                                                },
                                                {
                                                  "type": "ReturnStatement",
                                                  "argument": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "unsubscribed"
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": true
                                                    }
                                                  }
                                                }
                                              ]
                                            },
                                            "rest": null,
                                            "generator": false,
                                            "expression": false
                                          }
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "zipSink"
                                          },
                                          "right": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                              {
                                                "type": "Identifier",
                                                "name": "e"
                                              }
                                            ],
                                            "defaults": [],
                                            "body": {
                                              "type": "BlockStatement",
                                              "body": [
                                                {
                                                  "type": "VariableDeclaration",
                                                  "declarations": [
                                                    {
                                                      "type": "VariableDeclarator",
                                                      "id": {
                                                        "type": "Identifier",
                                                        "name": "reply"
                                                      },
                                                      "init": null
                                                    }
                                                  ],
                                                  "kind": "var"
                                                },
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "reply"
                                                    },
                                                    "right": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "Identifier",
                                                        "name": "sink"
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "e"
                                                        }
                                                      ]
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "IfStatement",
                                                  "test": {
                                                    "type": "LogicalExpression",
                                                    "operator": "||",
                                                    "left": {
                                                      "type": "BinaryExpression",
                                                      "operator": "===",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "reply"
                                                      },
                                                      "right": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "Bacon"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "noMore"
                                                        }
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "e"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "isEnd"
                                                        }
                                                      },
                                                      "arguments": []
                                                    }
                                                  },
                                                  "consequent": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "Identifier",
                                                            "name": "unsubAll"
                                                          },
                                                          "arguments": []
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "alternate": null
                                                },
                                                {
                                                  "type": "ReturnStatement",
                                                  "argument": {
                                                    "type": "Identifier",
                                                    "name": "reply"
                                                  }
                                                }
                                              ]
                                            },
                                            "rest": null,
                                            "generator": false,
                                            "expression": false
                                          }
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "handle"
                                          },
                                          "right": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                              {
                                                "type": "Identifier",
                                                "name": "i"
                                              }
                                            ],
                                            "defaults": [],
                                            "body": {
                                              "type": "BlockStatement",
                                              "body": [
                                                {
                                                  "type": "ReturnStatement",
                                                  "argument": {
                                                    "type": "FunctionExpression",
                                                    "id": null,
                                                    "params": [
                                                      {
                                                        "type": "Identifier",
                                                        "name": "e"
                                                      }
                                                    ],
                                                    "defaults": [],
                                                    "body": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "VariableDeclaration",
                                                          "declarations": [
                                                            {
                                                              "type": "VariableDeclarator",
                                                              "id": {
                                                                "type": "Identifier",
                                                                "name": "b"
                                                              },
                                                              "init": null
                                                            },
                                                            {
                                                              "type": "VariableDeclarator",
                                                              "id": {
                                                                "type": "Identifier",
                                                                "name": "reply"
                                                              },
                                                              "init": null
                                                            },
                                                            {
                                                              "type": "VariableDeclarator",
                                                              "id": {
                                                                "type": "Identifier",
                                                                "name": "vs"
                                                              },
                                                              "init": null
                                                            }
                                                          ],
                                                          "kind": "var"
                                                        },
                                                        {
                                                          "type": "IfStatement",
                                                          "test": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "e"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "isError"
                                                              }
                                                            },
                                                            "arguments": []
                                                          },
                                                          "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                              {
                                                                "type": "ReturnStatement",
                                                                "argument": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "zipSink"
                                                                  },
                                                                  "arguments": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "name": "e"
                                                                    }
                                                                  ]
                                                                }
                                                              }
                                                            ]
                                                          },
                                                          "alternate": {
                                                            "type": "IfStatement",
                                                            "test": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "e"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "isInitial"
                                                                }
                                                              },
                                                              "arguments": []
                                                            },
                                                            "consequent": {
                                                              "type": "BlockStatement",
                                                              "body": [
                                                                {
                                                                  "type": "ReturnStatement",
                                                                  "argument": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "Bacon"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "more"
                                                                    }
                                                                  }
                                                                }
                                                              ]
                                                            },
                                                            "alternate": {
                                                              "type": "BlockStatement",
                                                              "body": [
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "expression": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "bufs"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "i"
                                                                        }
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "push"
                                                                      }
                                                                    },
                                                                    "arguments": [
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "e"
                                                                      }
                                                                    ]
                                                                  }
                                                                },
                                                                {
                                                                  "type": "IfStatement",
                                                                  "test": {
                                                                    "type": "LogicalExpression",
                                                                    "operator": "&&",
                                                                    "left": {
                                                                      "type": "UnaryExpression",
                                                                      "operator": "!",
                                                                      "argument": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "e"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "isEnd"
                                                                          }
                                                                        },
                                                                        "arguments": []
                                                                      },
                                                                      "prefix": true
                                                                    },
                                                                    "right": {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "_"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "all"
                                                                        }
                                                                      },
                                                                      "arguments": [
                                                                        {
                                                                          "type": "CallExpression",
                                                                          "callee": {
                                                                            "type": "FunctionExpression",
                                                                            "id": null,
                                                                            "params": [],
                                                                            "defaults": [],
                                                                            "body": {
                                                                              "type": "BlockStatement",
                                                                              "body": [
                                                                                {
                                                                                  "type": "VariableDeclaration",
                                                                                  "declarations": [
                                                                                    {
                                                                                      "type": "VariableDeclarator",
                                                                                      "id": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_i"
                                                                                      },
                                                                                      "init": null
                                                                                    },
                                                                                    {
                                                                                      "type": "VariableDeclarator",
                                                                                      "id": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_len"
                                                                                      },
                                                                                      "init": null
                                                                                    },
                                                                                    {
                                                                                      "type": "VariableDeclarator",
                                                                                      "id": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_results"
                                                                                      },
                                                                                      "init": null
                                                                                    }
                                                                                  ],
                                                                                  "kind": "var"
                                                                                },
                                                                                {
                                                                                  "type": "ExpressionStatement",
                                                                                  "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                      "type": "Identifier",
                                                                                      "name": "_results"
                                                                                    },
                                                                                    "right": {
                                                                                      "type": "ArrayExpression",
                                                                                      "elements": []
                                                                                    }
                                                                                  }
                                                                                },
                                                                                {
                                                                                  "type": "ForStatement",
                                                                                  "init": {
                                                                                    "type": "SequenceExpression",
                                                                                    "expressions": [
                                                                                      {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "=",
                                                                                        "left": {
                                                                                          "type": "Identifier",
                                                                                          "name": "_i"
                                                                                        },
                                                                                        "right": {
                                                                                          "type": "Literal",
                                                                                          "value": 0
                                                                                        }
                                                                                      },
                                                                                      {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "=",
                                                                                        "left": {
                                                                                          "type": "Identifier",
                                                                                          "name": "_len"
                                                                                        },
                                                                                        "right": {
                                                                                          "type": "MemberExpression",
                                                                                          "computed": false,
                                                                                          "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "bufs"
                                                                                          },
                                                                                          "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "length"
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    ]
                                                                                  },
                                                                                  "test": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "<",
                                                                                    "left": {
                                                                                      "type": "Identifier",
                                                                                      "name": "_i"
                                                                                    },
                                                                                    "right": {
                                                                                      "type": "Identifier",
                                                                                      "name": "_len"
                                                                                    }
                                                                                  },
                                                                                  "update": {
                                                                                    "type": "UpdateExpression",
                                                                                    "operator": "++",
                                                                                    "argument": {
                                                                                      "type": "Identifier",
                                                                                      "name": "_i"
                                                                                    },
                                                                                    "prefix": false
                                                                                  },
                                                                                  "body": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                      {
                                                                                        "type": "ExpressionStatement",
                                                                                        "expression": {
                                                                                          "type": "AssignmentExpression",
                                                                                          "operator": "=",
                                                                                          "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "b"
                                                                                          },
                                                                                          "right": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                              "type": "Identifier",
                                                                                              "name": "bufs"
                                                                                            },
                                                                                            "property": {
                                                                                              "type": "Identifier",
                                                                                              "name": "_i"
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      },
                                                                                      {
                                                                                        "type": "ExpressionStatement",
                                                                                        "expression": {
                                                                                          "type": "CallExpression",
                                                                                          "callee": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                              "type": "Identifier",
                                                                                              "name": "_results"
                                                                                            },
                                                                                            "property": {
                                                                                              "type": "Identifier",
                                                                                              "name": "push"
                                                                                            }
                                                                                          },
                                                                                          "arguments": [
                                                                                            {
                                                                                              "type": "MemberExpression",
                                                                                              "computed": false,
                                                                                              "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "b"
                                                                                              },
                                                                                              "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "length"
                                                                                              }
                                                                                            }
                                                                                          ]
                                                                                        }
                                                                                      }
                                                                                    ]
                                                                                  }
                                                                                },
                                                                                {
                                                                                  "type": "ReturnStatement",
                                                                                  "argument": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_results"
                                                                                  }
                                                                                }
                                                                              ]
                                                                            },
                                                                            "rest": null,
                                                                            "generator": false,
                                                                            "expression": false
                                                                          },
                                                                          "arguments": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  },
                                                                  "consequent": {
                                                                    "type": "BlockStatement",
                                                                    "body": [
                                                                      {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                          "type": "AssignmentExpression",
                                                                          "operator": "=",
                                                                          "left": {
                                                                            "type": "Identifier",
                                                                            "name": "vs"
                                                                          },
                                                                          "right": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                              "type": "FunctionExpression",
                                                                              "id": null,
                                                                              "params": [],
                                                                              "defaults": [],
                                                                              "body": {
                                                                                "type": "BlockStatement",
                                                                                "body": [
                                                                                  {
                                                                                    "type": "VariableDeclaration",
                                                                                    "declarations": [
                                                                                      {
                                                                                        "type": "VariableDeclarator",
                                                                                        "id": {
                                                                                          "type": "Identifier",
                                                                                          "name": "_i"
                                                                                        },
                                                                                        "init": null
                                                                                      },
                                                                                      {
                                                                                        "type": "VariableDeclarator",
                                                                                        "id": {
                                                                                          "type": "Identifier",
                                                                                          "name": "_len"
                                                                                        },
                                                                                        "init": null
                                                                                      },
                                                                                      {
                                                                                        "type": "VariableDeclarator",
                                                                                        "id": {
                                                                                          "type": "Identifier",
                                                                                          "name": "_results"
                                                                                        },
                                                                                        "init": null
                                                                                      }
                                                                                    ],
                                                                                    "kind": "var"
                                                                                  },
                                                                                  {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                      "type": "AssignmentExpression",
                                                                                      "operator": "=",
                                                                                      "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_results"
                                                                                      },
                                                                                      "right": {
                                                                                        "type": "ArrayExpression",
                                                                                        "elements": []
                                                                                      }
                                                                                    }
                                                                                  },
                                                                                  {
                                                                                    "type": "ForStatement",
                                                                                    "init": {
                                                                                      "type": "SequenceExpression",
                                                                                      "expressions": [
                                                                                        {
                                                                                          "type": "AssignmentExpression",
                                                                                          "operator": "=",
                                                                                          "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_i"
                                                                                          },
                                                                                          "right": {
                                                                                            "type": "Literal",
                                                                                            "value": 0
                                                                                          }
                                                                                        },
                                                                                        {
                                                                                          "type": "AssignmentExpression",
                                                                                          "operator": "=",
                                                                                          "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_len"
                                                                                          },
                                                                                          "right": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                              "type": "Identifier",
                                                                                              "name": "bufs"
                                                                                            },
                                                                                            "property": {
                                                                                              "type": "Identifier",
                                                                                              "name": "length"
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      ]
                                                                                    },
                                                                                    "test": {
                                                                                      "type": "BinaryExpression",
                                                                                      "operator": "<",
                                                                                      "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_i"
                                                                                      },
                                                                                      "right": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_len"
                                                                                      }
                                                                                    },
                                                                                    "update": {
                                                                                      "type": "UpdateExpression",
                                                                                      "operator": "++",
                                                                                      "argument": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_i"
                                                                                      },
                                                                                      "prefix": false
                                                                                    },
                                                                                    "body": {
                                                                                      "type": "BlockStatement",
                                                                                      "body": [
                                                                                        {
                                                                                          "type": "ExpressionStatement",
                                                                                          "expression": {
                                                                                            "type": "AssignmentExpression",
                                                                                            "operator": "=",
                                                                                            "left": {
                                                                                              "type": "Identifier",
                                                                                              "name": "b"
                                                                                            },
                                                                                            "right": {
                                                                                              "type": "MemberExpression",
                                                                                              "computed": true,
                                                                                              "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "bufs"
                                                                                              },
                                                                                              "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_i"
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        },
                                                                                        {
                                                                                          "type": "ExpressionStatement",
                                                                                          "expression": {
                                                                                            "type": "CallExpression",
                                                                                            "callee": {
                                                                                              "type": "MemberExpression",
                                                                                              "computed": false,
                                                                                              "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_results"
                                                                                              },
                                                                                              "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "push"
                                                                                              }
                                                                                            },
                                                                                            "arguments": [
                                                                                              {
                                                                                                "type": "CallExpression",
                                                                                                "callee": {
                                                                                                  "type": "MemberExpression",
                                                                                                  "computed": false,
                                                                                                  "object": {
                                                                                                    "type": "CallExpression",
                                                                                                    "callee": {
                                                                                                      "type": "MemberExpression",
                                                                                                      "computed": false,
                                                                                                      "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "b"
                                                                                                      },
                                                                                                      "property": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "shift"
                                                                                                      }
                                                                                                    },
                                                                                                    "arguments": []
                                                                                                  },
                                                                                                  "property": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "value"
                                                                                                  }
                                                                                                },
                                                                                                "arguments": []
                                                                                              }
                                                                                            ]
                                                                                          }
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  },
                                                                                  {
                                                                                    "type": "ReturnStatement",
                                                                                    "argument": {
                                                                                      "type": "Identifier",
                                                                                      "name": "_results"
                                                                                    }
                                                                                  }
                                                                                ]
                                                                              },
                                                                              "rest": null,
                                                                              "generator": false,
                                                                              "expression": false
                                                                            },
                                                                            "arguments": []
                                                                          }
                                                                        }
                                                                      },
                                                                      {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                          "type": "AssignmentExpression",
                                                                          "operator": "=",
                                                                          "left": {
                                                                            "type": "Identifier",
                                                                            "name": "reply"
                                                                          },
                                                                          "right": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                              "type": "Identifier",
                                                                              "name": "zipSink"
                                                                            },
                                                                            "arguments": [
                                                                              {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                  "type": "MemberExpression",
                                                                                  "computed": false,
                                                                                  "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "e"
                                                                                  },
                                                                                  "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "apply"
                                                                                  }
                                                                                },
                                                                                "arguments": [
                                                                                  {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                      "type": "MemberExpression",
                                                                                      "computed": false,
                                                                                      "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_"
                                                                                      },
                                                                                      "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "always"
                                                                                      }
                                                                                    },
                                                                                    "arguments": [
                                                                                      {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                          "type": "MemberExpression",
                                                                                          "computed": false,
                                                                                          "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "f"
                                                                                          },
                                                                                          "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "apply"
                                                                                          }
                                                                                        },
                                                                                        "arguments": [
                                                                                          {
                                                                                            "type": "Literal",
                                                                                            "value": null
                                                                                          },
                                                                                          {
                                                                                            "type": "Identifier",
                                                                                            "name": "vs"
                                                                                          }
                                                                                        ]
                                                                                      }
                                                                                    ]
                                                                                  }
                                                                                ]
                                                                              }
                                                                            ]
                                                                          }
                                                                        }
                                                                      }
                                                                    ]
                                                                  },
                                                                  "alternate": null
                                                                },
                                                                {
                                                                  "type": "IfStatement",
                                                                  "test": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "any"
                                                                      }
                                                                    },
                                                                    "arguments": [
                                                                      {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                          "type": "FunctionExpression",
                                                                          "id": null,
                                                                          "params": [],
                                                                          "defaults": [],
                                                                          "body": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                              {
                                                                                "type": "VariableDeclaration",
                                                                                "declarations": [
                                                                                  {
                                                                                    "type": "VariableDeclarator",
                                                                                    "id": {
                                                                                      "type": "Identifier",
                                                                                      "name": "_i"
                                                                                    },
                                                                                    "init": null
                                                                                  },
                                                                                  {
                                                                                    "type": "VariableDeclarator",
                                                                                    "id": {
                                                                                      "type": "Identifier",
                                                                                      "name": "_len"
                                                                                    },
                                                                                    "init": null
                                                                                  },
                                                                                  {
                                                                                    "type": "VariableDeclarator",
                                                                                    "id": {
                                                                                      "type": "Identifier",
                                                                                      "name": "_results"
                                                                                    },
                                                                                    "init": null
                                                                                  }
                                                                                ],
                                                                                "kind": "var"
                                                                              },
                                                                              {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                  "type": "AssignmentExpression",
                                                                                  "operator": "=",
                                                                                  "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_results"
                                                                                  },
                                                                                  "right": {
                                                                                    "type": "ArrayExpression",
                                                                                    "elements": []
                                                                                  }
                                                                                }
                                                                              },
                                                                              {
                                                                                "type": "ForStatement",
                                                                                "init": {
                                                                                  "type": "SequenceExpression",
                                                                                  "expressions": [
                                                                                    {
                                                                                      "type": "AssignmentExpression",
                                                                                      "operator": "=",
                                                                                      "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_i"
                                                                                      },
                                                                                      "right": {
                                                                                        "type": "Literal",
                                                                                        "value": 0
                                                                                      }
                                                                                    },
                                                                                    {
                                                                                      "type": "AssignmentExpression",
                                                                                      "operator": "=",
                                                                                      "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_len"
                                                                                      },
                                                                                      "right": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                          "type": "Identifier",
                                                                                          "name": "bufs"
                                                                                        },
                                                                                        "property": {
                                                                                          "type": "Identifier",
                                                                                          "name": "length"
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                "test": {
                                                                                  "type": "BinaryExpression",
                                                                                  "operator": "<",
                                                                                  "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_i"
                                                                                  },
                                                                                  "right": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_len"
                                                                                  }
                                                                                },
                                                                                "update": {
                                                                                  "type": "UpdateExpression",
                                                                                  "operator": "++",
                                                                                  "argument": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_i"
                                                                                  },
                                                                                  "prefix": false
                                                                                },
                                                                                "body": {
                                                                                  "type": "BlockStatement",
                                                                                  "body": [
                                                                                    {
                                                                                      "type": "ExpressionStatement",
                                                                                      "expression": {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "=",
                                                                                        "left": {
                                                                                          "type": "Identifier",
                                                                                          "name": "b"
                                                                                        },
                                                                                        "right": {
                                                                                          "type": "MemberExpression",
                                                                                          "computed": true,
                                                                                          "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "bufs"
                                                                                          },
                                                                                          "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_i"
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    },
                                                                                    {
                                                                                      "type": "ExpressionStatement",
                                                                                      "expression": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                          "type": "MemberExpression",
                                                                                          "computed": false,
                                                                                          "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_results"
                                                                                          },
                                                                                          "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "push"
                                                                                          }
                                                                                        },
                                                                                        "arguments": [
                                                                                          {
                                                                                            "type": "LogicalExpression",
                                                                                            "operator": "&&",
                                                                                            "left": {
                                                                                              "type": "MemberExpression",
                                                                                              "computed": false,
                                                                                              "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "b"
                                                                                              },
                                                                                              "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "length"
                                                                                              }
                                                                                            },
                                                                                            "right": {
                                                                                              "type": "CallExpression",
                                                                                              "callee": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": false,
                                                                                                "object": {
                                                                                                  "type": "MemberExpression",
                                                                                                  "computed": true,
                                                                                                  "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "b"
                                                                                                  },
                                                                                                  "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": 0
                                                                                                  }
                                                                                                },
                                                                                                "property": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "isEnd"
                                                                                                }
                                                                                              },
                                                                                              "arguments": []
                                                                                            }
                                                                                          }
                                                                                        ]
                                                                                      }
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              },
                                                                              {
                                                                                "type": "ReturnStatement",
                                                                                "argument": {
                                                                                  "type": "Identifier",
                                                                                  "name": "_results"
                                                                                }
                                                                              }
                                                                            ]
                                                                          },
                                                                          "rest": null,
                                                                          "generator": false,
                                                                          "expression": false
                                                                        },
                                                                        "arguments": []
                                                                      }
                                                                    ]
                                                                  },
                                                                  "consequent": {
                                                                    "type": "BlockStatement",
                                                                    "body": [
                                                                      {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                          "type": "AssignmentExpression",
                                                                          "operator": "=",
                                                                          "left": {
                                                                            "type": "Identifier",
                                                                            "name": "reply"
                                                                          },
                                                                          "right": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                              "type": "Identifier",
                                                                              "name": "zipSink"
                                                                            },
                                                                            "arguments": [
                                                                              {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                  "type": "Identifier",
                                                                                  "name": "end"
                                                                                },
                                                                                "arguments": []
                                                                              }
                                                                            ]
                                                                          }
                                                                        }
                                                                      }
                                                                    ]
                                                                  },
                                                                  "alternate": null
                                                                },
                                                                {
                                                                  "type": "ReturnStatement",
                                                                  "argument": {
                                                                    "type": "LogicalExpression",
                                                                    "operator": "||",
                                                                    "left": {
                                                                      "type": "Identifier",
                                                                      "name": "reply"
                                                                    },
                                                                    "right": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "Bacon"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "more"
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "rest": null,
                                                    "generator": false,
                                                    "expression": false
                                                  }
                                                }
                                              ]
                                            },
                                            "rest": null,
                                            "generator": false,
                                            "expression": false
                                          }
                                        }
                                      },
                                      {
                                        "type": "ForStatement",
                                        "init": {
                                          "type": "SequenceExpression",
                                          "expressions": [
                                            {
                                              "type": "AssignmentExpression",
                                              "operator": "=",
                                              "left": {
                                                "type": "Identifier",
                                                "name": "j"
                                              },
                                              "right": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "_i"
                                                },
                                                "right": {
                                                  "type": "Literal",
                                                  "value": 0
                                                }
                                              }
                                            },
                                            {
                                              "type": "AssignmentExpression",
                                              "operator": "=",
                                              "left": {
                                                "type": "Identifier",
                                                "name": "_len"
                                              },
                                              "right": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "streams"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "length"
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "test": {
                                          "type": "BinaryExpression",
                                          "operator": "<",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "_i"
                                          },
                                          "right": {
                                            "type": "Identifier",
                                            "name": "_len"
                                          }
                                        },
                                        "update": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "j"
                                          },
                                          "right": {
                                            "type": "UpdateExpression",
                                            "operator": "++",
                                            "argument": {
                                              "type": "Identifier",
                                              "name": "_i"
                                            },
                                            "prefix": true
                                          }
                                        },
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "s"
                                                },
                                                "right": {
                                                  "type": "MemberExpression",
                                                  "computed": true,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "streams"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "j"
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": true,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "unsubs"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "j"
                                                  }
                                                },
                                                "right": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "FunctionExpression",
                                                    "id": null,
                                                    "params": [
                                                      {
                                                        "type": "Identifier",
                                                        "name": "i"
                                                      }
                                                    ],
                                                    "defaults": [],
                                                    "body": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "IfStatement",
                                                          "test": {
                                                            "type": "UnaryExpression",
                                                            "operator": "!",
                                                            "argument": {
                                                              "type": "Identifier",
                                                              "name": "unsubscribed"
                                                            },
                                                            "prefix": true
                                                          },
                                                          "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                              {
                                                                "type": "ReturnStatement",
                                                                "argument": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "s"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "subscribe"
                                                                    }
                                                                  },
                                                                  "arguments": [
                                                                    {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "Identifier",
                                                                        "name": "handle"
                                                                      },
                                                                      "arguments": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "name": "i"
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              }
                                                            ]
                                                          },
                                                          "alternate": null
                                                        }
                                                      ]
                                                    },
                                                    "rest": null,
                                                    "generator": false,
                                                    "expression": false
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "j"
                                                    }
                                                  ]
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "Identifier",
                                          "name": "unsubAll"
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "Bacon"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "combineAsArray"
                      }
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "VariableDeclaration",
                            "declarations": [
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "more"
                                },
                                "init": null
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "s"
                                },
                                "init": null
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "streams"
                                },
                                "init": null
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "values"
                                },
                                "init": null
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "_this"
                                },
                                "init": {
                                  "type": "ThisExpression"
                                }
                              }
                            ],
                            "kind": "var"
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "SequenceExpression",
                              "expressions": [
                                {
                                  "type": "AssignmentExpression",
                                  "operator": "=",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "streams"
                                  },
                                  "right": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "arguments"
                                    },
                                    "property": {
                                      "type": "Literal",
                                      "value": 0
                                    }
                                  }
                                },
                                {
                                  "type": "AssignmentExpression",
                                  "operator": "=",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "more"
                                  },
                                  "right": {
                                    "type": "ConditionalExpression",
                                    "test": {
                                      "type": "BinaryExpression",
                                      "operator": "<=",
                                      "left": {
                                        "type": "Literal",
                                        "value": 2
                                      },
                                      "right": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "arguments"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "length"
                                        }
                                      }
                                    },
                                    "consequent": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "__slice"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "call"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "Identifier",
                                          "name": "arguments"
                                        },
                                        {
                                          "type": "Literal",
                                          "value": 1
                                        }
                                      ]
                                    },
                                    "alternate": {
                                      "type": "ArrayExpression",
                                      "elements": []
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "type": "IfStatement",
                            "test": {
                              "type": "UnaryExpression",
                              "operator": "!",
                              "argument": {
                                "type": "BinaryExpression",
                                "operator": "instanceof",
                                "left": {
                                  "type": "Identifier",
                                  "name": "streams"
                                },
                                "right": {
                                  "type": "Identifier",
                                  "name": "Array"
                                }
                              },
                              "prefix": true
                            },
                            "consequent": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "streams"
                                    },
                                    "right": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "ArrayExpression",
                                          "elements": [
                                            {
                                              "type": "Identifier",
                                              "name": "streams"
                                            }
                                          ]
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "concat"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "Identifier",
                                          "name": "more"
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            },
                            "alternate": null
                          },
                          {
                            "type": "IfStatement",
                            "test": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "streams"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "length"
                              }
                            },
                            "consequent": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "values"
                                    },
                                    "right": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [],
                                        "defaults": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "VariableDeclaration",
                                              "declarations": [
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "_i"
                                                  },
                                                  "init": null
                                                },
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "_len"
                                                  },
                                                  "init": null
                                                },
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "_results"
                                                  },
                                                  "init": null
                                                }
                                              ],
                                              "kind": "var"
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "_results"
                                                },
                                                "right": {
                                                  "type": "ArrayExpression",
                                                  "elements": []
                                                }
                                              }
                                            },
                                            {
                                              "type": "ForStatement",
                                              "init": {
                                                "type": "SequenceExpression",
                                                "expressions": [
                                                  {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "_i"
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": 0
                                                    }
                                                  },
                                                  {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "_len"
                                                    },
                                                    "right": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "streams"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "length"
                                                      }
                                                    }
                                                  }
                                                ]
                                              },
                                              "test": {
                                                "type": "BinaryExpression",
                                                "operator": "<",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "_i"
                                                },
                                                "right": {
                                                  "type": "Identifier",
                                                  "name": "_len"
                                                }
                                              },
                                              "update": {
                                                "type": "UpdateExpression",
                                                "operator": "++",
                                                "argument": {
                                                  "type": "Identifier",
                                                  "name": "_i"
                                                },
                                                "prefix": false
                                              },
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "s"
                                                      },
                                                      "right": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "streams"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "_i"
                                                        }
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "_results"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "push"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "None"
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "type": "ReturnStatement",
                                              "argument": {
                                                "type": "Identifier",
                                                "name": "_results"
                                              }
                                            }
                                          ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                      },
                                      "arguments": []
                                    }
                                  }
                                },
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "NewExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "Property"
                                    },
                                    "arguments": [
                                      {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                          {
                                            "type": "Identifier",
                                            "name": "sink"
                                          }
                                        ],
                                        "defaults": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "VariableDeclaration",
                                              "declarations": [
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "checkEnd"
                                                  },
                                                  "init": null
                                                },
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "combiningSink"
                                                  },
                                                  "init": null
                                                },
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "ends"
                                                  },
                                                  "init": null
                                                },
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "index"
                                                  },
                                                  "init": null
                                                },
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "initialSent"
                                                  },
                                                  "init": null
                                                },
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "sinkFor"
                                                  },
                                                  "init": null
                                                },
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "stream"
                                                  },
                                                  "init": null
                                                },
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "unsubAll"
                                                  },
                                                  "init": null
                                                },
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "unsubs"
                                                  },
                                                  "init": null
                                                },
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "unsubscribed"
                                                  },
                                                  "init": null
                                                },
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "_i"
                                                  },
                                                  "init": null
                                                },
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "_len"
                                                  },
                                                  "init": null
                                                }
                                              ],
                                              "kind": "var"
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "unsubscribed"
                                                },
                                                "right": {
                                                  "type": "Literal",
                                                  "value": false
                                                }
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "unsubs"
                                                },
                                                "right": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "FunctionExpression",
                                                    "id": null,
                                                    "params": [],
                                                    "defaults": [],
                                                    "body": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "VariableDeclaration",
                                                          "declarations": [
                                                            {
                                                              "type": "VariableDeclarator",
                                                              "id": {
                                                                "type": "Identifier",
                                                                "name": "_i"
                                                              },
                                                              "init": null
                                                            },
                                                            {
                                                              "type": "VariableDeclarator",
                                                              "id": {
                                                                "type": "Identifier",
                                                                "name": "_len"
                                                              },
                                                              "init": null
                                                            },
                                                            {
                                                              "type": "VariableDeclarator",
                                                              "id": {
                                                                "type": "Identifier",
                                                                "name": "_results"
                                                              },
                                                              "init": null
                                                            }
                                                          ],
                                                          "kind": "var"
                                                        },
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "_results"
                                                            },
                                                            "right": {
                                                              "type": "ArrayExpression",
                                                              "elements": []
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "ForStatement",
                                                          "init": {
                                                            "type": "SequenceExpression",
                                                            "expressions": [
                                                              {
                                                                "type": "AssignmentExpression",
                                                                "operator": "=",
                                                                "left": {
                                                                  "type": "Identifier",
                                                                  "name": "_i"
                                                                },
                                                                "right": {
                                                                  "type": "Literal",
                                                                  "value": 0
                                                                }
                                                              },
                                                              {
                                                                "type": "AssignmentExpression",
                                                                "operator": "=",
                                                                "left": {
                                                                  "type": "Identifier",
                                                                  "name": "_len"
                                                                },
                                                                "right": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "streams"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "length"
                                                                  }
                                                                }
                                                              }
                                                            ]
                                                          },
                                                          "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "<",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "_i"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "_len"
                                                            }
                                                          },
                                                          "update": {
                                                            "type": "UpdateExpression",
                                                            "operator": "++",
                                                            "argument": {
                                                              "type": "Identifier",
                                                              "name": "_i"
                                                            },
                                                            "prefix": false
                                                          },
                                                          "body": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                              {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                  "type": "AssignmentExpression",
                                                                  "operator": "=",
                                                                  "left": {
                                                                    "type": "Identifier",
                                                                    "name": "s"
                                                                  },
                                                                  "right": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "streams"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "_i"
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "_results"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "push"
                                                                    }
                                                                  },
                                                                  "arguments": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "name": "nop"
                                                                    }
                                                                  ]
                                                                }
                                                              }
                                                            ]
                                                          }
                                                        },
                                                        {
                                                          "type": "ReturnStatement",
                                                          "argument": {
                                                            "type": "Identifier",
                                                            "name": "_results"
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "rest": null,
                                                    "generator": false,
                                                    "expression": false
                                                  },
                                                  "arguments": []
                                                }
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "unsubAll"
                                                },
                                                "right": {
                                                  "type": "FunctionExpression",
                                                  "id": null,
                                                  "params": [],
                                                  "defaults": [],
                                                  "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                          {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                              "type": "Identifier",
                                                              "name": "f"
                                                            },
                                                            "init": null
                                                          },
                                                          {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                              "type": "Identifier",
                                                              "name": "_i"
                                                            },
                                                            "init": null
                                                          },
                                                          {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                              "type": "Identifier",
                                                              "name": "_len"
                                                            },
                                                            "init": null
                                                          }
                                                        ],
                                                        "kind": "var"
                                                      },
                                                      {
                                                        "type": "ForStatement",
                                                        "init": {
                                                          "type": "SequenceExpression",
                                                          "expressions": [
                                                            {
                                                              "type": "AssignmentExpression",
                                                              "operator": "=",
                                                              "left": {
                                                                "type": "Identifier",
                                                                "name": "_i"
                                                              },
                                                              "right": {
                                                                "type": "Literal",
                                                                "value": 0
                                                              }
                                                            },
                                                            {
                                                              "type": "AssignmentExpression",
                                                              "operator": "=",
                                                              "left": {
                                                                "type": "Identifier",
                                                                "name": "_len"
                                                              },
                                                              "right": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "unsubs"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "length"
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        },
                                                        "test": {
                                                          "type": "BinaryExpression",
                                                          "operator": "<",
                                                          "left": {
                                                            "type": "Identifier",
                                                            "name": "_i"
                                                          },
                                                          "right": {
                                                            "type": "Identifier",
                                                            "name": "_len"
                                                          }
                                                        },
                                                        "update": {
                                                          "type": "UpdateExpression",
                                                          "operator": "++",
                                                          "argument": {
                                                            "type": "Identifier",
                                                            "name": "_i"
                                                          },
                                                          "prefix": false
                                                        },
                                                        "body": {
                                                          "type": "BlockStatement",
                                                          "body": [
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "expression": {
                                                                "type": "AssignmentExpression",
                                                                "operator": "=",
                                                                "left": {
                                                                  "type": "Identifier",
                                                                  "name": "f"
                                                                },
                                                                "right": {
                                                                  "type": "MemberExpression",
                                                                  "computed": true,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "unsubs"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_i"
                                                                  }
                                                                }
                                                              }
                                                            },
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "Identifier",
                                                                  "name": "f"
                                                                },
                                                                "arguments": []
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      },
                                                      {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                          "type": "AssignmentExpression",
                                                          "operator": "=",
                                                          "left": {
                                                            "type": "Identifier",
                                                            "name": "unsubscribed"
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": true
                                                          }
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "rest": null,
                                                  "generator": false,
                                                  "expression": false
                                                }
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "ends"
                                                },
                                                "right": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "FunctionExpression",
                                                    "id": null,
                                                    "params": [],
                                                    "defaults": [],
                                                    "body": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "VariableDeclaration",
                                                          "declarations": [
                                                            {
                                                              "type": "VariableDeclarator",
                                                              "id": {
                                                                "type": "Identifier",
                                                                "name": "_i"
                                                              },
                                                              "init": null
                                                            },
                                                            {
                                                              "type": "VariableDeclarator",
                                                              "id": {
                                                                "type": "Identifier",
                                                                "name": "_len"
                                                              },
                                                              "init": null
                                                            },
                                                            {
                                                              "type": "VariableDeclarator",
                                                              "id": {
                                                                "type": "Identifier",
                                                                "name": "_results"
                                                              },
                                                              "init": null
                                                            }
                                                          ],
                                                          "kind": "var"
                                                        },
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "_results"
                                                            },
                                                            "right": {
                                                              "type": "ArrayExpression",
                                                              "elements": []
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "ForStatement",
                                                          "init": {
                                                            "type": "SequenceExpression",
                                                            "expressions": [
                                                              {
                                                                "type": "AssignmentExpression",
                                                                "operator": "=",
                                                                "left": {
                                                                  "type": "Identifier",
                                                                  "name": "_i"
                                                                },
                                                                "right": {
                                                                  "type": "Literal",
                                                                  "value": 0
                                                                }
                                                              },
                                                              {
                                                                "type": "AssignmentExpression",
                                                                "operator": "=",
                                                                "left": {
                                                                  "type": "Identifier",
                                                                  "name": "_len"
                                                                },
                                                                "right": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "streams"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "length"
                                                                  }
                                                                }
                                                              }
                                                            ]
                                                          },
                                                          "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "<",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "_i"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "_len"
                                                            }
                                                          },
                                                          "update": {
                                                            "type": "UpdateExpression",
                                                            "operator": "++",
                                                            "argument": {
                                                              "type": "Identifier",
                                                              "name": "_i"
                                                            },
                                                            "prefix": false
                                                          },
                                                          "body": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                              {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                  "type": "AssignmentExpression",
                                                                  "operator": "=",
                                                                  "left": {
                                                                    "type": "Identifier",
                                                                    "name": "s"
                                                                  },
                                                                  "right": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "streams"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "_i"
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "_results"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "push"
                                                                    }
                                                                  },
                                                                  "arguments": [
                                                                    {
                                                                      "type": "Literal",
                                                                      "value": false
                                                                    }
                                                                  ]
                                                                }
                                                              }
                                                            ]
                                                          }
                                                        },
                                                        {
                                                          "type": "ReturnStatement",
                                                          "argument": {
                                                            "type": "Identifier",
                                                            "name": "_results"
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "rest": null,
                                                    "generator": false,
                                                    "expression": false
                                                  },
                                                  "arguments": []
                                                }
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "checkEnd"
                                                },
                                                "right": {
                                                  "type": "FunctionExpression",
                                                  "id": null,
                                                  "params": [],
                                                  "defaults": [],
                                                  "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                          {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                              "type": "Identifier",
                                                              "name": "reply"
                                                            },
                                                            "init": null
                                                          }
                                                        ],
                                                        "kind": "var"
                                                      },
                                                      {
                                                        "type": "IfStatement",
                                                        "test": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "_"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "all"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "Identifier",
                                                              "name": "ends"
                                                            }
                                                          ]
                                                        },
                                                        "consequent": {
                                                          "type": "BlockStatement",
                                                          "body": [
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "expression": {
                                                                "type": "AssignmentExpression",
                                                                "operator": "=",
                                                                "left": {
                                                                  "type": "Identifier",
                                                                  "name": "reply"
                                                                },
                                                                "right": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "sink"
                                                                  },
                                                                  "arguments": [
                                                                    {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "Identifier",
                                                                        "name": "end"
                                                                      },
                                                                      "arguments": []
                                                                    }
                                                                  ]
                                                                }
                                                              }
                                                            },
                                                            {
                                                              "type": "IfStatement",
                                                              "test": {
                                                                "type": "BinaryExpression",
                                                                "operator": "===",
                                                                "left": {
                                                                  "type": "Identifier",
                                                                  "name": "reply"
                                                                },
                                                                "right": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "Bacon"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "noMore"
                                                                  }
                                                                }
                                                              },
                                                              "consequent": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                  {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "Identifier",
                                                                        "name": "unsubAll"
                                                                      },
                                                                      "arguments": []
                                                                    }
                                                                  }
                                                                ]
                                                              },
                                                              "alternate": null
                                                            },
                                                            {
                                                              "type": "ReturnStatement",
                                                              "argument": {
                                                                "type": "Identifier",
                                                                "name": "reply"
                                                              }
                                                            }
                                                          ]
                                                        },
                                                        "alternate": null
                                                      }
                                                    ]
                                                  },
                                                  "rest": null,
                                                  "generator": false,
                                                  "expression": false
                                                }
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "initialSent"
                                                },
                                                "right": {
                                                  "type": "Literal",
                                                  "value": false
                                                }
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "combiningSink"
                                                },
                                                "right": {
                                                  "type": "FunctionExpression",
                                                  "id": null,
                                                  "params": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "markEnd"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "setValue"
                                                    }
                                                  ],
                                                  "defaults": [],
                                                  "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                          "type": "FunctionExpression",
                                                          "id": null,
                                                          "params": [
                                                            {
                                                              "type": "Identifier",
                                                              "name": "event"
                                                            }
                                                          ],
                                                          "defaults": [],
                                                          "body": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                              {
                                                                "type": "VariableDeclaration",
                                                                "declarations": [
                                                                  {
                                                                    "type": "VariableDeclarator",
                                                                    "id": {
                                                                      "type": "Identifier",
                                                                      "name": "reply"
                                                                    },
                                                                    "init": null
                                                                  },
                                                                  {
                                                                    "type": "VariableDeclarator",
                                                                    "id": {
                                                                      "type": "Identifier",
                                                                      "name": "valueArrayF"
                                                                    },
                                                                    "init": null
                                                                  }
                                                                ],
                                                                "kind": "var"
                                                              },
                                                              {
                                                                "type": "IfStatement",
                                                                "test": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "event"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "isEnd"
                                                                    }
                                                                  },
                                                                  "arguments": []
                                                                },
                                                                "consequent": {
                                                                  "type": "BlockStatement",
                                                                  "body": [
                                                                    {
                                                                      "type": "ExpressionStatement",
                                                                      "expression": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                          "type": "Identifier",
                                                                          "name": "markEnd"
                                                                        },
                                                                        "arguments": []
                                                                      }
                                                                    },
                                                                    {
                                                                      "type": "ExpressionStatement",
                                                                      "expression": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                          "type": "Identifier",
                                                                          "name": "checkEnd"
                                                                        },
                                                                        "arguments": []
                                                                      }
                                                                    },
                                                                    {
                                                                      "type": "ReturnStatement",
                                                                      "argument": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "Bacon"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "noMore"
                                                                        }
                                                                      }
                                                                    }
                                                                  ]
                                                                },
                                                                "alternate": {
                                                                  "type": "IfStatement",
                                                                  "test": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "event"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "isError"
                                                                      }
                                                                    },
                                                                    "arguments": []
                                                                  },
                                                                  "consequent": {
                                                                    "type": "BlockStatement",
                                                                    "body": [
                                                                      {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                          "type": "AssignmentExpression",
                                                                          "operator": "=",
                                                                          "left": {
                                                                            "type": "Identifier",
                                                                            "name": "reply"
                                                                          },
                                                                          "right": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                              "type": "Identifier",
                                                                              "name": "sink"
                                                                            },
                                                                            "arguments": [
                                                                              {
                                                                                "type": "Identifier",
                                                                                "name": "event"
                                                                              }
                                                                            ]
                                                                          }
                                                                        }
                                                                      },
                                                                      {
                                                                        "type": "IfStatement",
                                                                        "test": {
                                                                          "type": "BinaryExpression",
                                                                          "operator": "===",
                                                                          "left": {
                                                                            "type": "Identifier",
                                                                            "name": "reply"
                                                                          },
                                                                          "right": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "Identifier",
                                                                              "name": "Bacon"
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "noMore"
                                                                            }
                                                                          }
                                                                        },
                                                                        "consequent": {
                                                                          "type": "BlockStatement",
                                                                          "body": [
                                                                            {
                                                                              "type": "ExpressionStatement",
                                                                              "expression": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                  "type": "Identifier",
                                                                                  "name": "unsubAll"
                                                                                },
                                                                                "arguments": []
                                                                              }
                                                                            }
                                                                          ]
                                                                        },
                                                                        "alternate": null
                                                                      },
                                                                      {
                                                                        "type": "ReturnStatement",
                                                                        "argument": {
                                                                          "type": "Identifier",
                                                                          "name": "reply"
                                                                        }
                                                                      }
                                                                    ]
                                                                  },
                                                                  "alternate": {
                                                                    "type": "BlockStatement",
                                                                    "body": [
                                                                      {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                          "type": "CallExpression",
                                                                          "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "setValue"
                                                                          },
                                                                          "arguments": [
                                                                            {
                                                                              "type": "MemberExpression",
                                                                              "computed": false,
                                                                              "object": {
                                                                                "type": "Identifier",
                                                                                "name": "event"
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "value"
                                                                              }
                                                                            }
                                                                          ]
                                                                        }
                                                                      },
                                                                      {
                                                                        "type": "IfStatement",
                                                                        "test": {
                                                                          "type": "CallExpression",
                                                                          "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "Identifier",
                                                                              "name": "_"
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "all"
                                                                            }
                                                                          },
                                                                          "arguments": [
                                                                            {
                                                                              "type": "CallExpression",
                                                                              "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "_"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "map"
                                                                                }
                                                                              },
                                                                              "arguments": [
                                                                                {
                                                                                  "type": "FunctionExpression",
                                                                                  "id": null,
                                                                                  "params": [
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "name": "x"
                                                                                    }
                                                                                  ],
                                                                                  "defaults": [],
                                                                                  "body": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                      {
                                                                                        "type": "ReturnStatement",
                                                                                        "argument": {
                                                                                          "type": "MemberExpression",
                                                                                          "computed": false,
                                                                                          "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "x"
                                                                                          },
                                                                                          "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "isDefined"
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    ]
                                                                                  },
                                                                                  "rest": null,
                                                                                  "generator": false,
                                                                                  "expression": false
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "name": "values"
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        },
                                                                        "consequent": {
                                                                          "type": "BlockStatement",
                                                                          "body": [
                                                                            {
                                                                              "type": "IfStatement",
                                                                              "test": {
                                                                                "type": "LogicalExpression",
                                                                                "operator": "&&",
                                                                                "left": {
                                                                                  "type": "Identifier",
                                                                                  "name": "initialSent"
                                                                                },
                                                                                "right": {
                                                                                  "type": "CallExpression",
                                                                                  "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "event"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "isInitial"
                                                                                    }
                                                                                  },
                                                                                  "arguments": []
                                                                                }
                                                                              },
                                                                              "consequent": {
                                                                                "type": "BlockStatement",
                                                                                "body": [
                                                                                  {
                                                                                    "type": "ReturnStatement",
                                                                                    "argument": {
                                                                                      "type": "MemberExpression",
                                                                                      "computed": false,
                                                                                      "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "Bacon"
                                                                                      },
                                                                                      "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "more"
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                ]
                                                                              },
                                                                              "alternate": {
                                                                                "type": "BlockStatement",
                                                                                "body": [
                                                                                  {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                      "type": "AssignmentExpression",
                                                                                      "operator": "=",
                                                                                      "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "initialSent"
                                                                                      },
                                                                                      "right": {
                                                                                        "type": "Literal",
                                                                                        "value": true
                                                                                      }
                                                                                    }
                                                                                  },
                                                                                  {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                      "type": "AssignmentExpression",
                                                                                      "operator": "=",
                                                                                      "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "valueArrayF"
                                                                                      },
                                                                                      "right": {
                                                                                        "type": "FunctionExpression",
                                                                                        "id": null,
                                                                                        "params": [],
                                                                                        "defaults": [],
                                                                                        "body": {
                                                                                          "type": "BlockStatement",
                                                                                          "body": [
                                                                                            {
                                                                                              "type": "VariableDeclaration",
                                                                                              "declarations": [
                                                                                                {
                                                                                                  "type": "VariableDeclarator",
                                                                                                  "id": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "x"
                                                                                                  },
                                                                                                  "init": null
                                                                                                },
                                                                                                {
                                                                                                  "type": "VariableDeclarator",
                                                                                                  "id": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_i"
                                                                                                  },
                                                                                                  "init": null
                                                                                                },
                                                                                                {
                                                                                                  "type": "VariableDeclarator",
                                                                                                  "id": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_len"
                                                                                                  },
                                                                                                  "init": null
                                                                                                },
                                                                                                {
                                                                                                  "type": "VariableDeclarator",
                                                                                                  "id": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_results"
                                                                                                  },
                                                                                                  "init": null
                                                                                                }
                                                                                              ],
                                                                                              "kind": "var"
                                                                                            },
                                                                                            {
                                                                                              "type": "ExpressionStatement",
                                                                                              "expression": {
                                                                                                "type": "AssignmentExpression",
                                                                                                "operator": "=",
                                                                                                "left": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "_results"
                                                                                                },
                                                                                                "right": {
                                                                                                  "type": "ArrayExpression",
                                                                                                  "elements": []
                                                                                                }
                                                                                              }
                                                                                            },
                                                                                            {
                                                                                              "type": "ForStatement",
                                                                                              "init": {
                                                                                                "type": "SequenceExpression",
                                                                                                "expressions": [
                                                                                                  {
                                                                                                    "type": "AssignmentExpression",
                                                                                                    "operator": "=",
                                                                                                    "left": {
                                                                                                      "type": "Identifier",
                                                                                                      "name": "_i"
                                                                                                    },
                                                                                                    "right": {
                                                                                                      "type": "Literal",
                                                                                                      "value": 0
                                                                                                    }
                                                                                                  },
                                                                                                  {
                                                                                                    "type": "AssignmentExpression",
                                                                                                    "operator": "=",
                                                                                                    "left": {
                                                                                                      "type": "Identifier",
                                                                                                      "name": "_len"
                                                                                                    },
                                                                                                    "right": {
                                                                                                      "type": "MemberExpression",
                                                                                                      "computed": false,
                                                                                                      "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "values"
                                                                                                      },
                                                                                                      "property": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "length"
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                ]
                                                                                              },
                                                                                              "test": {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "<",
                                                                                                "left": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "_i"
                                                                                                },
                                                                                                "right": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "_len"
                                                                                                }
                                                                                              },
                                                                                              "update": {
                                                                                                "type": "UpdateExpression",
                                                                                                "operator": "++",
                                                                                                "argument": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "_i"
                                                                                                },
                                                                                                "prefix": false
                                                                                              },
                                                                                              "body": {
                                                                                                "type": "BlockStatement",
                                                                                                "body": [
                                                                                                  {
                                                                                                    "type": "ExpressionStatement",
                                                                                                    "expression": {
                                                                                                      "type": "AssignmentExpression",
                                                                                                      "operator": "=",
                                                                                                      "left": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "x"
                                                                                                      },
                                                                                                      "right": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                          "type": "Identifier",
                                                                                                          "name": "values"
                                                                                                        },
                                                                                                        "property": {
                                                                                                          "type": "Identifier",
                                                                                                          "name": "_i"
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  },
                                                                                                  {
                                                                                                    "type": "ExpressionStatement",
                                                                                                    "expression": {
                                                                                                      "type": "CallExpression",
                                                                                                      "callee": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": false,
                                                                                                        "object": {
                                                                                                          "type": "Identifier",
                                                                                                          "name": "_results"
                                                                                                        },
                                                                                                        "property": {
                                                                                                          "type": "Identifier",
                                                                                                          "name": "push"
                                                                                                        }
                                                                                                      },
                                                                                                      "arguments": [
                                                                                                        {
                                                                                                          "type": "CallExpression",
                                                                                                          "callee": {
                                                                                                            "type": "CallExpression",
                                                                                                            "callee": {
                                                                                                              "type": "MemberExpression",
                                                                                                              "computed": false,
                                                                                                              "object": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "x"
                                                                                                              },
                                                                                                              "property": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "get"
                                                                                                              }
                                                                                                            },
                                                                                                            "arguments": []
                                                                                                          },
                                                                                                          "arguments": []
                                                                                                        }
                                                                                                      ]
                                                                                                    }
                                                                                                  }
                                                                                                ]
                                                                                              }
                                                                                            },
                                                                                            {
                                                                                              "type": "ReturnStatement",
                                                                                              "argument": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_results"
                                                                                              }
                                                                                            }
                                                                                          ]
                                                                                        },
                                                                                        "rest": null,
                                                                                        "generator": false,
                                                                                        "expression": false
                                                                                      }
                                                                                    }
                                                                                  },
                                                                                  {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                      "type": "AssignmentExpression",
                                                                                      "operator": "=",
                                                                                      "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "reply"
                                                                                      },
                                                                                      "right": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                          "type": "Identifier",
                                                                                          "name": "sink"
                                                                                        },
                                                                                        "arguments": [
                                                                                          {
                                                                                            "type": "CallExpression",
                                                                                            "callee": {
                                                                                              "type": "MemberExpression",
                                                                                              "computed": false,
                                                                                              "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "event"
                                                                                              },
                                                                                              "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "apply"
                                                                                              }
                                                                                            },
                                                                                            "arguments": [
                                                                                              {
                                                                                                "type": "Identifier",
                                                                                                "name": "valueArrayF"
                                                                                              }
                                                                                            ]
                                                                                          }
                                                                                        ]
                                                                                      }
                                                                                    }
                                                                                  },
                                                                                  {
                                                                                    "type": "IfStatement",
                                                                                    "test": {
                                                                                      "type": "BinaryExpression",
                                                                                      "operator": "===",
                                                                                      "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "reply"
                                                                                      },
                                                                                      "right": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                          "type": "Identifier",
                                                                                          "name": "Bacon"
                                                                                        },
                                                                                        "property": {
                                                                                          "type": "Identifier",
                                                                                          "name": "noMore"
                                                                                        }
                                                                                      }
                                                                                    },
                                                                                    "consequent": {
                                                                                      "type": "BlockStatement",
                                                                                      "body": [
                                                                                        {
                                                                                          "type": "ExpressionStatement",
                                                                                          "expression": {
                                                                                            "type": "CallExpression",
                                                                                            "callee": {
                                                                                              "type": "Identifier",
                                                                                              "name": "unsubAll"
                                                                                            },
                                                                                            "arguments": []
                                                                                          }
                                                                                        }
                                                                                      ]
                                                                                    },
                                                                                    "alternate": null
                                                                                  },
                                                                                  {
                                                                                    "type": "ReturnStatement",
                                                                                    "argument": {
                                                                                      "type": "Identifier",
                                                                                      "name": "reply"
                                                                                    }
                                                                                  }
                                                                                ]
                                                                              }
                                                                            }
                                                                          ]
                                                                        },
                                                                        "alternate": {
                                                                          "type": "BlockStatement",
                                                                          "body": [
                                                                            {
                                                                              "type": "ReturnStatement",
                                                                              "argument": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "Bacon"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "more"
                                                                                }
                                                                              }
                                                                            }
                                                                          ]
                                                                        }
                                                                      }
                                                                    ]
                                                                  }
                                                                }
                                                              }
                                                            ]
                                                          },
                                                          "rest": null,
                                                          "generator": false,
                                                          "expression": false
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "rest": null,
                                                  "generator": false,
                                                  "expression": false
                                                }
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "sinkFor"
                                                },
                                                "right": {
                                                  "type": "FunctionExpression",
                                                  "id": null,
                                                  "params": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "index"
                                                    }
                                                  ],
                                                  "defaults": [],
                                                  "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "Identifier",
                                                            "name": "combiningSink"
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "FunctionExpression",
                                                              "id": null,
                                                              "params": [],
                                                              "defaults": [],
                                                              "body": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                  {
                                                                    "type": "ReturnStatement",
                                                                    "argument": {
                                                                      "type": "AssignmentExpression",
                                                                      "operator": "=",
                                                                      "left": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "ends"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "index"
                                                                        }
                                                                      },
                                                                      "right": {
                                                                        "type": "Literal",
                                                                        "value": true
                                                                      }
                                                                    }
                                                                  }
                                                                ]
                                                              },
                                                              "rest": null,
                                                              "generator": false,
                                                              "expression": false
                                                            },
                                                            {
                                                              "type": "FunctionExpression",
                                                              "id": null,
                                                              "params": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "x"
                                                                }
                                                              ],
                                                              "defaults": [],
                                                              "body": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                  {
                                                                    "type": "ReturnStatement",
                                                                    "argument": {
                                                                      "type": "AssignmentExpression",
                                                                      "operator": "=",
                                                                      "left": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "values"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "index"
                                                                        }
                                                                      },
                                                                      "right": {
                                                                        "type": "NewExpression",
                                                                        "callee": {
                                                                          "type": "Identifier",
                                                                          "name": "Some"
                                                                        },
                                                                        "arguments": [
                                                                          {
                                                                            "type": "Identifier",
                                                                            "name": "x"
                                                                          }
                                                                        ]
                                                                      }
                                                                    }
                                                                  }
                                                                ]
                                                              },
                                                              "rest": null,
                                                              "generator": false,
                                                              "expression": false
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "rest": null,
                                                  "generator": false,
                                                  "expression": false
                                                }
                                              }
                                            },
                                            {
                                              "type": "ForStatement",
                                              "init": {
                                                "type": "SequenceExpression",
                                                "expressions": [
                                                  {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "index"
                                                    },
                                                    "right": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "_i"
                                                      },
                                                      "right": {
                                                        "type": "Literal",
                                                        "value": 0
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "_len"
                                                    },
                                                    "right": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "streams"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "length"
                                                      }
                                                    }
                                                  }
                                                ]
                                              },
                                              "test": {
                                                "type": "BinaryExpression",
                                                "operator": "<",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "_i"
                                                },
                                                "right": {
                                                  "type": "Identifier",
                                                  "name": "_len"
                                                }
                                              },
                                              "update": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "index"
                                                },
                                                "right": {
                                                  "type": "UpdateExpression",
                                                  "operator": "++",
                                                  "argument": {
                                                    "type": "Identifier",
                                                    "name": "_i"
                                                  },
                                                  "prefix": true
                                                }
                                              },
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "stream"
                                                      },
                                                      "right": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "streams"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "index"
                                                        }
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "IfStatement",
                                                    "test": {
                                                      "type": "UnaryExpression",
                                                      "operator": "!",
                                                      "argument": {
                                                        "type": "BinaryExpression",
                                                        "operator": "instanceof",
                                                        "left": {
                                                          "type": "Identifier",
                                                          "name": "stream"
                                                        },
                                                        "right": {
                                                          "type": "Identifier",
                                                          "name": "Observable"
                                                        }
                                                      },
                                                      "prefix": true
                                                    },
                                                    "consequent": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "stream"
                                                            },
                                                            "right": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "Bacon"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "constant"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "stream"
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "alternate": null
                                                  },
                                                  {
                                                    "type": "IfStatement",
                                                    "test": {
                                                      "type": "UnaryExpression",
                                                      "operator": "!",
                                                      "argument": {
                                                        "type": "Identifier",
                                                        "name": "unsubscribed"
                                                      },
                                                      "prefix": true
                                                    },
                                                    "consequent": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "MemberExpression",
                                                              "computed": true,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "unsubs"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "index"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "stream"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "subscribe"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "sinkFor"
                                                                  },
                                                                  "arguments": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "name": "index"
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "alternate": null
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "type": "ReturnStatement",
                                              "argument": {
                                                "type": "Identifier",
                                                "name": "unsubAll"
                                              }
                                            }
                                          ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "alternate": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "Bacon"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "constant"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "ArrayExpression",
                                        "elements": []
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "Bacon"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "onValues"
                      }
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "VariableDeclaration",
                            "declarations": [
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "f"
                                },
                                "init": null
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "streams"
                                },
                                "init": null
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "_i"
                                },
                                "init": null
                              }
                            ],
                            "kind": "var"
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "SequenceExpression",
                              "expressions": [
                                {
                                  "type": "AssignmentExpression",
                                  "operator": "=",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "streams"
                                  },
                                  "right": {
                                    "type": "ConditionalExpression",
                                    "test": {
                                      "type": "BinaryExpression",
                                      "operator": "<=",
                                      "left": {
                                        "type": "Literal",
                                        "value": 2
                                      },
                                      "right": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "arguments"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "length"
                                        }
                                      }
                                    },
                                    "consequent": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "__slice"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "call"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "Identifier",
                                          "name": "arguments"
                                        },
                                        {
                                          "type": "Literal",
                                          "value": 0
                                        },
                                        {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "_i"
                                          },
                                          "right": {
                                            "type": "BinaryExpression",
                                            "operator": "-",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "arguments"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "length"
                                              }
                                            },
                                            "right": {
                                              "type": "Literal",
                                              "value": 1
                                            }
                                          }
                                        }
                                      ]
                                    },
                                    "alternate": {
                                      "type": "SequenceExpression",
                                      "expressions": [
                                        {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "_i"
                                          },
                                          "right": {
                                            "type": "Literal",
                                            "value": 0
                                          }
                                        },
                                        {
                                          "type": "ArrayExpression",
                                          "elements": []
                                        }
                                      ]
                                    }
                                  }
                                },
                                {
                                  "type": "AssignmentExpression",
                                  "operator": "=",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "f"
                                  },
                                  "right": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "arguments"
                                    },
                                    "property": {
                                      "type": "UpdateExpression",
                                      "operator": "++",
                                      "argument": {
                                        "type": "Identifier",
                                        "name": "_i"
                                      },
                                      "prefix": false
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Bacon"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "combineAsArray"
                                    }
                                  },
                                  "arguments": [
                                    {
                                      "type": "Identifier",
                                      "name": "streams"
                                    }
                                  ]
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "onValues"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "f"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "Bacon"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "combineWith"
                      }
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "VariableDeclaration",
                            "declarations": [
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "f"
                                },
                                "init": null
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "streams"
                                },
                                "init": null
                              }
                            ],
                            "kind": "var"
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "SequenceExpression",
                              "expressions": [
                                {
                                  "type": "AssignmentExpression",
                                  "operator": "=",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "f"
                                  },
                                  "right": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "arguments"
                                    },
                                    "property": {
                                      "type": "Literal",
                                      "value": 0
                                    }
                                  }
                                },
                                {
                                  "type": "AssignmentExpression",
                                  "operator": "=",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "streams"
                                  },
                                  "right": {
                                    "type": "ConditionalExpression",
                                    "test": {
                                      "type": "BinaryExpression",
                                      "operator": "<=",
                                      "left": {
                                        "type": "Literal",
                                        "value": 2
                                      },
                                      "right": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "arguments"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "length"
                                        }
                                      }
                                    },
                                    "consequent": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "__slice"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "call"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "Identifier",
                                          "name": "arguments"
                                        },
                                        {
                                          "type": "Literal",
                                          "value": 1
                                        }
                                      ]
                                    },
                                    "alternate": {
                                      "type": "ArrayExpression",
                                      "elements": []
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Bacon"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "combineAsArray"
                                    }
                                  },
                                  "arguments": [
                                    {
                                      "type": "Identifier",
                                      "name": "streams"
                                    }
                                  ]
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "map"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "values"
                                    }
                                  ],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "f"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "apply"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Literal",
                                              "value": null
                                            },
                                            {
                                              "type": "Identifier",
                                              "name": "values"
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "Bacon"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "combineTemplate"
                      }
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "template"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "VariableDeclaration",
                            "declarations": [
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "applyStreamValue"
                                },
                                "init": null
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "combinator"
                                },
                                "init": null
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "compile"
                                },
                                "init": null
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "compileTemplate"
                                },
                                "init": null
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "constantValue"
                                },
                                "init": null
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "current"
                                },
                                "init": null
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "funcs"
                                },
                                "init": null
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "mkContext"
                                },
                                "init": null
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "setValue"
                                },
                                "init": null
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "streams"
                                },
                                "init": null
                              }
                            ],
                            "kind": "var"
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "name": "funcs"
                              },
                              "right": {
                                "type": "ArrayExpression",
                                "elements": []
                              }
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "name": "streams"
                              },
                              "right": {
                                "type": "ArrayExpression",
                                "elements": []
                              }
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "name": "current"
                              },
                              "right": {
                                "type": "FunctionExpression",
                                "id": null,
                                "params": [
                                  {
                                    "type": "Identifier",
                                    "name": "ctxStack"
                                  }
                                ],
                                "defaults": [],
                                "body": {
                                  "type": "BlockStatement",
                                  "body": [
                                    {
                                      "type": "ReturnStatement",
                                      "argument": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "ctxStack"
                                        },
                                        "property": {
                                          "type": "BinaryExpression",
                                          "operator": "-",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "ctxStack"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "length"
                                            }
                                          },
                                          "right": {
                                            "type": "Literal",
                                            "value": 1
                                          }
                                        }
                                      }
                                    }
                                  ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                              }
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "name": "setValue"
                              },
                              "right": {
                                "type": "FunctionExpression",
                                "id": null,
                                "params": [
                                  {
                                    "type": "Identifier",
                                    "name": "ctxStack"
                                  },
                                  {
                                    "type": "Identifier",
                                    "name": "key"
                                  },
                                  {
                                    "type": "Identifier",
                                    "name": "value"
                                  }
                                ],
                                "defaults": [],
                                "body": {
                                  "type": "BlockStatement",
                                  "body": [
                                    {
                                      "type": "ReturnStatement",
                                      "argument": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                          "type": "MemberExpression",
                                          "computed": true,
                                          "object": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "current"
                                            },
                                            "arguments": [
                                              {
                                                "type": "Identifier",
                                                "name": "ctxStack"
                                              }
                                            ]
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "key"
                                          }
                                        },
                                        "right": {
                                          "type": "Identifier",
                                          "name": "value"
                                        }
                                      }
                                    }
                                  ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                              }
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "name": "applyStreamValue"
                              },
                              "right": {
                                "type": "FunctionExpression",
                                "id": null,
                                "params": [
                                  {
                                    "type": "Identifier",
                                    "name": "key"
                                  },
                                  {
                                    "type": "Identifier",
                                    "name": "index"
                                  }
                                ],
                                "defaults": [],
                                "body": {
                                  "type": "BlockStatement",
                                  "body": [
                                    {
                                      "type": "ReturnStatement",
                                      "argument": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                          {
                                            "type": "Identifier",
                                            "name": "ctxStack"
                                          },
                                          {
                                            "type": "Identifier",
                                            "name": "values"
                                          }
                                        ],
                                        "defaults": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ReturnStatement",
                                              "argument": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "Identifier",
                                                  "name": "setValue"
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "ctxStack"
                                                  },
                                                  {
                                                    "type": "Identifier",
                                                    "name": "key"
                                                  },
                                                  {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "values"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "index"
                                                    }
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                      }
                                    }
                                  ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                              }
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "name": "constantValue"
                              },
                              "right": {
                                "type": "FunctionExpression",
                                "id": null,
                                "params": [
                                  {
                                    "type": "Identifier",
                                    "name": "key"
                                  },
                                  {
                                    "type": "Identifier",
                                    "name": "value"
                                  }
                                ],
                                "defaults": [],
                                "body": {
                                  "type": "BlockStatement",
                                  "body": [
                                    {
                                      "type": "ReturnStatement",
                                      "argument": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                          {
                                            "type": "Identifier",
                                            "name": "ctxStack"
                                          },
                                          {
                                            "type": "Identifier",
                                            "name": "values"
                                          }
                                        ],
                                        "defaults": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ReturnStatement",
                                              "argument": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "Identifier",
                                                  "name": "setValue"
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "ctxStack"
                                                  },
                                                  {
                                                    "type": "Identifier",
                                                    "name": "key"
                                                  },
                                                  {
                                                    "type": "Identifier",
                                                    "name": "value"
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                      }
                                    }
                                  ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                              }
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "name": "mkContext"
                              },
                              "right": {
                                "type": "FunctionExpression",
                                "id": null,
                                "params": [
                                  {
                                    "type": "Identifier",
                                    "name": "template"
                                  }
                                ],
                                "defaults": [],
                                "body": {
                                  "type": "BlockStatement",
                                  "body": [
                                    {
                                      "type": "IfStatement",
                                      "test": {
                                        "type": "BinaryExpression",
                                        "operator": "instanceof",
                                        "left": {
                                          "type": "Identifier",
                                          "name": "template"
                                        },
                                        "right": {
                                          "type": "Identifier",
                                          "name": "Array"
                                        }
                                      },
                                      "consequent": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "ReturnStatement",
                                            "argument": {
                                              "type": "ArrayExpression",
                                              "elements": []
                                            }
                                          }
                                        ]
                                      },
                                      "alternate": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "ReturnStatement",
                                            "argument": {
                                              "type": "ObjectExpression",
                                              "properties": []
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                              }
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "name": "compile"
                              },
                              "right": {
                                "type": "FunctionExpression",
                                "id": null,
                                "params": [
                                  {
                                    "type": "Identifier",
                                    "name": "key"
                                  },
                                  {
                                    "type": "Identifier",
                                    "name": "value"
                                  }
                                ],
                                "defaults": [],
                                "body": {
                                  "type": "BlockStatement",
                                  "body": [
                                    {
                                      "type": "VariableDeclaration",
                                      "declarations": [
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "popContext"
                                          },
                                          "init": null
                                        },
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "pushContext"
                                          },
                                          "init": null
                                        }
                                      ],
                                      "kind": "var"
                                    },
                                    {
                                      "type": "IfStatement",
                                      "test": {
                                        "type": "BinaryExpression",
                                        "operator": "instanceof",
                                        "left": {
                                          "type": "Identifier",
                                          "name": "value"
                                        },
                                        "right": {
                                          "type": "Identifier",
                                          "name": "Observable"
                                        }
                                      },
                                      "consequent": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "streams"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "push"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "value"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "ReturnStatement",
                                            "argument": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "funcs"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "push"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "Identifier",
                                                    "name": "applyStreamValue"
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "key"
                                                    },
                                                    {
                                                      "type": "BinaryExpression",
                                                      "operator": "-",
                                                      "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "streams"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "length"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "Literal",
                                                        "value": 1
                                                      }
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      },
                                      "alternate": {
                                        "type": "IfStatement",
                                        "test": {
                                          "type": "LogicalExpression",
                                          "operator": "&&",
                                          "left": {
                                            "type": "BinaryExpression",
                                            "operator": "===",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "value"
                                            },
                                            "right": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "Object"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "value"
                                                }
                                              ]
                                            }
                                          },
                                          "right": {
                                            "type": "BinaryExpression",
                                            "operator": "!==",
                                            "left": {
                                              "type": "UnaryExpression",
                                              "operator": "typeof",
                                              "argument": {
                                                "type": "Identifier",
                                                "name": "value"
                                              },
                                              "prefix": true
                                            },
                                            "right": {
                                              "type": "Literal",
                                              "value": "function"
                                            }
                                          }
                                        },
                                        "consequent": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "pushContext"
                                                },
                                                "right": {
                                                  "type": "FunctionExpression",
                                                  "id": null,
                                                  "params": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "key"
                                                    }
                                                  ],
                                                  "defaults": [],
                                                  "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                          "type": "FunctionExpression",
                                                          "id": null,
                                                          "params": [
                                                            {
                                                              "type": "Identifier",
                                                              "name": "ctxStack"
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "name": "values"
                                                            }
                                                          ],
                                                          "defaults": [],
                                                          "body": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                              {
                                                                "type": "VariableDeclaration",
                                                                "declarations": [
                                                                  {
                                                                    "type": "VariableDeclarator",
                                                                    "id": {
                                                                      "type": "Identifier",
                                                                      "name": "newContext"
                                                                    },
                                                                    "init": null
                                                                  }
                                                                ],
                                                                "kind": "var"
                                                              },
                                                              {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                  "type": "AssignmentExpression",
                                                                  "operator": "=",
                                                                  "left": {
                                                                    "type": "Identifier",
                                                                    "name": "newContext"
                                                                  },
                                                                  "right": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "Identifier",
                                                                      "name": "mkContext"
                                                                    },
                                                                    "arguments": [
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "value"
                                                                      }
                                                                    ]
                                                                  }
                                                                }
                                                              },
                                                              {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "setValue"
                                                                  },
                                                                  "arguments": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "name": "ctxStack"
                                                                    },
                                                                    {
                                                                      "type": "Identifier",
                                                                      "name": "key"
                                                                    },
                                                                    {
                                                                      "type": "Identifier",
                                                                      "name": "newContext"
                                                                    }
                                                                  ]
                                                                }
                                                              },
                                                              {
                                                                "type": "ReturnStatement",
                                                                "argument": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "ctxStack"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "push"
                                                                    }
                                                                  },
                                                                  "arguments": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "name": "newContext"
                                                                    }
                                                                  ]
                                                                }
                                                              }
                                                            ]
                                                          },
                                                          "rest": null,
                                                          "generator": false,
                                                          "expression": false
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "rest": null,
                                                  "generator": false,
                                                  "expression": false
                                                }
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "popContext"
                                                },
                                                "right": {
                                                  "type": "FunctionExpression",
                                                  "id": null,
                                                  "params": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "ctxStack"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "values"
                                                    }
                                                  ],
                                                  "defaults": [],
                                                  "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "ctxStack"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "pop"
                                                            }
                                                          },
                                                          "arguments": []
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "rest": null,
                                                  "generator": false,
                                                  "expression": false
                                                }
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "funcs"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "push"
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "Identifier",
                                                      "name": "pushContext"
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "Identifier",
                                                        "name": "key"
                                                      }
                                                    ]
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "Identifier",
                                                  "name": "compileTemplate"
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "value"
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "type": "ReturnStatement",
                                              "argument": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "funcs"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "push"
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "popContext"
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "alternate": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ReturnStatement",
                                              "argument": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "funcs"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "push"
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "Identifier",
                                                      "name": "constantValue"
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "Identifier",
                                                        "name": "key"
                                                      },
                                                      {
                                                        "type": "Identifier",
                                                        "name": "value"
                                                      }
                                                    ]
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                              }
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "name": "compileTemplate"
                              },
                              "right": {
                                "type": "FunctionExpression",
                                "id": null,
                                "params": [
                                  {
                                    "type": "Identifier",
                                    "name": "template"
                                  }
                                ],
                                "defaults": [],
                                "body": {
                                  "type": "BlockStatement",
                                  "body": [
                                    {
                                      "type": "ReturnStatement",
                                      "argument": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "_"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "each"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "Identifier",
                                            "name": "template"
                                          },
                                          {
                                            "type": "Identifier",
                                            "name": "compile"
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                              }
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "compileTemplate"
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "template"
                                }
                              ]
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "name": "combinator"
                              },
                              "right": {
                                "type": "FunctionExpression",
                                "id": null,
                                "params": [
                                  {
                                    "type": "Identifier",
                                    "name": "values"
                                  }
                                ],
                                "defaults": [],
                                "body": {
                                  "type": "BlockStatement",
                                  "body": [
                                    {
                                      "type": "VariableDeclaration",
                                      "declarations": [
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "ctxStack"
                                          },
                                          "init": null
                                        },
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "f"
                                          },
                                          "init": null
                                        },
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "rootContext"
                                          },
                                          "init": null
                                        },
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "_i"
                                          },
                                          "init": null
                                        },
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "_len"
                                          },
                                          "init": null
                                        }
                                      ],
                                      "kind": "var"
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                          "type": "Identifier",
                                          "name": "rootContext"
                                        },
                                        "right": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "Identifier",
                                            "name": "mkContext"
                                          },
                                          "arguments": [
                                            {
                                              "type": "Identifier",
                                              "name": "template"
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                          "type": "Identifier",
                                          "name": "ctxStack"
                                        },
                                        "right": {
                                          "type": "ArrayExpression",
                                          "elements": [
                                            {
                                              "type": "Identifier",
                                              "name": "rootContext"
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "type": "ForStatement",
                                      "init": {
                                        "type": "SequenceExpression",
                                        "expressions": [
                                          {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "_i"
                                            },
                                            "right": {
                                              "type": "Literal",
                                              "value": 0
                                            }
                                          },
                                          {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "_len"
                                            },
                                            "right": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "funcs"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "length"
                                              }
                                            }
                                          }
                                        ]
                                      },
                                      "test": {
                                        "type": "BinaryExpression",
                                        "operator": "<",
                                        "left": {
                                          "type": "Identifier",
                                          "name": "_i"
                                        },
                                        "right": {
                                          "type": "Identifier",
                                          "name": "_len"
                                        }
                                      },
                                      "update": {
                                        "type": "UpdateExpression",
                                        "operator": "++",
                                        "argument": {
                                          "type": "Identifier",
                                          "name": "_i"
                                        },
                                        "prefix": false
                                      },
                                      "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "AssignmentExpression",
                                              "operator": "=",
                                              "left": {
                                                "type": "Identifier",
                                                "name": "f"
                                              },
                                              "right": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "funcs"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "_i"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "f"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "ctxStack"
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "name": "values"
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "ReturnStatement",
                                      "argument": {
                                        "type": "Identifier",
                                        "name": "rootContext"
                                      }
                                    }
                                  ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                              }
                            }
                          },
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Bacon"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "combineAsArray"
                                    }
                                  },
                                  "arguments": [
                                    {
                                      "type": "Identifier",
                                      "name": "streams"
                                    }
                                  ]
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "map"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "combinator"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "Event"
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "FunctionDeclaration",
                              "id": {
                                "type": "Identifier",
                                "name": "Event"
                              },
                              "params": [],
                              "defaults": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": []
                              },
                              "rest": null,
                              "generator": false,
                              "expression": false
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Event"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "isEvent"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "Literal",
                                          "value": true
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Event"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "isEnd"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "Literal",
                                          "value": false
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Event"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "isInitial"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "Literal",
                                          "value": false
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Event"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "isNext"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "Literal",
                                          "value": false
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Event"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "isError"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "Literal",
                                          "value": false
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Event"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "hasValue"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "Literal",
                                          "value": false
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Event"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "filter"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "f"
                                    }
                                  ],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "Literal",
                                          "value": true
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Event"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "onDone"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "listener"
                                    }
                                  ],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "Identifier",
                                            "name": "listener"
                                          },
                                          "arguments": []
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ReturnStatement",
                              "argument": {
                                "type": "Identifier",
                                "name": "Event"
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      },
                      "arguments": []
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "Next"
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [
                          {
                            "type": "Identifier",
                            "name": "_super"
                          }
                        ],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "__extends"
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "Next"
                                  },
                                  {
                                    "type": "Identifier",
                                    "name": "_super"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "FunctionDeclaration",
                              "id": {
                                "type": "Identifier",
                                "name": "Next"
                              },
                              "params": [
                                {
                                  "type": "Identifier",
                                  "name": "valueF"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "sourceEvent"
                                }
                              ],
                              "defaults": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "_this"
                                        },
                                        "init": {
                                          "type": "ThisExpression"
                                        }
                                      }
                                    ],
                                    "kind": "var"
                                  },
                                  {
                                    "type": "IfStatement",
                                    "test": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "isFunction"
                                      },
                                      "arguments": [
                                        {
                                          "type": "Identifier",
                                          "name": "valueF"
                                        }
                                      ]
                                    },
                                    "consequent": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "ThisExpression"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "value"
                                              }
                                            },
                                            "right": {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                      {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                          "type": "Identifier",
                                                          "name": "v"
                                                        },
                                                        "init": null
                                                      }
                                                    ],
                                                    "kind": "var"
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "v"
                                                      },
                                                      "right": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "Identifier",
                                                          "name": "valueF"
                                                        },
                                                        "arguments": []
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "_this"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "value"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "_"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "always"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Identifier",
                                                            "name": "v"
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                      "type": "Identifier",
                                                      "name": "v"
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            }
                                          }
                                        }
                                      ]
                                    },
                                    "alternate": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "ThisExpression"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "value"
                                              }
                                            },
                                            "right": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "_"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "always"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "valueF"
                                                }
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  }
                                ]
                              },
                              "rest": null,
                              "generator": false,
                              "expression": false
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Next"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "isNext"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "Literal",
                                          "value": true
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Next"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "hasValue"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "Literal",
                                          "value": true
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Next"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "fmap"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "f"
                                    }
                                  ],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "_this"
                                            },
                                            "init": {
                                              "type": "ThisExpression"
                                            }
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "apply"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "Identifier",
                                                        "name": "f"
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "_this"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "value"
                                                            }
                                                          },
                                                          "arguments": []
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Next"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "apply"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "value"
                                    }
                                  ],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "NewExpression",
                                          "callee": {
                                            "type": "Identifier",
                                            "name": "Next"
                                          },
                                          "arguments": [
                                            {
                                              "type": "Identifier",
                                              "name": "value"
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Next"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "filter"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "f"
                                    }
                                  ],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "Identifier",
                                            "name": "f"
                                          },
                                          "arguments": [
                                            {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "ThisExpression"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "value"
                                                }
                                              },
                                              "arguments": []
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Next"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "describe"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "value"
                                            }
                                          },
                                          "arguments": []
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ReturnStatement",
                              "argument": {
                                "type": "Identifier",
                                "name": "Next"
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "Event"
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "Initial"
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [
                          {
                            "type": "Identifier",
                            "name": "_super"
                          }
                        ],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "__extends"
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "Initial"
                                  },
                                  {
                                    "type": "Identifier",
                                    "name": "_super"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "FunctionDeclaration",
                              "id": {
                                "type": "Identifier",
                                "name": "Initial"
                              },
                              "params": [],
                              "defaults": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ReturnStatement",
                                    "argument": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "Initial"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "__super__"
                                            }
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "constructor"
                                          }
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "apply"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "ThisExpression"
                                        },
                                        {
                                          "type": "Identifier",
                                          "name": "arguments"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              },
                              "rest": null,
                              "generator": false,
                              "expression": false
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Initial"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "isInitial"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "Literal",
                                          "value": true
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Initial"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "isNext"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "Literal",
                                          "value": false
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Initial"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "apply"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "value"
                                    }
                                  ],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "NewExpression",
                                          "callee": {
                                            "type": "Identifier",
                                            "name": "Initial"
                                          },
                                          "arguments": [
                                            {
                                              "type": "Identifier",
                                              "name": "value"
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Initial"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "toNext"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "NewExpression",
                                          "callee": {
                                            "type": "Identifier",
                                            "name": "Next"
                                          },
                                          "arguments": [
                                            {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "ThisExpression"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "value"
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ReturnStatement",
                              "argument": {
                                "type": "Identifier",
                                "name": "Initial"
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "Next"
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "End"
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [
                          {
                            "type": "Identifier",
                            "name": "_super"
                          }
                        ],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "__extends"
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "End"
                                  },
                                  {
                                    "type": "Identifier",
                                    "name": "_super"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "FunctionDeclaration",
                              "id": {
                                "type": "Identifier",
                                "name": "End"
                              },
                              "params": [],
                              "defaults": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ReturnStatement",
                                    "argument": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "End"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "__super__"
                                            }
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "constructor"
                                          }
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "apply"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "ThisExpression"
                                        },
                                        {
                                          "type": "Identifier",
                                          "name": "arguments"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              },
                              "rest": null,
                              "generator": false,
                              "expression": false
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "End"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "isEnd"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "Literal",
                                          "value": true
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "End"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "fmap"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "ThisExpression"
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "End"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "apply"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "ThisExpression"
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "End"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "describe"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "Literal",
                                          "value": "<end>"
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ReturnStatement",
                              "argument": {
                                "type": "Identifier",
                                "name": "End"
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "Event"
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "Error"
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [
                          {
                            "type": "Identifier",
                            "name": "_super"
                          }
                        ],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "__extends"
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "Error"
                                  },
                                  {
                                    "type": "Identifier",
                                    "name": "_super"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "FunctionDeclaration",
                              "id": {
                                "type": "Identifier",
                                "name": "Error"
                              },
                              "params": [
                                {
                                  "type": "Identifier",
                                  "name": "error"
                                }
                              ],
                              "defaults": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "ThisExpression"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "error"
                                        }
                                      },
                                      "right": {
                                        "type": "Identifier",
                                        "name": "error"
                                      }
                                    }
                                  }
                                ]
                              },
                              "rest": null,
                              "generator": false,
                              "expression": false
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Error"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "isError"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "Literal",
                                          "value": true
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Error"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "fmap"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "ThisExpression"
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Error"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "apply"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "ThisExpression"
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Error"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "describe"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "BinaryExpression",
                                          "operator": "+",
                                          "left": {
                                            "type": "Literal",
                                            "value": "<error> "
                                          },
                                          "right": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "error"
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ReturnStatement",
                              "argument": {
                                "type": "Identifier",
                                "name": "Error"
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "Event"
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "Observable"
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "FunctionDeclaration",
                              "id": {
                                "type": "Identifier",
                                "name": "Observable"
                              },
                              "params": [],
                              "defaults": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "ThisExpression"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "combine"
                                        }
                                      },
                                      "right": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "Identifier",
                                          "name": "__bind"
                                        },
                                        "arguments": [
                                          {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "combine"
                                            }
                                          },
                                          {
                                            "type": "ThisExpression"
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "ThisExpression"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "flatMapLatest"
                                        }
                                      },
                                      "right": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "Identifier",
                                          "name": "__bind"
                                        },
                                        "arguments": [
                                          {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "flatMapLatest"
                                            }
                                          },
                                          {
                                            "type": "ThisExpression"
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "ThisExpression"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "scan"
                                        }
                                      },
                                      "right": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "Identifier",
                                          "name": "__bind"
                                        },
                                        "arguments": [
                                          {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "scan"
                                            }
                                          },
                                          {
                                            "type": "ThisExpression"
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "ThisExpression"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "takeUntil"
                                        }
                                      },
                                      "right": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "Identifier",
                                          "name": "__bind"
                                        },
                                        "arguments": [
                                          {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "takeUntil"
                                            }
                                          },
                                          {
                                            "type": "ThisExpression"
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "ThisExpression"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "assign"
                                        }
                                      },
                                      "right": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "ThisExpression"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "onValue"
                                        }
                                      }
                                    }
                                  }
                                ]
                              },
                              "rest": null,
                              "generator": false,
                              "expression": false
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Observable"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "onValue"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "args"
                                            },
                                            "init": null
                                          },
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "f"
                                            },
                                            "init": null
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "SequenceExpression",
                                          "expressions": [
                                            {
                                              "type": "AssignmentExpression",
                                              "operator": "=",
                                              "left": {
                                                "type": "Identifier",
                                                "name": "f"
                                              },
                                              "right": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "arguments"
                                                },
                                                "property": {
                                                  "type": "Literal",
                                                  "value": 0
                                                }
                                              }
                                            },
                                            {
                                              "type": "AssignmentExpression",
                                              "operator": "=",
                                              "left": {
                                                "type": "Identifier",
                                                "name": "args"
                                              },
                                              "right": {
                                                "type": "ConditionalExpression",
                                                "test": {
                                                  "type": "BinaryExpression",
                                                  "operator": "<=",
                                                  "left": {
                                                    "type": "Literal",
                                                    "value": 2
                                                  },
                                                  "right": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "arguments"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "length"
                                                    }
                                                  }
                                                },
                                                "consequent": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "__slice"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "call"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "arguments"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": 1
                                                    }
                                                  ]
                                                },
                                                "alternate": {
                                                  "type": "ArrayExpression",
                                                  "elements": []
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "f"
                                          },
                                          "right": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "makeFunction"
                                            },
                                            "arguments": [
                                              {
                                                "type": "Identifier",
                                                "name": "f"
                                              },
                                              {
                                                "type": "Identifier",
                                                "name": "args"
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "subscribe"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "event"
                                                }
                                              ],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "IfStatement",
                                                    "test": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "event"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "hasValue"
                                                        }
                                                      },
                                                      "arguments": []
                                                    },
                                                    "consequent": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ReturnStatement",
                                                          "argument": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "Identifier",
                                                              "name": "f"
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "event"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "value"
                                                                  }
                                                                },
                                                                "arguments": []
                                                              }
                                                            ]
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "alternate": null
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Observable"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "onValues"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "f"
                                    }
                                  ],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "onValue"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "args"
                                                }
                                              ],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "f"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "apply"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Literal",
                                                          "value": null
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "name": "args"
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Observable"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "onError"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "args"
                                            },
                                            "init": null
                                          },
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "f"
                                            },
                                            "init": null
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "SequenceExpression",
                                          "expressions": [
                                            {
                                              "type": "AssignmentExpression",
                                              "operator": "=",
                                              "left": {
                                                "type": "Identifier",
                                                "name": "f"
                                              },
                                              "right": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "arguments"
                                                },
                                                "property": {
                                                  "type": "Literal",
                                                  "value": 0
                                                }
                                              }
                                            },
                                            {
                                              "type": "AssignmentExpression",
                                              "operator": "=",
                                              "left": {
                                                "type": "Identifier",
                                                "name": "args"
                                              },
                                              "right": {
                                                "type": "ConditionalExpression",
                                                "test": {
                                                  "type": "BinaryExpression",
                                                  "operator": "<=",
                                                  "left": {
                                                    "type": "Literal",
                                                    "value": 2
                                                  },
                                                  "right": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "arguments"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "length"
                                                    }
                                                  }
                                                },
                                                "consequent": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "__slice"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "call"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "arguments"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": 1
                                                    }
                                                  ]
                                                },
                                                "alternate": {
                                                  "type": "ArrayExpression",
                                                  "elements": []
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "f"
                                          },
                                          "right": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "makeFunction"
                                            },
                                            "arguments": [
                                              {
                                                "type": "Identifier",
                                                "name": "f"
                                              },
                                              {
                                                "type": "Identifier",
                                                "name": "args"
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "subscribe"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "event"
                                                }
                                              ],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "IfStatement",
                                                    "test": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "event"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "isError"
                                                        }
                                                      },
                                                      "arguments": []
                                                    },
                                                    "consequent": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ReturnStatement",
                                                          "argument": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "Identifier",
                                                              "name": "f"
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "event"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "error"
                                                                }
                                                              }
                                                            ]
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "alternate": null
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Observable"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "onEnd"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "args"
                                            },
                                            "init": null
                                          },
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "f"
                                            },
                                            "init": null
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "SequenceExpression",
                                          "expressions": [
                                            {
                                              "type": "AssignmentExpression",
                                              "operator": "=",
                                              "left": {
                                                "type": "Identifier",
                                                "name": "f"
                                              },
                                              "right": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "arguments"
                                                },
                                                "property": {
                                                  "type": "Literal",
                                                  "value": 0
                                                }
                                              }
                                            },
                                            {
                                              "type": "AssignmentExpression",
                                              "operator": "=",
                                              "left": {
                                                "type": "Identifier",
                                                "name": "args"
                                              },
                                              "right": {
                                                "type": "ConditionalExpression",
                                                "test": {
                                                  "type": "BinaryExpression",
                                                  "operator": "<=",
                                                  "left": {
                                                    "type": "Literal",
                                                    "value": 2
                                                  },
                                                  "right": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "arguments"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "length"
                                                    }
                                                  }
                                                },
                                                "consequent": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "__slice"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "call"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "arguments"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": 1
                                                    }
                                                  ]
                                                },
                                                "alternate": {
                                                  "type": "ArrayExpression",
                                                  "elements": []
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "f"
                                          },
                                          "right": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "makeFunction"
                                            },
                                            "arguments": [
                                              {
                                                "type": "Identifier",
                                                "name": "f"
                                              },
                                              {
                                                "type": "Identifier",
                                                "name": "args"
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "subscribe"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "event"
                                                }
                                              ],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "IfStatement",
                                                    "test": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "event"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "isEnd"
                                                        }
                                                      },
                                                      "arguments": []
                                                    },
                                                    "consequent": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ReturnStatement",
                                                          "argument": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "Identifier",
                                                              "name": "f"
                                                            },
                                                            "arguments": []
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "alternate": null
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Observable"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "errors"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "filter"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                      "type": "Literal",
                                                      "value": false
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Observable"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "filter"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "args"
                                            },
                                            "init": null
                                          },
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "f"
                                            },
                                            "init": null
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "SequenceExpression",
                                          "expressions": [
                                            {
                                              "type": "AssignmentExpression",
                                              "operator": "=",
                                              "left": {
                                                "type": "Identifier",
                                                "name": "f"
                                              },
                                              "right": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "arguments"
                                                },
                                                "property": {
                                                  "type": "Literal",
                                                  "value": 0
                                                }
                                              }
                                            },
                                            {
                                              "type": "AssignmentExpression",
                                              "operator": "=",
                                              "left": {
                                                "type": "Identifier",
                                                "name": "args"
                                              },
                                              "right": {
                                                "type": "ConditionalExpression",
                                                "test": {
                                                  "type": "BinaryExpression",
                                                  "operator": "<=",
                                                  "left": {
                                                    "type": "Literal",
                                                    "value": 2
                                                  },
                                                  "right": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "arguments"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "length"
                                                    }
                                                  }
                                                },
                                                "consequent": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "__slice"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "call"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "arguments"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": 1
                                                    }
                                                  ]
                                                },
                                                "alternate": {
                                                  "type": "ArrayExpression",
                                                  "elements": []
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "IfStatement",
                                        "test": {
                                          "type": "BinaryExpression",
                                          "operator": "instanceof",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "f"
                                          },
                                          "right": {
                                            "type": "Identifier",
                                            "name": "Property"
                                          }
                                        },
                                        "consequent": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ReturnStatement",
                                              "argument": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "f"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "sampledBy"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "ThisExpression"
                                                          },
                                                          {
                                                            "type": "FunctionExpression",
                                                            "id": null,
                                                            "params": [
                                                              {
                                                                "type": "Identifier",
                                                                "name": "p"
                                                              },
                                                              {
                                                                "type": "Identifier",
                                                                "name": "s"
                                                              }
                                                            ],
                                                            "defaults": [],
                                                            "body": {
                                                              "type": "BlockStatement",
                                                              "body": [
                                                                {
                                                                  "type": "ReturnStatement",
                                                                  "argument": {
                                                                    "type": "ArrayExpression",
                                                                    "elements": [
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "p"
                                                                      },
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "s"
                                                                      }
                                                                    ]
                                                                  }
                                                                }
                                                              ]
                                                            },
                                                            "rest": null,
                                                            "generator": false,
                                                            "expression": false
                                                          }
                                                        ]
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "filter"
                                                      }
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "FunctionExpression",
                                                        "id": null,
                                                        "params": [
                                                          {
                                                            "type": "Identifier",
                                                            "name": "_arg"
                                                          }
                                                        ],
                                                        "defaults": [],
                                                        "body": {
                                                          "type": "BlockStatement",
                                                          "body": [
                                                            {
                                                              "type": "VariableDeclaration",
                                                              "declarations": [
                                                                {
                                                                  "type": "VariableDeclarator",
                                                                  "id": {
                                                                    "type": "Identifier",
                                                                    "name": "p"
                                                                  },
                                                                  "init": null
                                                                },
                                                                {
                                                                  "type": "VariableDeclarator",
                                                                  "id": {
                                                                    "type": "Identifier",
                                                                    "name": "s"
                                                                  },
                                                                  "init": null
                                                                }
                                                              ],
                                                              "kind": "var"
                                                            },
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "expression": {
                                                                "type": "SequenceExpression",
                                                                "expressions": [
                                                                  {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                      "type": "Identifier",
                                                                      "name": "p"
                                                                    },
                                                                    "right": {
                                                                      "type": "MemberExpression",
                                                                      "computed": true,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_arg"
                                                                      },
                                                                      "property": {
                                                                        "type": "Literal",
                                                                        "value": 0
                                                                      }
                                                                    }
                                                                  },
                                                                  {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                      "type": "Identifier",
                                                                      "name": "s"
                                                                    },
                                                                    "right": {
                                                                      "type": "MemberExpression",
                                                                      "computed": true,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_arg"
                                                                      },
                                                                      "property": {
                                                                        "type": "Literal",
                                                                        "value": 1
                                                                      }
                                                                    }
                                                                  }
                                                                ]
                                                              }
                                                            },
                                                            {
                                                              "type": "ReturnStatement",
                                                              "argument": {
                                                                "type": "Identifier",
                                                                "name": "p"
                                                              }
                                                            }
                                                          ]
                                                        },
                                                        "rest": null,
                                                        "generator": false,
                                                        "expression": false
                                                      }
                                                    ]
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "map"
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "FunctionExpression",
                                                    "id": null,
                                                    "params": [
                                                      {
                                                        "type": "Identifier",
                                                        "name": "_arg"
                                                      }
                                                    ],
                                                    "defaults": [],
                                                    "body": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "VariableDeclaration",
                                                          "declarations": [
                                                            {
                                                              "type": "VariableDeclarator",
                                                              "id": {
                                                                "type": "Identifier",
                                                                "name": "p"
                                                              },
                                                              "init": null
                                                            },
                                                            {
                                                              "type": "VariableDeclarator",
                                                              "id": {
                                                                "type": "Identifier",
                                                                "name": "s"
                                                              },
                                                              "init": null
                                                            }
                                                          ],
                                                          "kind": "var"
                                                        },
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "SequenceExpression",
                                                            "expressions": [
                                                              {
                                                                "type": "AssignmentExpression",
                                                                "operator": "=",
                                                                "left": {
                                                                  "type": "Identifier",
                                                                  "name": "p"
                                                                },
                                                                "right": {
                                                                  "type": "MemberExpression",
                                                                  "computed": true,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_arg"
                                                                  },
                                                                  "property": {
                                                                    "type": "Literal",
                                                                    "value": 0
                                                                  }
                                                                }
                                                              },
                                                              {
                                                                "type": "AssignmentExpression",
                                                                "operator": "=",
                                                                "left": {
                                                                  "type": "Identifier",
                                                                  "name": "s"
                                                                },
                                                                "right": {
                                                                  "type": "MemberExpression",
                                                                  "computed": true,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_arg"
                                                                  },
                                                                  "property": {
                                                                    "type": "Literal",
                                                                    "value": 1
                                                                  }
                                                                }
                                                              }
                                                            ]
                                                          }
                                                        },
                                                        {
                                                          "type": "ReturnStatement",
                                                          "argument": {
                                                            "type": "Identifier",
                                                            "name": "s"
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "rest": null,
                                                    "generator": false,
                                                    "expression": false
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "alternate": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "f"
                                                },
                                                "right": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "Identifier",
                                                    "name": "makeFunction"
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "f"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "args"
                                                    }
                                                  ]
                                                }
                                              }
                                            },
                                            {
                                              "type": "ReturnStatement",
                                              "argument": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "ThisExpression"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "withHandler"
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "FunctionExpression",
                                                    "id": null,
                                                    "params": [
                                                      {
                                                        "type": "Identifier",
                                                        "name": "event"
                                                      }
                                                    ],
                                                    "defaults": [],
                                                    "body": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "IfStatement",
                                                          "test": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "event"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "filter"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "Identifier",
                                                                "name": "f"
                                                              }
                                                            ]
                                                          },
                                                          "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                              {
                                                                "type": "ReturnStatement",
                                                                "argument": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "push"
                                                                    }
                                                                  },
                                                                  "arguments": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "name": "event"
                                                                    }
                                                                  ]
                                                                }
                                                              }
                                                            ]
                                                          },
                                                          "alternate": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                              {
                                                                "type": "ReturnStatement",
                                                                "argument": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "Bacon"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "more"
                                                                  }
                                                                }
                                                              }
                                                            ]
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "rest": null,
                                                    "generator": false,
                                                    "expression": false
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Observable"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "takeWhile"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "args"
                                            },
                                            "init": null
                                          },
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "f"
                                            },
                                            "init": null
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "SequenceExpression",
                                          "expressions": [
                                            {
                                              "type": "AssignmentExpression",
                                              "operator": "=",
                                              "left": {
                                                "type": "Identifier",
                                                "name": "f"
                                              },
                                              "right": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "arguments"
                                                },
                                                "property": {
                                                  "type": "Literal",
                                                  "value": 0
                                                }
                                              }
                                            },
                                            {
                                              "type": "AssignmentExpression",
                                              "operator": "=",
                                              "left": {
                                                "type": "Identifier",
                                                "name": "args"
                                              },
                                              "right": {
                                                "type": "ConditionalExpression",
                                                "test": {
                                                  "type": "BinaryExpression",
                                                  "operator": "<=",
                                                  "left": {
                                                    "type": "Literal",
                                                    "value": 2
                                                  },
                                                  "right": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "arguments"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "length"
                                                    }
                                                  }
                                                },
                                                "consequent": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "__slice"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "call"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "arguments"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": 1
                                                    }
                                                  ]
                                                },
                                                "alternate": {
                                                  "type": "ArrayExpression",
                                                  "elements": []
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "f"
                                          },
                                          "right": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "makeFunction"
                                            },
                                            "arguments": [
                                              {
                                                "type": "Identifier",
                                                "name": "f"
                                              },
                                              {
                                                "type": "Identifier",
                                                "name": "args"
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "withHandler"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "event"
                                                }
                                              ],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "IfStatement",
                                                    "test": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "event"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "filter"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "f"
                                                        }
                                                      ]
                                                    },
                                                    "consequent": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ReturnStatement",
                                                          "argument": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "ThisExpression"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "push"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "Identifier",
                                                                "name": "event"
                                                              }
                                                            ]
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "alternate": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "ThisExpression"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "push"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "Identifier",
                                                                  "name": "end"
                                                                },
                                                                "arguments": []
                                                              }
                                                            ]
                                                          }
                                                        },
                                                        {
                                                          "type": "ReturnStatement",
                                                          "argument": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "Bacon"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "noMore"
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Observable"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "endOnError"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "withHandler"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "event"
                                                }
                                              ],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "IfStatement",
                                                    "test": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "event"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "isError"
                                                        }
                                                      },
                                                      "arguments": []
                                                    },
                                                    "consequent": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "ThisExpression"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "push"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "Identifier",
                                                                "name": "event"
                                                              }
                                                            ]
                                                          }
                                                        },
                                                        {
                                                          "type": "ReturnStatement",
                                                          "argument": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "ThisExpression"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "push"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "Identifier",
                                                                  "name": "end"
                                                                },
                                                                "arguments": []
                                                              }
                                                            ]
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "alternate": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ReturnStatement",
                                                          "argument": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "ThisExpression"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "push"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "Identifier",
                                                                "name": "event"
                                                              }
                                                            ]
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Observable"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "take"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "count"
                                    }
                                  ],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "IfStatement",
                                        "test": {
                                          "type": "BinaryExpression",
                                          "operator": "<=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "count"
                                          },
                                          "right": {
                                            "type": "Literal",
                                            "value": 0
                                          }
                                        },
                                        "consequent": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ReturnStatement",
                                              "argument": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "Bacon"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "never"
                                                  }
                                                },
                                                "arguments": []
                                              }
                                            }
                                          ]
                                        },
                                        "alternate": null
                                      },
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "withHandler"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "event"
                                                }
                                              ],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "IfStatement",
                                                    "test": {
                                                      "type": "UnaryExpression",
                                                      "operator": "!",
                                                      "argument": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "event"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "hasValue"
                                                          }
                                                        },
                                                        "arguments": []
                                                      },
                                                      "prefix": true
                                                    },
                                                    "consequent": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ReturnStatement",
                                                          "argument": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "ThisExpression"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "push"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "Identifier",
                                                                "name": "event"
                                                              }
                                                            ]
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "alternate": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "UpdateExpression",
                                                            "operator": "--",
                                                            "argument": {
                                                              "type": "Identifier",
                                                              "name": "count"
                                                            },
                                                            "prefix": false
                                                          }
                                                        },
                                                        {
                                                          "type": "IfStatement",
                                                          "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": ">",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "count"
                                                            },
                                                            "right": {
                                                              "type": "Literal",
                                                              "value": 0
                                                            }
                                                          },
                                                          "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                              {
                                                                "type": "ReturnStatement",
                                                                "argument": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "push"
                                                                    }
                                                                  },
                                                                  "arguments": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "name": "event"
                                                                    }
                                                                  ]
                                                                }
                                                              }
                                                            ]
                                                          },
                                                          "alternate": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                              {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "push"
                                                                    }
                                                                  },
                                                                  "arguments": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "name": "event"
                                                                    }
                                                                  ]
                                                                }
                                                              },
                                                              {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "push"
                                                                    }
                                                                  },
                                                                  "arguments": [
                                                                    {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "Identifier",
                                                                        "name": "end"
                                                                      },
                                                                      "arguments": []
                                                                    }
                                                                  ]
                                                                }
                                                              },
                                                              {
                                                                "type": "ReturnStatement",
                                                                "argument": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "Bacon"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "noMore"
                                                                  }
                                                                }
                                                              }
                                                            ]
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Observable"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "map"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "args"
                                            },
                                            "init": null
                                          },
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "f"
                                            },
                                            "init": null
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "SequenceExpression",
                                          "expressions": [
                                            {
                                              "type": "AssignmentExpression",
                                              "operator": "=",
                                              "left": {
                                                "type": "Identifier",
                                                "name": "f"
                                              },
                                              "right": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "arguments"
                                                },
                                                "property": {
                                                  "type": "Literal",
                                                  "value": 0
                                                }
                                              }
                                            },
                                            {
                                              "type": "AssignmentExpression",
                                              "operator": "=",
                                              "left": {
                                                "type": "Identifier",
                                                "name": "args"
                                              },
                                              "right": {
                                                "type": "ConditionalExpression",
                                                "test": {
                                                  "type": "BinaryExpression",
                                                  "operator": "<=",
                                                  "left": {
                                                    "type": "Literal",
                                                    "value": 2
                                                  },
                                                  "right": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "arguments"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "length"
                                                    }
                                                  }
                                                },
                                                "consequent": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "__slice"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "call"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "arguments"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": 1
                                                    }
                                                  ]
                                                },
                                                "alternate": {
                                                  "type": "ArrayExpression",
                                                  "elements": []
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "f"
                                          },
                                          "right": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "makeFunction"
                                            },
                                            "arguments": [
                                              {
                                                "type": "Identifier",
                                                "name": "f"
                                              },
                                              {
                                                "type": "Identifier",
                                                "name": "args"
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "withHandler"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "event"
                                                }
                                              ],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "push"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "event"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "fmap"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "Identifier",
                                                              "name": "f"
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Observable"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "mapError"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "args"
                                            },
                                            "init": null
                                          },
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "f"
                                            },
                                            "init": null
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "SequenceExpression",
                                          "expressions": [
                                            {
                                              "type": "AssignmentExpression",
                                              "operator": "=",
                                              "left": {
                                                "type": "Identifier",
                                                "name": "f"
                                              },
                                              "right": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "arguments"
                                                },
                                                "property": {
                                                  "type": "Literal",
                                                  "value": 0
                                                }
                                              }
                                            },
                                            {
                                              "type": "AssignmentExpression",
                                              "operator": "=",
                                              "left": {
                                                "type": "Identifier",
                                                "name": "args"
                                              },
                                              "right": {
                                                "type": "ConditionalExpression",
                                                "test": {
                                                  "type": "BinaryExpression",
                                                  "operator": "<=",
                                                  "left": {
                                                    "type": "Literal",
                                                    "value": 2
                                                  },
                                                  "right": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "arguments"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "length"
                                                    }
                                                  }
                                                },
                                                "consequent": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "__slice"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "call"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "arguments"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": 1
                                                    }
                                                  ]
                                                },
                                                "alternate": {
                                                  "type": "ArrayExpression",
                                                  "elements": []
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "f"
                                          },
                                          "right": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "makeFunction"
                                            },
                                            "arguments": [
                                              {
                                                "type": "Identifier",
                                                "name": "f"
                                              },
                                              {
                                                "type": "Identifier",
                                                "name": "args"
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "withHandler"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "event"
                                                }
                                              ],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "IfStatement",
                                                    "test": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "event"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "isError"
                                                        }
                                                      },
                                                      "arguments": []
                                                    },
                                                    "consequent": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ReturnStatement",
                                                          "argument": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "ThisExpression"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "push"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "Identifier",
                                                                  "name": "next"
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "Identifier",
                                                                      "name": "f"
                                                                    },
                                                                    "arguments": [
                                                                      {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "event"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "error"
                                                                        }
                                                                      }
                                                                    ]
                                                                  }
                                                                ]
                                                              }
                                                            ]
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "alternate": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ReturnStatement",
                                                          "argument": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "ThisExpression"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "push"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "Identifier",
                                                                "name": "event"
                                                              }
                                                            ]
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Observable"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "mapEnd"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "args"
                                            },
                                            "init": null
                                          },
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "f"
                                            },
                                            "init": null
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "SequenceExpression",
                                          "expressions": [
                                            {
                                              "type": "AssignmentExpression",
                                              "operator": "=",
                                              "left": {
                                                "type": "Identifier",
                                                "name": "f"
                                              },
                                              "right": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "arguments"
                                                },
                                                "property": {
                                                  "type": "Literal",
                                                  "value": 0
                                                }
                                              }
                                            },
                                            {
                                              "type": "AssignmentExpression",
                                              "operator": "=",
                                              "left": {
                                                "type": "Identifier",
                                                "name": "args"
                                              },
                                              "right": {
                                                "type": "ConditionalExpression",
                                                "test": {
                                                  "type": "BinaryExpression",
                                                  "operator": "<=",
                                                  "left": {
                                                    "type": "Literal",
                                                    "value": 2
                                                  },
                                                  "right": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "arguments"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "length"
                                                    }
                                                  }
                                                },
                                                "consequent": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "__slice"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "call"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "arguments"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": 1
                                                    }
                                                  ]
                                                },
                                                "alternate": {
                                                  "type": "ArrayExpression",
                                                  "elements": []
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "f"
                                          },
                                          "right": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "makeFunction"
                                            },
                                            "arguments": [
                                              {
                                                "type": "Identifier",
                                                "name": "f"
                                              },
                                              {
                                                "type": "Identifier",
                                                "name": "args"
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "withHandler"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "event"
                                                }
                                              ],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "IfStatement",
                                                    "test": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "event"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "isEnd"
                                                        }
                                                      },
                                                      "arguments": []
                                                    },
                                                    "consequent": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "ThisExpression"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "push"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "Identifier",
                                                                  "name": "next"
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "Identifier",
                                                                      "name": "f"
                                                                    },
                                                                    "arguments": [
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "event"
                                                                      }
                                                                    ]
                                                                  }
                                                                ]
                                                              }
                                                            ]
                                                          }
                                                        },
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "ThisExpression"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "push"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "Identifier",
                                                                  "name": "end"
                                                                },
                                                                "arguments": []
                                                              }
                                                            ]
                                                          }
                                                        },
                                                        {
                                                          "type": "ReturnStatement",
                                                          "argument": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "Bacon"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "noMore"
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "alternate": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ReturnStatement",
                                                          "argument": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "ThisExpression"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "push"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "Identifier",
                                                                "name": "event"
                                                              }
                                                            ]
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Observable"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "doAction"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "args"
                                            },
                                            "init": null
                                          },
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "f"
                                            },
                                            "init": null
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "SequenceExpression",
                                          "expressions": [
                                            {
                                              "type": "AssignmentExpression",
                                              "operator": "=",
                                              "left": {
                                                "type": "Identifier",
                                                "name": "f"
                                              },
                                              "right": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "arguments"
                                                },
                                                "property": {
                                                  "type": "Literal",
                                                  "value": 0
                                                }
                                              }
                                            },
                                            {
                                              "type": "AssignmentExpression",
                                              "operator": "=",
                                              "left": {
                                                "type": "Identifier",
                                                "name": "args"
                                              },
                                              "right": {
                                                "type": "ConditionalExpression",
                                                "test": {
                                                  "type": "BinaryExpression",
                                                  "operator": "<=",
                                                  "left": {
                                                    "type": "Literal",
                                                    "value": 2
                                                  },
                                                  "right": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "arguments"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "length"
                                                    }
                                                  }
                                                },
                                                "consequent": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "__slice"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "call"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "arguments"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": 1
                                                    }
                                                  ]
                                                },
                                                "alternate": {
                                                  "type": "ArrayExpression",
                                                  "elements": []
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "f"
                                          },
                                          "right": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "makeFunction"
                                            },
                                            "arguments": [
                                              {
                                                "type": "Identifier",
                                                "name": "f"
                                              },
                                              {
                                                "type": "Identifier",
                                                "name": "args"
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "withHandler"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "event"
                                                }
                                              ],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "IfStatement",
                                                    "test": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "event"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "hasValue"
                                                        }
                                                      },
                                                      "arguments": []
                                                    },
                                                    "consequent": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "Identifier",
                                                              "name": "f"
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "event"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "value"
                                                                  }
                                                                },
                                                                "arguments": []
                                                              }
                                                            ]
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "alternate": null
                                                  },
                                                  {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "push"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "event"
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Observable"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "takeUntil"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "stopper"
                                    }
                                  ],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "src"
                                            },
                                            "init": null
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "src"
                                          },
                                          "right": {
                                            "type": "ThisExpression"
                                          }
                                        }
                                      },
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "withSubscribe"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "sink"
                                                }
                                              ],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                      {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                          "type": "Identifier",
                                                          "name": "srcSink"
                                                        },
                                                        "init": null
                                                      },
                                                      {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                          "type": "Identifier",
                                                          "name": "stopperSink"
                                                        },
                                                        "init": null
                                                      },
                                                      {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                          "type": "Identifier",
                                                          "name": "unsubBoth"
                                                        },
                                                        "init": null
                                                      },
                                                      {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                          "type": "Identifier",
                                                          "name": "unsubSrc"
                                                        },
                                                        "init": null
                                                      },
                                                      {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                          "type": "Identifier",
                                                          "name": "unsubStopper"
                                                        },
                                                        "init": null
                                                      },
                                                      {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                          "type": "Identifier",
                                                          "name": "unsubscribed"
                                                        },
                                                        "init": null
                                                      }
                                                    ],
                                                    "kind": "var"
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "unsubscribed"
                                                      },
                                                      "right": {
                                                        "type": "Literal",
                                                        "value": false
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "unsubSrc"
                                                      },
                                                      "right": {
                                                        "type": "Identifier",
                                                        "name": "nop"
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "unsubStopper"
                                                      },
                                                      "right": {
                                                        "type": "Identifier",
                                                        "name": "nop"
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "unsubBoth"
                                                      },
                                                      "right": {
                                                        "type": "FunctionExpression",
                                                        "id": null,
                                                        "params": [],
                                                        "defaults": [],
                                                        "body": {
                                                          "type": "BlockStatement",
                                                          "body": [
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "Identifier",
                                                                  "name": "unsubSrc"
                                                                },
                                                                "arguments": []
                                                              }
                                                            },
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "Identifier",
                                                                  "name": "unsubStopper"
                                                                },
                                                                "arguments": []
                                                              }
                                                            },
                                                            {
                                                              "type": "ReturnStatement",
                                                              "argument": {
                                                                "type": "AssignmentExpression",
                                                                "operator": "=",
                                                                "left": {
                                                                  "type": "Identifier",
                                                                  "name": "unsubscribed"
                                                                },
                                                                "right": {
                                                                  "type": "Literal",
                                                                  "value": true
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        },
                                                        "rest": null,
                                                        "generator": false,
                                                        "expression": false
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "srcSink"
                                                      },
                                                      "right": {
                                                        "type": "FunctionExpression",
                                                        "id": null,
                                                        "params": [
                                                          {
                                                            "type": "Identifier",
                                                            "name": "event"
                                                          }
                                                        ],
                                                        "defaults": [],
                                                        "body": {
                                                          "type": "BlockStatement",
                                                          "body": [
                                                            {
                                                              "type": "IfStatement",
                                                              "test": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "event"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "isEnd"
                                                                  }
                                                                },
                                                                "arguments": []
                                                              },
                                                              "consequent": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                  {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "Identifier",
                                                                        "name": "unsubStopper"
                                                                      },
                                                                      "arguments": []
                                                                    }
                                                                  },
                                                                  {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "Identifier",
                                                                        "name": "sink"
                                                                      },
                                                                      "arguments": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "name": "event"
                                                                        }
                                                                      ]
                                                                    }
                                                                  },
                                                                  {
                                                                    "type": "ReturnStatement",
                                                                    "argument": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "Bacon"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "noMore"
                                                                      }
                                                                    }
                                                                  }
                                                                ]
                                                              },
                                                              "alternate": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                  {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "event"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "onDone"
                                                                        }
                                                                      },
                                                                      "arguments": [
                                                                        {
                                                                          "type": "FunctionExpression",
                                                                          "id": null,
                                                                          "params": [],
                                                                          "defaults": [],
                                                                          "body": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                              {
                                                                                "type": "VariableDeclaration",
                                                                                "declarations": [
                                                                                  {
                                                                                    "type": "VariableDeclarator",
                                                                                    "id": {
                                                                                      "type": "Identifier",
                                                                                      "name": "reply"
                                                                                    },
                                                                                    "init": null
                                                                                  }
                                                                                ],
                                                                                "kind": "var"
                                                                              },
                                                                              {
                                                                                "type": "IfStatement",
                                                                                "test": {
                                                                                  "type": "UnaryExpression",
                                                                                  "operator": "!",
                                                                                  "argument": {
                                                                                    "type": "Identifier",
                                                                                    "name": "unsubscribed"
                                                                                  },
                                                                                  "prefix": true
                                                                                },
                                                                                "consequent": {
                                                                                  "type": "BlockStatement",
                                                                                  "body": [
                                                                                    {
                                                                                      "type": "ExpressionStatement",
                                                                                      "expression": {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "=",
                                                                                        "left": {
                                                                                          "type": "Identifier",
                                                                                          "name": "reply"
                                                                                        },
                                                                                        "right": {
                                                                                          "type": "CallExpression",
                                                                                          "callee": {
                                                                                            "type": "Identifier",
                                                                                            "name": "sink"
                                                                                          },
                                                                                          "arguments": [
                                                                                            {
                                                                                              "type": "Identifier",
                                                                                              "name": "event"
                                                                                            }
                                                                                          ]
                                                                                        }
                                                                                      }
                                                                                    },
                                                                                    {
                                                                                      "type": "IfStatement",
                                                                                      "test": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "===",
                                                                                        "left": {
                                                                                          "type": "Identifier",
                                                                                          "name": "reply"
                                                                                        },
                                                                                        "right": {
                                                                                          "type": "MemberExpression",
                                                                                          "computed": false,
                                                                                          "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "Bacon"
                                                                                          },
                                                                                          "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "noMore"
                                                                                          }
                                                                                        }
                                                                                      },
                                                                                      "consequent": {
                                                                                        "type": "BlockStatement",
                                                                                        "body": [
                                                                                          {
                                                                                            "type": "ReturnStatement",
                                                                                            "argument": {
                                                                                              "type": "CallExpression",
                                                                                              "callee": {
                                                                                                "type": "Identifier",
                                                                                                "name": "unsubBoth"
                                                                                              },
                                                                                              "arguments": []
                                                                                            }
                                                                                          }
                                                                                        ]
                                                                                      },
                                                                                      "alternate": null
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                "alternate": null
                                                                              }
                                                                            ]
                                                                          },
                                                                          "rest": null,
                                                                          "generator": false,
                                                                          "expression": false
                                                                        }
                                                                      ]
                                                                    }
                                                                  },
                                                                  {
                                                                    "type": "ReturnStatement",
                                                                    "argument": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "Bacon"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "more"
                                                                      }
                                                                    }
                                                                  }
                                                                ]
                                                              }
                                                            }
                                                          ]
                                                        },
                                                        "rest": null,
                                                        "generator": false,
                                                        "expression": false
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "stopperSink"
                                                      },
                                                      "right": {
                                                        "type": "FunctionExpression",
                                                        "id": null,
                                                        "params": [
                                                          {
                                                            "type": "Identifier",
                                                            "name": "event"
                                                          }
                                                        ],
                                                        "defaults": [],
                                                        "body": {
                                                          "type": "BlockStatement",
                                                          "body": [
                                                            {
                                                              "type": "IfStatement",
                                                              "test": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "event"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "isError"
                                                                  }
                                                                },
                                                                "arguments": []
                                                              },
                                                              "consequent": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                  {
                                                                    "type": "ReturnStatement",
                                                                    "argument": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "Bacon"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "more"
                                                                      }
                                                                    }
                                                                  }
                                                                ]
                                                              },
                                                              "alternate": {
                                                                "type": "IfStatement",
                                                                "test": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "event"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "isEnd"
                                                                    }
                                                                  },
                                                                  "arguments": []
                                                                },
                                                                "consequent": {
                                                                  "type": "BlockStatement",
                                                                  "body": [
                                                                    {
                                                                      "type": "ReturnStatement",
                                                                      "argument": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "Bacon"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "noMore"
                                                                        }
                                                                      }
                                                                    }
                                                                  ]
                                                                },
                                                                "alternate": {
                                                                  "type": "BlockStatement",
                                                                  "body": [
                                                                    {
                                                                      "type": "ExpressionStatement",
                                                                      "expression": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                          "type": "Identifier",
                                                                          "name": "unsubSrc"
                                                                        },
                                                                        "arguments": []
                                                                      }
                                                                    },
                                                                    {
                                                                      "type": "ExpressionStatement",
                                                                      "expression": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                          "type": "Identifier",
                                                                          "name": "sink"
                                                                        },
                                                                        "arguments": [
                                                                          {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                              "type": "Identifier",
                                                                              "name": "end"
                                                                            },
                                                                            "arguments": []
                                                                          }
                                                                        ]
                                                                      }
                                                                    },
                                                                    {
                                                                      "type": "ReturnStatement",
                                                                      "argument": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "Bacon"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "noMore"
                                                                        }
                                                                      }
                                                                    }
                                                                  ]
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        },
                                                        "rest": null,
                                                        "generator": false,
                                                        "expression": false
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "unsubSrc"
                                                      },
                                                      "right": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "src"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "subscribe"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Identifier",
                                                            "name": "srcSink"
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "IfStatement",
                                                    "test": {
                                                      "type": "UnaryExpression",
                                                      "operator": "!",
                                                      "argument": {
                                                        "type": "Identifier",
                                                        "name": "unsubscribed"
                                                      },
                                                      "prefix": true
                                                    },
                                                    "consequent": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "unsubStopper"
                                                            },
                                                            "right": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "stopper"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "subscribe"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "stopperSink"
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "alternate": null
                                                  },
                                                  {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                      "type": "Identifier",
                                                      "name": "unsubBoth"
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Observable"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "skip"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "count"
                                    }
                                  ],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "withHandler"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "event"
                                                }
                                              ],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "IfStatement",
                                                    "test": {
                                                      "type": "UnaryExpression",
                                                      "operator": "!",
                                                      "argument": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "event"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "hasValue"
                                                          }
                                                        },
                                                        "arguments": []
                                                      },
                                                      "prefix": true
                                                    },
                                                    "consequent": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ReturnStatement",
                                                          "argument": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "ThisExpression"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "push"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "Identifier",
                                                                "name": "event"
                                                              }
                                                            ]
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "alternate": {
                                                      "type": "IfStatement",
                                                      "test": {
                                                        "type": "BinaryExpression",
                                                        "operator": ">",
                                                        "left": {
                                                          "type": "Identifier",
                                                          "name": "count"
                                                        },
                                                        "right": {
                                                          "type": "Literal",
                                                          "value": 0
                                                        }
                                                      },
                                                      "consequent": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "UpdateExpression",
                                                              "operator": "--",
                                                              "argument": {
                                                                "type": "Identifier",
                                                                "name": "count"
                                                              },
                                                              "prefix": false
                                                            }
                                                          },
                                                          {
                                                            "type": "ReturnStatement",
                                                            "argument": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "Bacon"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "more"
                                                              }
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      "alternate": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "ReturnStatement",
                                                            "argument": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "push"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "event"
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Observable"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "skipDuplicates"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "isEqual"
                                    }
                                  ],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "IfStatement",
                                        "test": {
                                          "type": "BinaryExpression",
                                          "operator": "==",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "isEqual"
                                          },
                                          "right": {
                                            "type": "Literal",
                                            "value": null
                                          }
                                        },
                                        "consequent": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "isEqual"
                                                },
                                                "right": {
                                                  "type": "FunctionExpression",
                                                  "id": null,
                                                  "params": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "a"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "b"
                                                    }
                                                  ],
                                                  "defaults": [],
                                                  "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                          "type": "BinaryExpression",
                                                          "operator": "===",
                                                          "left": {
                                                            "type": "Identifier",
                                                            "name": "a"
                                                          },
                                                          "right": {
                                                            "type": "Identifier",
                                                            "name": "b"
                                                          }
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "rest": null,
                                                  "generator": false,
                                                  "expression": false
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "alternate": null
                                      },
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "withStateMachine"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Identifier",
                                              "name": "None"
                                            },
                                            {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "prev"
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "name": "event"
                                                }
                                              ],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "IfStatement",
                                                    "test": {
                                                      "type": "UnaryExpression",
                                                      "operator": "!",
                                                      "argument": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "event"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "hasValue"
                                                          }
                                                        },
                                                        "arguments": []
                                                      },
                                                      "prefix": true
                                                    },
                                                    "consequent": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ReturnStatement",
                                                          "argument": {
                                                            "type": "ArrayExpression",
                                                            "elements": [
                                                              {
                                                                "type": "Identifier",
                                                                "name": "prev"
                                                              },
                                                              {
                                                                "type": "ArrayExpression",
                                                                "elements": [
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "event"
                                                                  }
                                                                ]
                                                              }
                                                            ]
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "alternate": {
                                                      "type": "IfStatement",
                                                      "test": {
                                                        "type": "LogicalExpression",
                                                        "operator": "||",
                                                        "left": {
                                                          "type": "BinaryExpression",
                                                          "operator": "===",
                                                          "left": {
                                                            "type": "Identifier",
                                                            "name": "prev"
                                                          },
                                                          "right": {
                                                            "type": "Identifier",
                                                            "name": "None"
                                                          }
                                                        },
                                                        "right": {
                                                          "type": "UnaryExpression",
                                                          "operator": "!",
                                                          "argument": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "Identifier",
                                                              "name": "isEqual"
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "prev"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "get"
                                                                  }
                                                                },
                                                                "arguments": []
                                                              },
                                                              {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "event"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "value"
                                                                  }
                                                                },
                                                                "arguments": []
                                                              }
                                                            ]
                                                          },
                                                          "prefix": true
                                                        }
                                                      },
                                                      "consequent": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "ReturnStatement",
                                                            "argument": {
                                                              "type": "ArrayExpression",
                                                              "elements": [
                                                                {
                                                                  "type": "NewExpression",
                                                                  "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "Some"
                                                                  },
                                                                  "arguments": [
                                                                    {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "event"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "value"
                                                                        }
                                                                      },
                                                                      "arguments": []
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "ArrayExpression",
                                                                  "elements": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "name": "event"
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      "alternate": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "ReturnStatement",
                                                            "argument": {
                                                              "type": "ArrayExpression",
                                                              "elements": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "prev"
                                                                },
                                                                {
                                                                  "type": "ArrayExpression",
                                                                  "elements": []
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Observable"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "withStateMachine"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "initState"
                                    },
                                    {
                                      "type": "Identifier",
                                      "name": "f"
                                    }
                                  ],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "state"
                                            },
                                            "init": null
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "state"
                                          },
                                          "right": {
                                            "type": "Identifier",
                                            "name": "initState"
                                          }
                                        }
                                      },
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "withHandler"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "event"
                                                }
                                              ],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                      {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                          "type": "Identifier",
                                                          "name": "fromF"
                                                        },
                                                        "init": null
                                                      },
                                                      {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                          "type": "Identifier",
                                                          "name": "newState"
                                                        },
                                                        "init": null
                                                      },
                                                      {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                          "type": "Identifier",
                                                          "name": "output"
                                                        },
                                                        "init": null
                                                      },
                                                      {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                          "type": "Identifier",
                                                          "name": "outputs"
                                                        },
                                                        "init": null
                                                      },
                                                      {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                          "type": "Identifier",
                                                          "name": "reply"
                                                        },
                                                        "init": null
                                                      },
                                                      {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                          "type": "Identifier",
                                                          "name": "_i"
                                                        },
                                                        "init": null
                                                      },
                                                      {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                          "type": "Identifier",
                                                          "name": "_len"
                                                        },
                                                        "init": null
                                                      }
                                                    ],
                                                    "kind": "var"
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "fromF"
                                                      },
                                                      "right": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "Identifier",
                                                          "name": "f"
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Identifier",
                                                            "name": "state"
                                                          },
                                                          {
                                                            "type": "Identifier",
                                                            "name": "event"
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "SequenceExpression",
                                                      "expressions": [
                                                        {
                                                          "type": "AssignmentExpression",
                                                          "operator": "=",
                                                          "left": {
                                                            "type": "Identifier",
                                                            "name": "newState"
                                                          },
                                                          "right": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "fromF"
                                                            },
                                                            "property": {
                                                              "type": "Literal",
                                                              "value": 0
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "AssignmentExpression",
                                                          "operator": "=",
                                                          "left": {
                                                            "type": "Identifier",
                                                            "name": "outputs"
                                                          },
                                                          "right": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "fromF"
                                                            },
                                                            "property": {
                                                              "type": "Literal",
                                                              "value": 1
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "state"
                                                      },
                                                      "right": {
                                                        "type": "Identifier",
                                                        "name": "newState"
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "reply"
                                                      },
                                                      "right": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "Bacon"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "more"
                                                        }
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ForStatement",
                                                    "init": {
                                                      "type": "SequenceExpression",
                                                      "expressions": [
                                                        {
                                                          "type": "AssignmentExpression",
                                                          "operator": "=",
                                                          "left": {
                                                            "type": "Identifier",
                                                            "name": "_i"
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": 0
                                                          }
                                                        },
                                                        {
                                                          "type": "AssignmentExpression",
                                                          "operator": "=",
                                                          "left": {
                                                            "type": "Identifier",
                                                            "name": "_len"
                                                          },
                                                          "right": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "outputs"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "length"
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "test": {
                                                      "type": "BinaryExpression",
                                                      "operator": "<",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "_i"
                                                      },
                                                      "right": {
                                                        "type": "Identifier",
                                                        "name": "_len"
                                                      }
                                                    },
                                                    "update": {
                                                      "type": "UpdateExpression",
                                                      "operator": "++",
                                                      "argument": {
                                                        "type": "Identifier",
                                                        "name": "_i"
                                                      },
                                                      "prefix": false
                                                    },
                                                    "body": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "output"
                                                            },
                                                            "right": {
                                                              "type": "MemberExpression",
                                                              "computed": true,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "outputs"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "_i"
                                                              }
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "reply"
                                                            },
                                                            "right": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "push"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "output"
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "IfStatement",
                                                          "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "===",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "reply"
                                                            },
                                                            "right": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "Bacon"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "noMore"
                                                              }
                                                            }
                                                          },
                                                          "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                              {
                                                                "type": "ReturnStatement",
                                                                "argument": {
                                                                  "type": "Identifier",
                                                                  "name": "reply"
                                                                }
                                                              }
                                                            ]
                                                          },
                                                          "alternate": null
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                      "type": "Identifier",
                                                      "name": "reply"
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Observable"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "scan"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "seed"
                                    },
                                    {
                                      "type": "Identifier",
                                      "name": "f"
                                    }
                                  ],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "acc"
                                            },
                                            "init": null
                                          },
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "subscribe"
                                            },
                                            "init": null
                                          },
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "_this"
                                            },
                                            "init": {
                                              "type": "ThisExpression"
                                            }
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "f"
                                          },
                                          "right": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "toCombinator"
                                            },
                                            "arguments": [
                                              {
                                                "type": "Identifier",
                                                "name": "f"
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "acc"
                                          },
                                          "right": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "toOption"
                                            },
                                            "arguments": [
                                              {
                                                "type": "Identifier",
                                                "name": "seed"
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "subscribe"
                                          },
                                          "right": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                              {
                                                "type": "Identifier",
                                                "name": "sink"
                                              }
                                            ],
                                            "defaults": [],
                                            "body": {
                                              "type": "BlockStatement",
                                              "body": [
                                                {
                                                  "type": "VariableDeclaration",
                                                  "declarations": [
                                                    {
                                                      "type": "VariableDeclarator",
                                                      "id": {
                                                        "type": "Identifier",
                                                        "name": "initSent"
                                                      },
                                                      "init": null
                                                    },
                                                    {
                                                      "type": "VariableDeclarator",
                                                      "id": {
                                                        "type": "Identifier",
                                                        "name": "reply"
                                                      },
                                                      "init": null
                                                    },
                                                    {
                                                      "type": "VariableDeclarator",
                                                      "id": {
                                                        "type": "Identifier",
                                                        "name": "sendInit"
                                                      },
                                                      "init": null
                                                    },
                                                    {
                                                      "type": "VariableDeclarator",
                                                      "id": {
                                                        "type": "Identifier",
                                                        "name": "unsub"
                                                      },
                                                      "init": null
                                                    }
                                                  ],
                                                  "kind": "var"
                                                },
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "initSent"
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": false
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "unsub"
                                                    },
                                                    "right": {
                                                      "type": "Identifier",
                                                      "name": "nop"
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "reply"
                                                    },
                                                    "right": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "Bacon"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "more"
                                                      }
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "sendInit"
                                                    },
                                                    "right": {
                                                      "type": "FunctionExpression",
                                                      "id": null,
                                                      "params": [],
                                                      "defaults": [],
                                                      "body": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "IfStatement",
                                                            "test": {
                                                              "type": "UnaryExpression",
                                                              "operator": "!",
                                                              "argument": {
                                                                "type": "Identifier",
                                                                "name": "initSent"
                                                              },
                                                              "prefix": true
                                                            },
                                                            "consequent": {
                                                              "type": "BlockStatement",
                                                              "body": [
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                      "type": "Identifier",
                                                                      "name": "initSent"
                                                                    },
                                                                    "right": {
                                                                      "type": "Literal",
                                                                      "value": true
                                                                    }
                                                                  }
                                                                },
                                                                {
                                                                  "type": "ReturnStatement",
                                                                  "argument": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "acc"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "forEach"
                                                                      }
                                                                    },
                                                                    "arguments": [
                                                                      {
                                                                        "type": "FunctionExpression",
                                                                        "id": null,
                                                                        "params": [
                                                                          {
                                                                            "type": "Identifier",
                                                                            "name": "value"
                                                                          }
                                                                        ],
                                                                        "defaults": [],
                                                                        "body": {
                                                                          "type": "BlockStatement",
                                                                          "body": [
                                                                            {
                                                                              "type": "ExpressionStatement",
                                                                              "expression": {
                                                                                "type": "AssignmentExpression",
                                                                                "operator": "=",
                                                                                "left": {
                                                                                  "type": "Identifier",
                                                                                  "name": "reply"
                                                                                },
                                                                                "right": {
                                                                                  "type": "CallExpression",
                                                                                  "callee": {
                                                                                    "type": "Identifier",
                                                                                    "name": "sink"
                                                                                  },
                                                                                  "arguments": [
                                                                                    {
                                                                                      "type": "CallExpression",
                                                                                      "callee": {
                                                                                        "type": "Identifier",
                                                                                        "name": "initial"
                                                                                      },
                                                                                      "arguments": [
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "name": "value"
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              }
                                                                            },
                                                                            {
                                                                              "type": "IfStatement",
                                                                              "test": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "===",
                                                                                "left": {
                                                                                  "type": "Identifier",
                                                                                  "name": "reply"
                                                                                },
                                                                                "right": {
                                                                                  "type": "MemberExpression",
                                                                                  "computed": false,
                                                                                  "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "Bacon"
                                                                                  },
                                                                                  "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "noMore"
                                                                                  }
                                                                                }
                                                                              },
                                                                              "consequent": {
                                                                                "type": "BlockStatement",
                                                                                "body": [
                                                                                  {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                      "type": "CallExpression",
                                                                                      "callee": {
                                                                                        "type": "Identifier",
                                                                                        "name": "unsub"
                                                                                      },
                                                                                      "arguments": []
                                                                                    }
                                                                                  },
                                                                                  {
                                                                                    "type": "ReturnStatement",
                                                                                    "argument": {
                                                                                      "type": "AssignmentExpression",
                                                                                      "operator": "=",
                                                                                      "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "unsub"
                                                                                      },
                                                                                      "right": {
                                                                                        "type": "Identifier",
                                                                                        "name": "nop"
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                ]
                                                                              },
                                                                              "alternate": null
                                                                            }
                                                                          ]
                                                                        },
                                                                        "rest": null,
                                                                        "generator": false,
                                                                        "expression": false
                                                                      }
                                                                    ]
                                                                  }
                                                                }
                                                              ]
                                                            },
                                                            "alternate": null
                                                          }
                                                        ]
                                                      },
                                                      "rest": null,
                                                      "generator": false,
                                                      "expression": false
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "unsub"
                                                    },
                                                    "right": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "_this"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "subscribe"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "FunctionExpression",
                                                          "id": null,
                                                          "params": [
                                                            {
                                                              "type": "Identifier",
                                                              "name": "event"
                                                            }
                                                          ],
                                                          "defaults": [],
                                                          "body": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                              {
                                                                "type": "IfStatement",
                                                                "test": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "event"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "hasValue"
                                                                    }
                                                                  },
                                                                  "arguments": []
                                                                },
                                                                "consequent": {
                                                                  "type": "BlockStatement",
                                                                  "body": [
                                                                    {
                                                                      "type": "IfStatement",
                                                                      "test": {
                                                                        "type": "LogicalExpression",
                                                                        "operator": "&&",
                                                                        "left": {
                                                                          "type": "Identifier",
                                                                          "name": "initSent"
                                                                        },
                                                                        "right": {
                                                                          "type": "CallExpression",
                                                                          "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "Identifier",
                                                                              "name": "event"
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "isInitial"
                                                                            }
                                                                          },
                                                                          "arguments": []
                                                                        }
                                                                      },
                                                                      "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                          {
                                                                            "type": "ReturnStatement",
                                                                            "argument": {
                                                                              "type": "MemberExpression",
                                                                              "computed": false,
                                                                              "object": {
                                                                                "type": "Identifier",
                                                                                "name": "Bacon"
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "more"
                                                                              }
                                                                            }
                                                                          }
                                                                        ]
                                                                      },
                                                                      "alternate": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                          {
                                                                            "type": "ExpressionStatement",
                                                                            "expression": {
                                                                              "type": "AssignmentExpression",
                                                                              "operator": "=",
                                                                              "left": {
                                                                                "type": "Identifier",
                                                                                "name": "initSent"
                                                                              },
                                                                              "right": {
                                                                                "type": "Literal",
                                                                                "value": true
                                                                              }
                                                                            }
                                                                          },
                                                                          {
                                                                            "type": "ExpressionStatement",
                                                                            "expression": {
                                                                              "type": "AssignmentExpression",
                                                                              "operator": "=",
                                                                              "left": {
                                                                                "type": "Identifier",
                                                                                "name": "acc"
                                                                              },
                                                                              "right": {
                                                                                "type": "NewExpression",
                                                                                "callee": {
                                                                                  "type": "Identifier",
                                                                                  "name": "Some"
                                                                                },
                                                                                "arguments": [
                                                                                  {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                      "type": "Identifier",
                                                                                      "name": "f"
                                                                                    },
                                                                                    "arguments": [
                                                                                      {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                          "type": "MemberExpression",
                                                                                          "computed": false,
                                                                                          "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "acc"
                                                                                          },
                                                                                          "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "getOrElse"
                                                                                          }
                                                                                        },
                                                                                        "arguments": [
                                                                                          {
                                                                                            "type": "UnaryExpression",
                                                                                            "operator": "void",
                                                                                            "argument": {
                                                                                              "type": "Literal",
                                                                                              "value": 0
                                                                                            },
                                                                                            "prefix": true
                                                                                          }
                                                                                        ]
                                                                                      },
                                                                                      {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                          "type": "MemberExpression",
                                                                                          "computed": false,
                                                                                          "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "event"
                                                                                          },
                                                                                          "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "value"
                                                                                          }
                                                                                        },
                                                                                        "arguments": []
                                                                                      }
                                                                                    ]
                                                                                  }
                                                                                ]
                                                                              }
                                                                            }
                                                                          },
                                                                          {
                                                                            "type": "ReturnStatement",
                                                                            "argument": {
                                                                              "type": "CallExpression",
                                                                              "callee": {
                                                                                "type": "Identifier",
                                                                                "name": "sink"
                                                                              },
                                                                              "arguments": [
                                                                                {
                                                                                  "type": "CallExpression",
                                                                                  "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "event"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "apply"
                                                                                    }
                                                                                  },
                                                                                  "arguments": [
                                                                                    {
                                                                                      "type": "CallExpression",
                                                                                      "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                          "type": "Identifier",
                                                                                          "name": "_"
                                                                                        },
                                                                                        "property": {
                                                                                          "type": "Identifier",
                                                                                          "name": "always"
                                                                                        }
                                                                                      },
                                                                                      "arguments": [
                                                                                        {
                                                                                          "type": "CallExpression",
                                                                                          "callee": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                              "type": "Identifier",
                                                                                              "name": "acc"
                                                                                            },
                                                                                            "property": {
                                                                                              "type": "Identifier",
                                                                                              "name": "get"
                                                                                            }
                                                                                          },
                                                                                          "arguments": []
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              ]
                                                                            }
                                                                          }
                                                                        ]
                                                                      }
                                                                    }
                                                                  ]
                                                                },
                                                                "alternate": {
                                                                  "type": "BlockStatement",
                                                                  "body": [
                                                                    {
                                                                      "type": "IfStatement",
                                                                      "test": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "event"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "isEnd"
                                                                          }
                                                                        },
                                                                        "arguments": []
                                                                      },
                                                                      "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                          {
                                                                            "type": "ExpressionStatement",
                                                                            "expression": {
                                                                              "type": "AssignmentExpression",
                                                                              "operator": "=",
                                                                              "left": {
                                                                                "type": "Identifier",
                                                                                "name": "reply"
                                                                              },
                                                                              "right": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                  "type": "Identifier",
                                                                                  "name": "sendInit"
                                                                                },
                                                                                "arguments": []
                                                                              }
                                                                            }
                                                                          }
                                                                        ]
                                                                      },
                                                                      "alternate": null
                                                                    },
                                                                    {
                                                                      "type": "IfStatement",
                                                                      "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "!==",
                                                                        "left": {
                                                                          "type": "Identifier",
                                                                          "name": "reply"
                                                                        },
                                                                        "right": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "Bacon"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "noMore"
                                                                          }
                                                                        }
                                                                      },
                                                                      "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                          {
                                                                            "type": "ReturnStatement",
                                                                            "argument": {
                                                                              "type": "CallExpression",
                                                                              "callee": {
                                                                                "type": "Identifier",
                                                                                "name": "sink"
                                                                              },
                                                                              "arguments": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "name": "event"
                                                                                }
                                                                              ]
                                                                            }
                                                                          }
                                                                        ]
                                                                      },
                                                                      "alternate": null
                                                                    }
                                                                  ]
                                                                }
                                                              }
                                                            ]
                                                          },
                                                          "rest": null,
                                                          "generator": false,
                                                          "expression": false
                                                        }
                                                      ]
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "Identifier",
                                                      "name": "sendInit"
                                                    },
                                                    "arguments": []
                                                  }
                                                },
                                                {
                                                  "type": "ReturnStatement",
                                                  "argument": {
                                                    "type": "Identifier",
                                                    "name": "unsub"
                                                  }
                                                }
                                              ]
                                            },
                                            "rest": null,
                                            "generator": false,
                                            "expression": false
                                          }
                                        }
                                      },
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "NewExpression",
                                          "callee": {
                                            "type": "Identifier",
                                            "name": "Property"
                                          },
                                          "arguments": [
                                            {
                                              "type": "Identifier",
                                              "name": "subscribe"
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Observable"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "zip"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "other"
                                    },
                                    {
                                      "type": "Identifier",
                                      "name": "f"
                                    }
                                  ],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "IfStatement",
                                        "test": {
                                          "type": "BinaryExpression",
                                          "operator": "==",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "f"
                                          },
                                          "right": {
                                            "type": "Literal",
                                            "value": null
                                          }
                                        },
                                        "consequent": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "f"
                                                },
                                                "right": {
                                                  "type": "Identifier",
                                                  "name": "Array"
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "alternate": null
                                      },
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "Bacon"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "zipWith"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "ArrayExpression",
                                              "elements": [
                                                {
                                                  "type": "ThisExpression"
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "name": "other"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "name": "f"
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Observable"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "diff"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "start"
                                    },
                                    {
                                      "type": "Identifier",
                                      "name": "f"
                                    }
                                  ],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "f"
                                          },
                                          "right": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "toCombinator"
                                            },
                                            "arguments": [
                                              {
                                                "type": "Identifier",
                                                "name": "f"
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "scan"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "ArrayExpression",
                                                      "elements": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "start"
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "FunctionExpression",
                                                      "id": null,
                                                      "params": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "prevTuple"
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "name": "next"
                                                        }
                                                      ],
                                                      "defaults": [],
                                                      "body": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "ReturnStatement",
                                                            "argument": {
                                                              "type": "ArrayExpression",
                                                              "elements": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "next"
                                                                },
                                                                {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "f"
                                                                  },
                                                                  "arguments": [
                                                                    {
                                                                      "type": "MemberExpression",
                                                                      "computed": true,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "prevTuple"
                                                                      },
                                                                      "property": {
                                                                        "type": "Literal",
                                                                        "value": 0
                                                                      }
                                                                    },
                                                                    {
                                                                      "type": "Identifier",
                                                                      "name": "next"
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      "rest": null,
                                                      "generator": false,
                                                      "expression": false
                                                    }
                                                  ]
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "filter"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "FunctionExpression",
                                                  "id": null,
                                                  "params": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "tuple"
                                                    }
                                                  ],
                                                  "defaults": [],
                                                  "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                          "type": "BinaryExpression",
                                                          "operator": "===",
                                                          "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "tuple"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "length"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": 2
                                                          }
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "rest": null,
                                                  "generator": false,
                                                  "expression": false
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "map"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "tuple"
                                                }
                                              ],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                      "type": "MemberExpression",
                                                      "computed": true,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "tuple"
                                                      },
                                                      "property": {
                                                        "type": "Literal",
                                                        "value": 1
                                                      }
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Observable"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "flatMap"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "f"
                                    }
                                  ],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "root"
                                            },
                                            "init": null
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "f"
                                          },
                                          "right": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "makeSpawner"
                                            },
                                            "arguments": [
                                              {
                                                "type": "Identifier",
                                                "name": "f"
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "root"
                                          },
                                          "right": {
                                            "type": "ThisExpression"
                                          }
                                        }
                                      },
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "NewExpression",
                                          "callee": {
                                            "type": "Identifier",
                                            "name": "EventStream"
                                          },
                                          "arguments": [
                                            {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "sink"
                                                }
                                              ],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                      {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                          "type": "Identifier",
                                                          "name": "checkEnd"
                                                        },
                                                        "init": null
                                                      },
                                                      {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                          "type": "Identifier",
                                                          "name": "children"
                                                        },
                                                        "init": null
                                                      },
                                                      {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                          "type": "Identifier",
                                                          "name": "rootEnd"
                                                        },
                                                        "init": null
                                                      },
                                                      {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                          "type": "Identifier",
                                                          "name": "spawner"
                                                        },
                                                        "init": null
                                                      },
                                                      {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                          "type": "Identifier",
                                                          "name": "unbind"
                                                        },
                                                        "init": null
                                                      },
                                                      {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                          "type": "Identifier",
                                                          "name": "unsubRoot"
                                                        },
                                                        "init": null
                                                      }
                                                    ],
                                                    "kind": "var"
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "children"
                                                      },
                                                      "right": {
                                                        "type": "ArrayExpression",
                                                        "elements": []
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "rootEnd"
                                                      },
                                                      "right": {
                                                        "type": "Literal",
                                                        "value": false
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "unsubRoot"
                                                      },
                                                      "right": {
                                                        "type": "FunctionExpression",
                                                        "id": null,
                                                        "params": [],
                                                        "defaults": [],
                                                        "body": {
                                                          "type": "BlockStatement",
                                                          "body": []
                                                        },
                                                        "rest": null,
                                                        "generator": false,
                                                        "expression": false
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "unbind"
                                                      },
                                                      "right": {
                                                        "type": "FunctionExpression",
                                                        "id": null,
                                                        "params": [],
                                                        "defaults": [],
                                                        "body": {
                                                          "type": "BlockStatement",
                                                          "body": [
                                                            {
                                                              "type": "VariableDeclaration",
                                                              "declarations": [
                                                                {
                                                                  "type": "VariableDeclarator",
                                                                  "id": {
                                                                    "type": "Identifier",
                                                                    "name": "unsubChild"
                                                                  },
                                                                  "init": null
                                                                },
                                                                {
                                                                  "type": "VariableDeclarator",
                                                                  "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_i"
                                                                  },
                                                                  "init": null
                                                                },
                                                                {
                                                                  "type": "VariableDeclarator",
                                                                  "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_len"
                                                                  },
                                                                  "init": null
                                                                }
                                                              ],
                                                              "kind": "var"
                                                            },
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "Identifier",
                                                                  "name": "unsubRoot"
                                                                },
                                                                "arguments": []
                                                              }
                                                            },
                                                            {
                                                              "type": "ForStatement",
                                                              "init": {
                                                                "type": "SequenceExpression",
                                                                "expressions": [
                                                                  {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                      "type": "Identifier",
                                                                      "name": "_i"
                                                                    },
                                                                    "right": {
                                                                      "type": "Literal",
                                                                      "value": 0
                                                                    }
                                                                  },
                                                                  {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                      "type": "Identifier",
                                                                      "name": "_len"
                                                                    },
                                                                    "right": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "children"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "length"
                                                                      }
                                                                    }
                                                                  }
                                                                ]
                                                              },
                                                              "test": {
                                                                "type": "BinaryExpression",
                                                                "operator": "<",
                                                                "left": {
                                                                  "type": "Identifier",
                                                                  "name": "_i"
                                                                },
                                                                "right": {
                                                                  "type": "Identifier",
                                                                  "name": "_len"
                                                                }
                                                              },
                                                              "update": {
                                                                "type": "UpdateExpression",
                                                                "operator": "++",
                                                                "argument": {
                                                                  "type": "Identifier",
                                                                  "name": "_i"
                                                                },
                                                                "prefix": false
                                                              },
                                                              "body": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                  {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                      "type": "AssignmentExpression",
                                                                      "operator": "=",
                                                                      "left": {
                                                                        "type": "Identifier",
                                                                        "name": "unsubChild"
                                                                      },
                                                                      "right": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "children"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "_i"
                                                                        }
                                                                      }
                                                                    }
                                                                  },
                                                                  {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "Identifier",
                                                                        "name": "unsubChild"
                                                                      },
                                                                      "arguments": []
                                                                    }
                                                                  }
                                                                ]
                                                              }
                                                            },
                                                            {
                                                              "type": "ReturnStatement",
                                                              "argument": {
                                                                "type": "AssignmentExpression",
                                                                "operator": "=",
                                                                "left": {
                                                                  "type": "Identifier",
                                                                  "name": "children"
                                                                },
                                                                "right": {
                                                                  "type": "ArrayExpression",
                                                                  "elements": []
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        },
                                                        "rest": null,
                                                        "generator": false,
                                                        "expression": false
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "checkEnd"
                                                      },
                                                      "right": {
                                                        "type": "FunctionExpression",
                                                        "id": null,
                                                        "params": [],
                                                        "defaults": [],
                                                        "body": {
                                                          "type": "BlockStatement",
                                                          "body": [
                                                            {
                                                              "type": "IfStatement",
                                                              "test": {
                                                                "type": "LogicalExpression",
                                                                "operator": "&&",
                                                                "left": {
                                                                  "type": "Identifier",
                                                                  "name": "rootEnd"
                                                                },
                                                                "right": {
                                                                  "type": "BinaryExpression",
                                                                  "operator": "===",
                                                                  "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "children"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "length"
                                                                    }
                                                                  },
                                                                  "right": {
                                                                    "type": "Literal",
                                                                    "value": 0
                                                                  }
                                                                }
                                                              },
                                                              "consequent": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                  {
                                                                    "type": "ReturnStatement",
                                                                    "argument": {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "Identifier",
                                                                        "name": "sink"
                                                                      },
                                                                      "arguments": [
                                                                        {
                                                                          "type": "CallExpression",
                                                                          "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "end"
                                                                          },
                                                                          "arguments": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  }
                                                                ]
                                                              },
                                                              "alternate": null
                                                            }
                                                          ]
                                                        },
                                                        "rest": null,
                                                        "generator": false,
                                                        "expression": false
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "spawner"
                                                      },
                                                      "right": {
                                                        "type": "FunctionExpression",
                                                        "id": null,
                                                        "params": [
                                                          {
                                                            "type": "Identifier",
                                                            "name": "event"
                                                          }
                                                        ],
                                                        "defaults": [],
                                                        "body": {
                                                          "type": "BlockStatement",
                                                          "body": [
                                                            {
                                                              "type": "VariableDeclaration",
                                                              "declarations": [
                                                                {
                                                                  "type": "VariableDeclarator",
                                                                  "id": {
                                                                    "type": "Identifier",
                                                                    "name": "child"
                                                                  },
                                                                  "init": null
                                                                },
                                                                {
                                                                  "type": "VariableDeclarator",
                                                                  "id": {
                                                                    "type": "Identifier",
                                                                    "name": "childEnded"
                                                                  },
                                                                  "init": null
                                                                },
                                                                {
                                                                  "type": "VariableDeclarator",
                                                                  "id": {
                                                                    "type": "Identifier",
                                                                    "name": "handler"
                                                                  },
                                                                  "init": null
                                                                },
                                                                {
                                                                  "type": "VariableDeclarator",
                                                                  "id": {
                                                                    "type": "Identifier",
                                                                    "name": "removeChild"
                                                                  },
                                                                  "init": null
                                                                },
                                                                {
                                                                  "type": "VariableDeclarator",
                                                                  "id": {
                                                                    "type": "Identifier",
                                                                    "name": "unsubChild"
                                                                  },
                                                                  "init": null
                                                                }
                                                              ],
                                                              "kind": "var"
                                                            },
                                                            {
                                                              "type": "IfStatement",
                                                              "test": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "event"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "isEnd"
                                                                  }
                                                                },
                                                                "arguments": []
                                                              },
                                                              "consequent": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                  {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                      "type": "AssignmentExpression",
                                                                      "operator": "=",
                                                                      "left": {
                                                                        "type": "Identifier",
                                                                        "name": "rootEnd"
                                                                      },
                                                                      "right": {
                                                                        "type": "Literal",
                                                                        "value": true
                                                                      }
                                                                    }
                                                                  },
                                                                  {
                                                                    "type": "ReturnStatement",
                                                                    "argument": {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "Identifier",
                                                                        "name": "checkEnd"
                                                                      },
                                                                      "arguments": []
                                                                    }
                                                                  }
                                                                ]
                                                              },
                                                              "alternate": {
                                                                "type": "IfStatement",
                                                                "test": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "event"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "isError"
                                                                    }
                                                                  },
                                                                  "arguments": []
                                                                },
                                                                "consequent": {
                                                                  "type": "BlockStatement",
                                                                  "body": [
                                                                    {
                                                                      "type": "ReturnStatement",
                                                                      "argument": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                          "type": "Identifier",
                                                                          "name": "sink"
                                                                        },
                                                                        "arguments": [
                                                                          {
                                                                            "type": "Identifier",
                                                                            "name": "event"
                                                                          }
                                                                        ]
                                                                      }
                                                                    }
                                                                  ]
                                                                },
                                                                "alternate": {
                                                                  "type": "BlockStatement",
                                                                  "body": [
                                                                    {
                                                                      "type": "ExpressionStatement",
                                                                      "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                          "type": "Identifier",
                                                                          "name": "child"
                                                                        },
                                                                        "right": {
                                                                          "type": "CallExpression",
                                                                          "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "f"
                                                                          },
                                                                          "arguments": [
                                                                            {
                                                                              "type": "CallExpression",
                                                                              "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "event"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "value"
                                                                                }
                                                                              },
                                                                              "arguments": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      }
                                                                    },
                                                                    {
                                                                      "type": "IfStatement",
                                                                      "test": {
                                                                        "type": "UnaryExpression",
                                                                        "operator": "!",
                                                                        "argument": {
                                                                          "type": "BinaryExpression",
                                                                          "operator": "instanceof",
                                                                          "left": {
                                                                            "type": "Identifier",
                                                                            "name": "child"
                                                                          },
                                                                          "right": {
                                                                            "type": "Identifier",
                                                                            "name": "Observable"
                                                                          }
                                                                        },
                                                                        "prefix": true
                                                                      },
                                                                      "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                          {
                                                                            "type": "ExpressionStatement",
                                                                            "expression": {
                                                                              "type": "AssignmentExpression",
                                                                              "operator": "=",
                                                                              "left": {
                                                                                "type": "Identifier",
                                                                                "name": "child"
                                                                              },
                                                                              "right": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                  "type": "MemberExpression",
                                                                                  "computed": false,
                                                                                  "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "Bacon"
                                                                                  },
                                                                                  "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "once"
                                                                                  }
                                                                                },
                                                                                "arguments": [
                                                                                  {
                                                                                    "type": "Identifier",
                                                                                    "name": "child"
                                                                                  }
                                                                                ]
                                                                              }
                                                                            }
                                                                          }
                                                                        ]
                                                                      },
                                                                      "alternate": null
                                                                    },
                                                                    {
                                                                      "type": "ExpressionStatement",
                                                                      "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                          "type": "Identifier",
                                                                          "name": "unsubChild"
                                                                        },
                                                                        "right": {
                                                                          "type": "UnaryExpression",
                                                                          "operator": "void",
                                                                          "argument": {
                                                                            "type": "Literal",
                                                                            "value": 0
                                                                          },
                                                                          "prefix": true
                                                                        }
                                                                      }
                                                                    },
                                                                    {
                                                                      "type": "ExpressionStatement",
                                                                      "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                          "type": "Identifier",
                                                                          "name": "childEnded"
                                                                        },
                                                                        "right": {
                                                                          "type": "Literal",
                                                                          "value": false
                                                                        }
                                                                      }
                                                                    },
                                                                    {
                                                                      "type": "ExpressionStatement",
                                                                      "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                          "type": "Identifier",
                                                                          "name": "removeChild"
                                                                        },
                                                                        "right": {
                                                                          "type": "FunctionExpression",
                                                                          "id": null,
                                                                          "params": [],
                                                                          "defaults": [],
                                                                          "body": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                              {
                                                                                "type": "IfStatement",
                                                                                "test": {
                                                                                  "type": "BinaryExpression",
                                                                                  "operator": "!=",
                                                                                  "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "unsubChild"
                                                                                  },
                                                                                  "right": {
                                                                                    "type": "Literal",
                                                                                    "value": null
                                                                                  }
                                                                                },
                                                                                "consequent": {
                                                                                  "type": "BlockStatement",
                                                                                  "body": [
                                                                                    {
                                                                                      "type": "ExpressionStatement",
                                                                                      "expression": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                          "type": "MemberExpression",
                                                                                          "computed": false,
                                                                                          "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_"
                                                                                          },
                                                                                          "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "remove"
                                                                                          }
                                                                                        },
                                                                                        "arguments": [
                                                                                          {
                                                                                            "type": "Identifier",
                                                                                            "name": "unsubChild"
                                                                                          },
                                                                                          {
                                                                                            "type": "Identifier",
                                                                                            "name": "children"
                                                                                          }
                                                                                        ]
                                                                                      }
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                "alternate": null
                                                                              },
                                                                              {
                                                                                "type": "ReturnStatement",
                                                                                "argument": {
                                                                                  "type": "CallExpression",
                                                                                  "callee": {
                                                                                    "type": "Identifier",
                                                                                    "name": "checkEnd"
                                                                                  },
                                                                                  "arguments": []
                                                                                }
                                                                              }
                                                                            ]
                                                                          },
                                                                          "rest": null,
                                                                          "generator": false,
                                                                          "expression": false
                                                                        }
                                                                      }
                                                                    },
                                                                    {
                                                                      "type": "ExpressionStatement",
                                                                      "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                          "type": "Identifier",
                                                                          "name": "handler"
                                                                        },
                                                                        "right": {
                                                                          "type": "FunctionExpression",
                                                                          "id": null,
                                                                          "params": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "name": "event"
                                                                            }
                                                                          ],
                                                                          "defaults": [],
                                                                          "body": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                              {
                                                                                "type": "VariableDeclaration",
                                                                                "declarations": [
                                                                                  {
                                                                                    "type": "VariableDeclarator",
                                                                                    "id": {
                                                                                      "type": "Identifier",
                                                                                      "name": "reply"
                                                                                    },
                                                                                    "init": null
                                                                                  }
                                                                                ],
                                                                                "kind": "var"
                                                                              },
                                                                              {
                                                                                "type": "IfStatement",
                                                                                "test": {
                                                                                  "type": "CallExpression",
                                                                                  "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "event"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "isEnd"
                                                                                    }
                                                                                  },
                                                                                  "arguments": []
                                                                                },
                                                                                "consequent": {
                                                                                  "type": "BlockStatement",
                                                                                  "body": [
                                                                                    {
                                                                                      "type": "ExpressionStatement",
                                                                                      "expression": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                          "type": "Identifier",
                                                                                          "name": "removeChild"
                                                                                        },
                                                                                        "arguments": []
                                                                                      }
                                                                                    },
                                                                                    {
                                                                                      "type": "ExpressionStatement",
                                                                                      "expression": {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "=",
                                                                                        "left": {
                                                                                          "type": "Identifier",
                                                                                          "name": "childEnded"
                                                                                        },
                                                                                        "right": {
                                                                                          "type": "Literal",
                                                                                          "value": true
                                                                                        }
                                                                                      }
                                                                                    },
                                                                                    {
                                                                                      "type": "ReturnStatement",
                                                                                      "argument": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                          "type": "Identifier",
                                                                                          "name": "Bacon"
                                                                                        },
                                                                                        "property": {
                                                                                          "type": "Identifier",
                                                                                          "name": "noMore"
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                "alternate": {
                                                                                  "type": "BlockStatement",
                                                                                  "body": [
                                                                                    {
                                                                                      "type": "IfStatement",
                                                                                      "test": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "instanceof",
                                                                                        "left": {
                                                                                          "type": "Identifier",
                                                                                          "name": "event"
                                                                                        },
                                                                                        "right": {
                                                                                          "type": "Identifier",
                                                                                          "name": "Initial"
                                                                                        }
                                                                                      },
                                                                                      "consequent": {
                                                                                        "type": "BlockStatement",
                                                                                        "body": [
                                                                                          {
                                                                                            "type": "ExpressionStatement",
                                                                                            "expression": {
                                                                                              "type": "AssignmentExpression",
                                                                                              "operator": "=",
                                                                                              "left": {
                                                                                                "type": "Identifier",
                                                                                                "name": "event"
                                                                                              },
                                                                                              "right": {
                                                                                                "type": "CallExpression",
                                                                                                "callee": {
                                                                                                  "type": "MemberExpression",
                                                                                                  "computed": false,
                                                                                                  "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "event"
                                                                                                  },
                                                                                                  "property": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "toNext"
                                                                                                  }
                                                                                                },
                                                                                                "arguments": []
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        ]
                                                                                      },
                                                                                      "alternate": null
                                                                                    },
                                                                                    {
                                                                                      "type": "ExpressionStatement",
                                                                                      "expression": {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "=",
                                                                                        "left": {
                                                                                          "type": "Identifier",
                                                                                          "name": "reply"
                                                                                        },
                                                                                        "right": {
                                                                                          "type": "CallExpression",
                                                                                          "callee": {
                                                                                            "type": "Identifier",
                                                                                            "name": "sink"
                                                                                          },
                                                                                          "arguments": [
                                                                                            {
                                                                                              "type": "Identifier",
                                                                                              "name": "event"
                                                                                            }
                                                                                          ]
                                                                                        }
                                                                                      }
                                                                                    },
                                                                                    {
                                                                                      "type": "IfStatement",
                                                                                      "test": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "===",
                                                                                        "left": {
                                                                                          "type": "Identifier",
                                                                                          "name": "reply"
                                                                                        },
                                                                                        "right": {
                                                                                          "type": "MemberExpression",
                                                                                          "computed": false,
                                                                                          "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "Bacon"
                                                                                          },
                                                                                          "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "noMore"
                                                                                          }
                                                                                        }
                                                                                      },
                                                                                      "consequent": {
                                                                                        "type": "BlockStatement",
                                                                                        "body": [
                                                                                          {
                                                                                            "type": "ExpressionStatement",
                                                                                            "expression": {
                                                                                              "type": "CallExpression",
                                                                                              "callee": {
                                                                                                "type": "Identifier",
                                                                                                "name": "unbind"
                                                                                              },
                                                                                              "arguments": []
                                                                                            }
                                                                                          }
                                                                                        ]
                                                                                      },
                                                                                      "alternate": null
                                                                                    },
                                                                                    {
                                                                                      "type": "ReturnStatement",
                                                                                      "argument": {
                                                                                        "type": "Identifier",
                                                                                        "name": "reply"
                                                                                      }
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              }
                                                                            ]
                                                                          },
                                                                          "rest": null,
                                                                          "generator": false,
                                                                          "expression": false
                                                                        }
                                                                      }
                                                                    },
                                                                    {
                                                                      "type": "ExpressionStatement",
                                                                      "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                          "type": "Identifier",
                                                                          "name": "unsubChild"
                                                                        },
                                                                        "right": {
                                                                          "type": "CallExpression",
                                                                          "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "Identifier",
                                                                              "name": "child"
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "subscribe"
                                                                            }
                                                                          },
                                                                          "arguments": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "name": "handler"
                                                                            }
                                                                          ]
                                                                        }
                                                                      }
                                                                    },
                                                                    {
                                                                      "type": "IfStatement",
                                                                      "test": {
                                                                        "type": "UnaryExpression",
                                                                        "operator": "!",
                                                                        "argument": {
                                                                          "type": "Identifier",
                                                                          "name": "childEnded"
                                                                        },
                                                                        "prefix": true
                                                                      },
                                                                      "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                          {
                                                                            "type": "ReturnStatement",
                                                                            "argument": {
                                                                              "type": "CallExpression",
                                                                              "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "children"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "push"
                                                                                }
                                                                              },
                                                                              "arguments": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "name": "unsubChild"
                                                                                }
                                                                              ]
                                                                            }
                                                                          }
                                                                        ]
                                                                      },
                                                                      "alternate": null
                                                                    }
                                                                  ]
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        },
                                                        "rest": null,
                                                        "generator": false,
                                                        "expression": false
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "unsubRoot"
                                                      },
                                                      "right": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "root"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "subscribe"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Identifier",
                                                            "name": "spawner"
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                      "type": "Identifier",
                                                      "name": "unbind"
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Observable"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "flatMapLatest"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "f"
                                    }
                                  ],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "stream"
                                            },
                                            "init": null
                                          },
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "_this"
                                            },
                                            "init": {
                                              "type": "ThisExpression"
                                            }
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "f"
                                          },
                                          "right": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "makeSpawner"
                                            },
                                            "arguments": [
                                              {
                                                "type": "Identifier",
                                                "name": "f"
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "stream"
                                          },
                                          "right": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "ThisExpression"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "toEventStream"
                                              }
                                            },
                                            "arguments": []
                                          }
                                        }
                                      },
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "stream"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "flatMap"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "value"
                                                }
                                              ],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "Identifier",
                                                            "name": "f"
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "Identifier",
                                                              "name": "value"
                                                            }
                                                          ]
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "takeUntil"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "stream"
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Observable"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "not"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "map"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "x"
                                                }
                                              ],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                      "type": "UnaryExpression",
                                                      "operator": "!",
                                                      "argument": {
                                                        "type": "Identifier",
                                                        "name": "x"
                                                      },
                                                      "prefix": true
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Observable"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "log"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "args"
                                            },
                                            "init": null
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "args"
                                          },
                                          "right": {
                                            "type": "ConditionalExpression",
                                            "test": {
                                              "type": "BinaryExpression",
                                              "operator": "<=",
                                              "left": {
                                                "type": "Literal",
                                                "value": 1
                                              },
                                              "right": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "arguments"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "length"
                                                }
                                              }
                                            },
                                            "consequent": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "__slice"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "call"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "arguments"
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 0
                                                }
                                              ]
                                            },
                                            "alternate": {
                                              "type": "ArrayExpression",
                                              "elements": []
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "subscribe"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "event"
                                                }
                                              ],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                      "type": "ConditionalExpression",
                                                      "test": {
                                                        "type": "LogicalExpression",
                                                        "operator": "&&",
                                                        "left": {
                                                          "type": "BinaryExpression",
                                                          "operator": "!==",
                                                          "left": {
                                                            "type": "UnaryExpression",
                                                            "operator": "typeof",
                                                            "argument": {
                                                              "type": "Identifier",
                                                              "name": "console"
                                                            },
                                                            "prefix": true
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "undefined"
                                                          }
                                                        },
                                                        "right": {
                                                          "type": "BinaryExpression",
                                                          "operator": "!==",
                                                          "left": {
                                                            "type": "Identifier",
                                                            "name": "console"
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": null
                                                          }
                                                        }
                                                      },
                                                      "consequent": {
                                                        "type": "ConditionalExpression",
                                                        "test": {
                                                          "type": "BinaryExpression",
                                                          "operator": "===",
                                                          "left": {
                                                            "type": "UnaryExpression",
                                                            "operator": "typeof",
                                                            "argument": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "console"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "log"
                                                              }
                                                            },
                                                            "prefix": true
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "function"
                                                          }
                                                        },
                                                        "consequent": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "console"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "log"
                                                              }
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "apply"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "Identifier",
                                                              "name": "console"
                                                            },
                                                            {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "__slice"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "call"
                                                                    }
                                                                  },
                                                                  "arguments": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "name": "args"
                                                                    }
                                                                  ]
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "concat"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "ArrayExpression",
                                                                  "elements": [
                                                                    {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "event"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "describe"
                                                                        }
                                                                      },
                                                                      "arguments": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        "alternate": {
                                                          "type": "UnaryExpression",
                                                          "operator": "void",
                                                          "argument": {
                                                            "type": "Literal",
                                                            "value": 0
                                                          },
                                                          "prefix": true
                                                        }
                                                      },
                                                      "alternate": {
                                                        "type": "UnaryExpression",
                                                        "operator": "void",
                                                        "argument": {
                                                          "type": "Literal",
                                                          "value": 0
                                                        },
                                                        "prefix": true
                                                      }
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "ThisExpression"
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Observable"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "slidingWindow"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "n"
                                    }
                                  ],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "scan"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "ArrayExpression",
                                              "elements": []
                                            },
                                            {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "window"
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "name": "value"
                                                }
                                              ],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "window"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "concat"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "ArrayExpression",
                                                              "elements": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "value"
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "slice"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "UnaryExpression",
                                                          "operator": "-",
                                                          "argument": {
                                                            "type": "Identifier",
                                                            "name": "n"
                                                          },
                                                          "prefix": true
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Observable"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "combine"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "other"
                                    },
                                    {
                                      "type": "Identifier",
                                      "name": "f"
                                    }
                                  ],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "combinator"
                                            },
                                            "init": null
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "combinator"
                                          },
                                          "right": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "toCombinator"
                                            },
                                            "arguments": [
                                              {
                                                "type": "Identifier",
                                                "name": "f"
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "Bacon"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "combineAsArray"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "ThisExpression"
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "name": "other"
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "map"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "values"
                                                }
                                              ],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "Identifier",
                                                        "name": "combinator"
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "MemberExpression",
                                                          "computed": true,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "values"
                                                          },
                                                          "property": {
                                                            "type": "Literal",
                                                            "value": 0
                                                          }
                                                        },
                                                        {
                                                          "type": "MemberExpression",
                                                          "computed": true,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "values"
                                                          },
                                                          "property": {
                                                            "type": "Literal",
                                                            "value": 1
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ReturnStatement",
                              "argument": {
                                "type": "Identifier",
                                "name": "Observable"
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      },
                      "arguments": []
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "EventStream"
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [
                          {
                            "type": "Identifier",
                            "name": "_super"
                          }
                        ],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "__extends"
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "EventStream"
                                  },
                                  {
                                    "type": "Identifier",
                                    "name": "_super"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "FunctionDeclaration",
                              "id": {
                                "type": "Identifier",
                                "name": "EventStream"
                              },
                              "params": [
                                {
                                  "type": "Identifier",
                                  "name": "subscribe"
                                }
                              ],
                              "defaults": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "dispatcher"
                                        },
                                        "init": null
                                      }
                                    ],
                                    "kind": "var"
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "EventStream"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "__super__"
                                            }
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "constructor"
                                          }
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "call"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "ThisExpression"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "assertFunction"
                                      },
                                      "arguments": [
                                        {
                                          "type": "Identifier",
                                          "name": "subscribe"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "dispatcher"
                                      },
                                      "right": {
                                        "type": "NewExpression",
                                        "callee": {
                                          "type": "Identifier",
                                          "name": "Dispatcher"
                                        },
                                        "arguments": [
                                          {
                                            "type": "Identifier",
                                            "name": "subscribe"
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "ThisExpression"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "subscribe"
                                        }
                                      },
                                      "right": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "dispatcher"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "subscribe"
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "ThisExpression"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "hasSubscribers"
                                        }
                                      },
                                      "right": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "dispatcher"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "hasSubscribers"
                                        }
                                      }
                                    }
                                  }
                                ]
                              },
                              "rest": null,
                              "generator": false,
                              "expression": false
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "EventStream"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "map"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "args"
                                            },
                                            "init": null
                                          },
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "p"
                                            },
                                            "init": null
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "SequenceExpression",
                                          "expressions": [
                                            {
                                              "type": "AssignmentExpression",
                                              "operator": "=",
                                              "left": {
                                                "type": "Identifier",
                                                "name": "p"
                                              },
                                              "right": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "arguments"
                                                },
                                                "property": {
                                                  "type": "Literal",
                                                  "value": 0
                                                }
                                              }
                                            },
                                            {
                                              "type": "AssignmentExpression",
                                              "operator": "=",
                                              "left": {
                                                "type": "Identifier",
                                                "name": "args"
                                              },
                                              "right": {
                                                "type": "ConditionalExpression",
                                                "test": {
                                                  "type": "BinaryExpression",
                                                  "operator": "<=",
                                                  "left": {
                                                    "type": "Literal",
                                                    "value": 2
                                                  },
                                                  "right": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "arguments"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "length"
                                                    }
                                                  }
                                                },
                                                "consequent": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "__slice"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "call"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "arguments"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": 1
                                                    }
                                                  ]
                                                },
                                                "alternate": {
                                                  "type": "ArrayExpression",
                                                  "elements": []
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "IfStatement",
                                        "test": {
                                          "type": "BinaryExpression",
                                          "operator": "instanceof",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "p"
                                          },
                                          "right": {
                                            "type": "Identifier",
                                            "name": "Property"
                                          }
                                        },
                                        "consequent": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ReturnStatement",
                                              "argument": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "p"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "sampledBy"
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "ThisExpression"
                                                  },
                                                  {
                                                    "type": "Identifier",
                                                    "name": "former"
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "alternate": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ReturnStatement",
                                              "argument": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "EventStream"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "__super__"
                                                      }
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "map"
                                                    }
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "apply"
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "ThisExpression"
                                                  },
                                                  {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "ArrayExpression",
                                                        "elements": [
                                                          {
                                                            "type": "Identifier",
                                                            "name": "p"
                                                          }
                                                        ]
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "concat"
                                                      }
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "__slice"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "call"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Identifier",
                                                            "name": "args"
                                                          }
                                                        ]
                                                      }
                                                    ]
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "EventStream"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "delay"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "delay"
                                    }
                                  ],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "flatMap"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "value"
                                                }
                                              ],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "Bacon"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "later"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "delay"
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "name": "value"
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "EventStream"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "debounce"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "delay"
                                    }
                                  ],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "flatMapLatest"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "value"
                                                }
                                              ],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "Bacon"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "later"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "delay"
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "name": "value"
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "EventStream"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "throttle"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "delay"
                                    }
                                  ],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "ThisExpression"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "bufferWithTime"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "delay"
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "map"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "values"
                                                }
                                              ],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                      "type": "MemberExpression",
                                                      "computed": true,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "values"
                                                      },
                                                      "property": {
                                                        "type": "BinaryExpression",
                                                        "operator": "-",
                                                        "left": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "values"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "length"
                                                          }
                                                        },
                                                        "right": {
                                                          "type": "Literal",
                                                          "value": 1
                                                        }
                                                      }
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "EventStream"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "bufferWithTime"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "delay"
                                    }
                                  ],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "schedule"
                                            },
                                            "init": null
                                          },
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "_this"
                                            },
                                            "init": {
                                              "type": "ThisExpression"
                                            }
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "schedule"
                                          },
                                          "right": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                              {
                                                "type": "Identifier",
                                                "name": "buffer"
                                              }
                                            ],
                                            "defaults": [],
                                            "body": {
                                              "type": "BlockStatement",
                                              "body": [
                                                {
                                                  "type": "ReturnStatement",
                                                  "argument": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "buffer"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "schedule"
                                                      }
                                                    },
                                                    "arguments": []
                                                  }
                                                }
                                              ]
                                            },
                                            "rest": null,
                                            "generator": false,
                                            "expression": false
                                          }
                                        }
                                      },
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "buffer"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Identifier",
                                              "name": "delay"
                                            },
                                            {
                                              "type": "Identifier",
                                              "name": "schedule"
                                            },
                                            {
                                              "type": "Identifier",
                                              "name": "schedule"
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "EventStream"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "bufferWithCount"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "count"
                                    }
                                  ],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "flushOnCount"
                                            },
                                            "init": null
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "flushOnCount"
                                          },
                                          "right": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                              {
                                                "type": "Identifier",
                                                "name": "buffer"
                                              }
                                            ],
                                            "defaults": [],
                                            "body": {
                                              "type": "BlockStatement",
                                              "body": [
                                                {
                                                  "type": "IfStatement",
                                                  "test": {
                                                    "type": "BinaryExpression",
                                                    "operator": "===",
                                                    "left": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "buffer"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "values"
                                                        }
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "length"
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "Identifier",
                                                      "name": "count"
                                                    }
                                                  },
                                                  "consequent": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "buffer"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "flush"
                                                            }
                                                          },
                                                          "arguments": []
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "alternate": null
                                                }
                                              ]
                                            },
                                            "rest": null,
                                            "generator": false,
                                            "expression": false
                                          }
                                        }
                                      },
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "buffer"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Literal",
                                              "value": 0
                                            },
                                            {
                                              "type": "Identifier",
                                              "name": "flushOnCount"
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "EventStream"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "buffer"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "delay"
                                    },
                                    {
                                      "type": "Identifier",
                                      "name": "onInput"
                                    },
                                    {
                                      "type": "Identifier",
                                      "name": "onFlush"
                                    }
                                  ],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "buffer"
                                            },
                                            "init": null
                                          },
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "delayMs"
                                            },
                                            "init": null
                                          },
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "reply"
                                            },
                                            "init": null
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "IfStatement",
                                        "test": {
                                          "type": "BinaryExpression",
                                          "operator": "==",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "onInput"
                                          },
                                          "right": {
                                            "type": "Literal",
                                            "value": null
                                          }
                                        },
                                        "consequent": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "onInput"
                                                },
                                                "right": {
                                                  "type": "FunctionExpression",
                                                  "id": null,
                                                  "params": [],
                                                  "defaults": [],
                                                  "body": {
                                                    "type": "BlockStatement",
                                                    "body": []
                                                  },
                                                  "rest": null,
                                                  "generator": false,
                                                  "expression": false
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "alternate": null
                                      },
                                      {
                                        "type": "IfStatement",
                                        "test": {
                                          "type": "BinaryExpression",
                                          "operator": "==",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "onFlush"
                                          },
                                          "right": {
                                            "type": "Literal",
                                            "value": null
                                          }
                                        },
                                        "consequent": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "onFlush"
                                                },
                                                "right": {
                                                  "type": "FunctionExpression",
                                                  "id": null,
                                                  "params": [],
                                                  "defaults": [],
                                                  "body": {
                                                    "type": "BlockStatement",
                                                    "body": []
                                                  },
                                                  "rest": null,
                                                  "generator": false,
                                                  "expression": false
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "alternate": null
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "buffer"
                                          },
                                          "right": {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "scheduled"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": false
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "end"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": null
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "values"
                                                },
                                                "value": {
                                                  "type": "ArrayExpression",
                                                  "elements": []
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "flush"
                                                },
                                                "value": {
                                                  "type": "FunctionExpression",
                                                  "id": null,
                                                  "params": [],
                                                  "defaults": [],
                                                  "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                          {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                              "type": "Identifier",
                                                              "name": "reply"
                                                            },
                                                            "init": null
                                                          }
                                                        ],
                                                        "kind": "var"
                                                      },
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "AssignmentExpression",
                                                          "operator": "=",
                                                          "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "scheduled"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": false
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "type": "IfStatement",
                                                        "test": {
                                                          "type": "BinaryExpression",
                                                          "operator": ">",
                                                          "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "ThisExpression"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "values"
                                                              }
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "length"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": 0
                                                          }
                                                        },
                                                        "consequent": {
                                                          "type": "BlockStatement",
                                                          "body": [
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "expression": {
                                                                "type": "AssignmentExpression",
                                                                "operator": "=",
                                                                "left": {
                                                                  "type": "Identifier",
                                                                  "name": "reply"
                                                                },
                                                                "right": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "push"
                                                                    }
                                                                  },
                                                                  "arguments": [
                                                                    {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "Identifier",
                                                                        "name": "next"
                                                                      },
                                                                      "arguments": [
                                                                        {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "ThisExpression"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "values"
                                                                          }
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              }
                                                            },
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "expression": {
                                                                "type": "AssignmentExpression",
                                                                "operator": "=",
                                                                "left": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "ThisExpression"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "values"
                                                                  }
                                                                },
                                                                "right": {
                                                                  "type": "ArrayExpression",
                                                                  "elements": []
                                                                }
                                                              }
                                                            },
                                                            {
                                                              "type": "IfStatement",
                                                              "test": {
                                                                "type": "BinaryExpression",
                                                                "operator": "!=",
                                                                "left": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "ThisExpression"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "end"
                                                                  }
                                                                },
                                                                "right": {
                                                                  "type": "Literal",
                                                                  "value": null
                                                                }
                                                              },
                                                              "consequent": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                  {
                                                                    "type": "ReturnStatement",
                                                                    "argument": {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "push"
                                                                        }
                                                                      },
                                                                      "arguments": [
                                                                        {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "ThisExpression"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "end"
                                                                          }
                                                                        }
                                                                      ]
                                                                    }
                                                                  }
                                                                ]
                                                              },
                                                              "alternate": {
                                                                "type": "IfStatement",
                                                                "test": {
                                                                  "type": "BinaryExpression",
                                                                  "operator": "!==",
                                                                  "left": {
                                                                    "type": "Identifier",
                                                                    "name": "reply"
                                                                  },
                                                                  "right": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "Bacon"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "noMore"
                                                                    }
                                                                  }
                                                                },
                                                                "consequent": {
                                                                  "type": "BlockStatement",
                                                                  "body": [
                                                                    {
                                                                      "type": "ReturnStatement",
                                                                      "argument": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                          "type": "Identifier",
                                                                          "name": "onFlush"
                                                                        },
                                                                        "arguments": [
                                                                          {
                                                                            "type": "ThisExpression"
                                                                          }
                                                                        ]
                                                                      }
                                                                    }
                                                                  ]
                                                                },
                                                                "alternate": null
                                                              }
                                                            }
                                                          ]
                                                        },
                                                        "alternate": {
                                                          "type": "BlockStatement",
                                                          "body": [
                                                            {
                                                              "type": "IfStatement",
                                                              "test": {
                                                                "type": "BinaryExpression",
                                                                "operator": "!=",
                                                                "left": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "ThisExpression"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "end"
                                                                  }
                                                                },
                                                                "right": {
                                                                  "type": "Literal",
                                                                  "value": null
                                                                }
                                                              },
                                                              "consequent": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                  {
                                                                    "type": "ReturnStatement",
                                                                    "argument": {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "push"
                                                                        }
                                                                      },
                                                                      "arguments": [
                                                                        {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "ThisExpression"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "end"
                                                                          }
                                                                        }
                                                                      ]
                                                                    }
                                                                  }
                                                                ]
                                                              },
                                                              "alternate": null
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "rest": null,
                                                  "generator": false,
                                                  "expression": false
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "schedule"
                                                },
                                                "value": {
                                                  "type": "FunctionExpression",
                                                  "id": null,
                                                  "params": [],
                                                  "defaults": [],
                                                  "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                          {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                              "type": "Identifier",
                                                              "name": "_this"
                                                            },
                                                            "init": {
                                                              "type": "ThisExpression"
                                                            }
                                                          }
                                                        ],
                                                        "kind": "var"
                                                      },
                                                      {
                                                        "type": "IfStatement",
                                                        "test": {
                                                          "type": "UnaryExpression",
                                                          "operator": "!",
                                                          "argument": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "scheduled"
                                                            }
                                                          },
                                                          "prefix": true
                                                        },
                                                        "consequent": {
                                                          "type": "BlockStatement",
                                                          "body": [
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "expression": {
                                                                "type": "AssignmentExpression",
                                                                "operator": "=",
                                                                "left": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "ThisExpression"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "scheduled"
                                                                  }
                                                                },
                                                                "right": {
                                                                  "type": "Literal",
                                                                  "value": true
                                                                }
                                                              }
                                                            },
                                                            {
                                                              "type": "ReturnStatement",
                                                              "argument": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "Identifier",
                                                                  "name": "delay"
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "FunctionExpression",
                                                                    "id": null,
                                                                    "params": [],
                                                                    "defaults": [],
                                                                    "body": {
                                                                      "type": "BlockStatement",
                                                                      "body": [
                                                                        {
                                                                          "type": "ReturnStatement",
                                                                          "argument": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                              "type": "MemberExpression",
                                                                              "computed": false,
                                                                              "object": {
                                                                                "type": "Identifier",
                                                                                "name": "_this"
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "flush"
                                                                              }
                                                                            },
                                                                            "arguments": []
                                                                          }
                                                                        }
                                                                      ]
                                                                    },
                                                                    "rest": null,
                                                                    "generator": false,
                                                                    "expression": false
                                                                  }
                                                                ]
                                                              }
                                                            }
                                                          ]
                                                        },
                                                        "alternate": null
                                                      }
                                                    ]
                                                  },
                                                  "rest": null,
                                                  "generator": false,
                                                  "expression": false
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "reply"
                                          },
                                          "right": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "Bacon"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "more"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "IfStatement",
                                        "test": {
                                          "type": "UnaryExpression",
                                          "operator": "!",
                                          "argument": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "isFunction"
                                            },
                                            "arguments": [
                                              {
                                                "type": "Identifier",
                                                "name": "delay"
                                              }
                                            ]
                                          },
                                          "prefix": true
                                        },
                                        "consequent": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "delayMs"
                                                },
                                                "right": {
                                                  "type": "Identifier",
                                                  "name": "delay"
                                                }
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "delay"
                                                },
                                                "right": {
                                                  "type": "FunctionExpression",
                                                  "id": null,
                                                  "params": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "f"
                                                    }
                                                  ],
                                                  "defaults": [],
                                                  "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "Bacon"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "scheduler"
                                                              }
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "setTimeout"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "Identifier",
                                                              "name": "f"
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "name": "delayMs"
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "rest": null,
                                                  "generator": false,
                                                  "expression": false
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "alternate": null
                                      },
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "withHandler"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "event"
                                                }
                                              ],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "buffer"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "push"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "push"
                                                        }
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "IfStatement",
                                                    "test": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "event"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "isError"
                                                        }
                                                      },
                                                      "arguments": []
                                                    },
                                                    "consequent": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "reply"
                                                            },
                                                            "right": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "push"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "event"
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "alternate": {
                                                      "type": "IfStatement",
                                                      "test": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "event"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "isEnd"
                                                          }
                                                        },
                                                        "arguments": []
                                                      },
                                                      "consequent": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "AssignmentExpression",
                                                              "operator": "=",
                                                              "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "buffer"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "end"
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "Identifier",
                                                                "name": "event"
                                                              }
                                                            }
                                                          },
                                                          {
                                                            "type": "IfStatement",
                                                            "test": {
                                                              "type": "UnaryExpression",
                                                              "operator": "!",
                                                              "argument": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "buffer"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "scheduled"
                                                                }
                                                              },
                                                              "prefix": true
                                                            },
                                                            "consequent": {
                                                              "type": "BlockStatement",
                                                              "body": [
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "expression": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "buffer"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "flush"
                                                                      }
                                                                    },
                                                                    "arguments": []
                                                                  }
                                                                }
                                                              ]
                                                            },
                                                            "alternate": null
                                                          }
                                                        ]
                                                      },
                                                      "alternate": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "buffer"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "values"
                                                                  }
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "push"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "event"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "value"
                                                                    }
                                                                  },
                                                                  "arguments": []
                                                                }
                                                              ]
                                                            }
                                                          },
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "Identifier",
                                                                "name": "onInput"
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "buffer"
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                      "type": "Identifier",
                                                      "name": "reply"
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "EventStream"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "merge"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "right"
                                    }
                                  ],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "left"
                                            },
                                            "init": null
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "left"
                                          },
                                          "right": {
                                            "type": "ThisExpression"
                                          }
                                        }
                                      },
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "NewExpression",
                                          "callee": {
                                            "type": "Identifier",
                                            "name": "EventStream"
                                          },
                                          "arguments": [
                                            {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "sink"
                                                }
                                              ],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                      {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                          "type": "Identifier",
                                                          "name": "ends"
                                                        },
                                                        "init": null
                                                      },
                                                      {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                          "type": "Identifier",
                                                          "name": "smartSink"
                                                        },
                                                        "init": null
                                                      },
                                                      {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                          "type": "Identifier",
                                                          "name": "unsubBoth"
                                                        },
                                                        "init": null
                                                      },
                                                      {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                          "type": "Identifier",
                                                          "name": "unsubLeft"
                                                        },
                                                        "init": null
                                                      },
                                                      {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                          "type": "Identifier",
                                                          "name": "unsubRight"
                                                        },
                                                        "init": null
                                                      },
                                                      {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                          "type": "Identifier",
                                                          "name": "unsubscribed"
                                                        },
                                                        "init": null
                                                      }
                                                    ],
                                                    "kind": "var"
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "unsubLeft"
                                                      },
                                                      "right": {
                                                        "type": "Identifier",
                                                        "name": "nop"
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "unsubRight"
                                                      },
                                                      "right": {
                                                        "type": "Identifier",
                                                        "name": "nop"
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "unsubscribed"
                                                      },
                                                      "right": {
                                                        "type": "Literal",
                                                        "value": false
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "unsubBoth"
                                                      },
                                                      "right": {
                                                        "type": "FunctionExpression",
                                                        "id": null,
                                                        "params": [],
                                                        "defaults": [],
                                                        "body": {
                                                          "type": "BlockStatement",
                                                          "body": [
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "Identifier",
                                                                  "name": "unsubLeft"
                                                                },
                                                                "arguments": []
                                                              }
                                                            },
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "Identifier",
                                                                  "name": "unsubRight"
                                                                },
                                                                "arguments": []
                                                              }
                                                            },
                                                            {
                                                              "type": "ReturnStatement",
                                                              "argument": {
                                                                "type": "AssignmentExpression",
                                                                "operator": "=",
                                                                "left": {
                                                                  "type": "Identifier",
                                                                  "name": "unsubscribed"
                                                                },
                                                                "right": {
                                                                  "type": "Literal",
                                                                  "value": true
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        },
                                                        "rest": null,
                                                        "generator": false,
                                                        "expression": false
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "ends"
                                                      },
                                                      "right": {
                                                        "type": "Literal",
                                                        "value": 0
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "smartSink"
                                                      },
                                                      "right": {
                                                        "type": "FunctionExpression",
                                                        "id": null,
                                                        "params": [
                                                          {
                                                            "type": "Identifier",
                                                            "name": "event"
                                                          }
                                                        ],
                                                        "defaults": [],
                                                        "body": {
                                                          "type": "BlockStatement",
                                                          "body": [
                                                            {
                                                              "type": "VariableDeclaration",
                                                              "declarations": [
                                                                {
                                                                  "type": "VariableDeclarator",
                                                                  "id": {
                                                                    "type": "Identifier",
                                                                    "name": "reply"
                                                                  },
                                                                  "init": null
                                                                }
                                                              ],
                                                              "kind": "var"
                                                            },
                                                            {
                                                              "type": "IfStatement",
                                                              "test": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "event"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "isEnd"
                                                                  }
                                                                },
                                                                "arguments": []
                                                              },
                                                              "consequent": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                  {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                      "type": "UpdateExpression",
                                                                      "operator": "++",
                                                                      "argument": {
                                                                        "type": "Identifier",
                                                                        "name": "ends"
                                                                      },
                                                                      "prefix": false
                                                                    }
                                                                  },
                                                                  {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "===",
                                                                      "left": {
                                                                        "type": "Identifier",
                                                                        "name": "ends"
                                                                      },
                                                                      "right": {
                                                                        "type": "Literal",
                                                                        "value": 2
                                                                      }
                                                                    },
                                                                    "consequent": {
                                                                      "type": "BlockStatement",
                                                                      "body": [
                                                                        {
                                                                          "type": "ReturnStatement",
                                                                          "argument": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                              "type": "Identifier",
                                                                              "name": "sink"
                                                                            },
                                                                            "arguments": [
                                                                              {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                  "type": "Identifier",
                                                                                  "name": "end"
                                                                                },
                                                                                "arguments": []
                                                                              }
                                                                            ]
                                                                          }
                                                                        }
                                                                      ]
                                                                    },
                                                                    "alternate": {
                                                                      "type": "BlockStatement",
                                                                      "body": [
                                                                        {
                                                                          "type": "ReturnStatement",
                                                                          "argument": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "Identifier",
                                                                              "name": "Bacon"
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "more"
                                                                            }
                                                                          }
                                                                        }
                                                                      ]
                                                                    }
                                                                  }
                                                                ]
                                                              },
                                                              "alternate": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                  {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                      "type": "AssignmentExpression",
                                                                      "operator": "=",
                                                                      "left": {
                                                                        "type": "Identifier",
                                                                        "name": "reply"
                                                                      },
                                                                      "right": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                          "type": "Identifier",
                                                                          "name": "sink"
                                                                        },
                                                                        "arguments": [
                                                                          {
                                                                            "type": "Identifier",
                                                                            "name": "event"
                                                                          }
                                                                        ]
                                                                      }
                                                                    }
                                                                  },
                                                                  {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "===",
                                                                      "left": {
                                                                        "type": "Identifier",
                                                                        "name": "reply"
                                                                      },
                                                                      "right": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "Bacon"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "noMore"
                                                                        }
                                                                      }
                                                                    },
                                                                    "consequent": {
                                                                      "type": "BlockStatement",
                                                                      "body": [
                                                                        {
                                                                          "type": "ExpressionStatement",
                                                                          "expression": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                              "type": "Identifier",
                                                                              "name": "unsubBoth"
                                                                            },
                                                                            "arguments": []
                                                                          }
                                                                        }
                                                                      ]
                                                                    },
                                                                    "alternate": null
                                                                  },
                                                                  {
                                                                    "type": "ReturnStatement",
                                                                    "argument": {
                                                                      "type": "Identifier",
                                                                      "name": "reply"
                                                                    }
                                                                  }
                                                                ]
                                                              }
                                                            }
                                                          ]
                                                        },
                                                        "rest": null,
                                                        "generator": false,
                                                        "expression": false
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "unsubLeft"
                                                      },
                                                      "right": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "left"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "subscribe"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Identifier",
                                                            "name": "smartSink"
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "IfStatement",
                                                    "test": {
                                                      "type": "UnaryExpression",
                                                      "operator": "!",
                                                      "argument": {
                                                        "type": "Identifier",
                                                        "name": "unsubscribed"
                                                      },
                                                      "prefix": true
                                                    },
                                                    "consequent": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "unsubRight"
                                                            },
                                                            "right": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "right"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "subscribe"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "smartSink"
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "alternate": null
                                                  },
                                                  {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                      "type": "Identifier",
                                                      "name": "unsubBoth"
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "EventStream"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "toProperty"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "initValue"
                                    }
                                  ],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "IfStatement",
                                        "test": {
                                          "type": "BinaryExpression",
                                          "operator": "===",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "arguments"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "length"
                                            }
                                          },
                                          "right": {
                                            "type": "Literal",
                                            "value": 0
                                          }
                                        },
                                        "consequent": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "initValue"
                                                },
                                                "right": {
                                                  "type": "Identifier",
                                                  "name": "None"
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "alternate": null
                                      },
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "scan"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Identifier",
                                              "name": "initValue"
                                            },
                                            {
                                              "type": "Identifier",
                                              "name": "latter"
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "EventStream"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "toEventStream"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "ThisExpression"
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "EventStream"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "concat"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "right"
                                    }
                                  ],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "left"
                                            },
                                            "init": null
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "left"
                                          },
                                          "right": {
                                            "type": "ThisExpression"
                                          }
                                        }
                                      },
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "NewExpression",
                                          "callee": {
                                            "type": "Identifier",
                                            "name": "EventStream"
                                          },
                                          "arguments": [
                                            {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "sink"
                                                }
                                              ],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                      {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                          "type": "Identifier",
                                                          "name": "unsub"
                                                        },
                                                        "init": null
                                                      }
                                                    ],
                                                    "kind": "var"
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "unsub"
                                                      },
                                                      "right": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "left"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "subscribe"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "FunctionExpression",
                                                            "id": null,
                                                            "params": [
                                                              {
                                                                "type": "Identifier",
                                                                "name": "e"
                                                              }
                                                            ],
                                                            "defaults": [],
                                                            "body": {
                                                              "type": "BlockStatement",
                                                              "body": [
                                                                {
                                                                  "type": "IfStatement",
                                                                  "test": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "e"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "isEnd"
                                                                      }
                                                                    },
                                                                    "arguments": []
                                                                  },
                                                                  "consequent": {
                                                                    "type": "BlockStatement",
                                                                    "body": [
                                                                      {
                                                                        "type": "ReturnStatement",
                                                                        "argument": {
                                                                          "type": "AssignmentExpression",
                                                                          "operator": "=",
                                                                          "left": {
                                                                            "type": "Identifier",
                                                                            "name": "unsub"
                                                                          },
                                                                          "right": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                              "type": "MemberExpression",
                                                                              "computed": false,
                                                                              "object": {
                                                                                "type": "Identifier",
                                                                                "name": "right"
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "subscribe"
                                                                              }
                                                                            },
                                                                            "arguments": [
                                                                              {
                                                                                "type": "Identifier",
                                                                                "name": "sink"
                                                                              }
                                                                            ]
                                                                          }
                                                                        }
                                                                      }
                                                                    ]
                                                                  },
                                                                  "alternate": {
                                                                    "type": "BlockStatement",
                                                                    "body": [
                                                                      {
                                                                        "type": "ReturnStatement",
                                                                        "argument": {
                                                                          "type": "CallExpression",
                                                                          "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "sink"
                                                                          },
                                                                          "arguments": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "name": "e"
                                                                            }
                                                                          ]
                                                                        }
                                                                      }
                                                                    ]
                                                                  }
                                                                }
                                                              ]
                                                            },
                                                            "rest": null,
                                                            "generator": false,
                                                            "expression": false
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                      "type": "FunctionExpression",
                                                      "id": null,
                                                      "params": [],
                                                      "defaults": [],
                                                      "body": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "ReturnStatement",
                                                            "argument": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "Identifier",
                                                                "name": "unsub"
                                                              },
                                                              "arguments": []
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      "rest": null,
                                                      "generator": false,
                                                      "expression": false
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "EventStream"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "awaiting"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "other"
                                    }
                                  ],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "map"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Literal",
                                                      "value": true
                                                    }
                                                  ]
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "merge"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "other"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "map"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Literal",
                                                      "value": false
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "toProperty"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Literal",
                                              "value": false
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "EventStream"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "startWith"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "seed"
                                    }
                                  ],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "Bacon"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "once"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "seed"
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "concat"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "ThisExpression"
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "EventStream"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "withHandler"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "handler"
                                    }
                                  ],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "dispatcher"
                                            },
                                            "init": null
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "dispatcher"
                                          },
                                          "right": {
                                            "type": "NewExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "Dispatcher"
                                            },
                                            "arguments": [
                                              {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "ThisExpression"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "subscribe"
                                                }
                                              },
                                              {
                                                "type": "Identifier",
                                                "name": "handler"
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "NewExpression",
                                          "callee": {
                                            "type": "Identifier",
                                            "name": "EventStream"
                                          },
                                          "arguments": [
                                            {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "dispatcher"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "subscribe"
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "EventStream"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "withSubscribe"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "subscribe"
                                    }
                                  ],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "NewExpression",
                                          "callee": {
                                            "type": "Identifier",
                                            "name": "EventStream"
                                          },
                                          "arguments": [
                                            {
                                              "type": "Identifier",
                                              "name": "subscribe"
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ReturnStatement",
                              "argument": {
                                "type": "Identifier",
                                "name": "EventStream"
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "Observable"
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "Property"
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [
                          {
                            "type": "Identifier",
                            "name": "_super"
                          }
                        ],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "__extends"
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "Property"
                                  },
                                  {
                                    "type": "Identifier",
                                    "name": "_super"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "FunctionDeclaration",
                              "id": {
                                "type": "Identifier",
                                "name": "Property"
                              },
                              "params": [
                                {
                                  "type": "Identifier",
                                  "name": "subscribe"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "handler"
                                }
                              ],
                              "defaults": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "ThisExpression"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "toEventStream"
                                        }
                                      },
                                      "right": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "Identifier",
                                          "name": "__bind"
                                        },
                                        "arguments": [
                                          {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "toEventStream"
                                            }
                                          },
                                          {
                                            "type": "ThisExpression"
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "ThisExpression"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "toProperty"
                                        }
                                      },
                                      "right": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "Identifier",
                                          "name": "__bind"
                                        },
                                        "arguments": [
                                          {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "toProperty"
                                            }
                                          },
                                          {
                                            "type": "ThisExpression"
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "ThisExpression"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "changes"
                                        }
                                      },
                                      "right": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "Identifier",
                                          "name": "__bind"
                                        },
                                        "arguments": [
                                          {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "changes"
                                            }
                                          },
                                          {
                                            "type": "ThisExpression"
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "ThisExpression"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "sample"
                                        }
                                      },
                                      "right": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "Identifier",
                                          "name": "__bind"
                                        },
                                        "arguments": [
                                          {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "sample"
                                            }
                                          },
                                          {
                                            "type": "ThisExpression"
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "combine"
                                        },
                                        "init": null
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "_this"
                                        },
                                        "init": {
                                          "type": "ThisExpression"
                                        }
                                      }
                                    ],
                                    "kind": "var"
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "Property"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "__super__"
                                            }
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "constructor"
                                          }
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "call"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "ThisExpression"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "IfStatement",
                                    "test": {
                                      "type": "BinaryExpression",
                                      "operator": "===",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "handler"
                                      },
                                      "right": {
                                        "type": "Literal",
                                        "value": true
                                      }
                                    },
                                    "consequent": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "ThisExpression"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "subscribe"
                                              }
                                            },
                                            "right": {
                                              "type": "Identifier",
                                              "name": "subscribe"
                                            }
                                          }
                                        }
                                      ]
                                    },
                                    "alternate": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "ThisExpression"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "subscribe"
                                              }
                                            },
                                            "right": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "NewExpression",
                                                "callee": {
                                                  "type": "Identifier",
                                                  "name": "PropertyDispatcher"
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "subscribe"
                                                  },
                                                  {
                                                    "type": "Identifier",
                                                    "name": "handler"
                                                  }
                                                ]
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "subscribe"
                                              }
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "combine"
                                      },
                                      "right": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                          {
                                            "type": "Identifier",
                                            "name": "other"
                                          },
                                          {
                                            "type": "Identifier",
                                            "name": "leftSink"
                                          },
                                          {
                                            "type": "Identifier",
                                            "name": "rightSink"
                                          }
                                        ],
                                        "defaults": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "VariableDeclaration",
                                              "declarations": [
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "myVal"
                                                  },
                                                  "init": null
                                                },
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "otherVal"
                                                  },
                                                  "init": null
                                                }
                                              ],
                                              "kind": "var"
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "myVal"
                                                },
                                                "right": {
                                                  "type": "Identifier",
                                                  "name": "None"
                                                }
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "otherVal"
                                                },
                                                "right": {
                                                  "type": "Identifier",
                                                  "name": "None"
                                                }
                                              }
                                            },
                                            {
                                              "type": "ReturnStatement",
                                              "argument": {
                                                "type": "NewExpression",
                                                "callee": {
                                                  "type": "Identifier",
                                                  "name": "Property"
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "FunctionExpression",
                                                    "id": null,
                                                    "params": [
                                                      {
                                                        "type": "Identifier",
                                                        "name": "sink"
                                                      }
                                                    ],
                                                    "defaults": [],
                                                    "body": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "VariableDeclaration",
                                                          "declarations": [
                                                            {
                                                              "type": "VariableDeclarator",
                                                              "id": {
                                                                "type": "Identifier",
                                                                "name": "checkEnd"
                                                              },
                                                              "init": null
                                                            },
                                                            {
                                                              "type": "VariableDeclarator",
                                                              "id": {
                                                                "type": "Identifier",
                                                                "name": "combiningSink"
                                                              },
                                                              "init": null
                                                            },
                                                            {
                                                              "type": "VariableDeclarator",
                                                              "id": {
                                                                "type": "Identifier",
                                                                "name": "initialSent"
                                                              },
                                                              "init": null
                                                            },
                                                            {
                                                              "type": "VariableDeclarator",
                                                              "id": {
                                                                "type": "Identifier",
                                                                "name": "myEnd"
                                                              },
                                                              "init": null
                                                            },
                                                            {
                                                              "type": "VariableDeclarator",
                                                              "id": {
                                                                "type": "Identifier",
                                                                "name": "mySink"
                                                              },
                                                              "init": null
                                                            },
                                                            {
                                                              "type": "VariableDeclarator",
                                                              "id": {
                                                                "type": "Identifier",
                                                                "name": "otherEnd"
                                                              },
                                                              "init": null
                                                            },
                                                            {
                                                              "type": "VariableDeclarator",
                                                              "id": {
                                                                "type": "Identifier",
                                                                "name": "otherSink"
                                                              },
                                                              "init": null
                                                            },
                                                            {
                                                              "type": "VariableDeclarator",
                                                              "id": {
                                                                "type": "Identifier",
                                                                "name": "unsubBoth"
                                                              },
                                                              "init": null
                                                            },
                                                            {
                                                              "type": "VariableDeclarator",
                                                              "id": {
                                                                "type": "Identifier",
                                                                "name": "unsubMe"
                                                              },
                                                              "init": null
                                                            },
                                                            {
                                                              "type": "VariableDeclarator",
                                                              "id": {
                                                                "type": "Identifier",
                                                                "name": "unsubOther"
                                                              },
                                                              "init": null
                                                            },
                                                            {
                                                              "type": "VariableDeclarator",
                                                              "id": {
                                                                "type": "Identifier",
                                                                "name": "unsubscribed"
                                                              },
                                                              "init": null
                                                            }
                                                          ],
                                                          "kind": "var"
                                                        },
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "unsubscribed"
                                                            },
                                                            "right": {
                                                              "type": "Literal",
                                                              "value": false
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "unsubMe"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "nop"
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "unsubOther"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "nop"
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "unsubBoth"
                                                            },
                                                            "right": {
                                                              "type": "FunctionExpression",
                                                              "id": null,
                                                              "params": [],
                                                              "defaults": [],
                                                              "body": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                  {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "Identifier",
                                                                        "name": "unsubMe"
                                                                      },
                                                                      "arguments": []
                                                                    }
                                                                  },
                                                                  {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "Identifier",
                                                                        "name": "unsubOther"
                                                                      },
                                                                      "arguments": []
                                                                    }
                                                                  },
                                                                  {
                                                                    "type": "ReturnStatement",
                                                                    "argument": {
                                                                      "type": "AssignmentExpression",
                                                                      "operator": "=",
                                                                      "left": {
                                                                        "type": "Identifier",
                                                                        "name": "unsubscribed"
                                                                      },
                                                                      "right": {
                                                                        "type": "Literal",
                                                                        "value": true
                                                                      }
                                                                    }
                                                                  }
                                                                ]
                                                              },
                                                              "rest": null,
                                                              "generator": false,
                                                              "expression": false
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "myEnd"
                                                            },
                                                            "right": {
                                                              "type": "Literal",
                                                              "value": false
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "otherEnd"
                                                            },
                                                            "right": {
                                                              "type": "Literal",
                                                              "value": false
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "checkEnd"
                                                            },
                                                            "right": {
                                                              "type": "FunctionExpression",
                                                              "id": null,
                                                              "params": [],
                                                              "defaults": [],
                                                              "body": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                  {
                                                                    "type": "VariableDeclaration",
                                                                    "declarations": [
                                                                      {
                                                                        "type": "VariableDeclarator",
                                                                        "id": {
                                                                          "type": "Identifier",
                                                                          "name": "reply"
                                                                        },
                                                                        "init": null
                                                                      }
                                                                    ],
                                                                    "kind": "var"
                                                                  },
                                                                  {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                      "type": "LogicalExpression",
                                                                      "operator": "&&",
                                                                      "left": {
                                                                        "type": "Identifier",
                                                                        "name": "myEnd"
                                                                      },
                                                                      "right": {
                                                                        "type": "Identifier",
                                                                        "name": "otherEnd"
                                                                      }
                                                                    },
                                                                    "consequent": {
                                                                      "type": "BlockStatement",
                                                                      "body": [
                                                                        {
                                                                          "type": "ExpressionStatement",
                                                                          "expression": {
                                                                            "type": "AssignmentExpression",
                                                                            "operator": "=",
                                                                            "left": {
                                                                              "type": "Identifier",
                                                                              "name": "reply"
                                                                            },
                                                                            "right": {
                                                                              "type": "CallExpression",
                                                                              "callee": {
                                                                                "type": "Identifier",
                                                                                "name": "sink"
                                                                              },
                                                                              "arguments": [
                                                                                {
                                                                                  "type": "CallExpression",
                                                                                  "callee": {
                                                                                    "type": "Identifier",
                                                                                    "name": "end"
                                                                                  },
                                                                                  "arguments": []
                                                                                }
                                                                              ]
                                                                            }
                                                                          }
                                                                        },
                                                                        {
                                                                          "type": "IfStatement",
                                                                          "test": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "===",
                                                                            "left": {
                                                                              "type": "Identifier",
                                                                              "name": "reply"
                                                                            },
                                                                            "right": {
                                                                              "type": "MemberExpression",
                                                                              "computed": false,
                                                                              "object": {
                                                                                "type": "Identifier",
                                                                                "name": "Bacon"
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "noMore"
                                                                              }
                                                                            }
                                                                          },
                                                                          "consequent": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                              {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                  "type": "CallExpression",
                                                                                  "callee": {
                                                                                    "type": "Identifier",
                                                                                    "name": "unsubBoth"
                                                                                  },
                                                                                  "arguments": []
                                                                                }
                                                                              }
                                                                            ]
                                                                          },
                                                                          "alternate": null
                                                                        },
                                                                        {
                                                                          "type": "ReturnStatement",
                                                                          "argument": {
                                                                            "type": "Identifier",
                                                                            "name": "reply"
                                                                          }
                                                                        }
                                                                      ]
                                                                    },
                                                                    "alternate": null
                                                                  }
                                                                ]
                                                              },
                                                              "rest": null,
                                                              "generator": false,
                                                              "expression": false
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "initialSent"
                                                            },
                                                            "right": {
                                                              "type": "Literal",
                                                              "value": false
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "combiningSink"
                                                            },
                                                            "right": {
                                                              "type": "FunctionExpression",
                                                              "id": null,
                                                              "params": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "markEnd"
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "setValue"
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "thisSink"
                                                                }
                                                              ],
                                                              "defaults": [],
                                                              "body": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                  {
                                                                    "type": "ReturnStatement",
                                                                    "argument": {
                                                                      "type": "FunctionExpression",
                                                                      "id": null,
                                                                      "params": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "name": "event"
                                                                        }
                                                                      ],
                                                                      "defaults": [],
                                                                      "body": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                          {
                                                                            "type": "VariableDeclaration",
                                                                            "declarations": [
                                                                              {
                                                                                "type": "VariableDeclarator",
                                                                                "id": {
                                                                                  "type": "Identifier",
                                                                                  "name": "reply"
                                                                                },
                                                                                "init": null
                                                                              }
                                                                            ],
                                                                            "kind": "var"
                                                                          },
                                                                          {
                                                                            "type": "IfStatement",
                                                                            "test": {
                                                                              "type": "CallExpression",
                                                                              "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "event"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "isEnd"
                                                                                }
                                                                              },
                                                                              "arguments": []
                                                                            },
                                                                            "consequent": {
                                                                              "type": "BlockStatement",
                                                                              "body": [
                                                                                {
                                                                                  "type": "ExpressionStatement",
                                                                                  "expression": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                      "type": "Identifier",
                                                                                      "name": "markEnd"
                                                                                    },
                                                                                    "arguments": []
                                                                                  }
                                                                                },
                                                                                {
                                                                                  "type": "ExpressionStatement",
                                                                                  "expression": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                      "type": "Identifier",
                                                                                      "name": "checkEnd"
                                                                                    },
                                                                                    "arguments": []
                                                                                  }
                                                                                },
                                                                                {
                                                                                  "type": "ReturnStatement",
                                                                                  "argument": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "Bacon"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "noMore"
                                                                                    }
                                                                                  }
                                                                                }
                                                                              ]
                                                                            },
                                                                            "alternate": {
                                                                              "type": "IfStatement",
                                                                              "test": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                  "type": "MemberExpression",
                                                                                  "computed": false,
                                                                                  "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "event"
                                                                                  },
                                                                                  "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "isError"
                                                                                  }
                                                                                },
                                                                                "arguments": []
                                                                              },
                                                                              "consequent": {
                                                                                "type": "BlockStatement",
                                                                                "body": [
                                                                                  {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                      "type": "AssignmentExpression",
                                                                                      "operator": "=",
                                                                                      "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "reply"
                                                                                      },
                                                                                      "right": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                          "type": "Identifier",
                                                                                          "name": "sink"
                                                                                        },
                                                                                        "arguments": [
                                                                                          {
                                                                                            "type": "Identifier",
                                                                                            "name": "event"
                                                                                          }
                                                                                        ]
                                                                                      }
                                                                                    }
                                                                                  },
                                                                                  {
                                                                                    "type": "IfStatement",
                                                                                    "test": {
                                                                                      "type": "BinaryExpression",
                                                                                      "operator": "===",
                                                                                      "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "reply"
                                                                                      },
                                                                                      "right": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                          "type": "Identifier",
                                                                                          "name": "Bacon"
                                                                                        },
                                                                                        "property": {
                                                                                          "type": "Identifier",
                                                                                          "name": "noMore"
                                                                                        }
                                                                                      }
                                                                                    },
                                                                                    "consequent": {
                                                                                      "type": "BlockStatement",
                                                                                      "body": [
                                                                                        {
                                                                                          "type": "ExpressionStatement",
                                                                                          "expression": {
                                                                                            "type": "CallExpression",
                                                                                            "callee": {
                                                                                              "type": "Identifier",
                                                                                              "name": "unsubBoth"
                                                                                            },
                                                                                            "arguments": []
                                                                                          }
                                                                                        }
                                                                                      ]
                                                                                    },
                                                                                    "alternate": null
                                                                                  },
                                                                                  {
                                                                                    "type": "ReturnStatement",
                                                                                    "argument": {
                                                                                      "type": "Identifier",
                                                                                      "name": "reply"
                                                                                    }
                                                                                  }
                                                                                ]
                                                                              },
                                                                              "alternate": {
                                                                                "type": "BlockStatement",
                                                                                "body": [
                                                                                  {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                      "type": "CallExpression",
                                                                                      "callee": {
                                                                                        "type": "Identifier",
                                                                                        "name": "setValue"
                                                                                      },
                                                                                      "arguments": [
                                                                                        {
                                                                                          "type": "NewExpression",
                                                                                          "callee": {
                                                                                            "type": "Identifier",
                                                                                            "name": "Some"
                                                                                          },
                                                                                          "arguments": [
                                                                                            {
                                                                                              "type": "MemberExpression",
                                                                                              "computed": false,
                                                                                              "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "event"
                                                                                              },
                                                                                              "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "value"
                                                                                              }
                                                                                            }
                                                                                          ]
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  },
                                                                                  {
                                                                                    "type": "IfStatement",
                                                                                    "test": {
                                                                                      "type": "LogicalExpression",
                                                                                      "operator": "&&",
                                                                                      "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                          "type": "Identifier",
                                                                                          "name": "myVal"
                                                                                        },
                                                                                        "property": {
                                                                                          "type": "Identifier",
                                                                                          "name": "isDefined"
                                                                                        }
                                                                                      },
                                                                                      "right": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                          "type": "Identifier",
                                                                                          "name": "otherVal"
                                                                                        },
                                                                                        "property": {
                                                                                          "type": "Identifier",
                                                                                          "name": "isDefined"
                                                                                        }
                                                                                      }
                                                                                    },
                                                                                    "consequent": {
                                                                                      "type": "BlockStatement",
                                                                                      "body": [
                                                                                        {
                                                                                          "type": "IfStatement",
                                                                                          "test": {
                                                                                            "type": "LogicalExpression",
                                                                                            "operator": "&&",
                                                                                            "left": {
                                                                                              "type": "Identifier",
                                                                                              "name": "initialSent"
                                                                                            },
                                                                                            "right": {
                                                                                              "type": "CallExpression",
                                                                                              "callee": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": false,
                                                                                                "object": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "event"
                                                                                                },
                                                                                                "property": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "isInitial"
                                                                                                }
                                                                                              },
                                                                                              "arguments": []
                                                                                            }
                                                                                          },
                                                                                          "consequent": {
                                                                                            "type": "BlockStatement",
                                                                                            "body": [
                                                                                              {
                                                                                                "type": "ReturnStatement",
                                                                                                "argument": {
                                                                                                  "type": "MemberExpression",
                                                                                                  "computed": false,
                                                                                                  "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "Bacon"
                                                                                                  },
                                                                                                  "property": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "more"
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            ]
                                                                                          },
                                                                                          "alternate": {
                                                                                            "type": "BlockStatement",
                                                                                            "body": [
                                                                                              {
                                                                                                "type": "ExpressionStatement",
                                                                                                "expression": {
                                                                                                  "type": "AssignmentExpression",
                                                                                                  "operator": "=",
                                                                                                  "left": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "initialSent"
                                                                                                  },
                                                                                                  "right": {
                                                                                                    "type": "Literal",
                                                                                                    "value": true
                                                                                                  }
                                                                                                }
                                                                                              },
                                                                                              {
                                                                                                "type": "ExpressionStatement",
                                                                                                "expression": {
                                                                                                  "type": "AssignmentExpression",
                                                                                                  "operator": "=",
                                                                                                  "left": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "reply"
                                                                                                  },
                                                                                                  "right": {
                                                                                                    "type": "CallExpression",
                                                                                                    "callee": {
                                                                                                      "type": "Identifier",
                                                                                                      "name": "thisSink"
                                                                                                    },
                                                                                                    "arguments": [
                                                                                                      {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "sink"
                                                                                                      },
                                                                                                      {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "event"
                                                                                                      },
                                                                                                      {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": false,
                                                                                                        "object": {
                                                                                                          "type": "Identifier",
                                                                                                          "name": "myVal"
                                                                                                        },
                                                                                                        "property": {
                                                                                                          "type": "Identifier",
                                                                                                          "name": "value"
                                                                                                        }
                                                                                                      },
                                                                                                      {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": false,
                                                                                                        "object": {
                                                                                                          "type": "Identifier",
                                                                                                          "name": "otherVal"
                                                                                                        },
                                                                                                        "property": {
                                                                                                          "type": "Identifier",
                                                                                                          "name": "value"
                                                                                                        }
                                                                                                      }
                                                                                                    ]
                                                                                                  }
                                                                                                }
                                                                                              },
                                                                                              {
                                                                                                "type": "IfStatement",
                                                                                                "test": {
                                                                                                  "type": "BinaryExpression",
                                                                                                  "operator": "===",
                                                                                                  "left": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "reply"
                                                                                                  },
                                                                                                  "right": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": false,
                                                                                                    "object": {
                                                                                                      "type": "Identifier",
                                                                                                      "name": "Bacon"
                                                                                                    },
                                                                                                    "property": {
                                                                                                      "type": "Identifier",
                                                                                                      "name": "noMore"
                                                                                                    }
                                                                                                  }
                                                                                                },
                                                                                                "consequent": {
                                                                                                  "type": "BlockStatement",
                                                                                                  "body": [
                                                                                                    {
                                                                                                      "type": "ExpressionStatement",
                                                                                                      "expression": {
                                                                                                        "type": "CallExpression",
                                                                                                        "callee": {
                                                                                                          "type": "Identifier",
                                                                                                          "name": "unsubBoth"
                                                                                                        },
                                                                                                        "arguments": []
                                                                                                      }
                                                                                                    }
                                                                                                  ]
                                                                                                },
                                                                                                "alternate": null
                                                                                              },
                                                                                              {
                                                                                                "type": "ReturnStatement",
                                                                                                "argument": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "reply"
                                                                                                }
                                                                                              }
                                                                                            ]
                                                                                          }
                                                                                        }
                                                                                      ]
                                                                                    },
                                                                                    "alternate": {
                                                                                      "type": "BlockStatement",
                                                                                      "body": [
                                                                                        {
                                                                                          "type": "ReturnStatement",
                                                                                          "argument": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                              "type": "Identifier",
                                                                                              "name": "Bacon"
                                                                                            },
                                                                                            "property": {
                                                                                              "type": "Identifier",
                                                                                              "name": "more"
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  }
                                                                                ]
                                                                              }
                                                                            }
                                                                          }
                                                                        ]
                                                                      },
                                                                      "rest": null,
                                                                      "generator": false,
                                                                      "expression": false
                                                                    }
                                                                  }
                                                                ]
                                                              },
                                                              "rest": null,
                                                              "generator": false,
                                                              "expression": false
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "mySink"
                                                            },
                                                            "right": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "Identifier",
                                                                "name": "combiningSink"
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "FunctionExpression",
                                                                  "id": null,
                                                                  "params": [],
                                                                  "defaults": [],
                                                                  "body": {
                                                                    "type": "BlockStatement",
                                                                    "body": [
                                                                      {
                                                                        "type": "ReturnStatement",
                                                                        "argument": {
                                                                          "type": "AssignmentExpression",
                                                                          "operator": "=",
                                                                          "left": {
                                                                            "type": "Identifier",
                                                                            "name": "myEnd"
                                                                          },
                                                                          "right": {
                                                                            "type": "Literal",
                                                                            "value": true
                                                                          }
                                                                        }
                                                                      }
                                                                    ]
                                                                  },
                                                                  "rest": null,
                                                                  "generator": false,
                                                                  "expression": false
                                                                },
                                                                {
                                                                  "type": "FunctionExpression",
                                                                  "id": null,
                                                                  "params": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "name": "value"
                                                                    }
                                                                  ],
                                                                  "defaults": [],
                                                                  "body": {
                                                                    "type": "BlockStatement",
                                                                    "body": [
                                                                      {
                                                                        "type": "ReturnStatement",
                                                                        "argument": {
                                                                          "type": "AssignmentExpression",
                                                                          "operator": "=",
                                                                          "left": {
                                                                            "type": "Identifier",
                                                                            "name": "myVal"
                                                                          },
                                                                          "right": {
                                                                            "type": "Identifier",
                                                                            "name": "value"
                                                                          }
                                                                        }
                                                                      }
                                                                    ]
                                                                  },
                                                                  "rest": null,
                                                                  "generator": false,
                                                                  "expression": false
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "leftSink"
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "otherSink"
                                                            },
                                                            "right": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "Identifier",
                                                                "name": "combiningSink"
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "FunctionExpression",
                                                                  "id": null,
                                                                  "params": [],
                                                                  "defaults": [],
                                                                  "body": {
                                                                    "type": "BlockStatement",
                                                                    "body": [
                                                                      {
                                                                        "type": "ReturnStatement",
                                                                        "argument": {
                                                                          "type": "AssignmentExpression",
                                                                          "operator": "=",
                                                                          "left": {
                                                                            "type": "Identifier",
                                                                            "name": "otherEnd"
                                                                          },
                                                                          "right": {
                                                                            "type": "Literal",
                                                                            "value": true
                                                                          }
                                                                        }
                                                                      }
                                                                    ]
                                                                  },
                                                                  "rest": null,
                                                                  "generator": false,
                                                                  "expression": false
                                                                },
                                                                {
                                                                  "type": "FunctionExpression",
                                                                  "id": null,
                                                                  "params": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "name": "value"
                                                                    }
                                                                  ],
                                                                  "defaults": [],
                                                                  "body": {
                                                                    "type": "BlockStatement",
                                                                    "body": [
                                                                      {
                                                                        "type": "ReturnStatement",
                                                                        "argument": {
                                                                          "type": "AssignmentExpression",
                                                                          "operator": "=",
                                                                          "left": {
                                                                            "type": "Identifier",
                                                                            "name": "otherVal"
                                                                          },
                                                                          "right": {
                                                                            "type": "Identifier",
                                                                            "name": "value"
                                                                          }
                                                                        }
                                                                      }
                                                                    ]
                                                                  },
                                                                  "rest": null,
                                                                  "generator": false,
                                                                  "expression": false
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "rightSink"
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "unsubMe"
                                                            },
                                                            "right": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "_this"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "subscribe"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "mySink"
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "IfStatement",
                                                          "test": {
                                                            "type": "UnaryExpression",
                                                            "operator": "!",
                                                            "argument": {
                                                              "type": "Identifier",
                                                              "name": "unsubscribed"
                                                            },
                                                            "prefix": true
                                                          },
                                                          "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                              {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                  "type": "AssignmentExpression",
                                                                  "operator": "=",
                                                                  "left": {
                                                                    "type": "Identifier",
                                                                    "name": "unsubOther"
                                                                  },
                                                                  "right": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "other"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "subscribe"
                                                                      }
                                                                    },
                                                                    "arguments": [
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "otherSink"
                                                                      }
                                                                    ]
                                                                  }
                                                                }
                                                              }
                                                            ]
                                                          },
                                                          "alternate": null
                                                        },
                                                        {
                                                          "type": "ReturnStatement",
                                                          "argument": {
                                                            "type": "Identifier",
                                                            "name": "unsubBoth"
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "rest": null,
                                                    "generator": false,
                                                    "expression": false
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                      }
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "ThisExpression"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "sampledBy"
                                        }
                                      },
                                      "right": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                          {
                                            "type": "Identifier",
                                            "name": "sampler"
                                          },
                                          {
                                            "type": "Identifier",
                                            "name": "combinator"
                                          }
                                        ],
                                        "defaults": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "VariableDeclaration",
                                              "declarations": [
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "pushPropertyValue"
                                                  },
                                                  "init": null
                                                },
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "values"
                                                  },
                                                  "init": null
                                                }
                                              ],
                                              "kind": "var"
                                            },
                                            {
                                              "type": "IfStatement",
                                              "test": {
                                                "type": "BinaryExpression",
                                                "operator": "==",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "combinator"
                                                },
                                                "right": {
                                                  "type": "Literal",
                                                  "value": null
                                                }
                                              },
                                              "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "combinator"
                                                      },
                                                      "right": {
                                                        "type": "Identifier",
                                                        "name": "former"
                                                      }
                                                    }
                                                  }
                                                ]
                                              },
                                              "alternate": null
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "combinator"
                                                },
                                                "right": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "Identifier",
                                                    "name": "toCombinator"
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "combinator"
                                                    }
                                                  ]
                                                }
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "pushPropertyValue"
                                                },
                                                "right": {
                                                  "type": "FunctionExpression",
                                                  "id": null,
                                                  "params": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "sink"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "event"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "propertyVal"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "streamVal"
                                                    }
                                                  ],
                                                  "defaults": [],
                                                  "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "Identifier",
                                                            "name": "sink"
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "event"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "apply"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "FunctionExpression",
                                                                  "id": null,
                                                                  "params": [],
                                                                  "defaults": [],
                                                                  "body": {
                                                                    "type": "BlockStatement",
                                                                    "body": [
                                                                      {
                                                                        "type": "ReturnStatement",
                                                                        "argument": {
                                                                          "type": "CallExpression",
                                                                          "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "combinator"
                                                                          },
                                                                          "arguments": [
                                                                            {
                                                                              "type": "CallExpression",
                                                                              "callee": {
                                                                                "type": "Identifier",
                                                                                "name": "propertyVal"
                                                                              },
                                                                              "arguments": []
                                                                            },
                                                                            {
                                                                              "type": "CallExpression",
                                                                              "callee": {
                                                                                "type": "Identifier",
                                                                                "name": "streamVal"
                                                                              },
                                                                              "arguments": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      }
                                                                    ]
                                                                  },
                                                                  "rest": null,
                                                                  "generator": false,
                                                                  "expression": false
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "rest": null,
                                                  "generator": false,
                                                  "expression": false
                                                }
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "values"
                                                },
                                                "right": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "Identifier",
                                                    "name": "combine"
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "sampler"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "nop"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "pushPropertyValue"
                                                    }
                                                  ]
                                                }
                                              }
                                            },
                                            {
                                              "type": "IfStatement",
                                              "test": {
                                                "type": "BinaryExpression",
                                                "operator": "instanceof",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "sampler"
                                                },
                                                "right": {
                                                  "type": "Identifier",
                                                  "name": "EventStream"
                                                }
                                              },
                                              "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "values"
                                                      },
                                                      "right": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "values"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "changes"
                                                          }
                                                        },
                                                        "arguments": []
                                                      }
                                                    }
                                                  }
                                                ]
                                              },
                                              "alternate": null
                                            },
                                            {
                                              "type": "ReturnStatement",
                                              "argument": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "values"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "takeUntil"
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "sampler"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "filter"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Literal",
                                                            "value": false
                                                          }
                                                        ]
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "mapEnd"
                                                      }
                                                    },
                                                    "arguments": []
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                      }
                                    }
                                  }
                                ]
                              },
                              "rest": null,
                              "generator": false,
                              "expression": false
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Property"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "sample"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "interval"
                                    }
                                  ],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "sampledBy"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "Bacon"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "interval"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "interval"
                                                },
                                                {
                                                  "type": "ObjectExpression",
                                                  "properties": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Property"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "changes"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "_this"
                                            },
                                            "init": {
                                              "type": "ThisExpression"
                                            }
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "NewExpression",
                                          "callee": {
                                            "type": "Identifier",
                                            "name": "EventStream"
                                          },
                                          "arguments": [
                                            {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "sink"
                                                }
                                              ],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "_this"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "subscribe"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "FunctionExpression",
                                                          "id": null,
                                                          "params": [
                                                            {
                                                              "type": "Identifier",
                                                              "name": "event"
                                                            }
                                                          ],
                                                          "defaults": [],
                                                          "body": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                              {
                                                                "type": "IfStatement",
                                                                "test": {
                                                                  "type": "UnaryExpression",
                                                                  "operator": "!",
                                                                  "argument": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "event"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "isInitial"
                                                                      }
                                                                    },
                                                                    "arguments": []
                                                                  },
                                                                  "prefix": true
                                                                },
                                                                "consequent": {
                                                                  "type": "BlockStatement",
                                                                  "body": [
                                                                    {
                                                                      "type": "ReturnStatement",
                                                                      "argument": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                          "type": "Identifier",
                                                                          "name": "sink"
                                                                        },
                                                                        "arguments": [
                                                                          {
                                                                            "type": "Identifier",
                                                                            "name": "event"
                                                                          }
                                                                        ]
                                                                      }
                                                                    }
                                                                  ]
                                                                },
                                                                "alternate": null
                                                              }
                                                            ]
                                                          },
                                                          "rest": null,
                                                          "generator": false,
                                                          "expression": false
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Property"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "withHandler"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "handler"
                                    }
                                  ],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "NewExpression",
                                          "callee": {
                                            "type": "Identifier",
                                            "name": "Property"
                                          },
                                          "arguments": [
                                            {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "ThisExpression"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "subscribe"
                                              }
                                            },
                                            {
                                              "type": "Identifier",
                                              "name": "handler"
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Property"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "withSubscribe"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "subscribe"
                                    }
                                  ],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "NewExpression",
                                          "callee": {
                                            "type": "Identifier",
                                            "name": "Property"
                                          },
                                          "arguments": [
                                            {
                                              "type": "Identifier",
                                              "name": "subscribe"
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Property"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "toProperty"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "Identifier",
                                            "name": "assertNoArguments"
                                          },
                                          "arguments": [
                                            {
                                              "type": "Identifier",
                                              "name": "arguments"
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "ThisExpression"
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Property"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "toEventStream"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "_this"
                                            },
                                            "init": {
                                              "type": "ThisExpression"
                                            }
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "NewExpression",
                                          "callee": {
                                            "type": "Identifier",
                                            "name": "EventStream"
                                          },
                                          "arguments": [
                                            {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "sink"
                                                }
                                              ],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "_this"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "subscribe"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "FunctionExpression",
                                                          "id": null,
                                                          "params": [
                                                            {
                                                              "type": "Identifier",
                                                              "name": "event"
                                                            }
                                                          ],
                                                          "defaults": [],
                                                          "body": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                              {
                                                                "type": "IfStatement",
                                                                "test": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "event"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "isInitial"
                                                                    }
                                                                  },
                                                                  "arguments": []
                                                                },
                                                                "consequent": {
                                                                  "type": "BlockStatement",
                                                                  "body": [
                                                                    {
                                                                      "type": "ExpressionStatement",
                                                                      "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                          "type": "Identifier",
                                                                          "name": "event"
                                                                        },
                                                                        "right": {
                                                                          "type": "CallExpression",
                                                                          "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "Identifier",
                                                                              "name": "event"
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "toNext"
                                                                            }
                                                                          },
                                                                          "arguments": []
                                                                        }
                                                                      }
                                                                    }
                                                                  ]
                                                                },
                                                                "alternate": null
                                                              },
                                                              {
                                                                "type": "ReturnStatement",
                                                                "argument": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "sink"
                                                                  },
                                                                  "arguments": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "name": "event"
                                                                    }
                                                                  ]
                                                                }
                                                              }
                                                            ]
                                                          },
                                                          "rest": null,
                                                          "generator": false,
                                                          "expression": false
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Property"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "and"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "other"
                                    }
                                  ],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "combine"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Identifier",
                                              "name": "other"
                                            },
                                            {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "x"
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "name": "y"
                                                }
                                              ],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                      "type": "LogicalExpression",
                                                      "operator": "&&",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "x"
                                                      },
                                                      "right": {
                                                        "type": "Identifier",
                                                        "name": "y"
                                                      }
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Property"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "or"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "other"
                                    }
                                  ],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "combine"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Identifier",
                                              "name": "other"
                                            },
                                            {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "x"
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "name": "y"
                                                }
                                              ],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                      "type": "LogicalExpression",
                                                      "operator": "||",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "x"
                                                      },
                                                      "right": {
                                                        "type": "Identifier",
                                                        "name": "y"
                                                      }
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Property"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "decode"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "cases"
                                    }
                                  ],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "combine"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "Bacon"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "combineTemplate"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "cases"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "key"
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "name": "values"
                                                }
                                              ],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                      "type": "MemberExpression",
                                                      "computed": true,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "values"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "key"
                                                      }
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Property"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "delay"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "delay"
                                    }
                                  ],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "delayChanges"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "changes"
                                                }
                                              ],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "changes"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "delay"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "delay"
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Property"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "debounce"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "delay"
                                    }
                                  ],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "delayChanges"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "changes"
                                                }
                                              ],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "changes"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "debounce"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "delay"
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Property"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "throttle"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "delay"
                                    }
                                  ],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "delayChanges"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "changes"
                                                }
                                              ],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "changes"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "throttle"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "delay"
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Property"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "delayChanges"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "f"
                                    }
                                  ],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "Identifier",
                                            "name": "addPropertyInitValueToStream"
                                          },
                                          "arguments": [
                                            {
                                              "type": "ThisExpression"
                                            },
                                            {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "f"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "changes"
                                                    }
                                                  },
                                                  "arguments": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ReturnStatement",
                              "argument": {
                                "type": "Identifier",
                                "name": "Property"
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "Observable"
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "addPropertyInitValueToStream"
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "property"
                        },
                        {
                          "type": "Identifier",
                          "name": "stream"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "VariableDeclaration",
                            "declarations": [
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "getInitValue"
                                },
                                "init": null
                              }
                            ],
                            "kind": "var"
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "name": "getInitValue"
                              },
                              "right": {
                                "type": "FunctionExpression",
                                "id": null,
                                "params": [
                                  {
                                    "type": "Identifier",
                                    "name": "property"
                                  }
                                ],
                                "defaults": [],
                                "body": {
                                  "type": "BlockStatement",
                                  "body": [
                                    {
                                      "type": "VariableDeclaration",
                                      "declarations": [
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "value"
                                          },
                                          "init": null
                                        }
                                      ],
                                      "kind": "var"
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                          "type": "Identifier",
                                          "name": "value"
                                        },
                                        "right": {
                                          "type": "Identifier",
                                          "name": "None"
                                        }
                                      }
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "property"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "subscribe"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                              {
                                                "type": "Identifier",
                                                "name": "event"
                                              }
                                            ],
                                            "defaults": [],
                                            "body": {
                                              "type": "BlockStatement",
                                              "body": [
                                                {
                                                  "type": "IfStatement",
                                                  "test": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "event"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "hasValue"
                                                      }
                                                    },
                                                    "arguments": []
                                                  },
                                                  "consequent": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "AssignmentExpression",
                                                          "operator": "=",
                                                          "left": {
                                                            "type": "Identifier",
                                                            "name": "value"
                                                          },
                                                          "right": {
                                                            "type": "NewExpression",
                                                            "callee": {
                                                              "type": "Identifier",
                                                              "name": "Some"
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "event"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "value"
                                                                  }
                                                                },
                                                                "arguments": []
                                                              }
                                                            ]
                                                          }
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "alternate": null
                                                },
                                                {
                                                  "type": "ReturnStatement",
                                                  "argument": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "Bacon"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "noMore"
                                                    }
                                                  }
                                                }
                                              ]
                                            },
                                            "rest": null,
                                            "generator": false,
                                            "expression": false
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "ReturnStatement",
                                      "argument": {
                                        "type": "Identifier",
                                        "name": "value"
                                      }
                                    }
                                  ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                              }
                            }
                          },
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "stream"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "toProperty"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "Identifier",
                                    "name": "getInitValue"
                                  },
                                  "arguments": [
                                    {
                                      "type": "Identifier",
                                      "name": "property"
                                    }
                                  ]
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "Dispatcher"
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "FunctionDeclaration",
                              "id": {
                                "type": "Identifier",
                                "name": "Dispatcher"
                              },
                              "params": [
                                {
                                  "type": "Identifier",
                                  "name": "subscribe"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "handleEvent"
                                }
                              ],
                              "defaults": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "addWaiter"
                                        },
                                        "init": null
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "done"
                                        },
                                        "init": null
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "ended"
                                        },
                                        "init": null
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "prevError"
                                        },
                                        "init": null
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "pushing"
                                        },
                                        "init": null
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "queue"
                                        },
                                        "init": null
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "removeSub"
                                        },
                                        "init": null
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "subscriptions"
                                        },
                                        "init": null
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "unsubscribeFromSource"
                                        },
                                        "init": null
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "waiters"
                                        },
                                        "init": null
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "_this"
                                        },
                                        "init": {
                                          "type": "ThisExpression"
                                        }
                                      }
                                    ],
                                    "kind": "var"
                                  },
                                  {
                                    "type": "IfStatement",
                                    "test": {
                                      "type": "BinaryExpression",
                                      "operator": "==",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "subscribe"
                                      },
                                      "right": {
                                        "type": "Literal",
                                        "value": null
                                      }
                                    },
                                    "consequent": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "subscribe"
                                            },
                                            "right": {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                      "type": "Identifier",
                                                      "name": "nop"
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            }
                                          }
                                        }
                                      ]
                                    },
                                    "alternate": null
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "subscriptions"
                                      },
                                      "right": {
                                        "type": "ArrayExpression",
                                        "elements": []
                                      }
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "queue"
                                      },
                                      "right": {
                                        "type": "Literal",
                                        "value": null
                                      }
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "pushing"
                                      },
                                      "right": {
                                        "type": "Literal",
                                        "value": false
                                      }
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "ended"
                                      },
                                      "right": {
                                        "type": "Literal",
                                        "value": false
                                      }
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "ThisExpression"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "hasSubscribers"
                                        }
                                      },
                                      "right": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [],
                                        "defaults": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ReturnStatement",
                                              "argument": {
                                                "type": "BinaryExpression",
                                                "operator": ">",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "subscriptions"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "length"
                                                  }
                                                },
                                                "right": {
                                                  "type": "Literal",
                                                  "value": 0
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                      }
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "prevError"
                                      },
                                      "right": {
                                        "type": "Literal",
                                        "value": null
                                      }
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "unsubscribeFromSource"
                                      },
                                      "right": {
                                        "type": "Identifier",
                                        "name": "nop"
                                      }
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "removeSub"
                                      },
                                      "right": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                          {
                                            "type": "Identifier",
                                            "name": "subscription"
                                          }
                                        ],
                                        "defaults": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ReturnStatement",
                                              "argument": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "subscriptions"
                                                },
                                                "right": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "_"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "without"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "subscription"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "subscriptions"
                                                    }
                                                  ]
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                      }
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "waiters"
                                      },
                                      "right": {
                                        "type": "Literal",
                                        "value": null
                                      }
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "done"
                                      },
                                      "right": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                          {
                                            "type": "Identifier",
                                            "name": "event"
                                          }
                                        ],
                                        "defaults": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "VariableDeclaration",
                                              "declarations": [
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "w"
                                                  },
                                                  "init": null
                                                },
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "ws"
                                                  },
                                                  "init": null
                                                },
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "_i"
                                                  },
                                                  "init": null
                                                },
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "_len"
                                                  },
                                                  "init": null
                                                }
                                              ],
                                              "kind": "var"
                                            },
                                            {
                                              "type": "IfStatement",
                                              "test": {
                                                "type": "BinaryExpression",
                                                "operator": "!=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "waiters"
                                                },
                                                "right": {
                                                  "type": "Literal",
                                                  "value": null
                                                }
                                              },
                                              "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "ws"
                                                      },
                                                      "right": {
                                                        "type": "Identifier",
                                                        "name": "waiters"
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "waiters"
                                                      },
                                                      "right": {
                                                        "type": "Literal",
                                                        "value": null
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ForStatement",
                                                    "init": {
                                                      "type": "SequenceExpression",
                                                      "expressions": [
                                                        {
                                                          "type": "AssignmentExpression",
                                                          "operator": "=",
                                                          "left": {
                                                            "type": "Identifier",
                                                            "name": "_i"
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": 0
                                                          }
                                                        },
                                                        {
                                                          "type": "AssignmentExpression",
                                                          "operator": "=",
                                                          "left": {
                                                            "type": "Identifier",
                                                            "name": "_len"
                                                          },
                                                          "right": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "ws"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "length"
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "test": {
                                                      "type": "BinaryExpression",
                                                      "operator": "<",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "_i"
                                                      },
                                                      "right": {
                                                        "type": "Identifier",
                                                        "name": "_len"
                                                      }
                                                    },
                                                    "update": {
                                                      "type": "UpdateExpression",
                                                      "operator": "++",
                                                      "argument": {
                                                        "type": "Identifier",
                                                        "name": "_i"
                                                      },
                                                      "prefix": false
                                                    },
                                                    "body": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "w"
                                                            },
                                                            "right": {
                                                              "type": "MemberExpression",
                                                              "computed": true,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "ws"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "_i"
                                                              }
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "Identifier",
                                                              "name": "w"
                                                            },
                                                            "arguments": []
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ]
                                              },
                                              "alternate": null
                                            },
                                            {
                                              "type": "ReturnStatement",
                                              "argument": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "event"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "onDone"
                                                  }
                                                },
                                                "right": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "Event"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "prototype"
                                                    }
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "onDone"
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                      }
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "addWaiter"
                                      },
                                      "right": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                          {
                                            "type": "Identifier",
                                            "name": "listener"
                                          }
                                        ],
                                        "defaults": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ReturnStatement",
                                              "argument": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "waiters"
                                                },
                                                "right": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "LogicalExpression",
                                                      "operator": "||",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "waiters"
                                                      },
                                                      "right": {
                                                        "type": "ArrayExpression",
                                                        "elements": []
                                                      }
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "concat"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "ArrayExpression",
                                                      "elements": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "listener"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                      }
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "ThisExpression"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "push"
                                        }
                                      },
                                      "right": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                          {
                                            "type": "Identifier",
                                            "name": "event"
                                          }
                                        ],
                                        "defaults": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "VariableDeclaration",
                                              "declarations": [
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "reply"
                                                  },
                                                  "init": null
                                                },
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "sub"
                                                  },
                                                  "init": null
                                                },
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "success"
                                                  },
                                                  "init": null
                                                },
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "tmp"
                                                  },
                                                  "init": null
                                                },
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "_i"
                                                  },
                                                  "init": null
                                                },
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "_len"
                                                  },
                                                  "init": null
                                                }
                                              ],
                                              "kind": "var"
                                            },
                                            {
                                              "type": "IfStatement",
                                              "test": {
                                                "type": "UnaryExpression",
                                                "operator": "!",
                                                "argument": {
                                                  "type": "Identifier",
                                                  "name": "pushing"
                                                },
                                                "prefix": true
                                              },
                                              "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "IfStatement",
                                                    "test": {
                                                      "type": "BinaryExpression",
                                                      "operator": "===",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "event"
                                                      },
                                                      "right": {
                                                        "type": "Identifier",
                                                        "name": "prevError"
                                                      }
                                                    },
                                                    "consequent": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ReturnStatement",
                                                          "argument": null
                                                        }
                                                      ]
                                                    },
                                                    "alternate": null
                                                  },
                                                  {
                                                    "type": "IfStatement",
                                                    "test": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "event"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "isError"
                                                        }
                                                      },
                                                      "arguments": []
                                                    },
                                                    "consequent": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "prevError"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "event"
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "alternate": null
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "success"
                                                      },
                                                      "right": {
                                                        "type": "Literal",
                                                        "value": false
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "TryStatement",
                                                    "block": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "pushing"
                                                            },
                                                            "right": {
                                                              "type": "Literal",
                                                              "value": true
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "event"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "onDone"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "addWaiter"
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "tmp"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "subscriptions"
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "ForStatement",
                                                          "init": {
                                                            "type": "SequenceExpression",
                                                            "expressions": [
                                                              {
                                                                "type": "AssignmentExpression",
                                                                "operator": "=",
                                                                "left": {
                                                                  "type": "Identifier",
                                                                  "name": "_i"
                                                                },
                                                                "right": {
                                                                  "type": "Literal",
                                                                  "value": 0
                                                                }
                                                              },
                                                              {
                                                                "type": "AssignmentExpression",
                                                                "operator": "=",
                                                                "left": {
                                                                  "type": "Identifier",
                                                                  "name": "_len"
                                                                },
                                                                "right": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "tmp"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "length"
                                                                  }
                                                                }
                                                              }
                                                            ]
                                                          },
                                                          "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "<",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "_i"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "_len"
                                                            }
                                                          },
                                                          "update": {
                                                            "type": "UpdateExpression",
                                                            "operator": "++",
                                                            "argument": {
                                                              "type": "Identifier",
                                                              "name": "_i"
                                                            },
                                                            "prefix": false
                                                          },
                                                          "body": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                              {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                  "type": "AssignmentExpression",
                                                                  "operator": "=",
                                                                  "left": {
                                                                    "type": "Identifier",
                                                                    "name": "sub"
                                                                  },
                                                                  "right": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "tmp"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "_i"
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                  "type": "AssignmentExpression",
                                                                  "operator": "=",
                                                                  "left": {
                                                                    "type": "Identifier",
                                                                    "name": "reply"
                                                                  },
                                                                  "right": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "sub"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "sink"
                                                                      }
                                                                    },
                                                                    "arguments": [
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "event"
                                                                      }
                                                                    ]
                                                                  }
                                                                }
                                                              },
                                                              {
                                                                "type": "IfStatement",
                                                                "test": {
                                                                  "type": "LogicalExpression",
                                                                  "operator": "||",
                                                                  "left": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "===",
                                                                    "left": {
                                                                      "type": "Identifier",
                                                                      "name": "reply"
                                                                    },
                                                                    "right": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "Bacon"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "noMore"
                                                                      }
                                                                    }
                                                                  },
                                                                  "right": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "event"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "isEnd"
                                                                      }
                                                                    },
                                                                    "arguments": []
                                                                  }
                                                                },
                                                                "consequent": {
                                                                  "type": "BlockStatement",
                                                                  "body": [
                                                                    {
                                                                      "type": "ExpressionStatement",
                                                                      "expression": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                          "type": "Identifier",
                                                                          "name": "removeSub"
                                                                        },
                                                                        "arguments": [
                                                                          {
                                                                            "type": "Identifier",
                                                                            "name": "sub"
                                                                          }
                                                                        ]
                                                                      }
                                                                    }
                                                                  ]
                                                                },
                                                                "alternate": null
                                                              }
                                                            ]
                                                          }
                                                        },
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "success"
                                                            },
                                                            "right": {
                                                              "type": "Literal",
                                                              "value": true
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "guardedHandlers": [],
                                                    "handlers": [],
                                                    "finalizer": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "pushing"
                                                            },
                                                            "right": {
                                                              "type": "Literal",
                                                              "value": false
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "IfStatement",
                                                          "test": {
                                                            "type": "UnaryExpression",
                                                            "operator": "!",
                                                            "argument": {
                                                              "type": "Identifier",
                                                              "name": "success"
                                                            },
                                                            "prefix": true
                                                          },
                                                          "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                              {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                  "type": "AssignmentExpression",
                                                                  "operator": "=",
                                                                  "left": {
                                                                    "type": "Identifier",
                                                                    "name": "queue"
                                                                  },
                                                                  "right": {
                                                                    "type": "Literal",
                                                                    "value": null
                                                                  }
                                                                }
                                                              }
                                                            ]
                                                          },
                                                          "alternate": null
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "success"
                                                      },
                                                      "right": {
                                                        "type": "Literal",
                                                        "value": true
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "WhileStatement",
                                                    "test": {
                                                      "type": "ConditionalExpression",
                                                      "test": {
                                                        "type": "BinaryExpression",
                                                        "operator": "!=",
                                                        "left": {
                                                          "type": "Identifier",
                                                          "name": "queue"
                                                        },
                                                        "right": {
                                                          "type": "Literal",
                                                          "value": null
                                                        }
                                                      },
                                                      "consequent": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "queue"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "length"
                                                        }
                                                      },
                                                      "alternate": {
                                                        "type": "UnaryExpression",
                                                        "operator": "void",
                                                        "argument": {
                                                          "type": "Literal",
                                                          "value": 0
                                                        },
                                                        "prefix": true
                                                      }
                                                    },
                                                    "body": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "event"
                                                            },
                                                            "right": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "_"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "head"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "queue"
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "queue"
                                                            },
                                                            "right": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "_"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "tail"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "queue"
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "_this"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "push"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "Identifier",
                                                                "name": "event"
                                                              }
                                                            ]
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "Identifier",
                                                        "name": "done"
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "event"
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  {
                                                    "type": "IfStatement",
                                                    "test": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "_this"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "hasSubscribers"
                                                        }
                                                      },
                                                      "arguments": []
                                                    },
                                                    "consequent": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ReturnStatement",
                                                          "argument": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "Bacon"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "more"
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "alternate": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ReturnStatement",
                                                          "argument": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "Bacon"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "noMore"
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ]
                                              },
                                              "alternate": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "queue"
                                                      },
                                                      "right": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "LogicalExpression",
                                                            "operator": "||",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "queue"
                                                            },
                                                            "right": {
                                                              "type": "ArrayExpression",
                                                              "elements": []
                                                            }
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "concat"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "ArrayExpression",
                                                            "elements": [
                                                              {
                                                                "type": "Identifier",
                                                                "name": "event"
                                                              }
                                                            ]
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "Bacon"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "more"
                                                      }
                                                    }
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                      }
                                    }
                                  },
                                  {
                                    "type": "IfStatement",
                                    "test": {
                                      "type": "BinaryExpression",
                                      "operator": "==",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "handleEvent"
                                      },
                                      "right": {
                                        "type": "Literal",
                                        "value": null
                                      }
                                    },
                                    "consequent": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "handleEvent"
                                            },
                                            "right": {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "event"
                                                }
                                              ],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "push"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "event"
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            }
                                          }
                                        }
                                      ]
                                    },
                                    "alternate": null
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "ThisExpression"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "handleEvent"
                                        }
                                      },
                                      "right": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                          {
                                            "type": "Identifier",
                                            "name": "event"
                                          }
                                        ],
                                        "defaults": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "IfStatement",
                                              "test": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "event"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "isEnd"
                                                  }
                                                },
                                                "arguments": []
                                              },
                                              "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "ended"
                                                      },
                                                      "right": {
                                                        "type": "Literal",
                                                        "value": true
                                                      }
                                                    }
                                                  }
                                                ]
                                              },
                                              "alternate": null
                                            },
                                            {
                                              "type": "ReturnStatement",
                                              "argument": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "handleEvent"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "apply"
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "_this"
                                                  },
                                                  {
                                                    "type": "ArrayExpression",
                                                    "elements": [
                                                      {
                                                        "type": "Identifier",
                                                        "name": "event"
                                                      }
                                                    ]
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                      }
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "ThisExpression"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "subscribe"
                                        }
                                      },
                                      "right": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                          {
                                            "type": "Identifier",
                                            "name": "sink"
                                          }
                                        ],
                                        "defaults": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "VariableDeclaration",
                                              "declarations": [
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "subscription"
                                                  },
                                                  "init": null
                                                }
                                              ],
                                              "kind": "var"
                                            },
                                            {
                                              "type": "IfStatement",
                                              "test": {
                                                "type": "Identifier",
                                                "name": "ended"
                                              },
                                              "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "Identifier",
                                                        "name": "sink"
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "Identifier",
                                                            "name": "end"
                                                          },
                                                          "arguments": []
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                      "type": "Identifier",
                                                      "name": "nop"
                                                    }
                                                  }
                                                ]
                                              },
                                              "alternate": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "Identifier",
                                                        "name": "assertFunction"
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "sink"
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "subscription"
                                                      },
                                                      "right": {
                                                        "type": "ObjectExpression",
                                                        "properties": [
                                                          {
                                                            "type": "Property",
                                                            "key": {
                                                              "type": "Identifier",
                                                              "name": "sink"
                                                            },
                                                            "value": {
                                                              "type": "Identifier",
                                                              "name": "sink"
                                                            },
                                                            "kind": "init"
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "subscriptions"
                                                      },
                                                      "right": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "subscriptions"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "concat"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Identifier",
                                                            "name": "subscription"
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "IfStatement",
                                                    "test": {
                                                      "type": "BinaryExpression",
                                                      "operator": "===",
                                                      "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "subscriptions"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "length"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "Literal",
                                                        "value": 1
                                                      }
                                                    },
                                                    "consequent": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "unsubscribeFromSource"
                                                            },
                                                            "right": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "Identifier",
                                                                "name": "subscribe"
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_this"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "handleEvent"
                                                                  }
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "alternate": null
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "Identifier",
                                                        "name": "assertFunction"
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "unsubscribeFromSource"
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                      "type": "FunctionExpression",
                                                      "id": null,
                                                      "params": [],
                                                      "defaults": [],
                                                      "body": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "Identifier",
                                                                "name": "removeSub"
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "subscription"
                                                                }
                                                              ]
                                                            }
                                                          },
                                                          {
                                                            "type": "IfStatement",
                                                            "test": {
                                                              "type": "UnaryExpression",
                                                              "operator": "!",
                                                              "argument": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_this"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "hasSubscribers"
                                                                  }
                                                                },
                                                                "arguments": []
                                                              },
                                                              "prefix": true
                                                            },
                                                            "consequent": {
                                                              "type": "BlockStatement",
                                                              "body": [
                                                                {
                                                                  "type": "ReturnStatement",
                                                                  "argument": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "Identifier",
                                                                      "name": "unsubscribeFromSource"
                                                                    },
                                                                    "arguments": []
                                                                  }
                                                                }
                                                              ]
                                                            },
                                                            "alternate": null
                                                          }
                                                        ]
                                                      },
                                                      "rest": null,
                                                      "generator": false,
                                                      "expression": false
                                                    }
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                      }
                                    }
                                  }
                                ]
                              },
                              "rest": null,
                              "generator": false,
                              "expression": false
                            },
                            {
                              "type": "ReturnStatement",
                              "argument": {
                                "type": "Identifier",
                                "name": "Dispatcher"
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      },
                      "arguments": []
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "PropertyDispatcher"
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [
                          {
                            "type": "Identifier",
                            "name": "_super"
                          }
                        ],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "__extends"
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "PropertyDispatcher"
                                  },
                                  {
                                    "type": "Identifier",
                                    "name": "_super"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "FunctionDeclaration",
                              "id": {
                                "type": "Identifier",
                                "name": "PropertyDispatcher"
                              },
                              "params": [
                                {
                                  "type": "Identifier",
                                  "name": "subscribe"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "handleEvent"
                                }
                              ],
                              "defaults": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "current"
                                        },
                                        "init": null
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "ended"
                                        },
                                        "init": null
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "push"
                                        },
                                        "init": null
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "_this"
                                        },
                                        "init": {
                                          "type": "ThisExpression"
                                        }
                                      }
                                    ],
                                    "kind": "var"
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "PropertyDispatcher"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "__super__"
                                            }
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "constructor"
                                          }
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "call"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "ThisExpression"
                                        },
                                        {
                                          "type": "Identifier",
                                          "name": "subscribe"
                                        },
                                        {
                                          "type": "Identifier",
                                          "name": "handleEvent"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "current"
                                      },
                                      "right": {
                                        "type": "Identifier",
                                        "name": "None"
                                      }
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "push"
                                      },
                                      "right": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "ThisExpression"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "push"
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "subscribe"
                                      },
                                      "right": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "ThisExpression"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "subscribe"
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "ended"
                                      },
                                      "right": {
                                        "type": "Literal",
                                        "value": false
                                      }
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "ThisExpression"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "push"
                                        }
                                      },
                                      "right": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                          {
                                            "type": "Identifier",
                                            "name": "event"
                                          }
                                        ],
                                        "defaults": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "IfStatement",
                                              "test": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "event"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "isEnd"
                                                  }
                                                },
                                                "arguments": []
                                              },
                                              "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "ended"
                                                      },
                                                      "right": {
                                                        "type": "Literal",
                                                        "value": true
                                                      }
                                                    }
                                                  }
                                                ]
                                              },
                                              "alternate": null
                                            },
                                            {
                                              "type": "IfStatement",
                                              "test": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "event"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "hasValue"
                                                  }
                                                },
                                                "arguments": []
                                              },
                                              "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "current"
                                                      },
                                                      "right": {
                                                        "type": "NewExpression",
                                                        "callee": {
                                                          "type": "Identifier",
                                                          "name": "Some"
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "event"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "value"
                                                              }
                                                            },
                                                            "arguments": []
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  }
                                                ]
                                              },
                                              "alternate": null
                                            },
                                            {
                                              "type": "ReturnStatement",
                                              "argument": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "push"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "apply"
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "_this"
                                                  },
                                                  {
                                                    "type": "ArrayExpression",
                                                    "elements": [
                                                      {
                                                        "type": "Identifier",
                                                        "name": "event"
                                                      }
                                                    ]
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                      }
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "ThisExpression"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "subscribe"
                                        }
                                      },
                                      "right": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                          {
                                            "type": "Identifier",
                                            "name": "sink"
                                          }
                                        ],
                                        "defaults": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "VariableDeclaration",
                                              "declarations": [
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "initSent"
                                                  },
                                                  "init": null
                                                },
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "reply"
                                                  },
                                                  "init": null
                                                },
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "shouldBounceInitialValue"
                                                  },
                                                  "init": null
                                                }
                                              ],
                                              "kind": "var"
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "initSent"
                                                },
                                                "right": {
                                                  "type": "Literal",
                                                  "value": false
                                                }
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "shouldBounceInitialValue"
                                                },
                                                "right": {
                                                  "type": "FunctionExpression",
                                                  "id": null,
                                                  "params": [],
                                                  "defaults": [],
                                                  "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                          "type": "LogicalExpression",
                                                          "operator": "||",
                                                          "left": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "_this"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "hasSubscribers"
                                                              }
                                                            },
                                                            "arguments": []
                                                          },
                                                          "right": {
                                                            "type": "Identifier",
                                                            "name": "ended"
                                                          }
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "rest": null,
                                                  "generator": false,
                                                  "expression": false
                                                }
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "reply"
                                                },
                                                "right": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "current"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "filter"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "shouldBounceInitialValue"
                                                        }
                                                      ]
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "map"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "FunctionExpression",
                                                      "id": null,
                                                      "params": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "val"
                                                        }
                                                      ],
                                                      "defaults": [],
                                                      "body": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "ReturnStatement",
                                                            "argument": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "Identifier",
                                                                "name": "sink"
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "initial"
                                                                  },
                                                                  "arguments": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "name": "val"
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      "rest": null,
                                                      "generator": false,
                                                      "expression": false
                                                    }
                                                  ]
                                                }
                                              }
                                            },
                                            {
                                              "type": "IfStatement",
                                              "test": {
                                                "type": "BinaryExpression",
                                                "operator": "===",
                                                "left": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "reply"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "getOrElse"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "Bacon"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "more"
                                                      }
                                                    }
                                                  ]
                                                },
                                                "right": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "Bacon"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "noMore"
                                                  }
                                                }
                                              },
                                              "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                      "type": "Identifier",
                                                      "name": "nop"
                                                    }
                                                  }
                                                ]
                                              },
                                              "alternate": {
                                                "type": "IfStatement",
                                                "test": {
                                                  "type": "Identifier",
                                                  "name": "ended"
                                                },
                                                "consequent": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "Identifier",
                                                          "name": "sink"
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "Identifier",
                                                              "name": "end"
                                                            },
                                                            "arguments": []
                                                          }
                                                        ]
                                                      }
                                                    },
                                                    {
                                                      "type": "ReturnStatement",
                                                      "argument": {
                                                        "type": "Identifier",
                                                        "name": "nop"
                                                      }
                                                    }
                                                  ]
                                                },
                                                "alternate": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "ReturnStatement",
                                                      "argument": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "subscribe"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "apply"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Identifier",
                                                            "name": "_this"
                                                          },
                                                          {
                                                            "type": "ArrayExpression",
                                                            "elements": [
                                                              {
                                                                "type": "Identifier",
                                                                "name": "sink"
                                                              }
                                                            ]
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  ]
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                      }
                                    }
                                  }
                                ]
                              },
                              "rest": null,
                              "generator": false,
                              "expression": false
                            },
                            {
                              "type": "ReturnStatement",
                              "argument": {
                                "type": "Identifier",
                                "name": "PropertyDispatcher"
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "Dispatcher"
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "Bus"
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [
                          {
                            "type": "Identifier",
                            "name": "_super"
                          }
                        ],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "__extends"
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "Bus"
                                  },
                                  {
                                    "type": "Identifier",
                                    "name": "_super"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "FunctionDeclaration",
                              "id": {
                                "type": "Identifier",
                                "name": "Bus"
                              },
                              "params": [],
                              "defaults": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "ended"
                                        },
                                        "init": null
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "guardedSink"
                                        },
                                        "init": null
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "sink"
                                        },
                                        "init": null
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "subscribeAll"
                                        },
                                        "init": null
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "subscribeInput"
                                        },
                                        "init": null
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "subscriptions"
                                        },
                                        "init": null
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "unsubAll"
                                        },
                                        "init": null
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "unsubscribeInput"
                                        },
                                        "init": null
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "_this"
                                        },
                                        "init": {
                                          "type": "ThisExpression"
                                        }
                                      }
                                    ],
                                    "kind": "var"
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "sink"
                                      },
                                      "right": {
                                        "type": "UnaryExpression",
                                        "operator": "void",
                                        "argument": {
                                          "type": "Literal",
                                          "value": 0
                                        },
                                        "prefix": true
                                      }
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "subscriptions"
                                      },
                                      "right": {
                                        "type": "ArrayExpression",
                                        "elements": []
                                      }
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "ended"
                                      },
                                      "right": {
                                        "type": "Literal",
                                        "value": false
                                      }
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "guardedSink"
                                      },
                                      "right": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                          {
                                            "type": "Identifier",
                                            "name": "input"
                                          }
                                        ],
                                        "defaults": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ReturnStatement",
                                              "argument": {
                                                "type": "FunctionExpression",
                                                "id": null,
                                                "params": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "event"
                                                  }
                                                ],
                                                "defaults": [],
                                                "body": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "IfStatement",
                                                      "test": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "event"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "isEnd"
                                                          }
                                                        },
                                                        "arguments": []
                                                      },
                                                      "consequent": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "Identifier",
                                                                "name": "unsubscribeInput"
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "input"
                                                                }
                                                              ]
                                                            }
                                                          },
                                                          {
                                                            "type": "ReturnStatement",
                                                            "argument": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "Bacon"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "noMore"
                                                              }
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      "alternate": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "ReturnStatement",
                                                            "argument": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "Identifier",
                                                                "name": "sink"
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "event"
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  ]
                                                },
                                                "rest": null,
                                                "generator": false,
                                                "expression": false
                                              }
                                            }
                                          ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                      }
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "unsubAll"
                                      },
                                      "right": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [],
                                        "defaults": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "VariableDeclaration",
                                              "declarations": [
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "sub"
                                                  },
                                                  "init": null
                                                },
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "_i"
                                                  },
                                                  "init": null
                                                },
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "_len"
                                                  },
                                                  "init": null
                                                },
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "_results"
                                                  },
                                                  "init": null
                                                }
                                              ],
                                              "kind": "var"
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "_results"
                                                },
                                                "right": {
                                                  "type": "ArrayExpression",
                                                  "elements": []
                                                }
                                              }
                                            },
                                            {
                                              "type": "ForStatement",
                                              "init": {
                                                "type": "SequenceExpression",
                                                "expressions": [
                                                  {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "_i"
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": 0
                                                    }
                                                  },
                                                  {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "_len"
                                                    },
                                                    "right": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "subscriptions"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "length"
                                                      }
                                                    }
                                                  }
                                                ]
                                              },
                                              "test": {
                                                "type": "BinaryExpression",
                                                "operator": "<",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "_i"
                                                },
                                                "right": {
                                                  "type": "Identifier",
                                                  "name": "_len"
                                                }
                                              },
                                              "update": {
                                                "type": "UpdateExpression",
                                                "operator": "++",
                                                "argument": {
                                                  "type": "Identifier",
                                                  "name": "_i"
                                                },
                                                "prefix": false
                                              },
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "sub"
                                                      },
                                                      "right": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "subscriptions"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "_i"
                                                        }
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "_results"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "push"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "ConditionalExpression",
                                                          "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "===",
                                                            "left": {
                                                              "type": "UnaryExpression",
                                                              "operator": "typeof",
                                                              "argument": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "sub"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "unsub"
                                                                }
                                                              },
                                                              "prefix": true
                                                            },
                                                            "right": {
                                                              "type": "Literal",
                                                              "value": "function"
                                                            }
                                                          },
                                                          "consequent": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "sub"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "unsub"
                                                              }
                                                            },
                                                            "arguments": []
                                                          },
                                                          "alternate": {
                                                            "type": "UnaryExpression",
                                                            "operator": "void",
                                                            "argument": {
                                                              "type": "Literal",
                                                              "value": 0
                                                            },
                                                            "prefix": true
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "type": "ReturnStatement",
                                              "argument": {
                                                "type": "Identifier",
                                                "name": "_results"
                                              }
                                            }
                                          ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                      }
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "subscribeInput"
                                      },
                                      "right": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                          {
                                            "type": "Identifier",
                                            "name": "subscription"
                                          }
                                        ],
                                        "defaults": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ReturnStatement",
                                              "argument": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "subscription"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "unsub"
                                                  }
                                                },
                                                "right": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "subscription"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "input"
                                                      }
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "subscribe"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "Identifier",
                                                        "name": "guardedSink"
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "subscription"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "input"
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                      }
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "unsubscribeInput"
                                      },
                                      "right": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                          {
                                            "type": "Identifier",
                                            "name": "input"
                                          }
                                        ],
                                        "defaults": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "VariableDeclaration",
                                              "declarations": [
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "i"
                                                  },
                                                  "init": null
                                                },
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "sub"
                                                  },
                                                  "init": null
                                                },
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "_i"
                                                  },
                                                  "init": null
                                                },
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "_len"
                                                  },
                                                  "init": null
                                                }
                                              ],
                                              "kind": "var"
                                            },
                                            {
                                              "type": "ForStatement",
                                              "init": {
                                                "type": "SequenceExpression",
                                                "expressions": [
                                                  {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "i"
                                                    },
                                                    "right": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "_i"
                                                      },
                                                      "right": {
                                                        "type": "Literal",
                                                        "value": 0
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "_len"
                                                    },
                                                    "right": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "subscriptions"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "length"
                                                      }
                                                    }
                                                  }
                                                ]
                                              },
                                              "test": {
                                                "type": "BinaryExpression",
                                                "operator": "<",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "_i"
                                                },
                                                "right": {
                                                  "type": "Identifier",
                                                  "name": "_len"
                                                }
                                              },
                                              "update": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "i"
                                                },
                                                "right": {
                                                  "type": "UpdateExpression",
                                                  "operator": "++",
                                                  "argument": {
                                                    "type": "Identifier",
                                                    "name": "_i"
                                                  },
                                                  "prefix": true
                                                }
                                              },
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "sub"
                                                      },
                                                      "right": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "subscriptions"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "i"
                                                        }
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "IfStatement",
                                                    "test": {
                                                      "type": "BinaryExpression",
                                                      "operator": "===",
                                                      "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "sub"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "input"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "Identifier",
                                                        "name": "input"
                                                      }
                                                    },
                                                    "consequent": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "IfStatement",
                                                          "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "===",
                                                            "left": {
                                                              "type": "UnaryExpression",
                                                              "operator": "typeof",
                                                              "argument": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "sub"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "unsub"
                                                                }
                                                              },
                                                              "prefix": true
                                                            },
                                                            "right": {
                                                              "type": "Literal",
                                                              "value": "function"
                                                            }
                                                          },
                                                          "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                              {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "sub"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "unsub"
                                                                    }
                                                                  },
                                                                  "arguments": []
                                                                }
                                                              }
                                                            ]
                                                          },
                                                          "alternate": null
                                                        },
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "subscriptions"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "splice"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "Identifier",
                                                                "name": "i"
                                                              },
                                                              {
                                                                "type": "Literal",
                                                                "value": 1
                                                              }
                                                            ]
                                                          }
                                                        },
                                                        {
                                                          "type": "ReturnStatement",
                                                          "argument": null
                                                        }
                                                      ]
                                                    },
                                                    "alternate": null
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                      }
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "subscribeAll"
                                      },
                                      "right": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                          {
                                            "type": "Identifier",
                                            "name": "newSink"
                                          }
                                        ],
                                        "defaults": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "VariableDeclaration",
                                              "declarations": [
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "subscription"
                                                  },
                                                  "init": null
                                                },
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "unsubFuncs"
                                                  },
                                                  "init": null
                                                },
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "_i"
                                                  },
                                                  "init": null
                                                },
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "_len"
                                                  },
                                                  "init": null
                                                },
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "_ref1"
                                                  },
                                                  "init": null
                                                }
                                              ],
                                              "kind": "var"
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "sink"
                                                },
                                                "right": {
                                                  "type": "Identifier",
                                                  "name": "newSink"
                                                }
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "unsubFuncs"
                                                },
                                                "right": {
                                                  "type": "ArrayExpression",
                                                  "elements": []
                                                }
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "_ref1"
                                                },
                                                "right": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "Identifier",
                                                    "name": "cloneArray"
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "subscriptions"
                                                    }
                                                  ]
                                                }
                                              }
                                            },
                                            {
                                              "type": "ForStatement",
                                              "init": {
                                                "type": "SequenceExpression",
                                                "expressions": [
                                                  {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "_i"
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": 0
                                                    }
                                                  },
                                                  {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "_len"
                                                    },
                                                    "right": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "_ref1"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "length"
                                                      }
                                                    }
                                                  }
                                                ]
                                              },
                                              "test": {
                                                "type": "BinaryExpression",
                                                "operator": "<",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "_i"
                                                },
                                                "right": {
                                                  "type": "Identifier",
                                                  "name": "_len"
                                                }
                                              },
                                              "update": {
                                                "type": "UpdateExpression",
                                                "operator": "++",
                                                "argument": {
                                                  "type": "Identifier",
                                                  "name": "_i"
                                                },
                                                "prefix": false
                                              },
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "subscription"
                                                      },
                                                      "right": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "_ref1"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "_i"
                                                        }
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "Identifier",
                                                        "name": "subscribeInput"
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "subscription"
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "type": "ReturnStatement",
                                              "argument": {
                                                "type": "Identifier",
                                                "name": "unsubAll"
                                              }
                                            }
                                          ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                      }
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "Bus"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "__super__"
                                            }
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "constructor"
                                          }
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "call"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "ThisExpression"
                                        },
                                        {
                                          "type": "Identifier",
                                          "name": "subscribeAll"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "ThisExpression"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "plug"
                                        }
                                      },
                                      "right": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                          {
                                            "type": "Identifier",
                                            "name": "input"
                                          }
                                        ],
                                        "defaults": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "VariableDeclaration",
                                              "declarations": [
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "sub"
                                                  },
                                                  "init": null
                                                }
                                              ],
                                              "kind": "var"
                                            },
                                            {
                                              "type": "IfStatement",
                                              "test": {
                                                "type": "Identifier",
                                                "name": "ended"
                                              },
                                              "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ReturnStatement",
                                                    "argument": null
                                                  }
                                                ]
                                              },
                                              "alternate": null
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "sub"
                                                },
                                                "right": {
                                                  "type": "ObjectExpression",
                                                  "properties": [
                                                    {
                                                      "type": "Property",
                                                      "key": {
                                                        "type": "Identifier",
                                                        "name": "input"
                                                      },
                                                      "value": {
                                                        "type": "Identifier",
                                                        "name": "input"
                                                      },
                                                      "kind": "init"
                                                    }
                                                  ]
                                                }
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "subscriptions"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "push"
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "sub"
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "type": "IfStatement",
                                              "test": {
                                                "type": "BinaryExpression",
                                                "operator": "!=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "sink"
                                                },
                                                "right": {
                                                  "type": "Literal",
                                                  "value": null
                                                }
                                              },
                                              "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "Identifier",
                                                        "name": "subscribeInput"
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "sub"
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ]
                                              },
                                              "alternate": null
                                            },
                                            {
                                              "type": "ReturnStatement",
                                              "argument": {
                                                "type": "FunctionExpression",
                                                "id": null,
                                                "params": [],
                                                "defaults": [],
                                                "body": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "ReturnStatement",
                                                      "argument": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "Identifier",
                                                          "name": "unsubscribeInput"
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Identifier",
                                                            "name": "input"
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  ]
                                                },
                                                "rest": null,
                                                "generator": false,
                                                "expression": false
                                              }
                                            }
                                          ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                      }
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "ThisExpression"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "push"
                                        }
                                      },
                                      "right": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                          {
                                            "type": "Identifier",
                                            "name": "value"
                                          }
                                        ],
                                        "defaults": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ReturnStatement",
                                              "argument": {
                                                "type": "ConditionalExpression",
                                                "test": {
                                                  "type": "BinaryExpression",
                                                  "operator": "===",
                                                  "left": {
                                                    "type": "UnaryExpression",
                                                    "operator": "typeof",
                                                    "argument": {
                                                      "type": "Identifier",
                                                      "name": "sink"
                                                    },
                                                    "prefix": true
                                                  },
                                                  "right": {
                                                    "type": "Literal",
                                                    "value": "function"
                                                  }
                                                },
                                                "consequent": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "Identifier",
                                                    "name": "sink"
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "Identifier",
                                                        "name": "next"
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "value"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                "alternate": {
                                                  "type": "UnaryExpression",
                                                  "operator": "void",
                                                  "argument": {
                                                    "type": "Literal",
                                                    "value": 0
                                                  },
                                                  "prefix": true
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                      }
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "ThisExpression"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "error"
                                        }
                                      },
                                      "right": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                          {
                                            "type": "Identifier",
                                            "name": "error"
                                          }
                                        ],
                                        "defaults": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ReturnStatement",
                                              "argument": {
                                                "type": "ConditionalExpression",
                                                "test": {
                                                  "type": "BinaryExpression",
                                                  "operator": "===",
                                                  "left": {
                                                    "type": "UnaryExpression",
                                                    "operator": "typeof",
                                                    "argument": {
                                                      "type": "Identifier",
                                                      "name": "sink"
                                                    },
                                                    "prefix": true
                                                  },
                                                  "right": {
                                                    "type": "Literal",
                                                    "value": "function"
                                                  }
                                                },
                                                "consequent": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "Identifier",
                                                    "name": "sink"
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "NewExpression",
                                                      "callee": {
                                                        "type": "Identifier",
                                                        "name": "Error"
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "error"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                "alternate": {
                                                  "type": "UnaryExpression",
                                                  "operator": "void",
                                                  "argument": {
                                                    "type": "Literal",
                                                    "value": 0
                                                  },
                                                  "prefix": true
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                      }
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "ThisExpression"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "end"
                                        }
                                      },
                                      "right": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [],
                                        "defaults": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "ended"
                                                },
                                                "right": {
                                                  "type": "Literal",
                                                  "value": true
                                                }
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "Identifier",
                                                  "name": "unsubAll"
                                                },
                                                "arguments": []
                                              }
                                            },
                                            {
                                              "type": "ReturnStatement",
                                              "argument": {
                                                "type": "ConditionalExpression",
                                                "test": {
                                                  "type": "BinaryExpression",
                                                  "operator": "===",
                                                  "left": {
                                                    "type": "UnaryExpression",
                                                    "operator": "typeof",
                                                    "argument": {
                                                      "type": "Identifier",
                                                      "name": "sink"
                                                    },
                                                    "prefix": true
                                                  },
                                                  "right": {
                                                    "type": "Literal",
                                                    "value": "function"
                                                  }
                                                },
                                                "consequent": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "Identifier",
                                                    "name": "sink"
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "Identifier",
                                                        "name": "end"
                                                      },
                                                      "arguments": []
                                                    }
                                                  ]
                                                },
                                                "alternate": {
                                                  "type": "UnaryExpression",
                                                  "operator": "void",
                                                  "argument": {
                                                    "type": "Literal",
                                                    "value": 0
                                                  },
                                                  "prefix": true
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                      }
                                    }
                                  }
                                ]
                              },
                              "rest": null,
                              "generator": false,
                              "expression": false
                            },
                            {
                              "type": "ReturnStatement",
                              "argument": {
                                "type": "Identifier",
                                "name": "Bus"
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "EventStream"
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "Some"
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "FunctionDeclaration",
                              "id": {
                                "type": "Identifier",
                                "name": "Some"
                              },
                              "params": [
                                {
                                  "type": "Identifier",
                                  "name": "value"
                                }
                              ],
                              "defaults": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "ThisExpression"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "value"
                                        }
                                      },
                                      "right": {
                                        "type": "Identifier",
                                        "name": "value"
                                      }
                                    }
                                  }
                                ]
                              },
                              "rest": null,
                              "generator": false,
                              "expression": false
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Some"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "getOrElse"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "ThisExpression"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "value"
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Some"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "get"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "ThisExpression"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "value"
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Some"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "filter"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "f"
                                    }
                                  ],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "IfStatement",
                                        "test": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "Identifier",
                                            "name": "f"
                                          },
                                          "arguments": [
                                            {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "ThisExpression"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "value"
                                              }
                                            }
                                          ]
                                        },
                                        "consequent": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ReturnStatement",
                                              "argument": {
                                                "type": "NewExpression",
                                                "callee": {
                                                  "type": "Identifier",
                                                  "name": "Some"
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "value"
                                                    }
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "alternate": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ReturnStatement",
                                              "argument": {
                                                "type": "Identifier",
                                                "name": "None"
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Some"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "map"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "f"
                                    }
                                  ],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "NewExpression",
                                          "callee": {
                                            "type": "Identifier",
                                            "name": "Some"
                                          },
                                          "arguments": [
                                            {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "f"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "ThisExpression"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "value"
                                                  }
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Some"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "forEach"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "f"
                                    }
                                  ],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "Identifier",
                                            "name": "f"
                                          },
                                          "arguments": [
                                            {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "ThisExpression"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "value"
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Some"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "isDefined"
                                  }
                                },
                                "right": {
                                  "type": "Literal",
                                  "value": true
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Some"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "toArray"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "ArrayExpression",
                                          "elements": [
                                            {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "ThisExpression"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "value"
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ReturnStatement",
                              "argument": {
                                "type": "Identifier",
                                "name": "Some"
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      },
                      "arguments": []
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "None"
                    },
                    "right": {
                      "type": "ObjectExpression",
                      "properties": [
                        {
                          "type": "Property",
                          "key": {
                            "type": "Identifier",
                            "name": "getOrElse"
                          },
                          "value": {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [
                              {
                                "type": "Identifier",
                                "name": "value"
                              }
                            ],
                            "defaults": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "Identifier",
                                    "name": "value"
                                  }
                                }
                              ]
                            },
                            "rest": null,
                            "generator": false,
                            "expression": false
                          },
                          "kind": "init"
                        },
                        {
                          "type": "Property",
                          "key": {
                            "type": "Identifier",
                            "name": "filter"
                          },
                          "value": {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [],
                            "defaults": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "Identifier",
                                    "name": "None"
                                  }
                                }
                              ]
                            },
                            "rest": null,
                            "generator": false,
                            "expression": false
                          },
                          "kind": "init"
                        },
                        {
                          "type": "Property",
                          "key": {
                            "type": "Identifier",
                            "name": "map"
                          },
                          "value": {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [],
                            "defaults": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "Identifier",
                                    "name": "None"
                                  }
                                }
                              ]
                            },
                            "rest": null,
                            "generator": false,
                            "expression": false
                          },
                          "kind": "init"
                        },
                        {
                          "type": "Property",
                          "key": {
                            "type": "Identifier",
                            "name": "forEach"
                          },
                          "value": {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [],
                            "defaults": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": []
                            },
                            "rest": null,
                            "generator": false,
                            "expression": false
                          },
                          "kind": "init"
                        },
                        {
                          "type": "Property",
                          "key": {
                            "type": "Identifier",
                            "name": "isDefined"
                          },
                          "value": {
                            "type": "Literal",
                            "value": false
                          },
                          "kind": "init"
                        },
                        {
                          "type": "Property",
                          "key": {
                            "type": "Identifier",
                            "name": "toArray"
                          },
                          "value": {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [],
                            "defaults": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "ArrayExpression",
                                    "elements": []
                                  }
                                }
                              ]
                            },
                            "rest": null,
                            "generator": false,
                            "expression": false
                          },
                          "kind": "init"
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "Bacon"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "EventStream"
                      }
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "EventStream"
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "Bacon"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "Property"
                      }
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "Property"
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "Bacon"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "Observable"
                      }
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "Observable"
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "Bacon"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "Bus"
                      }
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "Bus"
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "Bacon"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "Initial"
                      }
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "Initial"
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "Bacon"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "Next"
                      }
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "Next"
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "Bacon"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "End"
                      }
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "End"
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "Bacon"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "Error"
                      }
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "Error"
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "nop"
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": []
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "latter"
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "_"
                        },
                        {
                          "type": "Identifier",
                          "name": "x"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "Identifier",
                              "name": "x"
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "former"
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "x"
                        },
                        {
                          "type": "Identifier",
                          "name": "_"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "Identifier",
                              "name": "x"
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "initial"
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "value"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "NewExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "Initial"
                              },
                              "arguments": [
                                {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "_"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "always"
                                    }
                                  },
                                  "arguments": [
                                    {
                                      "type": "Identifier",
                                      "name": "value"
                                    }
                                  ]
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "next"
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "value"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "NewExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "Next"
                              },
                              "arguments": [
                                {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "_"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "always"
                                    }
                                  },
                                  "arguments": [
                                    {
                                      "type": "Identifier",
                                      "name": "value"
                                    }
                                  ]
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "end"
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "NewExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "End"
                              },
                              "arguments": []
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "toEvent"
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "x"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "IfStatement",
                            "test": {
                              "type": "BinaryExpression",
                              "operator": "instanceof",
                              "left": {
                                "type": "Identifier",
                                "name": "x"
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "Event"
                              }
                            },
                            "consequent": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "Identifier",
                                    "name": "x"
                                  }
                                }
                              ]
                            },
                            "alternate": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "next"
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "x"
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "cloneArray"
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "xs"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "xs"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "slice"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": 0
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "indexOf"
                    },
                    "right": {
                      "type": "ConditionalExpression",
                      "test": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "Array"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "prototype"
                          }
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "indexOf"
                        }
                      },
                      "consequent": {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [
                          {
                            "type": "Identifier",
                            "name": "xs"
                          },
                          {
                            "type": "Identifier",
                            "name": "x"
                          }
                        ],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ReturnStatement",
                              "argument": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "xs"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "indexOf"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "x"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      },
                      "alternate": {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [
                          {
                            "type": "Identifier",
                            "name": "xs"
                          },
                          {
                            "type": "Identifier",
                            "name": "x"
                          }
                        ],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "VariableDeclaration",
                              "declarations": [
                                {
                                  "type": "VariableDeclarator",
                                  "id": {
                                    "type": "Identifier",
                                    "name": "i"
                                  },
                                  "init": null
                                },
                                {
                                  "type": "VariableDeclarator",
                                  "id": {
                                    "type": "Identifier",
                                    "name": "y"
                                  },
                                  "init": null
                                },
                                {
                                  "type": "VariableDeclarator",
                                  "id": {
                                    "type": "Identifier",
                                    "name": "_i"
                                  },
                                  "init": null
                                },
                                {
                                  "type": "VariableDeclarator",
                                  "id": {
                                    "type": "Identifier",
                                    "name": "_len"
                                  },
                                  "init": null
                                }
                              ],
                              "kind": "var"
                            },
                            {
                              "type": "ForStatement",
                              "init": {
                                "type": "SequenceExpression",
                                "expressions": [
                                  {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "i"
                                    },
                                    "right": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "_i"
                                      },
                                      "right": {
                                        "type": "Literal",
                                        "value": 0
                                      }
                                    }
                                  },
                                  {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "_len"
                                    },
                                    "right": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "xs"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "length"
                                      }
                                    }
                                  }
                                ]
                              },
                              "test": {
                                "type": "BinaryExpression",
                                "operator": "<",
                                "left": {
                                  "type": "Identifier",
                                  "name": "_i"
                                },
                                "right": {
                                  "type": "Identifier",
                                  "name": "_len"
                                }
                              },
                              "update": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "Identifier",
                                  "name": "i"
                                },
                                "right": {
                                  "type": "UpdateExpression",
                                  "operator": "++",
                                  "argument": {
                                    "type": "Identifier",
                                    "name": "_i"
                                  },
                                  "prefix": true
                                }
                              },
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "y"
                                      },
                                      "right": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "xs"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "i"
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "type": "IfStatement",
                                    "test": {
                                      "type": "BinaryExpression",
                                      "operator": "===",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "x"
                                      },
                                      "right": {
                                        "type": "Identifier",
                                        "name": "y"
                                      }
                                    },
                                    "consequent": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "ReturnStatement",
                                          "argument": {
                                            "type": "Identifier",
                                            "name": "i"
                                          }
                                        }
                                      ]
                                    },
                                    "alternate": null
                                  }
                                ]
                              }
                            },
                            {
                              "type": "ReturnStatement",
                              "argument": {
                                "type": "UnaryExpression",
                                "operator": "-",
                                "argument": {
                                  "type": "Literal",
                                  "value": 1
                                },
                                "prefix": true
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      }
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "assert"
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "message"
                        },
                        {
                          "type": "Identifier",
                          "name": "condition"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "IfStatement",
                            "test": {
                              "type": "UnaryExpression",
                              "operator": "!",
                              "argument": {
                                "type": "Identifier",
                                "name": "condition"
                              },
                              "prefix": true
                            },
                            "consequent": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ThrowStatement",
                                  "argument": {
                                    "type": "Identifier",
                                    "name": "message"
                                  }
                                }
                              ]
                            },
                            "alternate": null
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "assertEvent"
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "event"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "assert"
                              },
                              "arguments": [
                                {
                                  "type": "BinaryExpression",
                                  "operator": "+",
                                  "left": {
                                    "type": "Literal",
                                    "value": "not an event : "
                                  },
                                  "right": {
                                    "type": "Identifier",
                                    "name": "event"
                                  }
                                },
                                {
                                  "type": "LogicalExpression",
                                  "operator": "&&",
                                  "left": {
                                    "type": "BinaryExpression",
                                    "operator": "instanceof",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "event"
                                    },
                                    "right": {
                                      "type": "Identifier",
                                      "name": "Event"
                                    }
                                  },
                                  "right": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "event"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "isEvent"
                                      }
                                    },
                                    "arguments": []
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "assertFunction"
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "f"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "assert"
                              },
                              "arguments": [
                                {
                                  "type": "BinaryExpression",
                                  "operator": "+",
                                  "left": {
                                    "type": "Literal",
                                    "value": "not a function : "
                                  },
                                  "right": {
                                    "type": "Identifier",
                                    "name": "f"
                                  }
                                },
                                {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "Identifier",
                                    "name": "isFunction"
                                  },
                                  "arguments": [
                                    {
                                      "type": "Identifier",
                                      "name": "f"
                                    }
                                  ]
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "isFunction"
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "f"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "BinaryExpression",
                              "operator": "===",
                              "left": {
                                "type": "UnaryExpression",
                                "operator": "typeof",
                                "argument": {
                                  "type": "Identifier",
                                  "name": "f"
                                },
                                "prefix": true
                              },
                              "right": {
                                "type": "Literal",
                                "value": "function"
                              }
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "assertArray"
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "xs"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "assert"
                              },
                              "arguments": [
                                {
                                  "type": "BinaryExpression",
                                  "operator": "+",
                                  "left": {
                                    "type": "Literal",
                                    "value": "not an array : "
                                  },
                                  "right": {
                                    "type": "Identifier",
                                    "name": "xs"
                                  }
                                },
                                {
                                  "type": "BinaryExpression",
                                  "operator": "instanceof",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "xs"
                                  },
                                  "right": {
                                    "type": "Identifier",
                                    "name": "Array"
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "assertNoArguments"
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "args"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "assert"
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": "no arguments supported"
                                },
                                {
                                  "type": "BinaryExpression",
                                  "operator": "===",
                                  "left": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "args"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "length"
                                    }
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": 0
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "assertString"
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "x"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "assert"
                              },
                              "arguments": [
                                {
                                  "type": "BinaryExpression",
                                  "operator": "+",
                                  "left": {
                                    "type": "Literal",
                                    "value": "not a string : "
                                  },
                                  "right": {
                                    "type": "Identifier",
                                    "name": "x"
                                  }
                                },
                                {
                                  "type": "BinaryExpression",
                                  "operator": "===",
                                  "left": {
                                    "type": "UnaryExpression",
                                    "operator": "typeof",
                                    "argument": {
                                      "type": "Identifier",
                                      "name": "x"
                                    },
                                    "prefix": true
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": "string"
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "methodCall"
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "obj"
                        },
                        {
                          "type": "Identifier",
                          "name": "method"
                        },
                        {
                          "type": "Identifier",
                          "name": "args"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "assertString"
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "method"
                                }
                              ]
                            }
                          },
                          {
                            "type": "IfStatement",
                            "test": {
                              "type": "BinaryExpression",
                              "operator": "===",
                              "left": {
                                "type": "Identifier",
                                "name": "args"
                              },
                              "right": {
                                "type": "UnaryExpression",
                                "operator": "void",
                                "argument": {
                                  "type": "Literal",
                                  "value": 0
                                },
                                "prefix": true
                              }
                            },
                            "consequent": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "args"
                                    },
                                    "right": {
                                      "type": "ArrayExpression",
                                      "elements": []
                                    }
                                  }
                                }
                              ]
                            },
                            "alternate": null
                          },
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "FunctionExpression",
                              "id": null,
                              "params": [
                                {
                                  "type": "Identifier",
                                  "name": "value"
                                }
                              ],
                              "defaults": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ReturnStatement",
                                    "argument": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "MemberExpression",
                                          "computed": true,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "obj"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "method"
                                          }
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "apply"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "Identifier",
                                          "name": "obj"
                                        },
                                        {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "args"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "concat"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "ArrayExpression",
                                              "elements": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "value"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  }
                                ]
                              },
                              "rest": null,
                              "generator": false,
                              "expression": false
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "partiallyApplied"
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "f"
                        },
                        {
                          "type": "Identifier",
                          "name": "applied"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "FunctionExpression",
                              "id": null,
                              "params": [],
                              "defaults": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "args"
                                        },
                                        "init": null
                                      }
                                    ],
                                    "kind": "var"
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "args"
                                      },
                                      "right": {
                                        "type": "ConditionalExpression",
                                        "test": {
                                          "type": "BinaryExpression",
                                          "operator": "<=",
                                          "left": {
                                            "type": "Literal",
                                            "value": 1
                                          },
                                          "right": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "arguments"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "length"
                                            }
                                          }
                                        },
                                        "consequent": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "__slice"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "call"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Identifier",
                                              "name": "arguments"
                                            },
                                            {
                                              "type": "Literal",
                                              "value": 0
                                            }
                                          ]
                                        },
                                        "alternate": {
                                          "type": "ArrayExpression",
                                          "elements": []
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "type": "ReturnStatement",
                                    "argument": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "f"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "apply"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": null
                                        },
                                        {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "applied"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "concat"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Identifier",
                                              "name": "args"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  }
                                ]
                              },
                              "rest": null,
                              "generator": false,
                              "expression": false
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "makeSpawner"
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "f"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "IfStatement",
                            "test": {
                              "type": "BinaryExpression",
                              "operator": "instanceof",
                              "left": {
                                "type": "Identifier",
                                "name": "f"
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "Observable"
                              }
                            },
                            "consequent": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "f"
                                    },
                                    "right": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "_"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "always"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "Identifier",
                                          "name": "f"
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            },
                            "alternate": null
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "assertFunction"
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "f"
                                }
                              ]
                            }
                          },
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "Identifier",
                              "name": "f"
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "makeFunction"
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "f"
                        },
                        {
                          "type": "Identifier",
                          "name": "args"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "IfStatement",
                            "test": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "isFunction"
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "f"
                                }
                              ]
                            },
                            "consequent": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "IfStatement",
                                  "test": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "args"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "length"
                                    }
                                  },
                                  "consequent": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "Identifier",
                                            "name": "partiallyApplied"
                                          },
                                          "arguments": [
                                            {
                                              "type": "Identifier",
                                              "name": "f"
                                            },
                                            {
                                              "type": "Identifier",
                                              "name": "args"
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "alternate": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "Identifier",
                                          "name": "f"
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "alternate": {
                              "type": "IfStatement",
                              "test": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "isFieldKey"
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "f"
                                  }
                                ]
                              },
                              "consequent": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ReturnStatement",
                                    "argument": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "toFieldExtractor"
                                      },
                                      "arguments": [
                                        {
                                          "type": "Identifier",
                                          "name": "f"
                                        },
                                        {
                                          "type": "Identifier",
                                          "name": "args"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              },
                              "alternate": {
                                "type": "IfStatement",
                                "test": {
                                  "type": "LogicalExpression",
                                  "operator": "&&",
                                  "left": {
                                    "type": "BinaryExpression",
                                    "operator": "===",
                                    "left": {
                                      "type": "UnaryExpression",
                                      "operator": "typeof",
                                      "argument": {
                                        "type": "Identifier",
                                        "name": "f"
                                      },
                                      "prefix": true
                                    },
                                    "right": {
                                      "type": "Literal",
                                      "value": "object"
                                    }
                                  },
                                  "right": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "args"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "length"
                                    }
                                  }
                                },
                                "consequent": {
                                  "type": "BlockStatement",
                                  "body": [
                                    {
                                      "type": "ReturnStatement",
                                      "argument": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "Identifier",
                                          "name": "methodCall"
                                        },
                                        "arguments": [
                                          {
                                            "type": "Identifier",
                                            "name": "f"
                                          },
                                          {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "_"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "head"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "Identifier",
                                                "name": "args"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "_"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "tail"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "Identifier",
                                                "name": "args"
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                },
                                "alternate": {
                                  "type": "BlockStatement",
                                  "body": [
                                    {
                                      "type": "ReturnStatement",
                                      "argument": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "_"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "always"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "Identifier",
                                            "name": "f"
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "isFieldKey"
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "f"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "LogicalExpression",
                              "operator": "&&",
                              "left": {
                                "type": "LogicalExpression",
                                "operator": "&&",
                                "left": {
                                  "type": "BinaryExpression",
                                  "operator": "===",
                                  "left": {
                                    "type": "UnaryExpression",
                                    "operator": "typeof",
                                    "argument": {
                                      "type": "Identifier",
                                      "name": "f"
                                    },
                                    "prefix": true
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": "string"
                                  }
                                },
                                "right": {
                                  "type": "BinaryExpression",
                                  "operator": ">",
                                  "left": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "f"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "length"
                                    }
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": 1
                                  }
                                }
                              },
                              "right": {
                                "type": "BinaryExpression",
                                "operator": "===",
                                "left": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "f"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "charAt"
                                    }
                                  },
                                  "arguments": [
                                    {
                                      "type": "Literal",
                                      "value": 0
                                    }
                                  ]
                                },
                                "right": {
                                  "type": "Literal",
                                  "value": "."
                                }
                              }
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "Bacon"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "isFieldKey"
                      }
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "isFieldKey"
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "toFieldExtractor"
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "f"
                        },
                        {
                          "type": "Identifier",
                          "name": "args"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "VariableDeclaration",
                            "declarations": [
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "partFuncs"
                                },
                                "init": null
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "parts"
                                },
                                "init": null
                              }
                            ],
                            "kind": "var"
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "name": "parts"
                              },
                              "right": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "f"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "slice"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "Literal",
                                        "value": 1
                                      }
                                    ]
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "split"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Literal",
                                    "value": "."
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "name": "partFuncs"
                              },
                              "right": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "_"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "map"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "toSimpleExtractor"
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "args"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "Identifier",
                                    "name": "parts"
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "FunctionExpression",
                              "id": null,
                              "params": [
                                {
                                  "type": "Identifier",
                                  "name": "value"
                                }
                              ],
                              "defaults": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "_i"
                                        },
                                        "init": null
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "_len"
                                        },
                                        "init": null
                                      }
                                    ],
                                    "kind": "var"
                                  },
                                  {
                                    "type": "ForStatement",
                                    "init": {
                                      "type": "SequenceExpression",
                                      "expressions": [
                                        {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "_i"
                                          },
                                          "right": {
                                            "type": "Literal",
                                            "value": 0
                                          }
                                        },
                                        {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "_len"
                                          },
                                          "right": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "partFuncs"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "length"
                                            }
                                          }
                                        }
                                      ]
                                    },
                                    "test": {
                                      "type": "BinaryExpression",
                                      "operator": "<",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "_i"
                                      },
                                      "right": {
                                        "type": "Identifier",
                                        "name": "_len"
                                      }
                                    },
                                    "update": {
                                      "type": "UpdateExpression",
                                      "operator": "++",
                                      "argument": {
                                        "type": "Identifier",
                                        "name": "_i"
                                      },
                                      "prefix": false
                                    },
                                    "body": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "f"
                                            },
                                            "right": {
                                              "type": "MemberExpression",
                                              "computed": true,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "partFuncs"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "_i"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "value"
                                            },
                                            "right": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "f"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "value"
                                                }
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "ReturnStatement",
                                    "argument": {
                                      "type": "Identifier",
                                      "name": "value"
                                    }
                                  }
                                ]
                              },
                              "rest": null,
                              "generator": false,
                              "expression": false
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "toSimpleExtractor"
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "args"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "FunctionExpression",
                              "id": null,
                              "params": [
                                {
                                  "type": "Identifier",
                                  "name": "key"
                                }
                              ],
                              "defaults": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ReturnStatement",
                                    "argument": {
                                      "type": "FunctionExpression",
                                      "id": null,
                                      "params": [
                                        {
                                          "type": "Identifier",
                                          "name": "value"
                                        }
                                      ],
                                      "defaults": [],
                                      "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                              {
                                                "type": "VariableDeclarator",
                                                "id": {
                                                  "type": "Identifier",
                                                  "name": "fieldValue"
                                                },
                                                "init": null
                                              }
                                            ],
                                            "kind": "var"
                                          },
                                          {
                                            "type": "IfStatement",
                                            "test": {
                                              "type": "UnaryExpression",
                                              "operator": "!",
                                              "argument": {
                                                "type": "BinaryExpression",
                                                "operator": "!=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "value"
                                                },
                                                "right": {
                                                  "type": "Literal",
                                                  "value": null
                                                }
                                              },
                                              "prefix": true
                                            },
                                            "consequent": {
                                              "type": "BlockStatement",
                                              "body": [
                                                {
                                                  "type": "ReturnStatement",
                                                  "argument": {
                                                    "type": "UnaryExpression",
                                                    "operator": "void",
                                                    "argument": {
                                                      "type": "Literal",
                                                      "value": 0
                                                    },
                                                    "prefix": true
                                                  }
                                                }
                                              ]
                                            },
                                            "alternate": {
                                              "type": "BlockStatement",
                                              "body": [
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "fieldValue"
                                                    },
                                                    "right": {
                                                      "type": "MemberExpression",
                                                      "computed": true,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "value"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "key"
                                                      }
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "IfStatement",
                                                  "test": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "Identifier",
                                                      "name": "isFunction"
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "Identifier",
                                                        "name": "fieldValue"
                                                      }
                                                    ]
                                                  },
                                                  "consequent": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "fieldValue"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "apply"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "Identifier",
                                                              "name": "value"
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "name": "args"
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "alternate": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                          "type": "Identifier",
                                                          "name": "fieldValue"
                                                        }
                                                      }
                                                    ]
                                                  }
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      },
                                      "rest": null,
                                      "generator": false,
                                      "expression": false
                                    }
                                  }
                                ]
                              },
                              "rest": null,
                              "generator": false,
                              "expression": false
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "toFieldKey"
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "f"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "f"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "slice"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": 1
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "toCombinator"
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "f"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "VariableDeclaration",
                            "declarations": [
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "key"
                                },
                                "init": null
                              }
                            ],
                            "kind": "var"
                          },
                          {
                            "type": "IfStatement",
                            "test": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "isFunction"
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "f"
                                }
                              ]
                            },
                            "consequent": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "Identifier",
                                    "name": "f"
                                  }
                                }
                              ]
                            },
                            "alternate": {
                              "type": "IfStatement",
                              "test": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "isFieldKey"
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "f"
                                  }
                                ]
                              },
                              "consequent": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "key"
                                      },
                                      "right": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "Identifier",
                                          "name": "toFieldKey"
                                        },
                                        "arguments": [
                                          {
                                            "type": "Identifier",
                                            "name": "f"
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  {
                                    "type": "ReturnStatement",
                                    "argument": {
                                      "type": "FunctionExpression",
                                      "id": null,
                                      "params": [
                                        {
                                          "type": "Identifier",
                                          "name": "left"
                                        },
                                        {
                                          "type": "Identifier",
                                          "name": "right"
                                        }
                                      ],
                                      "defaults": [],
                                      "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "ReturnStatement",
                                            "argument": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "left"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "key"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "right"
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      },
                                      "rest": null,
                                      "generator": false,
                                      "expression": false
                                    }
                                  }
                                ]
                              },
                              "alternate": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ReturnStatement",
                                    "argument": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "assert"
                                      },
                                      "arguments": [
                                        {
                                          "type": "BinaryExpression",
                                          "operator": "+",
                                          "left": {
                                            "type": "Literal",
                                            "value": "not a function or a field key: "
                                          },
                                          "right": {
                                            "type": "Identifier",
                                            "name": "f"
                                          }
                                        },
                                        {
                                          "type": "Literal",
                                          "value": false
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "toOption"
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "v"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "IfStatement",
                            "test": {
                              "type": "LogicalExpression",
                              "operator": "||",
                              "left": {
                                "type": "BinaryExpression",
                                "operator": "instanceof",
                                "left": {
                                  "type": "Identifier",
                                  "name": "v"
                                },
                                "right": {
                                  "type": "Identifier",
                                  "name": "Some"
                                }
                              },
                              "right": {
                                "type": "BinaryExpression",
                                "operator": "===",
                                "left": {
                                  "type": "Identifier",
                                  "name": "v"
                                },
                                "right": {
                                  "type": "Identifier",
                                  "name": "None"
                                }
                              }
                            },
                            "consequent": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "Identifier",
                                    "name": "v"
                                  }
                                }
                              ]
                            },
                            "alternate": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "NewExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "Some"
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "v"
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "LogicalExpression",
                    "operator": "&&",
                    "left": {
                      "type": "LogicalExpression",
                      "operator": "&&",
                      "left": {
                        "type": "BinaryExpression",
                        "operator": "!==",
                        "left": {
                          "type": "UnaryExpression",
                          "operator": "typeof",
                          "argument": {
                            "type": "Identifier",
                            "name": "define"
                          },
                          "prefix": true
                        },
                        "right": {
                          "type": "Literal",
                          "value": "undefined"
                        }
                      },
                      "right": {
                        "type": "BinaryExpression",
                        "operator": "!==",
                        "left": {
                          "type": "Identifier",
                          "name": "define"
                        },
                        "right": {
                          "type": "Literal",
                          "value": null
                        }
                      }
                    },
                    "right": {
                      "type": "BinaryExpression",
                      "operator": "!=",
                      "left": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "define"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "amd"
                        }
                      },
                      "right": {
                        "type": "Literal",
                        "value": null
                      }
                    }
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "IfStatement",
                        "test": {
                          "type": "BinaryExpression",
                          "operator": "===",
                          "left": {
                            "type": "UnaryExpression",
                            "operator": "typeof",
                            "argument": {
                              "type": "Identifier",
                              "name": "define"
                            },
                            "prefix": true
                          },
                          "right": {
                            "type": "Literal",
                            "value": "function"
                          }
                        },
                        "consequent": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "define"
                                },
                                "arguments": [
                                  {
                                    "type": "FunctionExpression",
                                    "id": null,
                                    "params": [],
                                    "defaults": [],
                                    "body": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "ReturnStatement",
                                          "argument": {
                                            "type": "Identifier",
                                            "name": "Bacon"
                                          }
                                        }
                                      ]
                                    },
                                    "rest": null,
                                    "generator": false,
                                    "expression": false
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "alternate": null
                      }
                    ]
                  },
                  "alternate": null
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "_"
                    },
                    "right": {
                      "type": "ObjectExpression",
                      "properties": [
                        {
                          "type": "Property",
                          "key": {
                            "type": "Identifier",
                            "name": "head"
                          },
                          "value": {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [
                              {
                                "type": "Identifier",
                                "name": "xs"
                              }
                            ],
                            "defaults": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "xs"
                                    },
                                    "property": {
                                      "type": "Literal",
                                      "value": 0
                                    }
                                  }
                                }
                              ]
                            },
                            "rest": null,
                            "generator": false,
                            "expression": false
                          },
                          "kind": "init"
                        },
                        {
                          "type": "Property",
                          "key": {
                            "type": "Identifier",
                            "name": "always"
                          },
                          "value": {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [
                              {
                                "type": "Identifier",
                                "name": "x"
                              }
                            ],
                            "defaults": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "FunctionExpression",
                                    "id": null,
                                    "params": [],
                                    "defaults": [],
                                    "body": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "ReturnStatement",
                                          "argument": {
                                            "type": "Identifier",
                                            "name": "x"
                                          }
                                        }
                                      ]
                                    },
                                    "rest": null,
                                    "generator": false,
                                    "expression": false
                                  }
                                }
                              ]
                            },
                            "rest": null,
                            "generator": false,
                            "expression": false
                          },
                          "kind": "init"
                        },
                        {
                          "type": "Property",
                          "key": {
                            "type": "Identifier",
                            "name": "empty"
                          },
                          "value": {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [
                              {
                                "type": "Identifier",
                                "name": "xs"
                              }
                            ],
                            "defaults": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "BinaryExpression",
                                    "operator": "===",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "xs"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "length"
                                      }
                                    },
                                    "right": {
                                      "type": "Literal",
                                      "value": 0
                                    }
                                  }
                                }
                              ]
                            },
                            "rest": null,
                            "generator": false,
                            "expression": false
                          },
                          "kind": "init"
                        },
                        {
                          "type": "Property",
                          "key": {
                            "type": "Identifier",
                            "name": "tail"
                          },
                          "value": {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [
                              {
                                "type": "Identifier",
                                "name": "xs"
                              }
                            ],
                            "defaults": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "xs"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "slice"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "Literal",
                                        "value": 1
                                      },
                                      {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "xs"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "length"
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "rest": null,
                            "generator": false,
                            "expression": false
                          },
                          "kind": "init"
                        },
                        {
                          "type": "Property",
                          "key": {
                            "type": "Identifier",
                            "name": "filter"
                          },
                          "value": {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [
                              {
                                "type": "Identifier",
                                "name": "f"
                              },
                              {
                                "type": "Identifier",
                                "name": "xs"
                              }
                            ],
                            "defaults": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "VariableDeclaration",
                                  "declarations": [
                                    {
                                      "type": "VariableDeclarator",
                                      "id": {
                                        "type": "Identifier",
                                        "name": "filtered"
                                      },
                                      "init": null
                                    },
                                    {
                                      "type": "VariableDeclarator",
                                      "id": {
                                        "type": "Identifier",
                                        "name": "x"
                                      },
                                      "init": null
                                    },
                                    {
                                      "type": "VariableDeclarator",
                                      "id": {
                                        "type": "Identifier",
                                        "name": "_i"
                                      },
                                      "init": null
                                    },
                                    {
                                      "type": "VariableDeclarator",
                                      "id": {
                                        "type": "Identifier",
                                        "name": "_len"
                                      },
                                      "init": null
                                    }
                                  ],
                                  "kind": "var"
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "filtered"
                                    },
                                    "right": {
                                      "type": "ArrayExpression",
                                      "elements": []
                                    }
                                  }
                                },
                                {
                                  "type": "ForStatement",
                                  "init": {
                                    "type": "SequenceExpression",
                                    "expressions": [
                                      {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                          "type": "Identifier",
                                          "name": "_i"
                                        },
                                        "right": {
                                          "type": "Literal",
                                          "value": 0
                                        }
                                      },
                                      {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                          "type": "Identifier",
                                          "name": "_len"
                                        },
                                        "right": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "xs"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "length"
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "test": {
                                    "type": "BinaryExpression",
                                    "operator": "<",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "_i"
                                    },
                                    "right": {
                                      "type": "Identifier",
                                      "name": "_len"
                                    }
                                  },
                                  "update": {
                                    "type": "UpdateExpression",
                                    "operator": "++",
                                    "argument": {
                                      "type": "Identifier",
                                      "name": "_i"
                                    },
                                    "prefix": false
                                  },
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "x"
                                          },
                                          "right": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "xs"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "_i"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "IfStatement",
                                        "test": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "Identifier",
                                            "name": "f"
                                          },
                                          "arguments": [
                                            {
                                              "type": "Identifier",
                                              "name": "x"
                                            }
                                          ]
                                        },
                                        "consequent": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "filtered"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "push"
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "x"
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "alternate": null
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "Identifier",
                                    "name": "filtered"
                                  }
                                }
                              ]
                            },
                            "rest": null,
                            "generator": false,
                            "expression": false
                          },
                          "kind": "init"
                        },
                        {
                          "type": "Property",
                          "key": {
                            "type": "Identifier",
                            "name": "map"
                          },
                          "value": {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [
                              {
                                "type": "Identifier",
                                "name": "f"
                              },
                              {
                                "type": "Identifier",
                                "name": "xs"
                              }
                            ],
                            "defaults": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "VariableDeclaration",
                                  "declarations": [
                                    {
                                      "type": "VariableDeclarator",
                                      "id": {
                                        "type": "Identifier",
                                        "name": "x"
                                      },
                                      "init": null
                                    },
                                    {
                                      "type": "VariableDeclarator",
                                      "id": {
                                        "type": "Identifier",
                                        "name": "_i"
                                      },
                                      "init": null
                                    },
                                    {
                                      "type": "VariableDeclarator",
                                      "id": {
                                        "type": "Identifier",
                                        "name": "_len"
                                      },
                                      "init": null
                                    },
                                    {
                                      "type": "VariableDeclarator",
                                      "id": {
                                        "type": "Identifier",
                                        "name": "_results"
                                      },
                                      "init": null
                                    }
                                  ],
                                  "kind": "var"
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "_results"
                                    },
                                    "right": {
                                      "type": "ArrayExpression",
                                      "elements": []
                                    }
                                  }
                                },
                                {
                                  "type": "ForStatement",
                                  "init": {
                                    "type": "SequenceExpression",
                                    "expressions": [
                                      {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                          "type": "Identifier",
                                          "name": "_i"
                                        },
                                        "right": {
                                          "type": "Literal",
                                          "value": 0
                                        }
                                      },
                                      {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                          "type": "Identifier",
                                          "name": "_len"
                                        },
                                        "right": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "xs"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "length"
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "test": {
                                    "type": "BinaryExpression",
                                    "operator": "<",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "_i"
                                    },
                                    "right": {
                                      "type": "Identifier",
                                      "name": "_len"
                                    }
                                  },
                                  "update": {
                                    "type": "UpdateExpression",
                                    "operator": "++",
                                    "argument": {
                                      "type": "Identifier",
                                      "name": "_i"
                                    },
                                    "prefix": false
                                  },
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "x"
                                          },
                                          "right": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "xs"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "_i"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "_results"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "push"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "f"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "x"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "Identifier",
                                    "name": "_results"
                                  }
                                }
                              ]
                            },
                            "rest": null,
                            "generator": false,
                            "expression": false
                          },
                          "kind": "init"
                        },
                        {
                          "type": "Property",
                          "key": {
                            "type": "Identifier",
                            "name": "each"
                          },
                          "value": {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [
                              {
                                "type": "Identifier",
                                "name": "xs"
                              },
                              {
                                "type": "Identifier",
                                "name": "f"
                              }
                            ],
                            "defaults": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "VariableDeclaration",
                                  "declarations": [
                                    {
                                      "type": "VariableDeclarator",
                                      "id": {
                                        "type": "Identifier",
                                        "name": "key"
                                      },
                                      "init": null
                                    },
                                    {
                                      "type": "VariableDeclarator",
                                      "id": {
                                        "type": "Identifier",
                                        "name": "value"
                                      },
                                      "init": null
                                    },
                                    {
                                      "type": "VariableDeclarator",
                                      "id": {
                                        "type": "Identifier",
                                        "name": "_results"
                                      },
                                      "init": null
                                    }
                                  ],
                                  "kind": "var"
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "_results"
                                    },
                                    "right": {
                                      "type": "ArrayExpression",
                                      "elements": []
                                    }
                                  }
                                },
                                {
                                  "type": "ForInStatement",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "key"
                                  },
                                  "right": {
                                    "type": "Identifier",
                                    "name": "xs"
                                  },
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "value"
                                          },
                                          "right": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "xs"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "key"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "_results"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "push"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "f"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "key"
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "name": "value"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "each": false
                                },
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "Identifier",
                                    "name": "_results"
                                  }
                                }
                              ]
                            },
                            "rest": null,
                            "generator": false,
                            "expression": false
                          },
                          "kind": "init"
                        },
                        {
                          "type": "Property",
                          "key": {
                            "type": "Identifier",
                            "name": "toArray"
                          },
                          "value": {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [
                              {
                                "type": "Identifier",
                                "name": "xs"
                              }
                            ],
                            "defaults": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "IfStatement",
                                  "test": {
                                    "type": "BinaryExpression",
                                    "operator": "instanceof",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "xs"
                                    },
                                    "right": {
                                      "type": "Identifier",
                                      "name": "Array"
                                    }
                                  },
                                  "consequent": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "Identifier",
                                          "name": "xs"
                                        }
                                      }
                                    ]
                                  },
                                  "alternate": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "ArrayExpression",
                                          "elements": [
                                            {
                                              "type": "Identifier",
                                              "name": "xs"
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "rest": null,
                            "generator": false,
                            "expression": false
                          },
                          "kind": "init"
                        },
                        {
                          "type": "Property",
                          "key": {
                            "type": "Identifier",
                            "name": "contains"
                          },
                          "value": {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [
                              {
                                "type": "Identifier",
                                "name": "xs"
                              },
                              {
                                "type": "Identifier",
                                "name": "x"
                              }
                            ],
                            "defaults": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "BinaryExpression",
                                    "operator": "!==",
                                    "left": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "indexOf"
                                      },
                                      "arguments": [
                                        {
                                          "type": "Identifier",
                                          "name": "xs"
                                        },
                                        {
                                          "type": "Identifier",
                                          "name": "x"
                                        }
                                      ]
                                    },
                                    "right": {
                                      "type": "UnaryExpression",
                                      "operator": "-",
                                      "argument": {
                                        "type": "Literal",
                                        "value": 1
                                      },
                                      "prefix": true
                                    }
                                  }
                                }
                              ]
                            },
                            "rest": null,
                            "generator": false,
                            "expression": false
                          },
                          "kind": "init"
                        },
                        {
                          "type": "Property",
                          "key": {
                            "type": "Identifier",
                            "name": "id"
                          },
                          "value": {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [
                              {
                                "type": "Identifier",
                                "name": "x"
                              }
                            ],
                            "defaults": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "Identifier",
                                    "name": "x"
                                  }
                                }
                              ]
                            },
                            "rest": null,
                            "generator": false,
                            "expression": false
                          },
                          "kind": "init"
                        },
                        {
                          "type": "Property",
                          "key": {
                            "type": "Identifier",
                            "name": "last"
                          },
                          "value": {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [
                              {
                                "type": "Identifier",
                                "name": "xs"
                              }
                            ],
                            "defaults": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "xs"
                                    },
                                    "property": {
                                      "type": "BinaryExpression",
                                      "operator": "-",
                                      "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "xs"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "length"
                                        }
                                      },
                                      "right": {
                                        "type": "Literal",
                                        "value": 1
                                      }
                                    }
                                  }
                                }
                              ]
                            },
                            "rest": null,
                            "generator": false,
                            "expression": false
                          },
                          "kind": "init"
                        },
                        {
                          "type": "Property",
                          "key": {
                            "type": "Identifier",
                            "name": "all"
                          },
                          "value": {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [
                              {
                                "type": "Identifier",
                                "name": "xs"
                              }
                            ],
                            "defaults": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "VariableDeclaration",
                                  "declarations": [
                                    {
                                      "type": "VariableDeclarator",
                                      "id": {
                                        "type": "Identifier",
                                        "name": "x"
                                      },
                                      "init": null
                                    },
                                    {
                                      "type": "VariableDeclarator",
                                      "id": {
                                        "type": "Identifier",
                                        "name": "_i"
                                      },
                                      "init": null
                                    },
                                    {
                                      "type": "VariableDeclarator",
                                      "id": {
                                        "type": "Identifier",
                                        "name": "_len"
                                      },
                                      "init": null
                                    }
                                  ],
                                  "kind": "var"
                                },
                                {
                                  "type": "ForStatement",
                                  "init": {
                                    "type": "SequenceExpression",
                                    "expressions": [
                                      {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                          "type": "Identifier",
                                          "name": "_i"
                                        },
                                        "right": {
                                          "type": "Literal",
                                          "value": 0
                                        }
                                      },
                                      {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                          "type": "Identifier",
                                          "name": "_len"
                                        },
                                        "right": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "xs"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "length"
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "test": {
                                    "type": "BinaryExpression",
                                    "operator": "<",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "_i"
                                    },
                                    "right": {
                                      "type": "Identifier",
                                      "name": "_len"
                                    }
                                  },
                                  "update": {
                                    "type": "UpdateExpression",
                                    "operator": "++",
                                    "argument": {
                                      "type": "Identifier",
                                      "name": "_i"
                                    },
                                    "prefix": false
                                  },
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "x"
                                          },
                                          "right": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "xs"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "_i"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "IfStatement",
                                        "test": {
                                          "type": "UnaryExpression",
                                          "operator": "!",
                                          "argument": {
                                            "type": "Identifier",
                                            "name": "x"
                                          },
                                          "prefix": true
                                        },
                                        "consequent": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ReturnStatement",
                                              "argument": {
                                                "type": "Literal",
                                                "value": false
                                              }
                                            }
                                          ]
                                        },
                                        "alternate": null
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "Literal",
                                    "value": true
                                  }
                                }
                              ]
                            },
                            "rest": null,
                            "generator": false,
                            "expression": false
                          },
                          "kind": "init"
                        },
                        {
                          "type": "Property",
                          "key": {
                            "type": "Identifier",
                            "name": "any"
                          },
                          "value": {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [
                              {
                                "type": "Identifier",
                                "name": "xs"
                              }
                            ],
                            "defaults": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "VariableDeclaration",
                                  "declarations": [
                                    {
                                      "type": "VariableDeclarator",
                                      "id": {
                                        "type": "Identifier",
                                        "name": "x"
                                      },
                                      "init": null
                                    },
                                    {
                                      "type": "VariableDeclarator",
                                      "id": {
                                        "type": "Identifier",
                                        "name": "_i"
                                      },
                                      "init": null
                                    },
                                    {
                                      "type": "VariableDeclarator",
                                      "id": {
                                        "type": "Identifier",
                                        "name": "_len"
                                      },
                                      "init": null
                                    }
                                  ],
                                  "kind": "var"
                                },
                                {
                                  "type": "ForStatement",
                                  "init": {
                                    "type": "SequenceExpression",
                                    "expressions": [
                                      {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                          "type": "Identifier",
                                          "name": "_i"
                                        },
                                        "right": {
                                          "type": "Literal",
                                          "value": 0
                                        }
                                      },
                                      {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                          "type": "Identifier",
                                          "name": "_len"
                                        },
                                        "right": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "xs"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "length"
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "test": {
                                    "type": "BinaryExpression",
                                    "operator": "<",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "_i"
                                    },
                                    "right": {
                                      "type": "Identifier",
                                      "name": "_len"
                                    }
                                  },
                                  "update": {
                                    "type": "UpdateExpression",
                                    "operator": "++",
                                    "argument": {
                                      "type": "Identifier",
                                      "name": "_i"
                                    },
                                    "prefix": false
                                  },
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "x"
                                          },
                                          "right": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "xs"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "_i"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "IfStatement",
                                        "test": {
                                          "type": "Identifier",
                                          "name": "x"
                                        },
                                        "consequent": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ReturnStatement",
                                              "argument": {
                                                "type": "Literal",
                                                "value": true
                                              }
                                            }
                                          ]
                                        },
                                        "alternate": null
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "Literal",
                                    "value": false
                                  }
                                }
                              ]
                            },
                            "rest": null,
                            "generator": false,
                            "expression": false
                          },
                          "kind": "init"
                        },
                        {
                          "type": "Property",
                          "key": {
                            "type": "Identifier",
                            "name": "without"
                          },
                          "value": {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [
                              {
                                "type": "Identifier",
                                "name": "x"
                              },
                              {
                                "type": "Identifier",
                                "name": "xs"
                              }
                            ],
                            "defaults": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "_"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "filter"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                          {
                                            "type": "Identifier",
                                            "name": "y"
                                          }
                                        ],
                                        "defaults": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ReturnStatement",
                                              "argument": {
                                                "type": "BinaryExpression",
                                                "operator": "!==",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "y"
                                                },
                                                "right": {
                                                  "type": "Identifier",
                                                  "name": "x"
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                      },
                                      {
                                        "type": "Identifier",
                                        "name": "xs"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "rest": null,
                            "generator": false,
                            "expression": false
                          },
                          "kind": "init"
                        },
                        {
                          "type": "Property",
                          "key": {
                            "type": "Identifier",
                            "name": "remove"
                          },
                          "value": {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [
                              {
                                "type": "Identifier",
                                "name": "x"
                              },
                              {
                                "type": "Identifier",
                                "name": "xs"
                              }
                            ],
                            "defaults": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "VariableDeclaration",
                                  "declarations": [
                                    {
                                      "type": "VariableDeclarator",
                                      "id": {
                                        "type": "Identifier",
                                        "name": "i"
                                      },
                                      "init": null
                                    }
                                  ],
                                  "kind": "var"
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "i"
                                    },
                                    "right": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "indexOf"
                                      },
                                      "arguments": [
                                        {
                                          "type": "Identifier",
                                          "name": "xs"
                                        },
                                        {
                                          "type": "Identifier",
                                          "name": "x"
                                        }
                                      ]
                                    }
                                  }
                                },
                                {
                                  "type": "IfStatement",
                                  "test": {
                                    "type": "BinaryExpression",
                                    "operator": ">=",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "i"
                                    },
                                    "right": {
                                      "type": "Literal",
                                      "value": 0
                                    }
                                  },
                                  "consequent": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "xs"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "splice"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Identifier",
                                              "name": "i"
                                            },
                                            {
                                              "type": "Literal",
                                              "value": 1
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "alternate": null
                                }
                              ]
                            },
                            "rest": null,
                            "generator": false,
                            "expression": false
                          },
                          "kind": "init"
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "Bacon"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "_"
                      }
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "_"
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "Bacon"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "scheduler"
                      }
                    },
                    "right": {
                      "type": "ObjectExpression",
                      "properties": [
                        {
                          "type": "Property",
                          "key": {
                            "type": "Identifier",
                            "name": "setTimeout"
                          },
                          "value": {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [
                              {
                                "type": "Identifier",
                                "name": "f"
                              },
                              {
                                "type": "Identifier",
                                "name": "d"
                              }
                            ],
                            "defaults": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "setTimeout"
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "f"
                                      },
                                      {
                                        "type": "Identifier",
                                        "name": "d"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "rest": null,
                            "generator": false,
                            "expression": false
                          },
                          "kind": "init"
                        },
                        {
                          "type": "Property",
                          "key": {
                            "type": "Identifier",
                            "name": "setInterval"
                          },
                          "value": {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [
                              {
                                "type": "Identifier",
                                "name": "f"
                              },
                              {
                                "type": "Identifier",
                                "name": "i"
                              }
                            ],
                            "defaults": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "setInterval"
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "f"
                                      },
                                      {
                                        "type": "Identifier",
                                        "name": "i"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "rest": null,
                            "generator": false,
                            "expression": false
                          },
                          "kind": "init"
                        },
                        {
                          "type": "Property",
                          "key": {
                            "type": "Identifier",
                            "name": "clearInterval"
                          },
                          "value": {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [
                              {
                                "type": "Identifier",
                                "name": "id"
                              }
                            ],
                            "defaults": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "clearInterval"
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "id"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "rest": null,
                            "generator": false,
                            "expression": false
                          },
                          "kind": "init"
                        },
                        {
                          "type": "Property",
                          "key": {
                            "type": "Identifier",
                            "name": "now"
                          },
                          "value": {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [],
                            "defaults": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "NewExpression",
                                        "callee": {
                                          "type": "Identifier",
                                          "name": "Date"
                                        },
                                        "arguments": []
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "getTime"
                                      }
                                    },
                                    "arguments": []
                                  }
                                }
                              ]
                            },
                            "rest": null,
                            "generator": false,
                            "expression": false
                          },
                          "kind": "init"
                        }
                      ]
                    }
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          },
          "property": {
            "type": "Identifier",
            "name": "call"
          }
        },
        "arguments": [
          {
            "type": "ThisExpression"
          }
        ]
      }
    }
  ]
}
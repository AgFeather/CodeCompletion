{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "FunctionExpression",
          "id": null,
          "params": [
            {
              "type": "Identifier",
              "name": "mod"
            }
          ],
          "defaults": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "IfStatement",
                "test": {
                  "type": "LogicalExpression",
                  "operator": "&&",
                  "left": {
                    "type": "BinaryExpression",
                    "operator": "==",
                    "left": {
                      "type": "UnaryExpression",
                      "operator": "typeof",
                      "argument": {
                        "type": "Identifier",
                        "name": "exports"
                      },
                      "prefix": true
                    },
                    "right": {
                      "type": "Literal",
                      "value": "object"
                    }
                  },
                  "right": {
                    "type": "BinaryExpression",
                    "operator": "==",
                    "left": {
                      "type": "UnaryExpression",
                      "operator": "typeof",
                      "argument": {
                        "type": "Identifier",
                        "name": "module"
                      },
                      "prefix": true
                    },
                    "right": {
                      "type": "Literal",
                      "value": "object"
                    }
                  }
                },
                "consequent": {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "mod"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "require"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "../../lib/codemirror"
                          }
                        ]
                      },
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "require"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "../fold/xml-fold"
                          }
                        ]
                      }
                    ]
                  }
                },
                "alternate": {
                  "type": "IfStatement",
                  "test": {
                    "type": "LogicalExpression",
                    "operator": "&&",
                    "left": {
                      "type": "BinaryExpression",
                      "operator": "==",
                      "left": {
                        "type": "UnaryExpression",
                        "operator": "typeof",
                        "argument": {
                          "type": "Identifier",
                          "name": "define"
                        },
                        "prefix": true
                      },
                      "right": {
                        "type": "Literal",
                        "value": "function"
                      }
                    },
                    "right": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "define"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "amd"
                      }
                    }
                  },
                  "consequent": {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "define"
                      },
                      "arguments": [
                        {
                          "type": "ArrayExpression",
                          "elements": [
                            {
                              "type": "Literal",
                              "value": "../../lib/codemirror"
                            },
                            {
                              "type": "Literal",
                              "value": "../fold/xml-fold"
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "name": "mod"
                        }
                      ]
                    }
                  },
                  "alternate": {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "mod"
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "CodeMirror"
                        }
                      ]
                    }
                  }
                }
              }
            ]
          },
          "rest": null,
          "generator": false,
          "expression": false
        },
        "arguments": [
          {
            "type": "FunctionExpression",
            "id": null,
            "params": [
              {
                "type": "Identifier",
                "name": "CodeMirror"
              }
            ],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "Literal",
                    "value": "use strict"
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "CodeMirror"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "defineOption"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": "matchTags"
                      },
                      {
                        "type": "Literal",
                        "value": false
                      },
                      {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [
                          {
                            "type": "Identifier",
                            "name": "cm"
                          },
                          {
                            "type": "Identifier",
                            "name": "val"
                          },
                          {
                            "type": "Identifier",
                            "name": "old"
                          }
                        ],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "IfStatement",
                              "test": {
                                "type": "LogicalExpression",
                                "operator": "&&",
                                "left": {
                                  "type": "Identifier",
                                  "name": "old"
                                },
                                "right": {
                                  "type": "BinaryExpression",
                                  "operator": "!=",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "old"
                                  },
                                  "right": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "CodeMirror"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "Init"
                                    }
                                  }
                                }
                              },
                              "consequent": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "cm"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "off"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "cursorActivity"
                                        },
                                        {
                                          "type": "Identifier",
                                          "name": "doMatchTags"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "cm"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "off"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "viewportChange"
                                        },
                                        {
                                          "type": "Identifier",
                                          "name": "maybeUpdateMatch"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "clear"
                                      },
                                      "arguments": [
                                        {
                                          "type": "Identifier",
                                          "name": "cm"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              },
                              "alternate": null
                            },
                            {
                              "type": "IfStatement",
                              "test": {
                                "type": "Identifier",
                                "name": "val"
                              },
                              "consequent": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "cm"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "state"
                                          }
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "matchBothTags"
                                        }
                                      },
                                      "right": {
                                        "type": "LogicalExpression",
                                        "operator": "&&",
                                        "left": {
                                          "type": "BinaryExpression",
                                          "operator": "==",
                                          "left": {
                                            "type": "UnaryExpression",
                                            "operator": "typeof",
                                            "argument": {
                                              "type": "Identifier",
                                              "name": "val"
                                            },
                                            "prefix": true
                                          },
                                          "right": {
                                            "type": "Literal",
                                            "value": "object"
                                          }
                                        },
                                        "right": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "val"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "bothTags"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "cm"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "on"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "cursorActivity"
                                        },
                                        {
                                          "type": "Identifier",
                                          "name": "doMatchTags"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "cm"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "on"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "viewportChange"
                                        },
                                        {
                                          "type": "Identifier",
                                          "name": "maybeUpdateMatch"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "doMatchTags"
                                      },
                                      "arguments": [
                                        {
                                          "type": "Identifier",
                                          "name": "cm"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              },
                              "alternate": null
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      }
                    ]
                  }
                },
                {
                  "type": "FunctionDeclaration",
                  "id": {
                    "type": "Identifier",
                    "name": "clear"
                  },
                  "params": [
                    {
                      "type": "Identifier",
                      "name": "cm"
                    }
                  ],
                  "defaults": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "IfStatement",
                        "test": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "cm"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "state"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "tagHit"
                          }
                        },
                        "consequent": {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "cm"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "state"
                                  }
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "tagHit"
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "clear"
                              }
                            },
                            "arguments": []
                          }
                        },
                        "alternate": null
                      },
                      {
                        "type": "IfStatement",
                        "test": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "cm"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "state"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "tagOther"
                          }
                        },
                        "consequent": {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "cm"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "state"
                                  }
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "tagOther"
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "clear"
                              }
                            },
                            "arguments": []
                          }
                        },
                        "alternate": null
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "cm"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "state"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "tagHit"
                            }
                          },
                          "right": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "cm"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "state"
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "tagOther"
                              }
                            },
                            "right": {
                              "type": "Literal",
                              "value": null
                            }
                          }
                        }
                      }
                    ]
                  },
                  "rest": null,
                  "generator": false,
                  "expression": false
                },
                {
                  "type": "FunctionDeclaration",
                  "id": {
                    "type": "Identifier",
                    "name": "doMatchTags"
                  },
                  "params": [
                    {
                      "type": "Identifier",
                      "name": "cm"
                    }
                  ],
                  "defaults": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "cm"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "state"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "failedTagMatch"
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": false
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "cm"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "operation"
                            }
                          },
                          "arguments": [
                            {
                              "type": "FunctionExpression",
                              "id": null,
                              "params": [],
                              "defaults": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "clear"
                                      },
                                      "arguments": [
                                        {
                                          "type": "Identifier",
                                          "name": "cm"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "IfStatement",
                                    "test": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "cm"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "somethingSelected"
                                        }
                                      },
                                      "arguments": []
                                    },
                                    "consequent": {
                                      "type": "ReturnStatement",
                                      "argument": null
                                    },
                                    "alternate": null
                                  },
                                  {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "cur"
                                        },
                                        "init": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "cm"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "getCursor"
                                            }
                                          },
                                          "arguments": []
                                        }
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "range"
                                        },
                                        "init": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "cm"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "getViewport"
                                            }
                                          },
                                          "arguments": []
                                        }
                                      }
                                    ],
                                    "kind": "var"
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "range"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "from"
                                        }
                                      },
                                      "right": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "Math"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "min"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "range"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "from"
                                            }
                                          },
                                          {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "cur"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "line"
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "range"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "to"
                                        }
                                      },
                                      "right": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "Math"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "max"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "BinaryExpression",
                                            "operator": "+",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "cur"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "line"
                                              }
                                            },
                                            "right": {
                                              "type": "Literal",
                                              "value": 1
                                            }
                                          },
                                          {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "range"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "to"
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "match"
                                        },
                                        "init": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "CodeMirror"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "findMatchingTag"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Identifier",
                                              "name": "cm"
                                            },
                                            {
                                              "type": "Identifier",
                                              "name": "cur"
                                            },
                                            {
                                              "type": "Identifier",
                                              "name": "range"
                                            }
                                          ]
                                        }
                                      }
                                    ],
                                    "kind": "var"
                                  },
                                  {
                                    "type": "IfStatement",
                                    "test": {
                                      "type": "UnaryExpression",
                                      "operator": "!",
                                      "argument": {
                                        "type": "Identifier",
                                        "name": "match"
                                      },
                                      "prefix": true
                                    },
                                    "consequent": {
                                      "type": "ReturnStatement",
                                      "argument": null
                                    },
                                    "alternate": null
                                  },
                                  {
                                    "type": "IfStatement",
                                    "test": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "cm"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "state"
                                        }
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "matchBothTags"
                                      }
                                    },
                                    "consequent": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "VariableDeclaration",
                                          "declarations": [
                                            {
                                              "type": "VariableDeclarator",
                                              "id": {
                                                "type": "Identifier",
                                                "name": "hit"
                                              },
                                              "init": {
                                                "type": "ConditionalExpression",
                                                "test": {
                                                  "type": "BinaryExpression",
                                                  "operator": "==",
                                                  "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "match"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "at"
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "Literal",
                                                    "value": "open"
                                                  }
                                                },
                                                "consequent": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "match"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "open"
                                                  }
                                                },
                                                "alternate": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "match"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "close"
                                                  }
                                                }
                                              }
                                            }
                                          ],
                                          "kind": "var"
                                        },
                                        {
                                          "type": "IfStatement",
                                          "test": {
                                            "type": "Identifier",
                                            "name": "hit"
                                          },
                                          "consequent": {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "AssignmentExpression",
                                              "operator": "=",
                                              "left": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "cm"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "state"
                                                  }
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "tagHit"
                                                }
                                              },
                                              "right": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "cm"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "markText"
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "hit"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "from"
                                                    }
                                                  },
                                                  {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "hit"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "to"
                                                    }
                                                  },
                                                  {
                                                    "type": "ObjectExpression",
                                                    "properties": [
                                                      {
                                                        "type": "Property",
                                                        "key": {
                                                          "type": "Identifier",
                                                          "name": "className"
                                                        },
                                                        "value": {
                                                          "type": "Literal",
                                                          "value": "CodeMirror-matchingtag"
                                                        },
                                                        "kind": "init"
                                                      }
                                                    ]
                                                  }
                                                ]
                                              }
                                            }
                                          },
                                          "alternate": null
                                        }
                                      ]
                                    },
                                    "alternate": null
                                  },
                                  {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "other"
                                        },
                                        "init": {
                                          "type": "ConditionalExpression",
                                          "test": {
                                            "type": "BinaryExpression",
                                            "operator": "==",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "match"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "at"
                                              }
                                            },
                                            "right": {
                                              "type": "Literal",
                                              "value": "close"
                                            }
                                          },
                                          "consequent": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "match"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "open"
                                            }
                                          },
                                          "alternate": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "match"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "close"
                                            }
                                          }
                                        }
                                      }
                                    ],
                                    "kind": "var"
                                  },
                                  {
                                    "type": "IfStatement",
                                    "test": {
                                      "type": "Identifier",
                                      "name": "other"
                                    },
                                    "consequent": {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "cm"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "state"
                                            }
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "tagOther"
                                          }
                                        },
                                        "right": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "cm"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "markText"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "other"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "from"
                                              }
                                            },
                                            {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "other"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "to"
                                              }
                                            },
                                            {
                                              "type": "ObjectExpression",
                                              "properties": [
                                                {
                                                  "type": "Property",
                                                  "key": {
                                                    "type": "Identifier",
                                                    "name": "className"
                                                  },
                                                  "value": {
                                                    "type": "Literal",
                                                    "value": "CodeMirror-matchingtag"
                                                  },
                                                  "kind": "init"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    "alternate": {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "cm"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "state"
                                            }
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "failedTagMatch"
                                          }
                                        },
                                        "right": {
                                          "type": "Literal",
                                          "value": true
                                        }
                                      }
                                    }
                                  }
                                ]
                              },
                              "rest": null,
                              "generator": false,
                              "expression": false
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "rest": null,
                  "generator": false,
                  "expression": false
                },
                {
                  "type": "FunctionDeclaration",
                  "id": {
                    "type": "Identifier",
                    "name": "maybeUpdateMatch"
                  },
                  "params": [
                    {
                      "type": "Identifier",
                      "name": "cm"
                    }
                  ],
                  "defaults": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "IfStatement",
                        "test": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "cm"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "state"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "failedTagMatch"
                          }
                        },
                        "consequent": {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "doMatchTags"
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "cm"
                              }
                            ]
                          }
                        },
                        "alternate": null
                      }
                    ]
                  },
                  "rest": null,
                  "generator": false,
                  "expression": false
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "CodeMirror"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "commands"
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "toMatchingTag"
                      }
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "cm"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "VariableDeclaration",
                            "declarations": [
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "found"
                                },
                                "init": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "CodeMirror"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "findMatchingTag"
                                    }
                                  },
                                  "arguments": [
                                    {
                                      "type": "Identifier",
                                      "name": "cm"
                                    },
                                    {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "cm"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "getCursor"
                                        }
                                      },
                                      "arguments": []
                                    }
                                  ]
                                }
                              }
                            ],
                            "kind": "var"
                          },
                          {
                            "type": "IfStatement",
                            "test": {
                              "type": "Identifier",
                              "name": "found"
                            },
                            "consequent": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "VariableDeclaration",
                                  "declarations": [
                                    {
                                      "type": "VariableDeclarator",
                                      "id": {
                                        "type": "Identifier",
                                        "name": "other"
                                      },
                                      "init": {
                                        "type": "ConditionalExpression",
                                        "test": {
                                          "type": "BinaryExpression",
                                          "operator": "==",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "found"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "at"
                                            }
                                          },
                                          "right": {
                                            "type": "Literal",
                                            "value": "close"
                                          }
                                        },
                                        "consequent": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "found"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "open"
                                          }
                                        },
                                        "alternate": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "found"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "close"
                                          }
                                        }
                                      }
                                    }
                                  ],
                                  "kind": "var"
                                },
                                {
                                  "type": "IfStatement",
                                  "test": {
                                    "type": "Identifier",
                                    "name": "other"
                                  },
                                  "consequent": {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "cm"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "extendSelection"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "other"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "to"
                                          }
                                        },
                                        {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "other"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "from"
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "alternate": null
                                }
                              ]
                            },
                            "alternate": null
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    }
  ]
}
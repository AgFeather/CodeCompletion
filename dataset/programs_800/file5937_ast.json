{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "unirest"
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "require"
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "unirest"
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "req"
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "unirest"
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "POST"
              },
              {
                "type": "Literal",
                "value": "http://mockbin.com/har"
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "req"
          },
          "property": {
            "type": "Identifier",
            "name": "headers"
          }
        },
        "arguments": [
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Literal",
                  "value": "content-type"
                },
                "value": {
                  "type": "Literal",
                  "value": "application/json"
                },
                "kind": "init"
              }
            ]
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "req"
          },
          "property": {
            "type": "Identifier",
            "name": "type"
          }
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "json"
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "req"
          },
          "property": {
            "type": "Identifier",
            "name": "send"
          }
        },
        "arguments": [
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Literal",
                  "value": "number"
                },
                "value": {
                  "type": "Literal",
                  "value": 1
                },
                "kind": "init"
              },
              {
                "type": "Property",
                "key": {
                  "type": "Literal",
                  "value": "string"
                },
                "value": {
                  "type": "Literal",
                  "value": "f\"oo"
                },
                "kind": "init"
              },
              {
                "type": "Property",
                "key": {
                  "type": "Literal",
                  "value": "arr"
                },
                "value": {
                  "type": "ArrayExpression",
                  "elements": [
                    {
                      "type": "Literal",
                      "value": 1
                    },
                    {
                      "type": "Literal",
                      "value": 2
                    },
                    {
                      "type": "Literal",
                      "value": 3
                    }
                  ]
                },
                "kind": "init"
              },
              {
                "type": "Property",
                "key": {
                  "type": "Literal",
                  "value": "nested"
                },
                "value": {
                  "type": "ObjectExpression",
                  "properties": [
                    {
                      "type": "Property",
                      "key": {
                        "type": "Literal",
                        "value": "a"
                      },
                      "value": {
                        "type": "Literal",
                        "value": "b"
                      },
                      "kind": "init"
                    }
                  ]
                },
                "kind": "init"
              },
              {
                "type": "Property",
                "key": {
                  "type": "Literal",
                  "value": "arr_mix"
                },
                "value": {
                  "type": "ArrayExpression",
                  "elements": [
                    {
                      "type": "Literal",
                      "value": 1
                    },
                    {
                      "type": "Literal",
                      "value": "a"
                    },
                    {
                      "type": "ObjectExpression",
                      "properties": [
                        {
                          "type": "Property",
                          "key": {
                            "type": "Literal",
                            "value": "arr_mix_nested"
                          },
                          "value": {
                            "type": "ObjectExpression",
                            "properties": []
                          },
                          "kind": "init"
                        }
                      ]
                    }
                  ]
                },
                "kind": "init"
              }
            ]
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "req"
          },
          "property": {
            "type": "Identifier",
            "name": "end"
          }
        },
        "arguments": [
          {
            "type": "FunctionExpression",
            "id": null,
            "params": [
              {
                "type": "Identifier",
                "name": "res"
              }
            ],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "res"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "error"
                    }
                  },
                  "consequent": {
                    "type": "ThrowStatement",
                    "argument": {
                      "type": "NewExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Error"
                      },
                      "arguments": [
                        {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "res"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "error"
                          }
                        }
                      ]
                    }
                  },
                  "alternate": null
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "console"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "log"
                      }
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "res"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "body"
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    }
  ]
}
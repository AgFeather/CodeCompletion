{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "Literal",
        "value": "use strict"
      }
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "base62"
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "require"
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "base62"
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "Syntax"
          },
          "init": {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "require"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "esprima-fb"
                }
              ]
            },
            "property": {
              "type": "Identifier",
              "name": "Syntax"
            }
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "utils"
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "require"
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "../src/utils"
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "declareIdentInLocalScope"
          },
          "init": {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "Identifier",
              "name": "utils"
            },
            "property": {
              "type": "Identifier",
              "name": "declareIdentInLocalScope"
            }
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "initScopeMetadata"
          },
          "init": {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "Identifier",
              "name": "utils"
            },
            "property": {
              "type": "Identifier",
              "name": "initScopeMetadata"
            }
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "SUPER_PROTO_IDENT_PREFIX"
          },
          "init": {
            "type": "Literal",
            "value": "____SuperProtoOf"
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "_anonClassUUIDCounter"
          },
          "init": {
            "type": "Literal",
            "value": 0
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "_mungedSymbolMaps"
          },
          "init": {
            "type": "ObjectExpression",
            "properties": []
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "resetSymbols"
      },
      "params": [],
      "defaults": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "=",
              "left": {
                "type": "Identifier",
                "name": "_anonClassUUIDCounter"
              },
              "right": {
                "type": "Literal",
                "value": 0
              }
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "=",
              "left": {
                "type": "Identifier",
                "name": "_mungedSymbolMaps"
              },
              "right": {
                "type": "ObjectExpression",
                "properties": []
              }
            }
          }
        ]
      },
      "rest": null,
      "generator": false,
      "expression": false
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "_generateAnonymousClassName"
      },
      "params": [
        {
          "type": "Identifier",
          "name": "state"
        }
      ],
      "defaults": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "VariableDeclaration",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "mungeNamespace"
                },
                "init": {
                  "type": "LogicalExpression",
                  "operator": "||",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "state"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "mungeNamespace"
                    }
                  },
                  "right": {
                    "type": "Literal",
                    "value": ""
                  }
                }
              }
            ],
            "kind": "var"
          },
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "BinaryExpression",
              "operator": "+",
              "left": {
                "type": "BinaryExpression",
                "operator": "+",
                "left": {
                  "type": "Literal",
                  "value": "____Class"
                },
                "right": {
                  "type": "Identifier",
                  "name": "mungeNamespace"
                }
              },
              "right": {
                "type": "CallExpression",
                "callee": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "Identifier",
                    "name": "base62"
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "encode"
                  }
                },
                "arguments": [
                  {
                    "type": "UpdateExpression",
                    "operator": "++",
                    "argument": {
                      "type": "Identifier",
                      "name": "_anonClassUUIDCounter"
                    },
                    "prefix": false
                  }
                ]
              }
            }
          }
        ]
      },
      "rest": null,
      "generator": false,
      "expression": false
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "_getMungedName"
      },
      "params": [
        {
          "type": "Identifier",
          "name": "identName"
        },
        {
          "type": "Identifier",
          "name": "state"
        }
      ],
      "defaults": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "VariableDeclaration",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "mungeNamespace"
                },
                "init": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "Identifier",
                    "name": "state"
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "mungeNamespace"
                  }
                }
              }
            ],
            "kind": "var"
          },
          {
            "type": "VariableDeclaration",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "shouldMinify"
                },
                "init": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "state"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "g"
                      }
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "opts"
                    }
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "minify"
                  }
                }
              }
            ],
            "kind": "var"
          },
          {
            "type": "IfStatement",
            "test": {
              "type": "Identifier",
              "name": "shouldMinify"
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "UnaryExpression",
                    "operator": "!",
                    "argument": {
                      "type": "MemberExpression",
                      "computed": true,
                      "object": {
                        "type": "Identifier",
                        "name": "_mungedSymbolMaps"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "mungeNamespace"
                      }
                    },
                    "prefix": true
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                              "type": "Identifier",
                              "name": "_mungedSymbolMaps"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "mungeNamespace"
                            }
                          },
                          "right": {
                            "type": "ObjectExpression",
                            "properties": [
                              {
                                "type": "Property",
                                "key": {
                                  "type": "Identifier",
                                  "name": "symbolMap"
                                },
                                "value": {
                                  "type": "ObjectExpression",
                                  "properties": []
                                },
                                "kind": "init"
                              },
                              {
                                "type": "Property",
                                "key": {
                                  "type": "Identifier",
                                  "name": "identUUIDCounter"
                                },
                                "value": {
                                  "type": "Literal",
                                  "value": 0
                                },
                                "kind": "init"
                              }
                            ]
                          }
                        }
                      }
                    ]
                  },
                  "alternate": null
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "symbolMap"
                      },
                      "init": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "MemberExpression",
                          "computed": true,
                          "object": {
                            "type": "Identifier",
                            "name": "_mungedSymbolMaps"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "mungeNamespace"
                          }
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "symbolMap"
                        }
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "UnaryExpression",
                    "operator": "!",
                    "argument": {
                      "type": "MemberExpression",
                      "computed": true,
                      "object": {
                        "type": "Identifier",
                        "name": "symbolMap"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "identName"
                      }
                    },
                    "prefix": true
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                              "type": "Identifier",
                              "name": "symbolMap"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "identName"
                            }
                          },
                          "right": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "base62"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "encode"
                              }
                            },
                            "arguments": [
                              {
                                "type": "UpdateExpression",
                                "operator": "++",
                                "argument": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "_mungedSymbolMaps"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "mungeNamespace"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "identUUIDCounter"
                                  }
                                },
                                "prefix": false
                              }
                            ]
                          }
                        }
                      }
                    ]
                  },
                  "alternate": null
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "identName"
                    },
                    "right": {
                      "type": "MemberExpression",
                      "computed": true,
                      "object": {
                        "type": "Identifier",
                        "name": "symbolMap"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "identName"
                      }
                    }
                  }
                }
              ]
            },
            "alternate": null
          },
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "BinaryExpression",
              "operator": "+",
              "left": {
                "type": "BinaryExpression",
                "operator": "+",
                "left": {
                  "type": "Literal",
                  "value": "$"
                },
                "right": {
                  "type": "Identifier",
                  "name": "mungeNamespace"
                }
              },
              "right": {
                "type": "Identifier",
                "name": "identName"
              }
            }
          }
        ]
      },
      "rest": null,
      "generator": false,
      "expression": false
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "_getSuperClassInfo"
      },
      "params": [
        {
          "type": "Identifier",
          "name": "node"
        },
        {
          "type": "Identifier",
          "name": "state"
        }
      ],
      "defaults": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "VariableDeclaration",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "ret"
                },
                "init": {
                  "type": "ObjectExpression",
                  "properties": [
                    {
                      "type": "Property",
                      "key": {
                        "type": "Identifier",
                        "name": "name"
                      },
                      "value": {
                        "type": "Literal",
                        "value": null
                      },
                      "kind": "init"
                    },
                    {
                      "type": "Property",
                      "key": {
                        "type": "Identifier",
                        "name": "expression"
                      },
                      "value": {
                        "type": "Literal",
                        "value": null
                      },
                      "kind": "init"
                    }
                  ]
                }
              }
            ],
            "kind": "var"
          },
          {
            "type": "IfStatement",
            "test": {
              "type": "MemberExpression",
              "computed": false,
              "object": {
                "type": "Identifier",
                "name": "node"
              },
              "property": {
                "type": "Identifier",
                "name": "superClass"
              }
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "BinaryExpression",
                    "operator": "===",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "node"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "superClass"
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "type"
                      }
                    },
                    "right": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "Syntax"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "Identifier"
                      }
                    }
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "ret"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "name"
                            }
                          },
                          "right": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "node"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "superClass"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "name"
                            }
                          }
                        }
                      }
                    ]
                  },
                  "alternate": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "ret"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "name"
                            }
                          },
                          "right": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "_generateAnonymousClassName"
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "state"
                              }
                            ]
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "ret"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "expression"
                            }
                          },
                          "right": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "state"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "g"
                                  }
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "source"
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "substring"
                              }
                            },
                            "arguments": [
                              {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "node"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "superClass"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "range"
                                  }
                                },
                                "property": {
                                  "type": "Literal",
                                  "value": 0
                                }
                              },
                              {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "node"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "superClass"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "range"
                                  }
                                },
                                "property": {
                                  "type": "Literal",
                                  "value": 1
                                }
                              }
                            ]
                          }
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "alternate": null
          },
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "Identifier",
              "name": "ret"
            }
          }
        ]
      },
      "rest": null,
      "generator": false,
      "expression": false
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "_isConstructorMethod"
      },
      "params": [
        {
          "type": "Identifier",
          "name": "classElement"
        }
      ],
      "defaults": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "LogicalExpression",
              "operator": "&&",
              "left": {
                "type": "LogicalExpression",
                "operator": "&&",
                "left": {
                  "type": "BinaryExpression",
                  "operator": "===",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "classElement"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "type"
                    }
                  },
                  "right": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "Syntax"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "MethodDefinition"
                    }
                  }
                },
                "right": {
                  "type": "BinaryExpression",
                  "operator": "===",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "classElement"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "key"
                      }
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "type"
                    }
                  },
                  "right": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "Syntax"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "Identifier"
                    }
                  }
                }
              },
              "right": {
                "type": "BinaryExpression",
                "operator": "===",
                "left": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "classElement"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "key"
                    }
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "name"
                  }
                },
                "right": {
                  "type": "Literal",
                  "value": "constructor"
                }
              }
            }
          }
        ]
      },
      "rest": null,
      "generator": false,
      "expression": false
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "_shouldMungeIdentifier"
      },
      "params": [
        {
          "type": "Identifier",
          "name": "node"
        },
        {
          "type": "Identifier",
          "name": "state"
        }
      ],
      "defaults": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "LogicalExpression",
              "operator": "&&",
              "left": {
                "type": "LogicalExpression",
                "operator": "&&",
                "left": {
                  "type": "UnaryExpression",
                  "operator": "!",
                  "argument": {
                    "type": "UnaryExpression",
                    "operator": "!",
                    "argument": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "state"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "methodFuncNode"
                      }
                    },
                    "prefix": true
                  },
                  "prefix": true
                },
                "right": {
                  "type": "UnaryExpression",
                  "operator": "!",
                  "argument": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "utils"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "getDocblock"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "state"
                          }
                        ]
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "hasOwnProperty"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": "preventMunge"
                      }
                    ]
                  },
                  "prefix": true
                }
              },
              "right": {
                "type": "CallExpression",
                "callee": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "Literal",
                    "value": {}
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "test"
                  }
                },
                "arguments": [
                  {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "node"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "name"
                    }
                  }
                ]
              }
            }
          }
        ]
      },
      "rest": null,
      "generator": false,
      "expression": false
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "visitClassMethod"
      },
      "params": [
        {
          "type": "Identifier",
          "name": "traverse"
        },
        {
          "type": "Identifier",
          "name": "node"
        },
        {
          "type": "Identifier",
          "name": "path"
        },
        {
          "type": "Identifier",
          "name": "state"
        }
      ],
      "defaults": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "Identifier",
                  "name": "utils"
                },
                "property": {
                  "type": "Identifier",
                  "name": "catchup"
                }
              },
              "arguments": [
                {
                  "type": "MemberExpression",
                  "computed": true,
                  "object": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "node"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "range"
                    }
                  },
                  "property": {
                    "type": "Literal",
                    "value": 0
                  }
                },
                {
                  "type": "Identifier",
                  "name": "state"
                }
              ]
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "Identifier",
                  "name": "path"
                },
                "property": {
                  "type": "Identifier",
                  "name": "unshift"
                }
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "name": "node"
                }
              ]
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "traverse"
              },
              "arguments": [
                {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "Identifier",
                    "name": "node"
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "value"
                  }
                },
                {
                  "type": "Identifier",
                  "name": "path"
                },
                {
                  "type": "Identifier",
                  "name": "state"
                }
              ]
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "Identifier",
                  "name": "path"
                },
                "property": {
                  "type": "Identifier",
                  "name": "shift"
                }
              },
              "arguments": []
            }
          },
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "Literal",
              "value": false
            }
          }
        ]
      },
      "rest": null,
      "generator": false,
      "expression": false
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "visitClassMethod"
          },
          "property": {
            "type": "Identifier",
            "name": "test"
          }
        },
        "right": {
          "type": "FunctionExpression",
          "id": null,
          "params": [
            {
              "type": "Identifier",
              "name": "node"
            },
            {
              "type": "Identifier",
              "name": "path"
            },
            {
              "type": "Identifier",
              "name": "state"
            }
          ],
          "defaults": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "ReturnStatement",
                "argument": {
                  "type": "BinaryExpression",
                  "operator": "===",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "node"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "type"
                    }
                  },
                  "right": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "Syntax"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "MethodDefinition"
                    }
                  }
                }
              }
            ]
          },
          "rest": null,
          "generator": false,
          "expression": false
        }
      }
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "visitClassFunctionExpression"
      },
      "params": [
        {
          "type": "Identifier",
          "name": "traverse"
        },
        {
          "type": "Identifier",
          "name": "node"
        },
        {
          "type": "Identifier",
          "name": "path"
        },
        {
          "type": "Identifier",
          "name": "state"
        }
      ],
      "defaults": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "VariableDeclaration",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "methodNode"
                },
                "init": {
                  "type": "MemberExpression",
                  "computed": true,
                  "object": {
                    "type": "Identifier",
                    "name": "path"
                  },
                  "property": {
                    "type": "Literal",
                    "value": 0
                  }
                }
              }
            ],
            "kind": "var"
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "=",
              "left": {
                "type": "Identifier",
                "name": "state"
              },
              "right": {
                "type": "CallExpression",
                "callee": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "Identifier",
                    "name": "utils"
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "updateState"
                  }
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "state"
                  },
                  {
                    "type": "ObjectExpression",
                    "properties": [
                      {
                        "type": "Property",
                        "key": {
                          "type": "Identifier",
                          "name": "methodFuncNode"
                        },
                        "value": {
                          "type": "Identifier",
                          "name": "node"
                        },
                        "kind": "init"
                      }
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "IfStatement",
            "test": {
              "type": "BinaryExpression",
              "operator": "===",
              "left": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "Identifier",
                    "name": "methodNode"
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "key"
                  }
                },
                "property": {
                  "type": "Identifier",
                  "name": "name"
                }
              },
              "right": {
                "type": "Literal",
                "value": "constructor"
              }
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "utils"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "append"
                      }
                    },
                    "arguments": [
                      {
                        "type": "BinaryExpression",
                        "operator": "+",
                        "left": {
                          "type": "Literal",
                          "value": "function "
                        },
                        "right": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "state"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "className"
                          }
                        }
                      },
                      {
                        "type": "Identifier",
                        "name": "state"
                      }
                    ]
                  }
                }
              ]
            },
            "alternate": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "methodName"
                      },
                      "init": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "methodNode"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "key"
                          }
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "name"
                        }
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "_shouldMungeIdentifier"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "methodNode"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "key"
                        }
                      },
                      {
                        "type": "Identifier",
                        "name": "state"
                      }
                    ]
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "name": "methodName"
                          },
                          "right": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "_getMungedName"
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "methodName"
                              },
                              {
                                "type": "Identifier",
                                "name": "state"
                              }
                            ]
                          }
                        }
                      }
                    ]
                  },
                  "alternate": null
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "prototypeOrStatic"
                      },
                      "init": {
                        "type": "ConditionalExpression",
                        "test": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "methodNode"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "static"
                          }
                        },
                        "consequent": {
                          "type": "Literal",
                          "value": ""
                        },
                        "alternate": {
                          "type": "Literal",
                          "value": "prototype."
                        }
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "utils"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "append"
                      }
                    },
                    "arguments": [
                      {
                        "type": "BinaryExpression",
                        "operator": "+",
                        "left": {
                          "type": "BinaryExpression",
                          "operator": "+",
                          "left": {
                            "type": "BinaryExpression",
                            "operator": "+",
                            "left": {
                              "type": "BinaryExpression",
                              "operator": "+",
                              "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "state"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "className"
                                }
                              },
                              "right": {
                                "type": "Literal",
                                "value": "."
                              }
                            },
                            "right": {
                              "type": "Identifier",
                              "name": "prototypeOrStatic"
                            }
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "methodName"
                          }
                        },
                        "right": {
                          "type": "Literal",
                          "value": "=function"
                        }
                      },
                      {
                        "type": "Identifier",
                        "name": "state"
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "Identifier",
                  "name": "utils"
                },
                "property": {
                  "type": "Identifier",
                  "name": "move"
                }
              },
              "arguments": [
                {
                  "type": "MemberExpression",
                  "computed": true,
                  "object": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "methodNode"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "key"
                      }
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "range"
                    }
                  },
                  "property": {
                    "type": "Literal",
                    "value": 1
                  }
                },
                {
                  "type": "Identifier",
                  "name": "state"
                }
              ]
            }
          },
          {
            "type": "VariableDeclaration",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "params"
                },
                "init": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "Identifier",
                    "name": "node"
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "params"
                  }
                }
              }
            ],
            "kind": "var"
          },
          {
            "type": "IfStatement",
            "test": {
              "type": "BinaryExpression",
              "operator": ">",
              "left": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "Identifier",
                  "name": "params"
                },
                "property": {
                  "type": "Identifier",
                  "name": "length"
                }
              },
              "right": {
                "type": "Literal",
                "value": 0
              }
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ForStatement",
                  "init": {
                    "type": "VariableDeclaration",
                    "declarations": [
                      {
                        "type": "VariableDeclarator",
                        "id": {
                          "type": "Identifier",
                          "name": "i"
                        },
                        "init": {
                          "type": "Literal",
                          "value": 0
                        }
                      }
                    ],
                    "kind": "var"
                  },
                  "test": {
                    "type": "BinaryExpression",
                    "operator": "<",
                    "left": {
                      "type": "Identifier",
                      "name": "i"
                    },
                    "right": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "params"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "length"
                      }
                    }
                  },
                  "update": {
                    "type": "UpdateExpression",
                    "operator": "++",
                    "argument": {
                      "type": "Identifier",
                      "name": "i"
                    },
                    "prefix": false
                  },
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "utils"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "catchup"
                            }
                          },
                          "arguments": [
                            {
                              "type": "MemberExpression",
                              "computed": true,
                              "object": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "MemberExpression",
                                  "computed": true,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "node"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "params"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "i"
                                  }
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "range"
                                }
                              },
                              "property": {
                                "type": "Literal",
                                "value": 0
                              }
                            },
                            {
                              "type": "Identifier",
                              "name": "state"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "path"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "unshift"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "node"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "traverse"
                          },
                          "arguments": [
                            {
                              "type": "MemberExpression",
                              "computed": true,
                              "object": {
                                "type": "Identifier",
                                "name": "params"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "i"
                              }
                            },
                            {
                              "type": "Identifier",
                              "name": "path"
                            },
                            {
                              "type": "Identifier",
                              "name": "state"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "path"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "shift"
                            }
                          },
                          "arguments": []
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "alternate": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "utils"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "append"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": "("
                      },
                      {
                        "type": "Identifier",
                        "name": "state"
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "Identifier",
                  "name": "utils"
                },
                "property": {
                  "type": "Identifier",
                  "name": "append"
                }
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": ")"
                },
                {
                  "type": "Identifier",
                  "name": "state"
                }
              ]
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "Identifier",
                  "name": "utils"
                },
                "property": {
                  "type": "Identifier",
                  "name": "catchupWhiteSpace"
                }
              },
              "arguments": [
                {
                  "type": "MemberExpression",
                  "computed": true,
                  "object": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "node"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "body"
                      }
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "range"
                    }
                  },
                  "property": {
                    "type": "Literal",
                    "value": 0
                  }
                },
                {
                  "type": "Identifier",
                  "name": "state"
                }
              ]
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "Identifier",
                  "name": "utils"
                },
                "property": {
                  "type": "Identifier",
                  "name": "append"
                }
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "{"
                },
                {
                  "type": "Identifier",
                  "name": "state"
                }
              ]
            }
          },
          {
            "type": "IfStatement",
            "test": {
              "type": "UnaryExpression",
              "operator": "!",
              "argument": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "Identifier",
                  "name": "state"
                },
                "property": {
                  "type": "Identifier",
                  "name": "scopeIsStrict"
                }
              },
              "prefix": true
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "utils"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "append"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": "\"use strict\";"
                      },
                      {
                        "type": "Identifier",
                        "name": "state"
                      }
                    ]
                  }
                }
              ]
            },
            "alternate": null
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "Identifier",
                  "name": "utils"
                },
                "property": {
                  "type": "Identifier",
                  "name": "move"
                }
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "operator": "+",
                  "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "node"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "body"
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "range"
                      }
                    },
                    "property": {
                      "type": "Literal",
                      "value": 0
                    }
                  },
                  "right": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Literal",
                      "value": "{"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "length"
                    }
                  }
                },
                {
                  "type": "Identifier",
                  "name": "state"
                }
              ]
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "Identifier",
                  "name": "path"
                },
                "property": {
                  "type": "Identifier",
                  "name": "unshift"
                }
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "name": "node"
                }
              ]
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "traverse"
              },
              "arguments": [
                {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "Identifier",
                    "name": "node"
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "body"
                  }
                },
                {
                  "type": "Identifier",
                  "name": "path"
                },
                {
                  "type": "Identifier",
                  "name": "state"
                }
              ]
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "Identifier",
                  "name": "path"
                },
                "property": {
                  "type": "Identifier",
                  "name": "shift"
                }
              },
              "arguments": []
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "Identifier",
                  "name": "utils"
                },
                "property": {
                  "type": "Identifier",
                  "name": "catchup"
                }
              },
              "arguments": [
                {
                  "type": "MemberExpression",
                  "computed": true,
                  "object": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "node"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "body"
                      }
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "range"
                    }
                  },
                  "property": {
                    "type": "Literal",
                    "value": 1
                  }
                },
                {
                  "type": "Identifier",
                  "name": "state"
                }
              ]
            }
          },
          {
            "type": "IfStatement",
            "test": {
              "type": "BinaryExpression",
              "operator": "!==",
              "left": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "Identifier",
                    "name": "methodNode"
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "key"
                  }
                },
                "property": {
                  "type": "Identifier",
                  "name": "name"
                }
              },
              "right": {
                "type": "Literal",
                "value": "constructor"
              }
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "utils"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "append"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": ";"
                      },
                      {
                        "type": "Identifier",
                        "name": "state"
                      }
                    ]
                  }
                }
              ]
            },
            "alternate": null
          },
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "Literal",
              "value": false
            }
          }
        ]
      },
      "rest": null,
      "generator": false,
      "expression": false
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "visitClassFunctionExpression"
          },
          "property": {
            "type": "Identifier",
            "name": "test"
          }
        },
        "right": {
          "type": "FunctionExpression",
          "id": null,
          "params": [
            {
              "type": "Identifier",
              "name": "node"
            },
            {
              "type": "Identifier",
              "name": "path"
            },
            {
              "type": "Identifier",
              "name": "state"
            }
          ],
          "defaults": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "ReturnStatement",
                "argument": {
                  "type": "LogicalExpression",
                  "operator": "&&",
                  "left": {
                    "type": "BinaryExpression",
                    "operator": "===",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "node"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "type"
                      }
                    },
                    "right": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "Syntax"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "FunctionExpression"
                      }
                    }
                  },
                  "right": {
                    "type": "BinaryExpression",
                    "operator": "===",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                          "type": "Identifier",
                          "name": "path"
                        },
                        "property": {
                          "type": "Literal",
                          "value": 0
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "type"
                      }
                    },
                    "right": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "Syntax"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "MethodDefinition"
                      }
                    }
                  }
                }
              }
            ]
          },
          "rest": null,
          "generator": false,
          "expression": false
        }
      }
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "visitClassMethodParam"
      },
      "params": [
        {
          "type": "Identifier",
          "name": "traverse"
        },
        {
          "type": "Identifier",
          "name": "node"
        },
        {
          "type": "Identifier",
          "name": "path"
        },
        {
          "type": "Identifier",
          "name": "state"
        }
      ],
      "defaults": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "VariableDeclaration",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "paramName"
                },
                "init": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "Identifier",
                    "name": "node"
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "name"
                  }
                }
              }
            ],
            "kind": "var"
          },
          {
            "type": "IfStatement",
            "test": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "_shouldMungeIdentifier"
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "name": "node"
                },
                {
                  "type": "Identifier",
                  "name": "state"
                }
              ]
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "paramName"
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "_getMungedName"
                      },
                      "arguments": [
                        {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "node"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "name"
                          }
                        },
                        {
                          "type": "Identifier",
                          "name": "state"
                        }
                      ]
                    }
                  }
                }
              ]
            },
            "alternate": null
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "Identifier",
                  "name": "utils"
                },
                "property": {
                  "type": "Identifier",
                  "name": "append"
                }
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "name": "paramName"
                },
                {
                  "type": "Identifier",
                  "name": "state"
                }
              ]
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "Identifier",
                  "name": "utils"
                },
                "property": {
                  "type": "Identifier",
                  "name": "move"
                }
              },
              "arguments": [
                {
                  "type": "MemberExpression",
                  "computed": true,
                  "object": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "node"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "range"
                    }
                  },
                  "property": {
                    "type": "Literal",
                    "value": 1
                  }
                },
                {
                  "type": "Identifier",
                  "name": "state"
                }
              ]
            }
          }
        ]
      },
      "rest": null,
      "generator": false,
      "expression": false
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "visitClassMethodParam"
          },
          "property": {
            "type": "Identifier",
            "name": "test"
          }
        },
        "right": {
          "type": "FunctionExpression",
          "id": null,
          "params": [
            {
              "type": "Identifier",
              "name": "node"
            },
            {
              "type": "Identifier",
              "name": "path"
            },
            {
              "type": "Identifier",
              "name": "state"
            }
          ],
          "defaults": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "IfStatement",
                "test": {
                  "type": "LogicalExpression",
                  "operator": "||",
                  "left": {
                    "type": "UnaryExpression",
                    "operator": "!",
                    "argument": {
                      "type": "MemberExpression",
                      "computed": true,
                      "object": {
                        "type": "Identifier",
                        "name": "path"
                      },
                      "property": {
                        "type": "Literal",
                        "value": 0
                      }
                    },
                    "prefix": true
                  },
                  "right": {
                    "type": "UnaryExpression",
                    "operator": "!",
                    "argument": {
                      "type": "MemberExpression",
                      "computed": true,
                      "object": {
                        "type": "Identifier",
                        "name": "path"
                      },
                      "property": {
                        "type": "Literal",
                        "value": 1
                      }
                    },
                    "prefix": true
                  }
                },
                "consequent": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ReturnStatement",
                      "argument": null
                    }
                  ]
                },
                "alternate": null
              },
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "parentFuncExpr"
                    },
                    "init": {
                      "type": "MemberExpression",
                      "computed": true,
                      "object": {
                        "type": "Identifier",
                        "name": "path"
                      },
                      "property": {
                        "type": "Literal",
                        "value": 0
                      }
                    }
                  }
                ],
                "kind": "var"
              },
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "parentClassMethod"
                    },
                    "init": {
                      "type": "MemberExpression",
                      "computed": true,
                      "object": {
                        "type": "Identifier",
                        "name": "path"
                      },
                      "property": {
                        "type": "Literal",
                        "value": 1
                      }
                    }
                  }
                ],
                "kind": "var"
              },
              {
                "type": "ReturnStatement",
                "argument": {
                  "type": "LogicalExpression",
                  "operator": "&&",
                  "left": {
                    "type": "LogicalExpression",
                    "operator": "&&",
                    "left": {
                      "type": "BinaryExpression",
                      "operator": "===",
                      "left": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "parentFuncExpr"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "type"
                        }
                      },
                      "right": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "Syntax"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "FunctionExpression"
                        }
                      }
                    },
                    "right": {
                      "type": "BinaryExpression",
                      "operator": "===",
                      "left": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "parentClassMethod"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "type"
                        }
                      },
                      "right": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "Syntax"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "MethodDefinition"
                        }
                      }
                    }
                  },
                  "right": {
                    "type": "BinaryExpression",
                    "operator": "===",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "node"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "type"
                      }
                    },
                    "right": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "Syntax"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "Identifier"
                      }
                    }
                  }
                }
              }
            ]
          },
          "rest": null,
          "generator": false,
          "expression": false
        }
      }
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "_renderClassBody"
      },
      "params": [
        {
          "type": "Identifier",
          "name": "traverse"
        },
        {
          "type": "Identifier",
          "name": "node"
        },
        {
          "type": "Identifier",
          "name": "path"
        },
        {
          "type": "Identifier",
          "name": "state"
        }
      ],
      "defaults": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "VariableDeclaration",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "className"
                },
                "init": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "Identifier",
                    "name": "state"
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "className"
                  }
                }
              }
            ],
            "kind": "var"
          },
          {
            "type": "VariableDeclaration",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "superClass"
                },
                "init": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "Identifier",
                    "name": "state"
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "superClass"
                  }
                }
              }
            ],
            "kind": "var"
          },
          {
            "type": "IfStatement",
            "test": {
              "type": "MemberExpression",
              "computed": false,
              "object": {
                "type": "Identifier",
                "name": "superClass"
              },
              "property": {
                "type": "Identifier",
                "name": "name"
              }
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "BinaryExpression",
                    "operator": "!==",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "superClass"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "expression"
                      }
                    },
                    "right": {
                      "type": "Literal",
                      "value": null
                    }
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "utils"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "append"
                            }
                          },
                          "arguments": [
                            {
                              "type": "BinaryExpression",
                              "operator": "+",
                              "left": {
                                "type": "BinaryExpression",
                                "operator": "+",
                                "left": {
                                  "type": "BinaryExpression",
                                  "operator": "+",
                                  "left": {
                                    "type": "BinaryExpression",
                                    "operator": "+",
                                    "left": {
                                      "type": "Literal",
                                      "value": "var "
                                    },
                                    "right": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "superClass"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "name"
                                      }
                                    }
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": "="
                                  }
                                },
                                "right": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "superClass"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "expression"
                                  }
                                }
                              },
                              "right": {
                                "type": "Literal",
                                "value": ";"
                              }
                            },
                            {
                              "type": "Identifier",
                              "name": "state"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "alternate": null
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "keyName"
                      },
                      "init": {
                        "type": "BinaryExpression",
                        "operator": "+",
                        "left": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "superClass"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "name"
                          }
                        },
                        "right": {
                          "type": "Literal",
                          "value": "____Key"
                        }
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "keyNameDeclarator"
                      },
                      "init": {
                        "type": "Literal",
                        "value": ""
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "UnaryExpression",
                    "operator": "!",
                    "argument": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "utils"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "identWithinLexicalScope"
                        }
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "keyName"
                        },
                        {
                          "type": "Identifier",
                          "name": "state"
                        }
                      ]
                    },
                    "prefix": true
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "name": "keyNameDeclarator"
                          },
                          "right": {
                            "type": "Literal",
                            "value": "var "
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "declareIdentInLocalScope"
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "keyName"
                            },
                            {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "initScopeMetadata"
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "node"
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "name": "state"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "alternate": null
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "utils"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "append"
                      }
                    },
                    "arguments": [
                      {
                        "type": "BinaryExpression",
                        "operator": "+",
                        "left": {
                          "type": "BinaryExpression",
                          "operator": "+",
                          "left": {
                            "type": "BinaryExpression",
                            "operator": "+",
                            "left": {
                              "type": "BinaryExpression",
                              "operator": "+",
                              "left": {
                                "type": "BinaryExpression",
                                "operator": "+",
                                "left": {
                                  "type": "BinaryExpression",
                                  "operator": "+",
                                  "left": {
                                    "type": "BinaryExpression",
                                    "operator": "+",
                                    "left": {
                                      "type": "BinaryExpression",
                                      "operator": "+",
                                      "left": {
                                        "type": "BinaryExpression",
                                        "operator": "+",
                                        "left": {
                                          "type": "BinaryExpression",
                                          "operator": "+",
                                          "left": {
                                            "type": "BinaryExpression",
                                            "operator": "+",
                                            "left": {
                                              "type": "BinaryExpression",
                                              "operator": "+",
                                              "left": {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                  "type": "BinaryExpression",
                                                  "operator": "+",
                                                  "left": {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                      "type": "BinaryExpression",
                                                      "operator": "+",
                                                      "left": {
                                                        "type": "BinaryExpression",
                                                        "operator": "+",
                                                        "left": {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "BinaryExpression",
                                                              "operator": "+",
                                                              "left": {
                                                                "type": "Literal",
                                                                "value": "for("
                                                              },
                                                              "right": {
                                                                "type": "Identifier",
                                                                "name": "keyNameDeclarator"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "keyName"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": " in "
                                                          }
                                                        },
                                                        "right": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "superClass"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "name"
                                                          }
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "Literal",
                                                        "value": "){"
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": "if("
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "superClass"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "name"
                                                    }
                                                  }
                                                },
                                                "right": {
                                                  "type": "Literal",
                                                  "value": ".hasOwnProperty("
                                                }
                                              },
                                              "right": {
                                                "type": "Identifier",
                                                "name": "keyName"
                                              }
                                            },
                                            "right": {
                                              "type": "Literal",
                                              "value": ")){"
                                            }
                                          },
                                          "right": {
                                            "type": "Identifier",
                                            "name": "className"
                                          }
                                        },
                                        "right": {
                                          "type": "Literal",
                                          "value": "["
                                        }
                                      },
                                      "right": {
                                        "type": "Identifier",
                                        "name": "keyName"
                                      }
                                    },
                                    "right": {
                                      "type": "Literal",
                                      "value": "]="
                                    }
                                  },
                                  "right": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "superClass"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "name"
                                    }
                                  }
                                },
                                "right": {
                                  "type": "Literal",
                                  "value": "["
                                }
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "keyName"
                              }
                            },
                            "right": {
                              "type": "Literal",
                              "value": "];"
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": "}"
                          }
                        },
                        "right": {
                          "type": "Literal",
                          "value": "}"
                        }
                      },
                      {
                        "type": "Identifier",
                        "name": "state"
                      }
                    ]
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "superProtoIdentStr"
                      },
                      "init": {
                        "type": "BinaryExpression",
                        "operator": "+",
                        "left": {
                          "type": "Identifier",
                          "name": "SUPER_PROTO_IDENT_PREFIX"
                        },
                        "right": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "superClass"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "name"
                          }
                        }
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "UnaryExpression",
                    "operator": "!",
                    "argument": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "utils"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "identWithinLexicalScope"
                        }
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "superProtoIdentStr"
                        },
                        {
                          "type": "Identifier",
                          "name": "state"
                        }
                      ]
                    },
                    "prefix": true
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "utils"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "append"
                            }
                          },
                          "arguments": [
                            {
                              "type": "BinaryExpression",
                              "operator": "+",
                              "left": {
                                "type": "BinaryExpression",
                                "operator": "+",
                                "left": {
                                  "type": "BinaryExpression",
                                  "operator": "+",
                                  "left": {
                                    "type": "BinaryExpression",
                                    "operator": "+",
                                    "left": {
                                      "type": "BinaryExpression",
                                      "operator": "+",
                                      "left": {
                                        "type": "BinaryExpression",
                                        "operator": "+",
                                        "left": {
                                          "type": "BinaryExpression",
                                          "operator": "+",
                                          "left": {
                                            "type": "Literal",
                                            "value": "var "
                                          },
                                          "right": {
                                            "type": "Identifier",
                                            "name": "superProtoIdentStr"
                                          }
                                        },
                                        "right": {
                                          "type": "Literal",
                                          "value": "="
                                        }
                                      },
                                      "right": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "superClass"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "name"
                                        }
                                      }
                                    },
                                    "right": {
                                      "type": "Literal",
                                      "value": "===null?"
                                    }
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": "null:"
                                  }
                                },
                                "right": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "superClass"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "name"
                                  }
                                }
                              },
                              "right": {
                                "type": "Literal",
                                "value": ".prototype;"
                              }
                            },
                            {
                              "type": "Identifier",
                              "name": "state"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "declareIdentInLocalScope"
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "superProtoIdentStr"
                            },
                            {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "initScopeMetadata"
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "node"
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "name": "state"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "alternate": null
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "utils"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "append"
                      }
                    },
                    "arguments": [
                      {
                        "type": "BinaryExpression",
                        "operator": "+",
                        "left": {
                          "type": "BinaryExpression",
                          "operator": "+",
                          "left": {
                            "type": "BinaryExpression",
                            "operator": "+",
                            "left": {
                              "type": "Identifier",
                              "name": "className"
                            },
                            "right": {
                              "type": "Literal",
                              "value": ".prototype=Object.create("
                            }
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "superProtoIdentStr"
                          }
                        },
                        "right": {
                          "type": "Literal",
                          "value": ");"
                        }
                      },
                      {
                        "type": "Identifier",
                        "name": "state"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "utils"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "append"
                      }
                    },
                    "arguments": [
                      {
                        "type": "BinaryExpression",
                        "operator": "+",
                        "left": {
                          "type": "BinaryExpression",
                          "operator": "+",
                          "left": {
                            "type": "BinaryExpression",
                            "operator": "+",
                            "left": {
                              "type": "Identifier",
                              "name": "className"
                            },
                            "right": {
                              "type": "Literal",
                              "value": ".prototype.constructor="
                            }
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "className"
                          }
                        },
                        "right": {
                          "type": "Literal",
                          "value": ";"
                        }
                      },
                      {
                        "type": "Identifier",
                        "name": "state"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "utils"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "append"
                      }
                    },
                    "arguments": [
                      {
                        "type": "BinaryExpression",
                        "operator": "+",
                        "left": {
                          "type": "BinaryExpression",
                          "operator": "+",
                          "left": {
                            "type": "BinaryExpression",
                            "operator": "+",
                            "left": {
                              "type": "Identifier",
                              "name": "className"
                            },
                            "right": {
                              "type": "Literal",
                              "value": ".__superConstructor__="
                            }
                          },
                          "right": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "superClass"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "name"
                            }
                          }
                        },
                        "right": {
                          "type": "Literal",
                          "value": ";"
                        }
                      },
                      {
                        "type": "Identifier",
                        "name": "state"
                      }
                    ]
                  }
                }
              ]
            },
            "alternate": null
          },
          {
            "type": "IfStatement",
            "test": {
              "type": "UnaryExpression",
              "operator": "!",
              "argument": {
                "type": "CallExpression",
                "callee": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "node"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "body"
                          }
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "body"
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "filter"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "_isConstructorMethod"
                      }
                    ]
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "pop"
                  }
                },
                "arguments": []
              },
              "prefix": true
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "utils"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "append"
                      }
                    },
                    "arguments": [
                      {
                        "type": "BinaryExpression",
                        "operator": "+",
                        "left": {
                          "type": "BinaryExpression",
                          "operator": "+",
                          "left": {
                            "type": "Literal",
                            "value": "function "
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "className"
                          }
                        },
                        "right": {
                          "type": "Literal",
                          "value": "(){"
                        }
                      },
                      {
                        "type": "Identifier",
                        "name": "state"
                      }
                    ]
                  }
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "UnaryExpression",
                    "operator": "!",
                    "argument": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "state"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "scopeIsStrict"
                      }
                    },
                    "prefix": true
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "utils"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "append"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "\"use strict\";"
                            },
                            {
                              "type": "Identifier",
                              "name": "state"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "alternate": null
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "superClass"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "name"
                    }
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "utils"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "append"
                            }
                          },
                          "arguments": [
                            {
                              "type": "BinaryExpression",
                              "operator": "+",
                              "left": {
                                "type": "BinaryExpression",
                                "operator": "+",
                                "left": {
                                  "type": "BinaryExpression",
                                  "operator": "+",
                                  "left": {
                                    "type": "BinaryExpression",
                                    "operator": "+",
                                    "left": {
                                      "type": "Literal",
                                      "value": "if("
                                    },
                                    "right": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "superClass"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "name"
                                      }
                                    }
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": "!==null){"
                                  }
                                },
                                "right": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "superClass"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "name"
                                  }
                                }
                              },
                              "right": {
                                "type": "Literal",
                                "value": ".apply(this,arguments);}"
                              }
                            },
                            {
                              "type": "Identifier",
                              "name": "state"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "alternate": null
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "utils"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "append"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": "}"
                      },
                      {
                        "type": "Identifier",
                        "name": "state"
                      }
                    ]
                  }
                }
              ]
            },
            "alternate": null
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "Identifier",
                  "name": "utils"
                },
                "property": {
                  "type": "Identifier",
                  "name": "move"
                }
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "operator": "+",
                  "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "node"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "body"
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "range"
                      }
                    },
                    "property": {
                      "type": "Literal",
                      "value": 0
                    }
                  },
                  "right": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Literal",
                      "value": "{"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "length"
                    }
                  }
                },
                {
                  "type": "Identifier",
                  "name": "state"
                }
              ]
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "traverse"
              },
              "arguments": [
                {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "Identifier",
                    "name": "node"
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "body"
                  }
                },
                {
                  "type": "Identifier",
                  "name": "path"
                },
                {
                  "type": "Identifier",
                  "name": "state"
                }
              ]
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "Identifier",
                  "name": "utils"
                },
                "property": {
                  "type": "Identifier",
                  "name": "catchupWhiteSpace"
                }
              },
              "arguments": [
                {
                  "type": "MemberExpression",
                  "computed": true,
                  "object": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "node"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "range"
                    }
                  },
                  "property": {
                    "type": "Literal",
                    "value": 1
                  }
                },
                {
                  "type": "Identifier",
                  "name": "state"
                }
              ]
            }
          }
        ]
      },
      "rest": null,
      "generator": false,
      "expression": false
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "visitClassDeclaration"
      },
      "params": [
        {
          "type": "Identifier",
          "name": "traverse"
        },
        {
          "type": "Identifier",
          "name": "node"
        },
        {
          "type": "Identifier",
          "name": "path"
        },
        {
          "type": "Identifier",
          "name": "state"
        }
      ],
      "defaults": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "VariableDeclaration",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "className"
                },
                "init": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "node"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "id"
                    }
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "name"
                  }
                }
              }
            ],
            "kind": "var"
          },
          {
            "type": "VariableDeclaration",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "superClass"
                },
                "init": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "_getSuperClassInfo"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "node"
                    },
                    {
                      "type": "Identifier",
                      "name": "state"
                    }
                  ]
                }
              }
            ],
            "kind": "var"
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "=",
              "left": {
                "type": "Identifier",
                "name": "state"
              },
              "right": {
                "type": "CallExpression",
                "callee": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "Identifier",
                    "name": "utils"
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "updateState"
                  }
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "state"
                  },
                  {
                    "type": "ObjectExpression",
                    "properties": [
                      {
                        "type": "Property",
                        "key": {
                          "type": "Identifier",
                          "name": "mungeNamespace"
                        },
                        "value": {
                          "type": "Identifier",
                          "name": "className"
                        },
                        "kind": "init"
                      },
                      {
                        "type": "Property",
                        "key": {
                          "type": "Identifier",
                          "name": "className"
                        },
                        "value": {
                          "type": "Identifier",
                          "name": "className"
                        },
                        "kind": "init"
                      },
                      {
                        "type": "Property",
                        "key": {
                          "type": "Identifier",
                          "name": "superClass"
                        },
                        "value": {
                          "type": "Identifier",
                          "name": "superClass"
                        },
                        "kind": "init"
                      }
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "_renderClassBody"
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "name": "traverse"
                },
                {
                  "type": "Identifier",
                  "name": "node"
                },
                {
                  "type": "Identifier",
                  "name": "path"
                },
                {
                  "type": "Identifier",
                  "name": "state"
                }
              ]
            }
          },
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "Literal",
              "value": false
            }
          }
        ]
      },
      "rest": null,
      "generator": false,
      "expression": false
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "visitClassDeclaration"
          },
          "property": {
            "type": "Identifier",
            "name": "test"
          }
        },
        "right": {
          "type": "FunctionExpression",
          "id": null,
          "params": [
            {
              "type": "Identifier",
              "name": "node"
            },
            {
              "type": "Identifier",
              "name": "path"
            },
            {
              "type": "Identifier",
              "name": "state"
            }
          ],
          "defaults": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "ReturnStatement",
                "argument": {
                  "type": "BinaryExpression",
                  "operator": "===",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "node"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "type"
                    }
                  },
                  "right": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "Syntax"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "ClassDeclaration"
                    }
                  }
                }
              }
            ]
          },
          "rest": null,
          "generator": false,
          "expression": false
        }
      }
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "visitClassExpression"
      },
      "params": [
        {
          "type": "Identifier",
          "name": "traverse"
        },
        {
          "type": "Identifier",
          "name": "node"
        },
        {
          "type": "Identifier",
          "name": "path"
        },
        {
          "type": "Identifier",
          "name": "state"
        }
      ],
      "defaults": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "VariableDeclaration",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "className"
                },
                "init": {
                  "type": "LogicalExpression",
                  "operator": "||",
                  "left": {
                    "type": "LogicalExpression",
                    "operator": "&&",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "node"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "id"
                      }
                    },
                    "right": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "node"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "id"
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "name"
                      }
                    }
                  },
                  "right": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "_generateAnonymousClassName"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "state"
                      }
                    ]
                  }
                }
              }
            ],
            "kind": "var"
          },
          {
            "type": "VariableDeclaration",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "superClass"
                },
                "init": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "_getSuperClassInfo"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "node"
                    },
                    {
                      "type": "Identifier",
                      "name": "state"
                    }
                  ]
                }
              }
            ],
            "kind": "var"
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "Identifier",
                  "name": "utils"
                },
                "property": {
                  "type": "Identifier",
                  "name": "append"
                }
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "(function(){"
                },
                {
                  "type": "Identifier",
                  "name": "state"
                }
              ]
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "=",
              "left": {
                "type": "Identifier",
                "name": "state"
              },
              "right": {
                "type": "CallExpression",
                "callee": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "Identifier",
                    "name": "utils"
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "updateState"
                  }
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "state"
                  },
                  {
                    "type": "ObjectExpression",
                    "properties": [
                      {
                        "type": "Property",
                        "key": {
                          "type": "Identifier",
                          "name": "mungeNamespace"
                        },
                        "value": {
                          "type": "Identifier",
                          "name": "className"
                        },
                        "kind": "init"
                      },
                      {
                        "type": "Property",
                        "key": {
                          "type": "Identifier",
                          "name": "className"
                        },
                        "value": {
                          "type": "Identifier",
                          "name": "className"
                        },
                        "kind": "init"
                      },
                      {
                        "type": "Property",
                        "key": {
                          "type": "Identifier",
                          "name": "superClass"
                        },
                        "value": {
                          "type": "Identifier",
                          "name": "superClass"
                        },
                        "kind": "init"
                      }
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "_renderClassBody"
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "name": "traverse"
                },
                {
                  "type": "Identifier",
                  "name": "node"
                },
                {
                  "type": "Identifier",
                  "name": "path"
                },
                {
                  "type": "Identifier",
                  "name": "state"
                }
              ]
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "Identifier",
                  "name": "utils"
                },
                "property": {
                  "type": "Identifier",
                  "name": "append"
                }
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "operator": "+",
                  "left": {
                    "type": "BinaryExpression",
                    "operator": "+",
                    "left": {
                      "type": "Literal",
                      "value": "return "
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "className"
                    }
                  },
                  "right": {
                    "type": "Literal",
                    "value": ";})()"
                  }
                },
                {
                  "type": "Identifier",
                  "name": "state"
                }
              ]
            }
          },
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "Literal",
              "value": false
            }
          }
        ]
      },
      "rest": null,
      "generator": false,
      "expression": false
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "visitClassExpression"
          },
          "property": {
            "type": "Identifier",
            "name": "test"
          }
        },
        "right": {
          "type": "FunctionExpression",
          "id": null,
          "params": [
            {
              "type": "Identifier",
              "name": "node"
            },
            {
              "type": "Identifier",
              "name": "path"
            },
            {
              "type": "Identifier",
              "name": "state"
            }
          ],
          "defaults": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "ReturnStatement",
                "argument": {
                  "type": "BinaryExpression",
                  "operator": "===",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "node"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "type"
                    }
                  },
                  "right": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "Syntax"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "ClassExpression"
                    }
                  }
                }
              }
            ]
          },
          "rest": null,
          "generator": false,
          "expression": false
        }
      }
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "visitPrivateIdentifier"
      },
      "params": [
        {
          "type": "Identifier",
          "name": "traverse"
        },
        {
          "type": "Identifier",
          "name": "node"
        },
        {
          "type": "Identifier",
          "name": "path"
        },
        {
          "type": "Identifier",
          "name": "state"
        }
      ],
      "defaults": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "Identifier",
                  "name": "utils"
                },
                "property": {
                  "type": "Identifier",
                  "name": "append"
                }
              },
              "arguments": [
                {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "_getMungedName"
                  },
                  "arguments": [
                    {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "node"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "name"
                      }
                    },
                    {
                      "type": "Identifier",
                      "name": "state"
                    }
                  ]
                },
                {
                  "type": "Identifier",
                  "name": "state"
                }
              ]
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "Identifier",
                  "name": "utils"
                },
                "property": {
                  "type": "Identifier",
                  "name": "move"
                }
              },
              "arguments": [
                {
                  "type": "MemberExpression",
                  "computed": true,
                  "object": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "node"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "range"
                    }
                  },
                  "property": {
                    "type": "Literal",
                    "value": 1
                  }
                },
                {
                  "type": "Identifier",
                  "name": "state"
                }
              ]
            }
          }
        ]
      },
      "rest": null,
      "generator": false,
      "expression": false
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "visitPrivateIdentifier"
          },
          "property": {
            "type": "Identifier",
            "name": "test"
          }
        },
        "right": {
          "type": "FunctionExpression",
          "id": null,
          "params": [
            {
              "type": "Identifier",
              "name": "node"
            },
            {
              "type": "Identifier",
              "name": "path"
            },
            {
              "type": "Identifier",
              "name": "state"
            }
          ],
          "defaults": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "IfStatement",
                "test": {
                  "type": "LogicalExpression",
                  "operator": "&&",
                  "left": {
                    "type": "BinaryExpression",
                    "operator": "===",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "node"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "type"
                      }
                    },
                    "right": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "Syntax"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "Identifier"
                      }
                    }
                  },
                  "right": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "_shouldMungeIdentifier"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "node"
                      },
                      {
                        "type": "Identifier",
                        "name": "state"
                      }
                    ]
                  }
                },
                "consequent": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "IfStatement",
                      "test": {
                        "type": "LogicalExpression",
                        "operator": "&&",
                        "left": {
                          "type": "LogicalExpression",
                          "operator": "&&",
                          "left": {
                            "type": "BinaryExpression",
                            "operator": "===",
                            "left": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                  "type": "Identifier",
                                  "name": "path"
                                },
                                "property": {
                                  "type": "Literal",
                                  "value": 0
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "type"
                              }
                            },
                            "right": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "Syntax"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "MemberExpression"
                              }
                            }
                          },
                          "right": {
                            "type": "BinaryExpression",
                            "operator": "!==",
                            "left": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                  "type": "Identifier",
                                  "name": "path"
                                },
                                "property": {
                                  "type": "Literal",
                                  "value": 0
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "object"
                              }
                            },
                            "right": {
                              "type": "Identifier",
                              "name": "node"
                            }
                          }
                        },
                        "right": {
                          "type": "BinaryExpression",
                          "operator": "===",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": true,
                              "object": {
                                "type": "Identifier",
                                "name": "path"
                              },
                              "property": {
                                "type": "Literal",
                                "value": 0
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "computed"
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": false
                          }
                        }
                      },
                      "consequent": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "Literal",
                              "value": true
                            }
                          }
                        ]
                      },
                      "alternate": null
                    },
                    {
                      "type": "IfStatement",
                      "test": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "utils"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "identWithinLexicalScope"
                          }
                        },
                        "arguments": [
                          {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "node"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "name"
                            }
                          },
                          {
                            "type": "Identifier",
                            "name": "state"
                          },
                          {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "state"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "methodFuncNode"
                            }
                          }
                        ]
                      },
                      "consequent": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "Literal",
                              "value": true
                            }
                          }
                        ]
                      },
                      "alternate": null
                    },
                    {
                      "type": "IfStatement",
                      "test": {
                        "type": "LogicalExpression",
                        "operator": "&&",
                        "left": {
                          "type": "BinaryExpression",
                          "operator": "===",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": true,
                              "object": {
                                "type": "Identifier",
                                "name": "path"
                              },
                              "property": {
                                "type": "Literal",
                                "value": 0
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "type"
                            }
                          },
                          "right": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "Syntax"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "Property"
                            }
                          }
                        },
                        "right": {
                          "type": "BinaryExpression",
                          "operator": "===",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": true,
                              "object": {
                                "type": "Identifier",
                                "name": "path"
                              },
                              "property": {
                                "type": "Literal",
                                "value": 1
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "type"
                            }
                          },
                          "right": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "Syntax"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "ObjectExpression"
                            }
                          }
                        }
                      },
                      "consequent": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "Literal",
                              "value": true
                            }
                          }
                        ]
                      },
                      "alternate": null
                    },
                    {
                      "type": "IfStatement",
                      "test": {
                        "type": "LogicalExpression",
                        "operator": "||",
                        "left": {
                          "type": "BinaryExpression",
                          "operator": "===",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": true,
                              "object": {
                                "type": "Identifier",
                                "name": "path"
                              },
                              "property": {
                                "type": "Literal",
                                "value": 0
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "type"
                            }
                          },
                          "right": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "Syntax"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "FunctionExpression"
                            }
                          }
                        },
                        "right": {
                          "type": "BinaryExpression",
                          "operator": "===",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": true,
                              "object": {
                                "type": "Identifier",
                                "name": "path"
                              },
                              "property": {
                                "type": "Literal",
                                "value": 0
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "type"
                            }
                          },
                          "right": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "Syntax"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "FunctionDeclaration"
                            }
                          }
                        }
                      },
                      "consequent": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ForStatement",
                            "init": {
                              "type": "VariableDeclaration",
                              "declarations": [
                                {
                                  "type": "VariableDeclarator",
                                  "id": {
                                    "type": "Identifier",
                                    "name": "i"
                                  },
                                  "init": {
                                    "type": "Literal",
                                    "value": 0
                                  }
                                }
                              ],
                              "kind": "var"
                            },
                            "test": {
                              "type": "BinaryExpression",
                              "operator": "<",
                              "left": {
                                "type": "Identifier",
                                "name": "i"
                              },
                              "right": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "path"
                                    },
                                    "property": {
                                      "type": "Literal",
                                      "value": 0
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "params"
                                  }
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "length"
                                }
                              }
                            },
                            "update": {
                              "type": "UpdateExpression",
                              "operator": "++",
                              "argument": {
                                "type": "Identifier",
                                "name": "i"
                              },
                              "prefix": false
                            },
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "IfStatement",
                                  "test": {
                                    "type": "BinaryExpression",
                                    "operator": "===",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": true,
                                      "object": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "MemberExpression",
                                          "computed": true,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "path"
                                          },
                                          "property": {
                                            "type": "Literal",
                                            "value": 0
                                          }
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "params"
                                        }
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "i"
                                      }
                                    },
                                    "right": {
                                      "type": "Identifier",
                                      "name": "node"
                                    }
                                  },
                                  "consequent": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "Literal",
                                          "value": true
                                        }
                                      }
                                    ]
                                  },
                                  "alternate": null
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "alternate": null
                    }
                  ]
                },
                "alternate": null
              },
              {
                "type": "ReturnStatement",
                "argument": {
                  "type": "Literal",
                  "value": false
                }
              }
            ]
          },
          "rest": null,
          "generator": false,
          "expression": false
        }
      }
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "visitSuperCallExpression"
      },
      "params": [
        {
          "type": "Identifier",
          "name": "traverse"
        },
        {
          "type": "Identifier",
          "name": "node"
        },
        {
          "type": "Identifier",
          "name": "path"
        },
        {
          "type": "Identifier",
          "name": "state"
        }
      ],
      "defaults": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "VariableDeclaration",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "superClassName"
                },
                "init": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "state"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "superClass"
                    }
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "name"
                  }
                }
              }
            ],
            "kind": "var"
          },
          {
            "type": "IfStatement",
            "test": {
              "type": "BinaryExpression",
              "operator": "===",
              "left": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "Identifier",
                    "name": "node"
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "callee"
                  }
                },
                "property": {
                  "type": "Identifier",
                  "name": "type"
                }
              },
              "right": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "Identifier",
                  "name": "Syntax"
                },
                "property": {
                  "type": "Identifier",
                  "name": "Identifier"
                }
              }
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "utils"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "append"
                      }
                    },
                    "arguments": [
                      {
                        "type": "BinaryExpression",
                        "operator": "+",
                        "left": {
                          "type": "Identifier",
                          "name": "superClassName"
                        },
                        "right": {
                          "type": "Literal",
                          "value": ".call("
                        }
                      },
                      {
                        "type": "Identifier",
                        "name": "state"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "utils"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "move"
                      }
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "node"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "callee"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "range"
                          }
                        },
                        "property": {
                          "type": "Literal",
                          "value": 1
                        }
                      },
                      {
                        "type": "Identifier",
                        "name": "state"
                      }
                    ]
                  }
                }
              ]
            },
            "alternate": {
              "type": "IfStatement",
              "test": {
                "type": "BinaryExpression",
                "operator": "===",
                "left": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "node"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "callee"
                    }
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "type"
                  }
                },
                "right": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "Identifier",
                    "name": "Syntax"
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "MemberExpression"
                  }
                }
              },
              "consequent": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "utils"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "append"
                        }
                      },
                      "arguments": [
                        {
                          "type": "BinaryExpression",
                          "operator": "+",
                          "left": {
                            "type": "Identifier",
                            "name": "SUPER_PROTO_IDENT_PREFIX"
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "superClassName"
                          }
                        },
                        {
                          "type": "Identifier",
                          "name": "state"
                        }
                      ]
                    }
                  },
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "utils"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "move"
                        }
                      },
                      "arguments": [
                        {
                          "type": "MemberExpression",
                          "computed": true,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "node"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "callee"
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "object"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "range"
                            }
                          },
                          "property": {
                            "type": "Literal",
                            "value": 1
                          }
                        },
                        {
                          "type": "Identifier",
                          "name": "state"
                        }
                      ]
                    }
                  },
                  {
                    "type": "IfStatement",
                    "test": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "node"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "callee"
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "computed"
                      }
                    },
                    "consequent": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "utils"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "catchup"
                              }
                            },
                            "arguments": [
                              {
                                "type": "BinaryExpression",
                                "operator": "+",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": true,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "node"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "callee"
                                        }
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "property"
                                      }
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "range"
                                    }
                                  },
                                  "property": {
                                    "type": "Literal",
                                    "value": 1
                                  }
                                },
                                "right": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Literal",
                                    "value": "]"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "length"
                                  }
                                }
                              },
                              {
                                "type": "Identifier",
                                "name": "state"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "alternate": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "utils"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "append"
                              }
                            },
                            "arguments": [
                              {
                                "type": "BinaryExpression",
                                "operator": "+",
                                "left": {
                                  "type": "Literal",
                                  "value": "."
                                },
                                "right": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "node"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "callee"
                                      }
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "property"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "name"
                                  }
                                }
                              },
                              {
                                "type": "Identifier",
                                "name": "state"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "utils"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "append"
                        }
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": ".call("
                        },
                        {
                          "type": "Identifier",
                          "name": "state"
                        }
                      ]
                    }
                  },
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "utils"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "move"
                        }
                      },
                      "arguments": [
                        {
                          "type": "MemberExpression",
                          "computed": true,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "node"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "callee"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "range"
                            }
                          },
                          "property": {
                            "type": "Literal",
                            "value": 1
                          }
                        },
                        {
                          "type": "Identifier",
                          "name": "state"
                        }
                      ]
                    }
                  }
                ]
              },
              "alternate": null
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "Identifier",
                  "name": "utils"
                },
                "property": {
                  "type": "Identifier",
                  "name": "append"
                }
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "this"
                },
                {
                  "type": "Identifier",
                  "name": "state"
                }
              ]
            }
          },
          {
            "type": "IfStatement",
            "test": {
              "type": "BinaryExpression",
              "operator": ">",
              "left": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "Identifier",
                    "name": "node"
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "arguments"
                  }
                },
                "property": {
                  "type": "Identifier",
                  "name": "length"
                }
              },
              "right": {
                "type": "Literal",
                "value": 0
              }
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "utils"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "append"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": ","
                      },
                      {
                        "type": "Identifier",
                        "name": "state"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "utils"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "catchupWhiteSpace"
                      }
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "node"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "arguments"
                              }
                            },
                            "property": {
                              "type": "Literal",
                              "value": 0
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "range"
                          }
                        },
                        "property": {
                          "type": "Literal",
                          "value": 0
                        }
                      },
                      {
                        "type": "Identifier",
                        "name": "state"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "traverse"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "node"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "arguments"
                        }
                      },
                      {
                        "type": "Identifier",
                        "name": "path"
                      },
                      {
                        "type": "Identifier",
                        "name": "state"
                      }
                    ]
                  }
                }
              ]
            },
            "alternate": null
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "Identifier",
                  "name": "utils"
                },
                "property": {
                  "type": "Identifier",
                  "name": "catchupWhiteSpace"
                }
              },
              "arguments": [
                {
                  "type": "MemberExpression",
                  "computed": true,
                  "object": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "node"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "range"
                    }
                  },
                  "property": {
                    "type": "Literal",
                    "value": 1
                  }
                },
                {
                  "type": "Identifier",
                  "name": "state"
                }
              ]
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "Identifier",
                  "name": "utils"
                },
                "property": {
                  "type": "Identifier",
                  "name": "append"
                }
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": ")"
                },
                {
                  "type": "Identifier",
                  "name": "state"
                }
              ]
            }
          },
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "Literal",
              "value": false
            }
          }
        ]
      },
      "rest": null,
      "generator": false,
      "expression": false
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "visitSuperCallExpression"
          },
          "property": {
            "type": "Identifier",
            "name": "test"
          }
        },
        "right": {
          "type": "FunctionExpression",
          "id": null,
          "params": [
            {
              "type": "Identifier",
              "name": "node"
            },
            {
              "type": "Identifier",
              "name": "path"
            },
            {
              "type": "Identifier",
              "name": "state"
            }
          ],
          "defaults": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "IfStatement",
                "test": {
                  "type": "LogicalExpression",
                  "operator": "&&",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "state"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "superClass"
                    }
                  },
                  "right": {
                    "type": "BinaryExpression",
                    "operator": "===",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "node"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "type"
                      }
                    },
                    "right": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "Syntax"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "CallExpression"
                      }
                    }
                  }
                },
                "consequent": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "VariableDeclaration",
                      "declarations": [
                        {
                          "type": "VariableDeclarator",
                          "id": {
                            "type": "Identifier",
                            "name": "callee"
                          },
                          "init": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "node"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "callee"
                            }
                          }
                        }
                      ],
                      "kind": "var"
                    },
                    {
                      "type": "IfStatement",
                      "test": {
                        "type": "LogicalExpression",
                        "operator": "||",
                        "left": {
                          "type": "LogicalExpression",
                          "operator": "&&",
                          "left": {
                            "type": "BinaryExpression",
                            "operator": "===",
                            "left": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "callee"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "type"
                              }
                            },
                            "right": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "Syntax"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "Identifier"
                              }
                            }
                          },
                          "right": {
                            "type": "BinaryExpression",
                            "operator": "===",
                            "left": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "callee"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "name"
                              }
                            },
                            "right": {
                              "type": "Literal",
                              "value": "super"
                            }
                          }
                        },
                        "right": {
                          "type": "LogicalExpression",
                          "operator": "&&",
                          "left": {
                            "type": "BinaryExpression",
                            "operator": "==",
                            "left": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "callee"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "type"
                              }
                            },
                            "right": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "Syntax"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "MemberExpression"
                              }
                            }
                          },
                          "right": {
                            "type": "BinaryExpression",
                            "operator": "===",
                            "left": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "callee"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "object"
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "name"
                              }
                            },
                            "right": {
                              "type": "Literal",
                              "value": "super"
                            }
                          }
                        }
                      },
                      "consequent": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "Literal",
                              "value": true
                            }
                          }
                        ]
                      },
                      "alternate": null
                    }
                  ]
                },
                "alternate": null
              },
              {
                "type": "ReturnStatement",
                "argument": {
                  "type": "Literal",
                  "value": false
                }
              }
            ]
          },
          "rest": null,
          "generator": false,
          "expression": false
        }
      }
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "visitSuperMemberExpression"
      },
      "params": [
        {
          "type": "Identifier",
          "name": "traverse"
        },
        {
          "type": "Identifier",
          "name": "node"
        },
        {
          "type": "Identifier",
          "name": "path"
        },
        {
          "type": "Identifier",
          "name": "state"
        }
      ],
      "defaults": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "VariableDeclaration",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "superClassName"
                },
                "init": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "state"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "superClass"
                    }
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "name"
                  }
                }
              }
            ],
            "kind": "var"
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "Identifier",
                  "name": "utils"
                },
                "property": {
                  "type": "Identifier",
                  "name": "append"
                }
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "operator": "+",
                  "left": {
                    "type": "Identifier",
                    "name": "SUPER_PROTO_IDENT_PREFIX"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "superClassName"
                  }
                },
                {
                  "type": "Identifier",
                  "name": "state"
                }
              ]
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "Identifier",
                  "name": "utils"
                },
                "property": {
                  "type": "Identifier",
                  "name": "move"
                }
              },
              "arguments": [
                {
                  "type": "MemberExpression",
                  "computed": true,
                  "object": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "node"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "object"
                      }
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "range"
                    }
                  },
                  "property": {
                    "type": "Literal",
                    "value": 1
                  }
                },
                {
                  "type": "Identifier",
                  "name": "state"
                }
              ]
            }
          }
        ]
      },
      "rest": null,
      "generator": false,
      "expression": false
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "visitSuperMemberExpression"
          },
          "property": {
            "type": "Identifier",
            "name": "test"
          }
        },
        "right": {
          "type": "FunctionExpression",
          "id": null,
          "params": [
            {
              "type": "Identifier",
              "name": "node"
            },
            {
              "type": "Identifier",
              "name": "path"
            },
            {
              "type": "Identifier",
              "name": "state"
            }
          ],
          "defaults": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "ReturnStatement",
                "argument": {
                  "type": "LogicalExpression",
                  "operator": "&&",
                  "left": {
                    "type": "LogicalExpression",
                    "operator": "&&",
                    "left": {
                      "type": "LogicalExpression",
                      "operator": "&&",
                      "left": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "state"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "superClass"
                        }
                      },
                      "right": {
                        "type": "BinaryExpression",
                        "operator": "===",
                        "left": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "node"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "type"
                          }
                        },
                        "right": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "Syntax"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "MemberExpression"
                          }
                        }
                      }
                    },
                    "right": {
                      "type": "BinaryExpression",
                      "operator": "===",
                      "left": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "node"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "object"
                          }
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "type"
                        }
                      },
                      "right": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "Syntax"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "Identifier"
                        }
                      }
                    }
                  },
                  "right": {
                    "type": "BinaryExpression",
                    "operator": "===",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "node"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "object"
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "name"
                      }
                    },
                    "right": {
                      "type": "Literal",
                      "value": "super"
                    }
                  }
                }
              }
            ]
          },
          "rest": null,
          "generator": false,
          "expression": false
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "exports"
          },
          "property": {
            "type": "Identifier",
            "name": "resetSymbols"
          }
        },
        "right": {
          "type": "Identifier",
          "name": "resetSymbols"
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "exports"
          },
          "property": {
            "type": "Identifier",
            "name": "visitorList"
          }
        },
        "right": {
          "type": "ArrayExpression",
          "elements": [
            {
              "type": "Identifier",
              "name": "visitClassDeclaration"
            },
            {
              "type": "Identifier",
              "name": "visitClassExpression"
            },
            {
              "type": "Identifier",
              "name": "visitClassFunctionExpression"
            },
            {
              "type": "Identifier",
              "name": "visitClassMethod"
            },
            {
              "type": "Identifier",
              "name": "visitClassMethodParam"
            },
            {
              "type": "Identifier",
              "name": "visitPrivateIdentifier"
            },
            {
              "type": "Identifier",
              "name": "visitSuperCallExpression"
            },
            {
              "type": "Identifier",
              "name": "visitSuperMemberExpression"
            }
          ]
        }
      }
    }
  ]
}
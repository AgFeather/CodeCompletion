{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "Literal",
        "value": "use strict"
      }
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "BeSlideyTransitionSuite"
      },
      "params": [],
      "defaults": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "VariableDeclaration",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "self"
                },
                "init": {
                  "type": "ThisExpression"
                }
              }
            ],
            "kind": "var"
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "=",
              "left": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "ThisExpression"
                },
                "property": {
                  "type": "Identifier",
                  "name": "props"
                }
              },
              "right": {
                "type": "ObjectExpression",
                "properties": []
              }
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "ThisExpression"
                },
                "property": {
                  "type": "Identifier",
                  "name": "register"
                }
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "slidey-x"
                },
                {
                  "type": "FunctionExpression",
                  "id": null,
                  "params": [
                    {
                      "type": "Identifier",
                      "name": "newval"
                    },
                    {
                      "type": "Identifier",
                      "name": "oldval"
                    }
                  ],
                  "defaults": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "IfStatement",
                        "test": {
                          "type": "UnaryExpression",
                          "operator": "!",
                          "argument": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "isValidNumString"
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "newval"
                              }
                            ]
                          },
                          "prefix": true
                        },
                        "consequent": {
                          "type": "ReturnStatement",
                          "argument": {
                            "type": "Literal",
                            "value": false
                          }
                        },
                        "alternate": null
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "name": "newval"
                          },
                          "right": {
                            "type": "ConditionalExpression",
                            "test": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "isValidNum"
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "newval"
                                }
                              ]
                            },
                            "consequent": {
                              "type": "BinaryExpression",
                              "operator": "+",
                              "left": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "newval"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "toString"
                                  }
                                },
                                "arguments": []
                              },
                              "right": {
                                "type": "Literal",
                                "value": "px"
                              }
                            },
                            "alternate": {
                              "type": "Identifier",
                              "name": "newval"
                            }
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "self"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "props"
                              }
                            },
                            "property": {
                              "type": "Literal",
                              "value": "left"
                            }
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "newval"
                          }
                        }
                      }
                    ]
                  },
                  "rest": null,
                  "generator": false,
                  "expression": false
                }
              ]
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "ThisExpression"
                },
                "property": {
                  "type": "Identifier",
                  "name": "register"
                }
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "slidey-y"
                },
                {
                  "type": "FunctionExpression",
                  "id": null,
                  "params": [
                    {
                      "type": "Identifier",
                      "name": "newval"
                    },
                    {
                      "type": "Identifier",
                      "name": "oldval"
                    }
                  ],
                  "defaults": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "IfStatement",
                        "test": {
                          "type": "UnaryExpression",
                          "operator": "!",
                          "argument": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "isValidNumString"
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "newval"
                              }
                            ]
                          },
                          "prefix": true
                        },
                        "consequent": {
                          "type": "ReturnStatement",
                          "argument": {
                            "type": "Literal",
                            "value": false
                          }
                        },
                        "alternate": null
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "name": "newval"
                          },
                          "right": {
                            "type": "ConditionalExpression",
                            "test": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "isValidNum"
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "newval"
                                }
                              ]
                            },
                            "consequent": {
                              "type": "BinaryExpression",
                              "operator": "+",
                              "left": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "newval"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "toString"
                                  }
                                },
                                "arguments": []
                              },
                              "right": {
                                "type": "Literal",
                                "value": "px"
                              }
                            },
                            "alternate": {
                              "type": "Identifier",
                              "name": "newval"
                            }
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "self"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "props"
                              }
                            },
                            "property": {
                              "type": "Literal",
                              "value": "top"
                            }
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "newval"
                          }
                        }
                      }
                    ]
                  },
                  "rest": null,
                  "generator": false,
                  "expression": false
                }
              ]
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "ThisExpression"
                },
                "property": {
                  "type": "Identifier",
                  "name": "register"
                }
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "slidey-width"
                },
                {
                  "type": "FunctionExpression",
                  "id": null,
                  "params": [
                    {
                      "type": "Identifier",
                      "name": "newval"
                    },
                    {
                      "type": "Identifier",
                      "name": "oldval"
                    }
                  ],
                  "defaults": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "IfStatement",
                        "test": {
                          "type": "UnaryExpression",
                          "operator": "!",
                          "argument": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "isValidNumString"
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "newval"
                              }
                            ]
                          },
                          "prefix": true
                        },
                        "consequent": {
                          "type": "ReturnStatement",
                          "argument": {
                            "type": "Literal",
                            "value": false
                          }
                        },
                        "alternate": null
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "name": "newval"
                          },
                          "right": {
                            "type": "ConditionalExpression",
                            "test": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "isValidNum"
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "newval"
                                }
                              ]
                            },
                            "consequent": {
                              "type": "BinaryExpression",
                              "operator": "+",
                              "left": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "newval"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "toString"
                                  }
                                },
                                "arguments": []
                              },
                              "right": {
                                "type": "Literal",
                                "value": "px"
                              }
                            },
                            "alternate": {
                              "type": "Identifier",
                              "name": "newval"
                            }
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "self"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "props"
                              }
                            },
                            "property": {
                              "type": "Literal",
                              "value": "width"
                            }
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "newval"
                          }
                        }
                      }
                    ]
                  },
                  "rest": null,
                  "generator": false,
                  "expression": false
                }
              ]
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "ThisExpression"
                },
                "property": {
                  "type": "Identifier",
                  "name": "register"
                }
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "slidey-height"
                },
                {
                  "type": "FunctionExpression",
                  "id": null,
                  "params": [
                    {
                      "type": "Identifier",
                      "name": "newval"
                    },
                    {
                      "type": "Identifier",
                      "name": "oldval"
                    }
                  ],
                  "defaults": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "IfStatement",
                        "test": {
                          "type": "UnaryExpression",
                          "operator": "!",
                          "argument": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "isValidNumString"
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "newval"
                              }
                            ]
                          },
                          "prefix": true
                        },
                        "consequent": {
                          "type": "ReturnStatement",
                          "argument": {
                            "type": "Literal",
                            "value": false
                          }
                        },
                        "alternate": null
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "name": "newval"
                          },
                          "right": {
                            "type": "ConditionalExpression",
                            "test": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "isValidNum"
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "newval"
                                }
                              ]
                            },
                            "consequent": {
                              "type": "BinaryExpression",
                              "operator": "+",
                              "left": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "newval"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "toString"
                                  }
                                },
                                "arguments": []
                              },
                              "right": {
                                "type": "Literal",
                                "value": "px"
                              }
                            },
                            "alternate": {
                              "type": "Identifier",
                              "name": "newval"
                            }
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "self"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "props"
                              }
                            },
                            "property": {
                              "type": "Literal",
                              "value": "height"
                            }
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "newval"
                          }
                        }
                      }
                    ]
                  },
                  "rest": null,
                  "generator": false,
                  "expression": false
                }
              ]
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "ThisExpression"
                },
                "property": {
                  "type": "Identifier",
                  "name": "register"
                }
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "slidey-opacity"
                },
                {
                  "type": "FunctionExpression",
                  "id": null,
                  "params": [
                    {
                      "type": "Identifier",
                      "name": "newval"
                    },
                    {
                      "type": "Identifier",
                      "name": "oldval"
                    }
                  ],
                  "defaults": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "IfStatement",
                        "test": {
                          "type": "UnaryExpression",
                          "operator": "!",
                          "argument": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "isValidNum"
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "newval"
                              }
                            ]
                          },
                          "prefix": true
                        },
                        "consequent": {
                          "type": "ReturnStatement",
                          "argument": {
                            "type": "Literal",
                            "value": false
                          }
                        },
                        "alternate": null
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "self"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "props"
                              }
                            },
                            "property": {
                              "type": "Literal",
                              "value": "opacity"
                            }
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "newval"
                          }
                        }
                      }
                    ]
                  },
                  "rest": null,
                  "generator": false,
                  "expression": false
                }
              ]
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "=",
              "left": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "ThisExpression"
                },
                "property": {
                  "type": "Identifier",
                  "name": "fire"
                }
              },
              "right": {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "element"
                  },
                  {
                    "type": "Identifier",
                    "name": "config"
                  }
                ],
                "defaults": [],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "VariableDeclaration",
                      "declarations": [
                        {
                          "type": "VariableDeclarator",
                          "id": {
                            "type": "Identifier",
                            "name": "dur"
                          },
                          "init": {
                            "type": "LogicalExpression",
                            "operator": "||",
                            "left": {
                              "type": "LogicalExpression",
                              "operator": "&&",
                              "left": {
                                "type": "Identifier",
                                "name": "config"
                              },
                              "right": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                  "type": "Identifier",
                                  "name": "config"
                                },
                                "property": {
                                  "type": "Literal",
                                  "value": "duration"
                                }
                              }
                            },
                            "right": {
                              "type": "Literal",
                              "value": 300
                            }
                          }
                        },
                        {
                          "type": "VariableDeclarator",
                          "id": {
                            "type": "Identifier",
                            "name": "onComplete"
                          },
                          "init": {
                            "type": "LogicalExpression",
                            "operator": "||",
                            "left": {
                              "type": "LogicalExpression",
                              "operator": "&&",
                              "left": {
                                "type": "Identifier",
                                "name": "config"
                              },
                              "right": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                  "type": "Identifier",
                                  "name": "config"
                                },
                                "property": {
                                  "type": "Literal",
                                  "value": "onComplete"
                                }
                              }
                            },
                            "right": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "angular"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "noop"
                              }
                            }
                          }
                        }
                      ],
                      "kind": "var"
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "$"
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "element"
                              }
                            ]
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "animate"
                          }
                        },
                        "arguments": [
                          {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "self"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "props"
                            }
                          },
                          {
                            "type": "ObjectExpression",
                            "properties": [
                              {
                                "type": "Property",
                                "key": {
                                  "type": "Identifier",
                                  "name": "duration"
                                },
                                "value": {
                                  "type": "Identifier",
                                  "name": "dur"
                                },
                                "kind": "init"
                              },
                              {
                                "type": "Property",
                                "key": {
                                  "type": "Identifier",
                                  "name": "queue"
                                },
                                "value": {
                                  "type": "Literal",
                                  "value": false
                                },
                                "kind": "init"
                              },
                              {
                                "type": "Property",
                                "key": {
                                  "type": "Identifier",
                                  "name": "complete"
                                },
                                "value": {
                                  "type": "Identifier",
                                  "name": "onComplete"
                                },
                                "kind": "init"
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "self"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "props"
                          }
                        },
                        "right": {
                          "type": "ObjectExpression",
                          "properties": []
                        }
                      }
                    }
                  ]
                },
                "rest": null,
                "generator": false,
                "expression": false
              }
            }
          }
        ]
      },
      "rest": null,
      "generator": false,
      "expression": false
    }
  ]
}
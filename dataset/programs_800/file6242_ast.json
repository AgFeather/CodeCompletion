{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "assert"
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "require"
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "assert"
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "types"
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "require"
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "./types"
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "n"
          },
          "init": {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "Identifier",
              "name": "types"
            },
            "property": {
              "type": "Identifier",
              "name": "namedTypes"
            }
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "isNumber"
          },
          "init": {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "MemberExpression",
              "computed": false,
              "object": {
                "type": "Identifier",
                "name": "types"
              },
              "property": {
                "type": "Identifier",
                "name": "builtInTypes"
              }
            },
            "property": {
              "type": "Identifier",
              "name": "number"
            }
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "isArray"
          },
          "init": {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "MemberExpression",
              "computed": false,
              "object": {
                "type": "Identifier",
                "name": "types"
              },
              "property": {
                "type": "Identifier",
                "name": "builtInTypes"
              }
            },
            "property": {
              "type": "Identifier",
              "name": "array"
            }
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "Path"
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "require"
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "./path"
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "Scope"
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "require"
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "./scope"
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "NodePath"
      },
      "params": [
        {
          "type": "Identifier",
          "name": "value"
        },
        {
          "type": "Identifier",
          "name": "parentPath"
        },
        {
          "type": "Identifier",
          "name": "name"
        }
      ],
      "defaults": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "Identifier",
                  "name": "assert"
                },
                "property": {
                  "type": "Identifier",
                  "name": "ok"
                }
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "operator": "instanceof",
                  "left": {
                    "type": "ThisExpression"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "NodePath"
                  }
                }
              ]
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "Identifier",
                  "name": "Path"
                },
                "property": {
                  "type": "Identifier",
                  "name": "call"
                }
              },
              "arguments": [
                {
                  "type": "ThisExpression"
                },
                {
                  "type": "Identifier",
                  "name": "value"
                },
                {
                  "type": "Identifier",
                  "name": "parentPath"
                },
                {
                  "type": "Identifier",
                  "name": "name"
                }
              ]
            }
          }
        ]
      },
      "rest": null,
      "generator": false,
      "expression": false
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "require"
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "util"
              }
            ]
          },
          "property": {
            "type": "Identifier",
            "name": "inherits"
          }
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "NodePath"
          },
          {
            "type": "Identifier",
            "name": "Path"
          }
        ]
      }
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "NPp"
          },
          "init": {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "Identifier",
              "name": "NodePath"
            },
            "property": {
              "type": "Identifier",
              "name": "prototype"
            }
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "Object"
          },
          "property": {
            "type": "Identifier",
            "name": "defineProperties"
          }
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "NPp"
          },
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "node"
                },
                "value": {
                  "type": "ObjectExpression",
                  "properties": [
                    {
                      "type": "Property",
                      "key": {
                        "type": "Identifier",
                        "name": "get"
                      },
                      "value": {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "Object"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "defineProperty"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "ThisExpression"
                                  },
                                  {
                                    "type": "Literal",
                                    "value": "node"
                                  },
                                  {
                                    "type": "ObjectExpression",
                                    "properties": [
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Identifier",
                                          "name": "configurable"
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": true
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Identifier",
                                          "name": "value"
                                        },
                                        "value": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "_computeNode"
                                            }
                                          },
                                          "arguments": []
                                        },
                                        "kind": "init"
                                      }
                                    ]
                                  }
                                ]
                              }
                            },
                            {
                              "type": "ReturnStatement",
                              "argument": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "ThisExpression"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "node"
                                }
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      },
                      "kind": "init"
                    }
                  ]
                },
                "kind": "init"
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "parent"
                },
                "value": {
                  "type": "ObjectExpression",
                  "properties": [
                    {
                      "type": "Property",
                      "key": {
                        "type": "Identifier",
                        "name": "get"
                      },
                      "value": {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "Object"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "defineProperty"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "ThisExpression"
                                  },
                                  {
                                    "type": "Literal",
                                    "value": "parent"
                                  },
                                  {
                                    "type": "ObjectExpression",
                                    "properties": [
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Identifier",
                                          "name": "configurable"
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": true
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Identifier",
                                          "name": "value"
                                        },
                                        "value": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "_computeParent"
                                            }
                                          },
                                          "arguments": []
                                        },
                                        "kind": "init"
                                      }
                                    ]
                                  }
                                ]
                              }
                            },
                            {
                              "type": "ReturnStatement",
                              "argument": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "ThisExpression"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "parent"
                                }
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      },
                      "kind": "init"
                    }
                  ]
                },
                "kind": "init"
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "scope"
                },
                "value": {
                  "type": "ObjectExpression",
                  "properties": [
                    {
                      "type": "Property",
                      "key": {
                        "type": "Identifier",
                        "name": "get"
                      },
                      "value": {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "Object"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "defineProperty"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "ThisExpression"
                                  },
                                  {
                                    "type": "Literal",
                                    "value": "scope"
                                  },
                                  {
                                    "type": "ObjectExpression",
                                    "properties": [
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Identifier",
                                          "name": "configurable"
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": true
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Identifier",
                                          "name": "value"
                                        },
                                        "value": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "_computeScope"
                                            }
                                          },
                                          "arguments": []
                                        },
                                        "kind": "init"
                                      }
                                    ]
                                  }
                                ]
                              }
                            },
                            {
                              "type": "ReturnStatement",
                              "argument": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "ThisExpression"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "scope"
                                }
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      },
                      "kind": "init"
                    }
                  ]
                },
                "kind": "init"
              }
            ]
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "NPp"
          },
          "property": {
            "type": "Identifier",
            "name": "replace"
          }
        },
        "right": {
          "type": "FunctionExpression",
          "id": null,
          "params": [],
          "defaults": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "UnaryExpression",
                  "operator": "delete",
                  "argument": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "ThisExpression"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "node"
                    }
                  },
                  "prefix": true
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "UnaryExpression",
                  "operator": "delete",
                  "argument": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "ThisExpression"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "parent"
                    }
                  },
                  "prefix": true
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "UnaryExpression",
                  "operator": "delete",
                  "argument": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "ThisExpression"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "scope"
                    }
                  },
                  "prefix": true
                }
              },
              {
                "type": "ReturnStatement",
                "argument": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "Path"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "prototype"
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "replace"
                      }
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "apply"
                    }
                  },
                  "arguments": [
                    {
                      "type": "ThisExpression"
                    },
                    {
                      "type": "Identifier",
                      "name": "arguments"
                    }
                  ]
                }
              }
            ]
          },
          "rest": null,
          "generator": false,
          "expression": false
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "NPp"
          },
          "property": {
            "type": "Identifier",
            "name": "_computeNode"
          }
        },
        "right": {
          "type": "FunctionExpression",
          "id": null,
          "params": [],
          "defaults": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "value"
                    },
                    "init": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "ThisExpression"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "value"
                      }
                    }
                  }
                ],
                "kind": "var"
              },
              {
                "type": "IfStatement",
                "test": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "n"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "Node"
                      }
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "check"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "value"
                    }
                  ]
                },
                "consequent": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ReturnStatement",
                      "argument": {
                        "type": "Identifier",
                        "name": "value"
                      }
                    }
                  ]
                },
                "alternate": null
              },
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "pp"
                    },
                    "init": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "ThisExpression"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "parentPath"
                      }
                    }
                  }
                ],
                "kind": "var"
              },
              {
                "type": "ReturnStatement",
                "argument": {
                  "type": "LogicalExpression",
                  "operator": "||",
                  "left": {
                    "type": "LogicalExpression",
                    "operator": "&&",
                    "left": {
                      "type": "Identifier",
                      "name": "pp"
                    },
                    "right": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "pp"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "node"
                      }
                    }
                  },
                  "right": {
                    "type": "Literal",
                    "value": null
                  }
                }
              }
            ]
          },
          "rest": null,
          "generator": false,
          "expression": false
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "NPp"
          },
          "property": {
            "type": "Identifier",
            "name": "_computeParent"
          }
        },
        "right": {
          "type": "FunctionExpression",
          "id": null,
          "params": [],
          "defaults": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "value"
                    },
                    "init": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "ThisExpression"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "value"
                      }
                    }
                  }
                ],
                "kind": "var"
              },
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "pp"
                    },
                    "init": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "ThisExpression"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "parentPath"
                      }
                    }
                  }
                ],
                "kind": "var"
              },
              {
                "type": "IfStatement",
                "test": {
                  "type": "UnaryExpression",
                  "operator": "!",
                  "argument": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "n"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "Node"
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "check"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "value"
                      }
                    ]
                  },
                  "prefix": true
                },
                "consequent": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "WhileStatement",
                      "test": {
                        "type": "LogicalExpression",
                        "operator": "&&",
                        "left": {
                          "type": "Identifier",
                          "name": "pp"
                        },
                        "right": {
                          "type": "UnaryExpression",
                          "operator": "!",
                          "argument": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "n"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "Node"
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "check"
                              }
                            },
                            "arguments": [
                              {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "pp"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "value"
                                }
                              }
                            ]
                          },
                          "prefix": true
                        }
                      },
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "name": "pp"
                              },
                              "right": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "pp"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "parentPath"
                                }
                              }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "type": "IfStatement",
                      "test": {
                        "type": "Identifier",
                        "name": "pp"
                      },
                      "consequent": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "name": "pp"
                              },
                              "right": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "pp"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "parentPath"
                                }
                              }
                            }
                          }
                        ]
                      },
                      "alternate": null
                    }
                  ]
                },
                "alternate": null
              },
              {
                "type": "WhileStatement",
                "test": {
                  "type": "LogicalExpression",
                  "operator": "&&",
                  "left": {
                    "type": "Identifier",
                    "name": "pp"
                  },
                  "right": {
                    "type": "UnaryExpression",
                    "operator": "!",
                    "argument": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "n"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "Node"
                          }
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "check"
                        }
                      },
                      "arguments": [
                        {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "pp"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "value"
                          }
                        }
                      ]
                    },
                    "prefix": true
                  }
                },
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "pp"
                        },
                        "right": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "pp"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "parentPath"
                          }
                        }
                      }
                    }
                  ]
                }
              },
              {
                "type": "ReturnStatement",
                "argument": {
                  "type": "LogicalExpression",
                  "operator": "||",
                  "left": {
                    "type": "Identifier",
                    "name": "pp"
                  },
                  "right": {
                    "type": "Literal",
                    "value": null
                  }
                }
              }
            ]
          },
          "rest": null,
          "generator": false,
          "expression": false
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "NPp"
          },
          "property": {
            "type": "Identifier",
            "name": "_computeScope"
          }
        },
        "right": {
          "type": "FunctionExpression",
          "id": null,
          "params": [],
          "defaults": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "value"
                    },
                    "init": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "ThisExpression"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "value"
                      }
                    }
                  }
                ],
                "kind": "var"
              },
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "pp"
                    },
                    "init": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "ThisExpression"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "parentPath"
                      }
                    }
                  }
                ],
                "kind": "var"
              },
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "scope"
                    },
                    "init": {
                      "type": "LogicalExpression",
                      "operator": "&&",
                      "left": {
                        "type": "Identifier",
                        "name": "pp"
                      },
                      "right": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "pp"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "scope"
                        }
                      }
                    }
                  }
                ],
                "kind": "var"
              },
              {
                "type": "IfStatement",
                "test": {
                  "type": "LogicalExpression",
                  "operator": "&&",
                  "left": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "n"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "Node"
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "check"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "value"
                      }
                    ]
                  },
                  "right": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "Scope"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "isEstablishedBy"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "value"
                      }
                    ]
                  }
                },
                "consequent": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "scope"
                        },
                        "right": {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Scope"
                          },
                          "arguments": [
                            {
                              "type": "ThisExpression"
                            },
                            {
                              "type": "Identifier",
                              "name": "scope"
                            }
                          ]
                        }
                      }
                    }
                  ]
                },
                "alternate": null
              },
              {
                "type": "ReturnStatement",
                "argument": {
                  "type": "LogicalExpression",
                  "operator": "||",
                  "left": {
                    "type": "Identifier",
                    "name": "scope"
                  },
                  "right": {
                    "type": "Literal",
                    "value": null
                  }
                }
              }
            ]
          },
          "rest": null,
          "generator": false,
          "expression": false
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "NPp"
          },
          "property": {
            "type": "Identifier",
            "name": "getValueProperty"
          }
        },
        "right": {
          "type": "FunctionExpression",
          "id": null,
          "params": [
            {
              "type": "Identifier",
              "name": "name"
            }
          ],
          "defaults": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "ReturnStatement",
                "argument": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "types"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "getFieldValue"
                    }
                  },
                  "arguments": [
                    {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "ThisExpression"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "value"
                      }
                    },
                    {
                      "type": "Identifier",
                      "name": "name"
                    }
                  ]
                }
              }
            ]
          },
          "rest": null,
          "generator": false,
          "expression": false
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "NPp"
          },
          "property": {
            "type": "Identifier",
            "name": "needsParens"
          }
        },
        "right": {
          "type": "FunctionExpression",
          "id": null,
          "params": [
            {
              "type": "Identifier",
              "name": "assumeExpressionContext"
            }
          ],
          "defaults": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "IfStatement",
                "test": {
                  "type": "UnaryExpression",
                  "operator": "!",
                  "argument": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "ThisExpression"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "parent"
                    }
                  },
                  "prefix": true
                },
                "consequent": {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "Literal",
                    "value": false
                  }
                },
                "alternate": null
              },
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "node"
                    },
                    "init": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "ThisExpression"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "node"
                      }
                    }
                  }
                ],
                "kind": "var"
              },
              {
                "type": "IfStatement",
                "test": {
                  "type": "BinaryExpression",
                  "operator": "!==",
                  "left": {
                    "type": "Identifier",
                    "name": "node"
                  },
                  "right": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "ThisExpression"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "value"
                    }
                  }
                },
                "consequent": {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "Literal",
                    "value": false
                  }
                },
                "alternate": null
              },
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "parent"
                    },
                    "init": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "ThisExpression"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "parent"
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "node"
                      }
                    }
                  }
                ],
                "kind": "var"
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "assert"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "notStrictEqual"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "node"
                    },
                    {
                      "type": "Identifier",
                      "name": "parent"
                    }
                  ]
                }
              },
              {
                "type": "IfStatement",
                "test": {
                  "type": "UnaryExpression",
                  "operator": "!",
                  "argument": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "n"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "Expression"
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "check"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "node"
                      }
                    ]
                  },
                  "prefix": true
                },
                "consequent": {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "Literal",
                    "value": false
                  }
                },
                "alternate": null
              },
              {
                "type": "IfStatement",
                "test": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "isUnaryLike"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "node"
                    }
                  ]
                },
                "consequent": {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "LogicalExpression",
                    "operator": "&&",
                    "left": {
                      "type": "LogicalExpression",
                      "operator": "&&",
                      "left": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "n"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "MemberExpression"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "check"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "parent"
                          }
                        ]
                      },
                      "right": {
                        "type": "BinaryExpression",
                        "operator": "===",
                        "left": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "ThisExpression"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "name"
                          }
                        },
                        "right": {
                          "type": "Literal",
                          "value": "object"
                        }
                      }
                    },
                    "right": {
                      "type": "BinaryExpression",
                      "operator": "===",
                      "left": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "parent"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "object"
                        }
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "node"
                      }
                    }
                  }
                },
                "alternate": null
              },
              {
                "type": "IfStatement",
                "test": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "isBinary"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "node"
                    }
                  ]
                },
                "consequent": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "IfStatement",
                      "test": {
                        "type": "LogicalExpression",
                        "operator": "&&",
                        "left": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "n"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "CallExpression"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "check"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "parent"
                            }
                          ]
                        },
                        "right": {
                          "type": "BinaryExpression",
                          "operator": "===",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "ThisExpression"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "name"
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": "callee"
                          }
                        }
                      },
                      "consequent": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "assert"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "strictEqual"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "parent"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "callee"
                                  }
                                },
                                {
                                  "type": "Identifier",
                                  "name": "node"
                                }
                              ]
                            }
                          },
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "Literal",
                              "value": true
                            }
                          }
                        ]
                      },
                      "alternate": null
                    },
                    {
                      "type": "IfStatement",
                      "test": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "isUnaryLike"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "parent"
                          }
                        ]
                      },
                      "consequent": {
                        "type": "ReturnStatement",
                        "argument": {
                          "type": "Literal",
                          "value": true
                        }
                      },
                      "alternate": null
                    },
                    {
                      "type": "IfStatement",
                      "test": {
                        "type": "LogicalExpression",
                        "operator": "&&",
                        "left": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "n"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "MemberExpression"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "check"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "parent"
                            }
                          ]
                        },
                        "right": {
                          "type": "BinaryExpression",
                          "operator": "===",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "ThisExpression"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "name"
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": "object"
                          }
                        }
                      },
                      "consequent": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "assert"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "strictEqual"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "parent"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "object"
                                  }
                                },
                                {
                                  "type": "Identifier",
                                  "name": "node"
                                }
                              ]
                            }
                          },
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "Literal",
                              "value": true
                            }
                          }
                        ]
                      },
                      "alternate": null
                    },
                    {
                      "type": "IfStatement",
                      "test": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "isBinary"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "parent"
                          }
                        ]
                      },
                      "consequent": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "VariableDeclaration",
                            "declarations": [
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "po"
                                },
                                "init": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "parent"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "operator"
                                  }
                                }
                              }
                            ],
                            "kind": "var"
                          },
                          {
                            "type": "VariableDeclaration",
                            "declarations": [
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "pp"
                                },
                                "init": {
                                  "type": "MemberExpression",
                                  "computed": true,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "PRECEDENCE"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "po"
                                  }
                                }
                              }
                            ],
                            "kind": "var"
                          },
                          {
                            "type": "VariableDeclaration",
                            "declarations": [
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "no"
                                },
                                "init": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "node"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "operator"
                                  }
                                }
                              }
                            ],
                            "kind": "var"
                          },
                          {
                            "type": "VariableDeclaration",
                            "declarations": [
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "np"
                                },
                                "init": {
                                  "type": "MemberExpression",
                                  "computed": true,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "PRECEDENCE"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "no"
                                  }
                                }
                              }
                            ],
                            "kind": "var"
                          },
                          {
                            "type": "IfStatement",
                            "test": {
                              "type": "BinaryExpression",
                              "operator": ">",
                              "left": {
                                "type": "Identifier",
                                "name": "pp"
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "np"
                              }
                            },
                            "consequent": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "Literal",
                                    "value": true
                                  }
                                }
                              ]
                            },
                            "alternate": null
                          },
                          {
                            "type": "IfStatement",
                            "test": {
                              "type": "LogicalExpression",
                              "operator": "&&",
                              "left": {
                                "type": "BinaryExpression",
                                "operator": "===",
                                "left": {
                                  "type": "Identifier",
                                  "name": "pp"
                                },
                                "right": {
                                  "type": "Identifier",
                                  "name": "np"
                                }
                              },
                              "right": {
                                "type": "BinaryExpression",
                                "operator": "===",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "ThisExpression"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "name"
                                  }
                                },
                                "right": {
                                  "type": "Literal",
                                  "value": "right"
                                }
                              }
                            },
                            "consequent": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "assert"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "strictEqual"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "parent"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "right"
                                        }
                                      },
                                      {
                                        "type": "Identifier",
                                        "name": "node"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "Literal",
                                    "value": true
                                  }
                                }
                              ]
                            },
                            "alternate": null
                          }
                        ]
                      },
                      "alternate": null
                    }
                  ]
                },
                "alternate": null
              },
              {
                "type": "IfStatement",
                "test": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "n"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "SequenceExpression"
                      }
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "check"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "node"
                    }
                  ]
                },
                "consequent": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "IfStatement",
                      "test": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "n"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "ForStatement"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "check"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "parent"
                          }
                        ]
                      },
                      "consequent": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "Literal",
                              "value": false
                            }
                          }
                        ]
                      },
                      "alternate": null
                    },
                    {
                      "type": "IfStatement",
                      "test": {
                        "type": "LogicalExpression",
                        "operator": "&&",
                        "left": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "n"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "ExpressionStatement"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "check"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "parent"
                            }
                          ]
                        },
                        "right": {
                          "type": "BinaryExpression",
                          "operator": "===",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "ThisExpression"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "name"
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": "expression"
                          }
                        }
                      },
                      "consequent": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "Literal",
                              "value": false
                            }
                          }
                        ]
                      },
                      "alternate": null
                    },
                    {
                      "type": "ReturnStatement",
                      "argument": {
                        "type": "Literal",
                        "value": true
                      }
                    }
                  ]
                },
                "alternate": null
              },
              {
                "type": "IfStatement",
                "test": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "n"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "YieldExpression"
                      }
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "check"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "node"
                    }
                  ]
                },
                "consequent": {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "LogicalExpression",
                    "operator": "||",
                    "left": {
                      "type": "LogicalExpression",
                      "operator": "||",
                      "left": {
                        "type": "LogicalExpression",
                        "operator": "||",
                        "left": {
                          "type": "LogicalExpression",
                          "operator": "||",
                          "left": {
                            "type": "LogicalExpression",
                            "operator": "||",
                            "left": {
                              "type": "LogicalExpression",
                              "operator": "||",
                              "left": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "isBinary"
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "parent"
                                  }
                                ]
                              },
                              "right": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "n"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "CallExpression"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "check"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "parent"
                                  }
                                ]
                              }
                            },
                            "right": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "n"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "MemberExpression"
                                  }
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "check"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "parent"
                                }
                              ]
                            }
                          },
                          "right": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "n"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "NewExpression"
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "check"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "parent"
                              }
                            ]
                          }
                        },
                        "right": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "n"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "ConditionalExpression"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "check"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "parent"
                            }
                          ]
                        }
                      },
                      "right": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "isUnaryLike"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "parent"
                          }
                        ]
                      }
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "n"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "YieldExpression"
                          }
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "check"
                        }
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "parent"
                        }
                      ]
                    }
                  }
                },
                "alternate": null
              },
              {
                "type": "IfStatement",
                "test": {
                  "type": "LogicalExpression",
                  "operator": "&&",
                  "left": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "n"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "NewExpression"
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "check"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "parent"
                      }
                    ]
                  },
                  "right": {
                    "type": "BinaryExpression",
                    "operator": "===",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "ThisExpression"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "name"
                      }
                    },
                    "right": {
                      "type": "Literal",
                      "value": "callee"
                    }
                  }
                },
                "consequent": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "assert"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "strictEqual"
                          }
                        },
                        "arguments": [
                          {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "parent"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "callee"
                            }
                          },
                          {
                            "type": "Identifier",
                            "name": "node"
                          }
                        ]
                      }
                    },
                    {
                      "type": "ReturnStatement",
                      "argument": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "containsCallExpression"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "node"
                          }
                        ]
                      }
                    }
                  ]
                },
                "alternate": null
              },
              {
                "type": "IfStatement",
                "test": {
                  "type": "LogicalExpression",
                  "operator": "&&",
                  "left": {
                    "type": "LogicalExpression",
                    "operator": "&&",
                    "left": {
                      "type": "LogicalExpression",
                      "operator": "&&",
                      "left": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "n"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "Literal"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "check"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "node"
                          }
                        ]
                      },
                      "right": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "isNumber"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "check"
                          }
                        },
                        "arguments": [
                          {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "node"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "value"
                            }
                          }
                        ]
                      }
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "n"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "MemberExpression"
                          }
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "check"
                        }
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "parent"
                        }
                      ]
                    }
                  },
                  "right": {
                    "type": "BinaryExpression",
                    "operator": "===",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "ThisExpression"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "name"
                      }
                    },
                    "right": {
                      "type": "Literal",
                      "value": "object"
                    }
                  }
                },
                "consequent": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "assert"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "strictEqual"
                          }
                        },
                        "arguments": [
                          {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "parent"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "object"
                            }
                          },
                          {
                            "type": "Identifier",
                            "name": "node"
                          }
                        ]
                      }
                    },
                    {
                      "type": "ReturnStatement",
                      "argument": {
                        "type": "Literal",
                        "value": true
                      }
                    }
                  ]
                },
                "alternate": null
              },
              {
                "type": "IfStatement",
                "test": {
                  "type": "LogicalExpression",
                  "operator": "||",
                  "left": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "n"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "AssignmentExpression"
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "check"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "node"
                      }
                    ]
                  },
                  "right": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "n"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "ConditionalExpression"
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "check"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "node"
                      }
                    ]
                  }
                },
                "consequent": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "IfStatement",
                      "test": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "isUnaryLike"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "parent"
                          }
                        ]
                      },
                      "consequent": {
                        "type": "ReturnStatement",
                        "argument": {
                          "type": "Literal",
                          "value": true
                        }
                      },
                      "alternate": null
                    },
                    {
                      "type": "IfStatement",
                      "test": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "isBinary"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "parent"
                          }
                        ]
                      },
                      "consequent": {
                        "type": "ReturnStatement",
                        "argument": {
                          "type": "Literal",
                          "value": true
                        }
                      },
                      "alternate": null
                    },
                    {
                      "type": "IfStatement",
                      "test": {
                        "type": "LogicalExpression",
                        "operator": "&&",
                        "left": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "n"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "CallExpression"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "check"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "parent"
                            }
                          ]
                        },
                        "right": {
                          "type": "BinaryExpression",
                          "operator": "===",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "ThisExpression"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "name"
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": "callee"
                          }
                        }
                      },
                      "consequent": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "assert"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "strictEqual"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "parent"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "callee"
                                  }
                                },
                                {
                                  "type": "Identifier",
                                  "name": "node"
                                }
                              ]
                            }
                          },
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "Literal",
                              "value": true
                            }
                          }
                        ]
                      },
                      "alternate": null
                    },
                    {
                      "type": "IfStatement",
                      "test": {
                        "type": "LogicalExpression",
                        "operator": "&&",
                        "left": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "n"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "ConditionalExpression"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "check"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "parent"
                            }
                          ]
                        },
                        "right": {
                          "type": "BinaryExpression",
                          "operator": "===",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "ThisExpression"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "name"
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": "test"
                          }
                        }
                      },
                      "consequent": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "assert"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "strictEqual"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "parent"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "test"
                                  }
                                },
                                {
                                  "type": "Identifier",
                                  "name": "node"
                                }
                              ]
                            }
                          },
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "Literal",
                              "value": true
                            }
                          }
                        ]
                      },
                      "alternate": null
                    },
                    {
                      "type": "IfStatement",
                      "test": {
                        "type": "LogicalExpression",
                        "operator": "&&",
                        "left": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "n"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "MemberExpression"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "check"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "parent"
                            }
                          ]
                        },
                        "right": {
                          "type": "BinaryExpression",
                          "operator": "===",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "ThisExpression"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "name"
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": "object"
                          }
                        }
                      },
                      "consequent": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "assert"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "strictEqual"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "parent"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "object"
                                  }
                                },
                                {
                                  "type": "Identifier",
                                  "name": "node"
                                }
                              ]
                            }
                          },
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "Literal",
                              "value": true
                            }
                          }
                        ]
                      },
                      "alternate": null
                    }
                  ]
                },
                "alternate": null
              },
              {
                "type": "IfStatement",
                "test": {
                  "type": "LogicalExpression",
                  "operator": "&&",
                  "left": {
                    "type": "LogicalExpression",
                    "operator": "&&",
                    "left": {
                      "type": "BinaryExpression",
                      "operator": "!==",
                      "left": {
                        "type": "Identifier",
                        "name": "assumeExpressionContext"
                      },
                      "right": {
                        "type": "Literal",
                        "value": true
                      }
                    },
                    "right": {
                      "type": "UnaryExpression",
                      "operator": "!",
                      "argument": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "ThisExpression"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "canBeFirstInStatement"
                          }
                        },
                        "arguments": []
                      },
                      "prefix": true
                    }
                  },
                  "right": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "ThisExpression"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "firstInStatement"
                      }
                    },
                    "arguments": []
                  }
                },
                "consequent": {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "Literal",
                    "value": true
                  }
                },
                "alternate": null
              },
              {
                "type": "ReturnStatement",
                "argument": {
                  "type": "Literal",
                  "value": false
                }
              }
            ]
          },
          "rest": null,
          "generator": false,
          "expression": false
        }
      }
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "isBinary"
      },
      "params": [
        {
          "type": "Identifier",
          "name": "node"
        }
      ],
      "defaults": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "LogicalExpression",
              "operator": "||",
              "left": {
                "type": "CallExpression",
                "callee": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "n"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "BinaryExpression"
                    }
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "check"
                  }
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "node"
                  }
                ]
              },
              "right": {
                "type": "CallExpression",
                "callee": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "n"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "LogicalExpression"
                    }
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "check"
                  }
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "node"
                  }
                ]
              }
            }
          }
        ]
      },
      "rest": null,
      "generator": false,
      "expression": false
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "isUnaryLike"
      },
      "params": [
        {
          "type": "Identifier",
          "name": "node"
        }
      ],
      "defaults": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "LogicalExpression",
              "operator": "||",
              "left": {
                "type": "LogicalExpression",
                "operator": "||",
                "left": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "n"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "UnaryExpression"
                      }
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "check"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "node"
                    }
                  ]
                },
                "right": {
                  "type": "LogicalExpression",
                  "operator": "&&",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "n"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "SpreadElement"
                    }
                  },
                  "right": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "n"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "SpreadElement"
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "check"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "node"
                      }
                    ]
                  }
                }
              },
              "right": {
                "type": "LogicalExpression",
                "operator": "&&",
                "left": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "Identifier",
                    "name": "n"
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "SpreadProperty"
                  }
                },
                "right": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "n"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "SpreadProperty"
                      }
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "check"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "node"
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      "rest": null,
      "generator": false,
      "expression": false
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "PRECEDENCE"
          },
          "init": {
            "type": "ObjectExpression",
            "properties": []
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": "||"
                  }
                ]
              },
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": "&&"
                  }
                ]
              },
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": "|"
                  }
                ]
              },
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": "^"
                  }
                ]
              },
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": "&"
                  }
                ]
              },
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": "=="
                  },
                  {
                    "type": "Literal",
                    "value": "==="
                  },
                  {
                    "type": "Literal",
                    "value": "!="
                  },
                  {
                    "type": "Literal",
                    "value": "!=="
                  }
                ]
              },
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": "<"
                  },
                  {
                    "type": "Literal",
                    "value": ">"
                  },
                  {
                    "type": "Literal",
                    "value": "<="
                  },
                  {
                    "type": "Literal",
                    "value": ">="
                  },
                  {
                    "type": "Literal",
                    "value": "in"
                  },
                  {
                    "type": "Literal",
                    "value": "instanceof"
                  }
                ]
              },
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": ">>"
                  },
                  {
                    "type": "Literal",
                    "value": "<<"
                  },
                  {
                    "type": "Literal",
                    "value": ">>>"
                  }
                ]
              },
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": "+"
                  },
                  {
                    "type": "Literal",
                    "value": "-"
                  }
                ]
              },
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": "*"
                  },
                  {
                    "type": "Literal",
                    "value": "/"
                  },
                  {
                    "type": "Literal",
                    "value": "%"
                  }
                ]
              }
            ]
          },
          "property": {
            "type": "Identifier",
            "name": "forEach"
          }
        },
        "arguments": [
          {
            "type": "FunctionExpression",
            "id": null,
            "params": [
              {
                "type": "Identifier",
                "name": "tier"
              },
              {
                "type": "Identifier",
                "name": "i"
              }
            ],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "tier"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "forEach"
                      }
                    },
                    "arguments": [
                      {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [
                          {
                            "type": "Identifier",
                            "name": "op"
                          }
                        ],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": true,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "PRECEDENCE"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "op"
                                  }
                                },
                                "right": {
                                  "type": "Identifier",
                                  "name": "i"
                                }
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      }
                    ]
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "containsCallExpression"
      },
      "params": [
        {
          "type": "Identifier",
          "name": "node"
        }
      ],
      "defaults": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "IfStatement",
            "test": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "Identifier",
                    "name": "n"
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "CallExpression"
                  }
                },
                "property": {
                  "type": "Identifier",
                  "name": "check"
                }
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "name": "node"
                }
              ]
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "Literal",
                    "value": true
                  }
                }
              ]
            },
            "alternate": null
          },
          {
            "type": "IfStatement",
            "test": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "Identifier",
                  "name": "isArray"
                },
                "property": {
                  "type": "Identifier",
                  "name": "check"
                }
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "name": "node"
                }
              ]
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "node"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "some"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "containsCallExpression"
                      }
                    ]
                  }
                }
              ]
            },
            "alternate": null
          },
          {
            "type": "IfStatement",
            "test": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "Identifier",
                    "name": "n"
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "Node"
                  }
                },
                "property": {
                  "type": "Identifier",
                  "name": "check"
                }
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "name": "node"
                }
              ]
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "types"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "someField"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "node"
                      },
                      {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [
                          {
                            "type": "Identifier",
                            "name": "name"
                          },
                          {
                            "type": "Identifier",
                            "name": "child"
                          }
                        ],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ReturnStatement",
                              "argument": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "containsCallExpression"
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "child"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      }
                    ]
                  }
                }
              ]
            },
            "alternate": null
          },
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "Literal",
              "value": false
            }
          }
        ]
      },
      "rest": null,
      "generator": false,
      "expression": false
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "NPp"
          },
          "property": {
            "type": "Identifier",
            "name": "canBeFirstInStatement"
          }
        },
        "right": {
          "type": "FunctionExpression",
          "id": null,
          "params": [],
          "defaults": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "node"
                    },
                    "init": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "ThisExpression"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "node"
                      }
                    }
                  }
                ],
                "kind": "var"
              },
              {
                "type": "ReturnStatement",
                "argument": {
                  "type": "LogicalExpression",
                  "operator": "&&",
                  "left": {
                    "type": "UnaryExpression",
                    "operator": "!",
                    "argument": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "n"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "FunctionExpression"
                          }
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "check"
                        }
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "node"
                        }
                      ]
                    },
                    "prefix": true
                  },
                  "right": {
                    "type": "UnaryExpression",
                    "operator": "!",
                    "argument": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "n"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "ObjectExpression"
                          }
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "check"
                        }
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "node"
                        }
                      ]
                    },
                    "prefix": true
                  }
                }
              }
            ]
          },
          "rest": null,
          "generator": false,
          "expression": false
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "NPp"
          },
          "property": {
            "type": "Identifier",
            "name": "firstInStatement"
          }
        },
        "right": {
          "type": "FunctionExpression",
          "id": null,
          "params": [],
          "defaults": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "ReturnStatement",
                "argument": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "firstInStatement"
                  },
                  "arguments": [
                    {
                      "type": "ThisExpression"
                    }
                  ]
                }
              }
            ]
          },
          "rest": null,
          "generator": false,
          "expression": false
        }
      }
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "firstInStatement"
      },
      "params": [
        {
          "type": "Identifier",
          "name": "path"
        }
      ],
      "defaults": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ForStatement",
            "init": {
              "type": "VariableDeclaration",
              "declarations": [
                {
                  "type": "VariableDeclarator",
                  "id": {
                    "type": "Identifier",
                    "name": "node"
                  },
                  "init": null
                },
                {
                  "type": "VariableDeclarator",
                  "id": {
                    "type": "Identifier",
                    "name": "parent"
                  },
                  "init": null
                }
              ],
              "kind": "var"
            },
            "test": {
              "type": "MemberExpression",
              "computed": false,
              "object": {
                "type": "Identifier",
                "name": "path"
              },
              "property": {
                "type": "Identifier",
                "name": "parent"
              }
            },
            "update": {
              "type": "AssignmentExpression",
              "operator": "=",
              "left": {
                "type": "Identifier",
                "name": "path"
              },
              "right": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "Identifier",
                  "name": "path"
                },
                "property": {
                  "type": "Identifier",
                  "name": "parent"
                }
              }
            },
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "node"
                    },
                    "right": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "path"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "node"
                      }
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "parent"
                    },
                    "right": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "path"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "parent"
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "node"
                      }
                    }
                  }
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "LogicalExpression",
                    "operator": "&&",
                    "left": {
                      "type": "LogicalExpression",
                      "operator": "&&",
                      "left": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "n"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "BlockStatement"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "check"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "parent"
                          }
                        ]
                      },
                      "right": {
                        "type": "BinaryExpression",
                        "operator": "===",
                        "left": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "path"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "parent"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "name"
                          }
                        },
                        "right": {
                          "type": "Literal",
                          "value": "body"
                        }
                      }
                    },
                    "right": {
                      "type": "BinaryExpression",
                      "operator": "===",
                      "left": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "path"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "name"
                        }
                      },
                      "right": {
                        "type": "Literal",
                        "value": 0
                      }
                    }
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "assert"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "strictEqual"
                            }
                          },
                          "arguments": [
                            {
                              "type": "MemberExpression",
                              "computed": true,
                              "object": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "parent"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "body"
                                }
                              },
                              "property": {
                                "type": "Literal",
                                "value": 0
                              }
                            },
                            {
                              "type": "Identifier",
                              "name": "node"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ReturnStatement",
                        "argument": {
                          "type": "Literal",
                          "value": true
                        }
                      }
                    ]
                  },
                  "alternate": null
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "LogicalExpression",
                    "operator": "&&",
                    "left": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "n"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "ExpressionStatement"
                          }
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "check"
                        }
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "parent"
                        }
                      ]
                    },
                    "right": {
                      "type": "BinaryExpression",
                      "operator": "===",
                      "left": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "path"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "name"
                        }
                      },
                      "right": {
                        "type": "Literal",
                        "value": "expression"
                      }
                    }
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "assert"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "strictEqual"
                            }
                          },
                          "arguments": [
                            {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "parent"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "expression"
                              }
                            },
                            {
                              "type": "Identifier",
                              "name": "node"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ReturnStatement",
                        "argument": {
                          "type": "Literal",
                          "value": true
                        }
                      }
                    ]
                  },
                  "alternate": null
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "LogicalExpression",
                    "operator": "&&",
                    "left": {
                      "type": "LogicalExpression",
                      "operator": "&&",
                      "left": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "n"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "SequenceExpression"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "check"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "parent"
                          }
                        ]
                      },
                      "right": {
                        "type": "BinaryExpression",
                        "operator": "===",
                        "left": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "path"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "parent"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "name"
                          }
                        },
                        "right": {
                          "type": "Literal",
                          "value": "expressions"
                        }
                      }
                    },
                    "right": {
                      "type": "BinaryExpression",
                      "operator": "===",
                      "left": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "path"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "name"
                        }
                      },
                      "right": {
                        "type": "Literal",
                        "value": 0
                      }
                    }
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "assert"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "strictEqual"
                            }
                          },
                          "arguments": [
                            {
                              "type": "MemberExpression",
                              "computed": true,
                              "object": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "parent"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "expressions"
                                }
                              },
                              "property": {
                                "type": "Literal",
                                "value": 0
                              }
                            },
                            {
                              "type": "Identifier",
                              "name": "node"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ContinueStatement",
                        "label": null
                      }
                    ]
                  },
                  "alternate": null
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "LogicalExpression",
                    "operator": "&&",
                    "left": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "n"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "CallExpression"
                          }
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "check"
                        }
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "parent"
                        }
                      ]
                    },
                    "right": {
                      "type": "BinaryExpression",
                      "operator": "===",
                      "left": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "path"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "name"
                        }
                      },
                      "right": {
                        "type": "Literal",
                        "value": "callee"
                      }
                    }
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "assert"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "strictEqual"
                            }
                          },
                          "arguments": [
                            {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "parent"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "callee"
                              }
                            },
                            {
                              "type": "Identifier",
                              "name": "node"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ContinueStatement",
                        "label": null
                      }
                    ]
                  },
                  "alternate": null
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "LogicalExpression",
                    "operator": "&&",
                    "left": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "n"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "MemberExpression"
                          }
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "check"
                        }
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "parent"
                        }
                      ]
                    },
                    "right": {
                      "type": "BinaryExpression",
                      "operator": "===",
                      "left": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "path"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "name"
                        }
                      },
                      "right": {
                        "type": "Literal",
                        "value": "object"
                      }
                    }
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "assert"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "strictEqual"
                            }
                          },
                          "arguments": [
                            {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "parent"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "object"
                              }
                            },
                            {
                              "type": "Identifier",
                              "name": "node"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ContinueStatement",
                        "label": null
                      }
                    ]
                  },
                  "alternate": null
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "LogicalExpression",
                    "operator": "&&",
                    "left": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "n"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "ConditionalExpression"
                          }
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "check"
                        }
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "parent"
                        }
                      ]
                    },
                    "right": {
                      "type": "BinaryExpression",
                      "operator": "===",
                      "left": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "path"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "name"
                        }
                      },
                      "right": {
                        "type": "Literal",
                        "value": "test"
                      }
                    }
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "assert"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "strictEqual"
                            }
                          },
                          "arguments": [
                            {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "parent"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "test"
                              }
                            },
                            {
                              "type": "Identifier",
                              "name": "node"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ContinueStatement",
                        "label": null
                      }
                    ]
                  },
                  "alternate": null
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "LogicalExpression",
                    "operator": "&&",
                    "left": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "isBinary"
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "parent"
                        }
                      ]
                    },
                    "right": {
                      "type": "BinaryExpression",
                      "operator": "===",
                      "left": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "path"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "name"
                        }
                      },
                      "right": {
                        "type": "Literal",
                        "value": "left"
                      }
                    }
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "assert"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "strictEqual"
                            }
                          },
                          "arguments": [
                            {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "parent"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "left"
                              }
                            },
                            {
                              "type": "Identifier",
                              "name": "node"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ContinueStatement",
                        "label": null
                      }
                    ]
                  },
                  "alternate": null
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "LogicalExpression",
                    "operator": "&&",
                    "left": {
                      "type": "LogicalExpression",
                      "operator": "&&",
                      "left": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "n"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "UnaryExpression"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "check"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "parent"
                          }
                        ]
                      },
                      "right": {
                        "type": "UnaryExpression",
                        "operator": "!",
                        "argument": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "parent"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "prefix"
                          }
                        },
                        "prefix": true
                      }
                    },
                    "right": {
                      "type": "BinaryExpression",
                      "operator": "===",
                      "left": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "path"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "name"
                        }
                      },
                      "right": {
                        "type": "Literal",
                        "value": "argument"
                      }
                    }
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "assert"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "strictEqual"
                            }
                          },
                          "arguments": [
                            {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "parent"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "argument"
                              }
                            },
                            {
                              "type": "Identifier",
                              "name": "node"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ContinueStatement",
                        "label": null
                      }
                    ]
                  },
                  "alternate": null
                },
                {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "Literal",
                    "value": false
                  }
                }
              ]
            }
          },
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "Literal",
              "value": true
            }
          }
        ]
      },
      "rest": null,
      "generator": false,
      "expression": false
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "module"
          },
          "property": {
            "type": "Identifier",
            "name": "exports"
          }
        },
        "right": {
          "type": "Identifier",
          "name": "NodePath"
        }
      }
    }
  ]
}